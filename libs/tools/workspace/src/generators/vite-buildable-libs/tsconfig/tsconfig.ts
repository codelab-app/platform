import type { ProjectConfiguration, Tree } from '@nx/devkit'
import type { TsConfigJson } from 'type-fest'

import { joinPathFragments, readJson, updateJson, writeJson } from '@nx/devkit'

/**
 * Removes references to tsconfig.lib.json from the main tsconfig.json file.
 * GENERATED BY CURSOR
 */
export const updateTsConfig = (
  tree: Tree,
  projectConfig: ProjectConfiguration,
) => {
  const tsconfigPath = joinPathFragments(projectConfig.root, 'tsconfig.json')

  if (!tree.exists(tsconfigPath)) {
    console.warn(`tsconfig.json not found at ${tsconfigPath}, skipping update.`)

    return
  }

  const tsconfigJson = readJson<TsConfigJson>(tree, tsconfigPath)
  let updated = false

  if (tsconfigJson.references && Array.isArray(tsconfigJson.references)) {
    const originalLength = tsconfigJson.references.length

    tsconfigJson.references = tsconfigJson.references.filter(
      (ref) => ref.path !== './tsconfig.lib.json',
    )

    if (tsconfigJson.references.length !== originalLength) {
      updated = true

      if (tsconfigJson.references.length === 0) {
        delete tsconfigJson.references
      }
    }
  }

  if (updated) {
    writeJson(tree, tsconfigPath, tsconfigJson)
    console.log(`Removed tsconfig.lib.json reference from: ${tsconfigPath}`)
  } else {
    console.log(
      `No reference to tsconfig.lib.json found or already removed in: ${tsconfigPath}`,
    )
  }
}
