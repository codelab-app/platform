import {
  DgraphApp,
  DgraphCreateMutationJson,
  DgraphCreateUseCase,
  DgraphUseCase,
  DgraphEntityType,
  Dgraph<%= modelPascalCase %>
} from '@codelab/backend/infra'
import { Injectable } from '@nestjs/common'
import { Mutation, Txn } from 'dgraph-js-http'
import { <%= modelPascalCase %> } from '../../<%= model %>.model'
import { <%= useCasePascalCase %>Input } from './<%= useCaseKebabCase %>.input'
import { <%= useCasePascalCase %>Request } from './<%= useCaseKebabCase %>.request'
<% if(useCaseType === "dgraph") { %>
  import { Txn } from 'dgraph-js-http'
<% } %>

@Injectable()
export class <%= useCasePascalCase %>Service extends DgraphUseCase<any>  {

  //constructor(dgraph: DgraphRepository) {
  //  super(dgraph)
  //}

  protected async executeTransaction(request: <%= useCasePascalCase %>Input, txn: Txn) {
    //await this.validate(request)

    await this.dgraph.executeMutation(
      txn,
      this.createMutation(request)
    )

    return await Promise.resolve({})
  }

  private createMutation(request: <%= useCasePascalCase %>Request): Mutation {
    const setJson: DgraphCreateMutationJson<Dgraph<%= modelPascalCase %>> = {

    }

    return { setJson }
  }

  //protected async validate(request: <%= useCasePascalCase %>Request>) {
  //  return
  //}
}
