query GetStoreGraph($input: StoreGraphInput!) {
  storeGraph(input: $input) {
    ...StoreGraph
  }
}

fragment StoreGraph on StoreGraph {
  id
  descendants
}

mutation CreateStores($input: [StoreCreateInput!]!) {
  createStores(input: $input) {
    info {
      nodesCreated
      relationshipsCreated
    }
    stores {
      ...Store
    }
  }
}

mutation DeleteStores($where: StoreWhere!) {
  deleteStores(where: $where) {
    nodesDeleted
  }
}

query GetStores($where: StoreWhere, $options: StoreOptions) {
  stores(where: $where, options: $options) {
    ...Store
  }
}

mutation UpdateStores($where: StoreWhere, $update: StoreUpdateInput) {
  updateStores(update: $update, where: $where) {
    stores {
      ...Store
    }
  }
}
