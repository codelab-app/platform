mutation DeletePrimitiveTypes(
  $delete: PrimitiveTypeDeleteInput
  $where: PrimitiveTypeWhere
) {
  deletePrimitiveTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteArrayTypes(
  $delete: ArrayTypeDeleteInput
  $where: ArrayTypeWhere
) {
  deleteArrayTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteUnionTypes(
  $delete: UnionTypeDeleteInput
  $where: UnionTypeWhere
) {
  deleteUnionTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteInterfaceTypes(
  $delete: InterfaceTypeDeleteInput
  $where: InterfaceTypeWhere
) {
  deleteInterfaceTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteElementTypes(
  $delete: ElementTypeDeleteInput
  $where: ElementTypeWhere
) {
  deleteElementTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteRenderPropsTypes(
  $delete: RenderPropsTypeDeleteInput
  $where: RenderPropsTypeWhere
) {
  deleteRenderPropsTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteEnumTypes($delete: EnumTypeDeleteInput, $where: EnumTypeWhere) {
  deleteEnumTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }

  # When deleting the enum we must clean up the enum type values too
  deleteEnumTypeValues(where: { enumType: $where }) {
    nodesDeleted
  }
}

mutation DeleteLambdaTypes(
  $delete: LambdaTypeDeleteInput
  $where: LambdaTypeWhere
) {
  deleteLambdaTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeletePageTypes($delete: PageTypeDeleteInput, $where: PageTypeWhere) {
  deletePageTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteAppTypes($delete: AppTypeDeleteInput, $where: AppTypeWhere) {
  deleteAppTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}

mutation DeleteMonacoTypes(
  $delete: MonacoTypeDeleteInput
  $where: MonacoTypeWhere
) {
  deleteMonacoTypes(delete: $delete, where: $where) {
    relationshipsDeleted
    nodesDeleted
  }
}
