fragment Element on Element {
  __typename
  tailwindClassNames
  childMapperComponent {
    id
    name
  }
  childMapperPreviousSibling {
    id
  }
  childMapperPropKey
  firstChild {
    id
  }
  id
  name
  nextSibling {
    id
  }
  page {
    id
  }
  parent {
    id
  }
  parentComponent {
    id
  }
  postRenderAction {
    id
    type
  }
  preRenderAction {
    id
    type
  }
  prevSibling {
    id
  }
  props {
    ...Prop
  }
  renderForEachPropKey
  renderIfExpression
  renderType {
    ... on Atom {
      __typename
      ...AtomDevelopment
    }
    ... on Component {
      __typename
      id
    }
  }
  style
}

fragment ElementProduction on Element {
  __typename
  childMapperComponent {
    id
    name
  }
  childMapperPreviousSibling {
    id
  }
  childMapperPropKey
  firstChild {
    id
  }
  id
  name
  tailwindClassNames
  nextSibling {
    id
  }
  page {
    id
  }
  parent {
    id
  }
  parentComponent {
    id
  }
  postRenderAction {
    id
    type
  }
  preRenderAction {
    id
    type
  }
  prevSibling {
    id
  }
  props {
    ...Prop
  }
  renderForEachPropKey
  renderIfExpression
  renderType {
    ... on Atom {
      __typename
      ...AtomProduction
    }
    ... on Component {
      __typename
      id
    }
  }
  style
}
