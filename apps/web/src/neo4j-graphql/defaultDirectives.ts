import { gql } from 'apollo-server-micro'

// Directives taken from the neo4j docs and the generated sdql schema
// Adding them here helps ide autocompletion and error checking for gql segments
export const defaultDirectives = gql`
  """
  Indicates that the field is an identifier for the object type. By default; autogenerated, and has a unique node property constraint in the database.
  """
  directive @id(
    autogenerate: Boolean! = true
    unique: Boolean! = true
  ) on FIELD_DEFINITION

  enum TimestampOperation {
    CREATE
    UPDATE
  }

  """
  Instructs @neo4j/graphql to generate timestamps on particular events, which will be available as the value of the specified field.
  """
  directive @timestamp(
    """
    Which events to generate timestamps on. Defaults to both create and update.
    """
    operations: [TimestampOperation!]! = [CREATE, UPDATE]
  ) on FIELD_DEFINITION

  """
  Instructs @neo4j/graphql to run the specified Cypher statement in order to resolve the value of the field to which the directive is applied.
  """
  directive @cypher(
    """
    The Cypher statement to run which returns a value of the same type composition as the field definition on which the directive is applied.
    """
    statement: String!
  ) on FIELD_DEFINITION

  """
  Instructs @neo4j/graphql to only include a field in generated input type for creating, and in the object type within which the directive is applied.
  """
  directive @readonly on FIELD_DEFINITION

  enum ExcludeOperation {
    CREATE
    READ
    UPDATE
    DELETE
  }

  """
  Instructs @neo4j/graphql to exclude the specified operations from query and mutation generation. If used without an argument, no queries or mutations will be generated for this type.
  """
  directive @exclude(
    operations: [ExcludeOperation!]! = [CREATE, READ, UPDATE, DELETE]
  ) on OBJECT
`
