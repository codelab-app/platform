{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///../../libs/backend/infra/adapter/otel/src/index.ts","webpack:///../../libs/backend/infra/adapter/otel/src/exporter/multi-span-processor.ts","webpack:///../../libs/backend/infra/adapter/otel/src/otel.module.ts","webpack:///external commonjs \"nestjs-otel\"","webpack:///../../libs/backend/infra/adapter/otel/src/otel-sdk.ts","webpack:///external commonjs \"@opentelemetry/exporter-trace-otlp-http\"","webpack:///external commonjs \"@opentelemetry/resources\"","webpack:///external commonjs \"@opentelemetry/sdk-node\"","webpack:///external commonjs \"@opentelemetry/sdk-trace-base\"","webpack:///external commonjs \"@opentelemetry/semantic-conventions\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///../../libs/backend/infra/adapter/logger/src/index.ts","webpack:///../../libs/backend/infra/adapter/logger/src/logger.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"nestjs-pino\"","webpack:///../../libs/backend/infra/adapter/logger/src/logger.service.ts","webpack:///external commonjs \"@nestjs/bull\"","webpack:///./src/commands/command.module.ts","webpack:///../../libs/backend/application/admin/src/index.ts","webpack:///../../libs/backend/application/admin/src/services/index.ts","webpack:///../../libs/backend/application/admin/src/services/admin-seeder.service.ts","webpack:///../../libs/backend/application/service/src/index.ts","webpack:///../../libs/backend/application/service/src/use-cases/index.ts","webpack:///../../libs/backend/application/service/src/use-cases/auth-use-case.ts","webpack:///../../libs/backend/application/service/src/use-cases/use-case.ts","webpack:///../../libs/shared/infra/otel/src/index.ts","webpack:///../../libs/shared/infra/otel/src/register.ts","webpack:///external commonjs \"@opentelemetry/instrumentation-nestjs-core\"","webpack:///external commonjs \"@opentelemetry/sdk-trace-node\"","webpack:///../../libs/shared/infra/otel/src/span.ts","webpack:///external commonjs \"@opentelemetry/api\"","webpack:///../../libs/shared/infra/otel/src/tracer.ts","webpack:///../../libs/shared/utils/src/index.ts","webpack:///../../libs/shared/utils/src/assert.ts","webpack:///../../libs/shared/utils/src/cache/index.ts","webpack:///../../libs/shared/utils/src/cache/ttl-cache.ts","webpack:///../../libs/shared/utils/src/entity/index.ts","webpack:///../../libs/shared/utils/src/entity/entity-id-set.ts","webpack:///../../libs/shared/utils/src/entity/extract-id.ts","webpack:///../../libs/shared/utils/src/entity/entity-map-by-id.ts","webpack:///external commonjs \"lodash/keyBy\"","webpack:///../../libs/shared/utils/src/entity/valid-uuid.ts","webpack:///../../libs/shared/utils/src/env/index.ts","webpack:///../../libs/shared/utils/src/env/is-server.ts","webpack:///../../libs/shared/utils/src/error/index.ts","webpack:///../../libs/shared/utils/src/error/to-error.ts","webpack:///../../libs/shared/utils/src/filter/index.ts","webpack:///../../libs/shared/utils/src/filter/filter-empty-strings.ts","webpack:///external commonjs \"lodash/isArray\"","webpack:///external commonjs \"lodash/isObject\"","webpack:///external commonjs \"lodash/isObjectLike\"","webpack:///external commonjs \"lodash/pickBy\"","webpack:///../../libs/shared/utils/src/filter/is-non-nullable.ts","webpack:///../../libs/shared/utils/src/logger/index.ts","webpack:///../../libs/shared/utils/src/logger/c-log.ts","webpack:///external commonjs \"util\"","webpack:///../../libs/shared/utils/src/logger/log-task.ts","webpack:///../../libs/shared/utils/src/mapDeep/index.ts","webpack:///../../libs/shared/utils/src/mapDeep/abstract.ts","webpack:///../../libs/shared/utils/src/mapDeep/map-deep.ts","webpack:///external commonjs \"lodash/map\"","webpack:///external commonjs \"lodash/toPairsIn\"","webpack:///external commonjs \"mobx-keystone\"","webpack:///../../libs/shared/utils/src/props/index.ts","webpack:///../../libs/shared/utils/src/props/merge-props.ts","webpack:///external commonjs \"lodash/mergeWith\"","webpack:///../../libs/shared/utils/src/props/prop-safe-stringify.ts","webpack:///external commonjs \"lodash/isFunction\"","webpack:///external commonjs \"lodash/isPlainObject\"","webpack:///external commonjs \"react\"","webpack:///../../libs/shared/utils/src/regex/index.ts","webpack:///../../libs/shared/utils/src/regex/cdn-esm-regex.ts","webpack:///../../libs/shared/utils/src/regex/hexadecimal-regex.ts","webpack:///../../libs/shared/utils/src/regex/singly-spaced-title-case-with-numbers-regex.ts","webpack:///../../libs/shared/utils/src/regex/uuid-regex.ts","webpack:///../../libs/shared/utils/src/transform/index.ts","webpack:///../../libs/shared/utils/src/transform/name.ts","webpack:///../../libs/shared/utils/src/transform/strings.ts","webpack:///../../libs/shared/utils/src/types.ts","webpack:///external commonjs \"@opentelemetry/api/build/src/trace/context-utils\"","webpack:///../../libs/backend/application/type/src/index.ts","webpack:///../../libs/backend/application/type/src/data/index.ts","webpack:///../../libs/backend/application/type/src/data/system-types.data.ts","webpack:///../../libs/shared/abstract/core/src/index.ts","webpack:///../../libs/shared/abstract/core/src/action-kind.enum.ts","webpack:///../../libs/shared/abstract/codegen/src/index.ts","webpack:///../../libs/shared/abstract/codegen/src/types.api.graphql.gen.ts","webpack:///../../libs/shared/abstract/core/src/app.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/atom.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/atom.interface.ts","webpack:///../../libs/shared/abstract/core/src/atom-type.enum.ts","webpack:///../../libs/shared/abstract/core/src/code-mirror-language.enum.ts","webpack:///../../libs/shared/abstract/core/src/element.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/element-type.enum.ts","webpack:///../../libs/shared/abstract/core/src/errors/domain.ts","webpack:///../../libs/shared/abstract/core/src/field/field.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/jwt.interface.ts","webpack:///../../libs/shared/abstract/core/src/page.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/page-kind.enum.ts","webpack:///../../libs/shared/abstract/core/src/primitive-type.enum.ts","webpack:///../../libs/shared/abstract/core/src/prop.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/render-type.ts","webpack:///../../libs/shared/abstract/core/src/resource-type.enum.ts","webpack:///../../libs/shared/abstract/core/src/role.enum.ts","webpack:///../../libs/shared/abstract/core/src/seed/index.ts","webpack:///../../libs/shared/abstract/core/src/seed/atom.interface.ts","webpack:///../../libs/shared/abstract/core/src/services/index.ts","webpack:///../../libs/shared/abstract/core/src/services/repository.interface.ts","webpack:///../../libs/shared/abstract/core/src/store.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/tag.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/index.ts","webpack:///../../libs/shared/abstract/core/src/type/action-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/app-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/array-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/base-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/code-mirror-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/element-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/enum-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/interface-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/lambda-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/page-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/primitive-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/react-node-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/render-prop-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type/union-type.dto.interface.ts","webpack:///../../libs/shared/abstract/core/src/type-kind.enum.ts","webpack:///../../libs/shared/abstract/core/src/user.interface.ts","webpack:///external commonjs \"uuid\"","webpack:///../../libs/backend/application/type/src/mapper/index.ts","webpack:///../../libs/backend/application/type/src/mapper/ant-design-primitive-map.ts","webpack:///../../libs/backend/application/type/src/parser/index.ts","webpack:///../../libs/backend/application/type/src/parser/matchers.ts","webpack:///../../libs/backend/application/type/src/parser/parser.ts","webpack:///external commonjs \"lodash/merge\"","webpack:///../../libs/backend/application/type/src/parser/type-predicates.ts","webpack:///../../libs/backend/application/type/src/services/index.ts","webpack:///../../libs/backend/application/type/src/services/type-seeder.service.ts","webpack:///../../libs/backend/domain/type/src/index.ts","webpack:///../../libs/backend/domain/type/src/factory/index.ts","webpack:///../../libs/backend/domain/type/src/factory/type.factory.ts","webpack:///../../libs/backend/domain/type/src/model/index.ts","webpack:///../../libs/backend/domain/type/src/model/action-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/base-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/array-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/enum-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/field.model.ts","webpack:///../../libs/backend/domain/type/src/model/interface-type.model.ts","webpack:///external commonjs \"voca\"","webpack:///../../libs/backend/domain/type/src/model/primitive-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/react-node-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/render-prop-type.model.ts","webpack:///../../libs/backend/domain/type/src/model/union-type.model.ts","webpack:///../../libs/backend/domain/type/src/repository/index.ts","webpack:///../../libs/backend/domain/type/src/repository/action-type.repo.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/cypher/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/cypher/component/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/cypher/element/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/cypher/tag/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/cypher/type/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/directive/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/directive/default-directives.ts","webpack:///external commonjs \"@apollo/client\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/driver.ts","webpack:///../../libs/shared/config/src/index.ts","webpack:///../../libs/shared/config/src/atom/index.ts","webpack:///../../libs/shared/config/src/atom/atoms.ts","webpack:///external commonjs \"object-typed\"","webpack:///../../libs/shared/config/src/env/index.ts","webpack:///../../libs/shared/config/src/env/env.ts","webpack:///../../libs/shared/config/src/env/services/auth0.ts","webpack:///external commonjs \"env-var\"","webpack:///../../libs/shared/config/src/env/services/circleci.ts","webpack:///../../libs/shared/config/src/env/services/google-analytics.ts","webpack:///../../libs/shared/config/src/env/services/graphql.ts","webpack:///../../libs/shared/config/src/env/services/hotjar.ts","webpack:///../../libs/shared/config/src/env/services/intercom.ts","webpack:///../../libs/shared/config/src/env/services/mailchimp.ts","webpack:///../../libs/shared/config/src/env/services/neo4j.ts","webpack:///../../libs/shared/config/src/env/services/node.ts","webpack:///../../libs/shared/config/src/env/services/supabase.ts","webpack:///../../libs/shared/config/src/env/services/vercel.ts","webpack:///../../libs/shared/config/src/env/vars.ts","webpack:///external commonjs \"neo4j-driver\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/generate-ogm-types.ts","webpack:///external commonjs \"@neo4j/graphql-ogm\"","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"prettier\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/ogm.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/pure-resolvers.ts","webpack:///external commonjs \"@graphql-tools/merge\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/app/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/app/app.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/app/field/app-name.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/app/field/app-slug.ts","webpack:///external commonjs \"voca/slugify\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/domain/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/domain/domain.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/domain/field/domain-config.ts","webpack:///../../libs/backend/infra/adapter/vercel/src/index.ts","webpack:///../../libs/backend/infra/adapter/vercel/src/domain/index.ts","webpack:///../../libs/backend/infra/adapter/vercel/src/domain/add-domain.ts","webpack:///../../libs/backend/infra/adapter/vercel/src/domain/get-domain-config.ts","webpack:///../../libs/backend/infra/adapter/vercel/src/domain/get-project-domain.ts","webpack:///external commonjs \"cross-fetch\"","webpack:///../../libs/backend/infra/adapter/vercel/src/vercel.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/domain/field/project-domain.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/element/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/element/element.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/element/field/render-type.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/page/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/page/page.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/page/field/page-name.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/page/field/page-slug.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/type/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/type/type.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/type/query/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/pure-resolver/type/query/base-types.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/resolvers.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/ogm-resolvers.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/element/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/element/element.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/element/field/descedant-elements.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/action-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/app-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/user-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/atom-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/tag-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/type-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/field-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/component-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/element-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/prop-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/store-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/domain-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/page-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/selectionSet/resource-selection-set.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/tag/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/tag/tag.resolver.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/resolver/ogm-resolver/tag/field/tag-descendants.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/schema.ts","webpack:///external commonjs \"@neo4j/graphql\"","webpack:///external commonjs \"@neo4j/graphql-plugin-auth\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/type-defs.ts","webpack:///external commonjs \"graphql\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/common.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/action.schema.ts","webpack:///external commonjs \"graphql-request\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/admin.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/app.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/atom.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/component.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/domain.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/element.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/hook.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/page.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/prop.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/resource.schema.ts","webpack:///external commonjs \"lodash/values\"","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/store.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/tag.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/model/user.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/type/index.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/type/field.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/schema/type/type.schema.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/repository.ts","webpack:///../../libs/backend/infra/adapter/neo4j/src/infra/with-transaction.ts","webpack:///../../libs/backend/infra/core/src/index.ts","webpack:///../../libs/backend/infra/core/src/repository.ts","webpack:///../../libs/shared/domain/mapper/src/index.ts","webpack:///../../libs/shared/domain/mapper/src/orm/index.ts","webpack:///../../libs/shared/domain/mapper/src/orm/connect.ts","webpack:///../../libs/shared/domain/mapper/src/orm/where.ts","webpack:///../../libs/shared/domain/mapper/src/orm/disconnect.ts","webpack:///../../libs/shared/domain/mapper/src/orm/node.ts","webpack:///../../libs/shared/domain/mapper/src/orm/reconnect.ts","webpack:///../../libs/shared/domain/mapper/src/type/index.ts","webpack:///../../libs/shared/domain/mapper/src/type/type-input.factory.ts","webpack:///../../libs/backend/domain/type/src/repository/array-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/enum-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/field.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/interface-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/primitive-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/react-node-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/render-prop-type.repo.ts","webpack:///../../libs/backend/domain/type/src/repository/union-type.repo.ts","webpack:///../../libs/backend/application/type/src/use-case/index.ts","webpack:///../../libs/backend/application/type/src/use-case/export/index.ts","webpack:///../../libs/backend/application/type/src/use-case/export/export-admin-types.ts","webpack:///../../libs/backend/abstract/codegen/src/index.ts","webpack:///../../libs/backend/abstract/codegen/src/ogm-types.gen.ts","webpack:///../../libs/backend/application/type/src/mapper/sort.ts","webpack:///../../libs/backend/application/type/src/use-case/export/export-atom-apis.ts","webpack:///../../libs/backend/application/type/src/use-case/export/export-system-types.ts","webpack:///../../libs/backend/application/type/src/use-case/export/export-user-types.ts","webpack:///../../libs/backend/application/type/src/use-case/extract/extract-ant-design-fields/index.ts","webpack:///../../libs/backend/application/type/src/use-case/extract/extract-ant-design-fields/extract-ant-design-fields.service.ts","webpack:///external commonjs \"lodash/find\"","webpack:///../../libs/backend/application/type/src/use-case/type-adapter/antd-type-adapter/antd-type-adapter.service.ts","webpack:///../../libs/backend/application/type/src/use-case/type-adapter/default-type-adapter/default-type-adapter.service.ts","webpack:///../../libs/frontend/shared/utils/src/index.ts","webpack:///../../libs/frontend/shared/utils/src/callback-with-params.ts","webpack:///../../libs/frontend/shared/utils/src/client-cache.ts","webpack:///../../libs/frontend/shared/utils/src/copy-text-to-clipboard.ts","webpack:///../../libs/frontend/shared/utils/src/dynamic-loader.ts","webpack:///external commonjs \"next/dynamic\"","webpack:///../../libs/frontend/shared/utils/src/extract-error-message.ts","webpack:///external commonjs \"lodash/isString\"","webpack:///../../libs/frontend/shared/utils/src/graphql/index.ts","webpack:///../../libs/frontend/shared/utils/src/graphql/extract-first-graph-ql-error-code.ts","webpack:///../../libs/frontend/shared/utils/src/inline-form.service.ts","webpack:///../../libs/frontend/shared/utils/src/modal.service.ts","webpack:///../../libs/frontend/shared/utils/src/notifications.ts","webpack:///external commonjs \"antd\"","webpack:///../../libs/frontend/shared/utils/src/pagination/index.ts","webpack:///../../libs/frontend/shared/utils/src/pagination/extract-table-queries.ts","webpack:///../../libs/frontend/shared/utils/src/pagination/pagination.service.ts","webpack:///external commonjs \"lodash/sortBy\"","webpack:///external commonjs \"mobx\"","webpack:///../../libs/frontend/shared/utils/src/pagination/useTablePagination.hook.ts","webpack:///external commonjs \"lodash/debounce\"","webpack:///external commonjs \"lodash/isMatch\"","webpack:///external commonjs \"next/router\"","webpack:///../../libs/frontend/shared/utils/src/run-middleware.ts","webpack:///../../libs/frontend/shared/utils/src/ssr-pipe.ts","webpack:///../../libs/frontend/shared/utils/src/state-expressions.ts","webpack:///../../libs/frontend/abstract/core/src/index.ts","webpack:///../../libs/frontend/abstract/core/src/constant.ts","webpack:///../../libs/frontend/abstract/core/src/domain/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.input.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/action.where.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/api-action.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/api-action.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/config/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/config/graphql-action-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/api-action/config/rest-action-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/code-action/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/code-action/code-action.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/actions/code-action/code-action.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/base-action.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/action/fragments/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/admin/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/admin/admin.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.service.context.ts","webpack:///../../libs/frontend/abstract/core/src/domain/app/app.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.seed.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/atom.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/atom/hooks.enum.ts","webpack:///../../libs/frontend/abstract/core/src/domain/base/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/base/ref-schema.ts","webpack:///external commonjs \"zod\"","webpack:///../../libs/frontend/abstract/core/src/domain/builder/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/builder/builder.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/builder/builder.service.context.ts","webpack:///../../libs/frontend/abstract/core/src/domain/builder/builder.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/builder/expression-transformer.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/component/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/component/component.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/component/component.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/component/component.ref.ts","webpack:///external commonjs \"lodash/isNil\"","webpack:///../../libs/frontend/abstract/core/src/domain/component/component.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/component/component.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/domain.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/domain.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/domain.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/domain.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/domain/domain.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.service.context.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element-graph.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element-tree/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element-tree/element-tree.model.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/page.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/page.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/page.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/page.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/page/page.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element-tree/element-tree.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/element-tree.interface.model.ts","webpack:///../../libs/frontend/abstract/core/src/domain/element/render-type.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/graphql/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/graphql/graphql-hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/page/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/page/query-page-hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/pages/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/pages/query-pages-hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/query-config/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/query-config/query-config-hook.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/query-config/query-method.enum.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/query-lambda/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/query-lambda/query-lambda-hook-interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/recoil/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/recoil/persistence-type.enum.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/recoil/recoil-state-hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/router/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/config/router/router-hook-config.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/hook.discriminator.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/hook.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/hook/hook.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/lambda/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/lambda/lambda.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/prop.data.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/prop.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/prop.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/prop.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/prop/prop.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/render.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/render.service.context.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/render.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/renderer.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/renderer.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/render/runtime.props.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/resource.dto.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/resource.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/resource.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/resource.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/resource/resource.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/store.data.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/store.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/store.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/store.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/store/store.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/tag.data.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/tag.model.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/tag.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/tag.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/tag/tag-tree.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/field.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/field.record.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/field.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/field.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field/field.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field.data.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/field.validation.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/json-schema/typed-prop.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.data.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.input.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.record.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.repo.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/type.where.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/action-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/app-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/array-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/base-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/code-mirror-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/element-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/enum-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/interface-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/lambda-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/page-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/primitive-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/react-node-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/render-prop-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/type/types/union-type.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/roles.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/user.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/user.ref.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/user.service.context.ts","webpack:///../../libs/frontend/abstract/core/src/domain/user/user.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/domain/vercel/index.ts","webpack:///../../libs/frontend/abstract/core/src/domain/vercel/vercel.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/renderer/index.ts","webpack:///../../libs/frontend/abstract/core/src/renderer/component.ts","webpack:///../../libs/frontend/abstract/core/src/routing/index.ts","webpack:///../../libs/frontend/abstract/core/src/routing/params.interface.ts","webpack:///../../libs/frontend/abstract/core/src/service/index.ts","webpack:///../../libs/frontend/abstract/core/src/service/pagination.service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/service/repository.interface.ts","webpack:///../../libs/frontend/abstract/core/src/service/root-store.interface.ts","webpack:///../../libs/frontend/abstract/core/src/service/service.interface.ts","webpack:///../../libs/frontend/abstract/core/src/ui/index.ts","webpack:///../../libs/frontend/abstract/core/src/ui/nextjs.interface.ts","webpack:///../../libs/frontend/abstract/core/src/ui/tree.interface.ts","webpack:///../../libs/frontend/shared/utils/src/throw-if-undefined.ts","webpack:///../../libs/frontend/shared/utils/src/try-parse.ts","webpack:///../../libs/frontend/shared/utils/src/try-stringify.ts","webpack:///../../libs/frontend/shared/utils/src/typescript-utils.ts","webpack:///../../libs/frontend/shared/utils/src/useDebouncedState.hook.ts","webpack:///../../libs/frontend/shared/utils/src/useOnClickOutside.hook.ts","webpack:///../../libs/frontend/shared/utils/src/usePrevious.hook.ts","webpack:///../../libs/frontend/shared/utils/src/useScroll.hook.ts","webpack:///../../libs/backend/application/type/src/use-case/extract/extract-ant-design-fields/read-ant-design-apis.ts","webpack:///../../libs/backend/abstract/core/src/index.ts","webpack:///../../libs/backend/abstract/core/src/export/admin.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/app.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/component.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/domain.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/page.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/resource.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/store.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/type.interface.ts","webpack:///../../libs/backend/abstract/core/src/export/user.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/atom.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/field.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/tag/index.ts","webpack:///../../libs/backend/abstract/core/src/seed/tag/antd-category-tag.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/tag/html-category-tag.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/tag/react-category-tag.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/tag/tag.interface.ts","webpack:///../../libs/backend/abstract/core/src/seed/type.interface.ts","webpack:///../../libs/backend/abstract/core/src/type/index.ts","webpack:///../../libs/backend/abstract/core/src/type/type.interface.ts","webpack:///../../libs/backend/application/type/src/use-case/extract/extract-html-fields/index.ts","webpack:///../../libs/backend/application/type/src/use-case/extract/extract-html-fields/extract-html-fields.service.ts","webpack:///../../libs/backend/application/type/src/use-case/type-adapter/html-type-adapter/html-type-adapter.service.ts","webpack:///../../libs/backend/application/type/src/use-case/seed-empty-api/index.ts","webpack:///../../libs/backend/application/type/src/use-case/seed-empty-api/seed-empty-api.service.ts","webpack:///../../libs/backend/data/seed/src/index.ts","webpack:///../../libs/backend/data/seed/src/tag/index.ts","webpack:///../../libs/backend/data/seed/src/tag/antd/index.ts","webpack:///../../libs/backend/data/seed/src/tag/antd/antd-tag-tree.data.ts","webpack:///../../libs/backend/data/seed/src/tag/html/index.ts","webpack:///../../libs/backend/data/seed/src/tag/html/html-tag-tree.data.ts","webpack:///../../libs/backend/data/seed/src/tag/react/index.ts","webpack:///../../libs/backend/data/seed/src/tag/react/react-tag-tree.data.ts","webpack:///../../libs/shared/data/seed/src/index.ts","webpack:///../../libs/shared/data/seed/src/atoms/index.ts","webpack:///../../libs/shared/data/seed/src/atoms/antd-atom.data.ts","webpack:///../../libs/shared/data/seed/src/atoms/atoms.data.ts","webpack:///../../libs/shared/data/seed/src/atoms/html-atom.data.ts","webpack:///../../libs/shared/data/seed/src/atoms/react-atom.data.ts","webpack:///../../libs/backend/application/admin/src/use-case/index.ts","webpack:///../../libs/backend/application/admin/src/use-case/export-admin-data.service.ts","webpack:///../../libs/backend/application/atom/src/index.ts","webpack:///../../libs/backend/application/atom/src/use-case/index.ts","webpack:///../../libs/backend/application/atom/src/use-case/export-atoms.ts","webpack:///../../libs/backend/application/atom/src/use-case/import-atoms/import-atoms.service.ts","webpack:///../../libs/backend/domain/atom/src/index.ts","webpack:///../../libs/backend/domain/atom/src/model/index.ts","webpack:///../../libs/backend/domain/atom/src/model/atom.model.ts","webpack:///../../libs/backend/domain/atom/src/repository/index.ts","webpack:///../../libs/backend/domain/atom/src/repository/atom.repo.ts","webpack:///../../libs/backend/application/atom/src/use-case/seed-atoms/index.ts","webpack:///../../libs/backend/application/atom/src/use-case/seed-atoms/seed-atoms.service.ts","webpack:///../../libs/backend/domain/tag/src/index.ts","webpack:///../../libs/backend/domain/tag/src/model/index.ts","webpack:///../../libs/backend/domain/tag/src/model/tag.model.ts","webpack:///../../libs/backend/domain/tag/src/repository/index.ts","webpack:///../../libs/backend/domain/tag/src/repository/tag.repo.ts","webpack:///../../libs/backend/application/component/src/index.ts","webpack:///../../libs/backend/application/component/src/use-case/index.ts","webpack:///../../libs/backend/application/component/src/use-case/export-component.ts","webpack:///../../libs/backend/domain/element/src/index.ts","webpack:///../../libs/backend/domain/element/src/model/index.ts","webpack:///../../libs/backend/domain/element/src/model/element.model.ts","webpack:///../../libs/backend/domain/element/src/repository/index.ts","webpack:///../../libs/backend/domain/element/src/repository/element.repo.ts","webpack:///../../libs/backend/domain/element/src/repository/element.repo.old.ts","webpack:///../../libs/backend/domain/element/src/repository/get-descendants.ts","webpack:///../../libs/backend/application/tag/src/index.ts","webpack:///../../libs/backend/application/tag/src/use-case/index.ts","webpack:///../../libs/backend/application/tag/src/use-case/export-tags.ts","webpack:///../../libs/backend/application/tag/src/use-case/seed-tags/seed-tags.service.ts","webpack:///external commonjs \"lodash/uniqBy\"","webpack:///../../libs/backend/shared/util/src/index.ts","webpack:///../../libs/backend/shared/util/src/file/save-formatted-file.ts","webpack:///external node-commonjs \"os\"","webpack:///external commonjs \"lodash/filter\"","webpack:///../../libs/backend/application/admin/src/data-paths.ts","webpack:///../../libs/backend/application/admin/src/use-case/import-admin-data/index.ts","webpack:///../../libs/backend/application/admin/src/use-case/import-admin-data/import-admin-data.service.ts","webpack:///../../libs/backend/domain/app/src/index.ts","webpack:///../../libs/backend/domain/app/src/model/index.ts","webpack:///../../libs/backend/domain/app/src/model/app.model.ts","webpack:///../../libs/backend/domain/app/src/repository/index.ts","webpack:///../../libs/backend/domain/app/src/repository/app.repo.ts","webpack:///../../libs/backend/domain/component/src/index.ts","webpack:///../../libs/backend/domain/component/src/repository/index.ts","webpack:///../../libs/backend/domain/component/src/repository/component.repo.ts","webpack:///../../libs/backend/domain/page/src/index.ts","webpack:///../../libs/backend/domain/page/src/model/index.ts","webpack:///../../libs/backend/domain/page/src/model/page.model.ts","webpack:///../../libs/backend/domain/page/src/repository/index.ts","webpack:///../../libs/backend/domain/page/src/repository/page.repo.ts","webpack:///external commonjs \"lodash/flatMap\"","webpack:///../../libs/backend/domain/prop/src/index.ts","webpack:///../../libs/backend/domain/prop/src/model/index.ts","webpack:///../../libs/backend/domain/prop/src/model/prop.model.ts","webpack:///../../libs/backend/domain/prop/src/repository/index.ts","webpack:///../../libs/backend/domain/prop/src/repository/prop.repo.ts","webpack:///../../libs/backend/domain/store/src/index.ts","webpack:///../../libs/backend/domain/store/src/model/index.ts","webpack:///../../libs/backend/domain/store/src/model/store.model.ts","webpack:///../../libs/backend/domain/store/src/repository/index.ts","webpack:///../../libs/backend/domain/store/src/repository/store.repo.ts","webpack:///external commonjs \"lodash/omit\"","webpack:///../../libs/backend/domain/app/src/repository/validate.ts","webpack:///external commonjs \"bull\"","webpack:///external commonjs \"lodash/pick\"","webpack:///../../libs/backend/application/admin/src/use-case/scrape/index.ts","webpack:///../../libs/backend/application/admin/src/use-case/scrape/scrape-ant-design-data.ts","webpack:///external commonjs \"jquery\"","webpack:///external commonjs \"puppeteer\"","webpack:///../../libs/backend/application/admin/src/use-case/seed-framework/index.ts","webpack:///../../libs/backend/application/admin/src/use-case/seed-framework/seed-framework.service.ts","webpack:///../../libs/backend/infra/adapter/cli/src/index.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/index.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/codegen/codegen.ts","webpack:///external commonjs \"@graphql-codegen/core\"","webpack:///external commonjs \"@graphql-codegen/typescript\"","webpack:///external commonjs \"@graphql-codegen/typescript-operations\"","webpack:///external commonjs \"@graphql-tools/graphql-file-loader\"","webpack:///external commonjs \"@graphql-tools/load\"","webpack:///external commonjs \"@graphql-tools/url-loader\"","webpack:///../../libs/backend/infra/adapter/cli/src/commands/codegen/matched-files.ts","webpack:///external commonjs \"globby\"","webpack:///../../libs/backend/infra/adapter/cli/src/commands/export/export.command.ts","webpack:///../../libs/backend/application/user/src/index.ts","webpack:///../../libs/backend/application/user/src/use-case/index.ts","webpack:///../../libs/backend/application/user/src/use-case/export-user-data.ts","webpack:///../../libs/backend/application/app/src/index.ts","webpack:///../../libs/backend/application/app/src/use-case/index.ts","webpack:///../../libs/backend/application/app/src/use-case/export-apps.ts","webpack:///../../libs/backend/application/app/src/use-case/export-components.ts","webpack:///../../libs/backend/application/app/src/use-case/import-apps.ts","webpack:///../../libs/backend/application/domain/src/index.ts","webpack:///../../libs/backend/application/domain/src/use-case/index.ts","webpack:///../../libs/backend/application/domain/src/use-case/import-domains.ts","webpack:///../../libs/backend/domain/domain/src/index.ts","webpack:///../../libs/backend/domain/domain/src/repository/index.ts","webpack:///../../libs/backend/domain/domain/src/repository/domain.repo.ts","webpack:///../../libs/backend/application/app/src/use-case/import-components.ts","webpack:///../../libs/backend/application/resource/src/index.ts","webpack:///../../libs/backend/application/resource/src/use-case/index.ts","webpack:///../../libs/backend/application/resource/src/use-case/export-resources.ts","webpack:///../../libs/backend/application/resource/src/use-case/import-resources.ts","webpack:///../../libs/backend/domain/resource/src/index.ts","webpack:///../../libs/backend/domain/resource/src/repository/index.ts","webpack:///../../libs/backend/domain/resource/src/repository/resource.repo.ts","webpack:///../../libs/backend/application/user/src/use-case/import-user-data.ts","webpack:///external commonjs \"isomorphic-fetch\"","webpack:///external commonjs \"inquirer\"","webpack:///external commonjs \"yargs\"","webpack:///../../libs/backend/infra/adapter/cli/src/shared/command.ts","webpack:///external commonjs \"dotenv\"","webpack:///../../libs/backend/infra/adapter/cli/src/shared/utils/stage.ts","webpack:///../../libs/backend/infra/adapter/cli/src/shared/path-args.ts","webpack:///../../libs/backend/domain/user/src/index.ts","webpack:///../../libs/backend/domain/user/src/model/index.ts","webpack:///../../libs/backend/domain/user/src/model/user.model.ts","webpack:///../../libs/backend/domain/user/src/repository/index.ts","webpack:///../../libs/backend/domain/user/src/repository/user.repo.ts","webpack:///../../libs/backend/infra/adapter/cli/src/shared/prompts/select-user.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/import/import.service.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/reset/reset.command.ts","webpack:///../../libs/backend/domain/admin/src/index.ts","webpack:///../../libs/backend/domain/admin/src/service/index.ts","webpack:///../../libs/backend/domain/admin/src/service/admin.service.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/scrape/scrape-antd.command.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/scrape/scrape-html.command.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/seed/seed.command.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/tasks/tasks.command.ts","webpack:///../../libs/backend/infra/adapter/shell/src/index.ts","webpack:///../../libs/backend/infra/adapter/shell/src/exec-command.ts","webpack:///external commonjs \"execa\"","webpack:///external node-commonjs \"child_process\"","webpack:///external commonjs \"git-changed-files\"","webpack:///external commonjs \"is-port-reachable\"","webpack:///../../libs/backend/infra/adapter/cli/src/shared/utils/tasks.ts","webpack:///../../libs/backend/infra/adapter/cli/src/commands/terraform/terraform.service.ts","webpack:///./src/commands/command.service.ts","webpack:///external commonjs \"yargs/helpers\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","export * from './exporter/multi-span-processor'\nexport * from './otel.module'\nexport * from './otel-sdk'\n","import type { Context } from '@opentelemetry/api'\nimport type {\n  ReadableSpan,\n  Span,\n  SpanProcessor,\n} from '@opentelemetry/sdk-trace-base'\n\nexport class MultiSpanProcessor implements SpanProcessor {\n  private spanProcessors: Array<SpanProcessor>\n\n  constructor(spanProcessors: Array<SpanProcessor>) {\n    this.spanProcessors = spanProcessors\n  }\n\n  onStart(span: Span, parentContext: Context): void {\n    for (const spanProcessor of this.spanProcessors) {\n      spanProcessor.onStart(span, parentContext)\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this.spanProcessors) {\n      spanProcessor.onEnd(span)\n    }\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.all(\n      this.spanProcessors.map((spanProcessor) => spanProcessor.shutdown()),\n    ).then()\n  }\n\n  forceFlush(): Promise<void> {\n    return Promise.all(\n      this.spanProcessors.map((spanProcessor) => spanProcessor.forceFlush()),\n    ).then()\n  }\n}\n","import { OpenTelemetryModule } from 'nestjs-otel'\n\nexport const OpenTelemetryModuleConfig = OpenTelemetryModule.forRoot({\n  // metrics: {\n  //   // Includes Host Metrics\n  //   apiMetrics: {\n  //     // Includes api metrics\n  //     defaultAttributes: {\n  //       // You can set default labels for api metrics\n  //       custom: 'label',\n  //     },\n  //     enable: true,\n  //     // You can ignore specific routes (See https://docs.nestjs.com/middleware#excluding-routes for options)\n  //     ignoreRoutes: ['/favicon.ico'],\n  //     // Records metrics for all URLs, even undefined ones\n  //     ignoreUndefinedRoutes: false,\n  //   },\n  //   hostMetrics: true,\n  // },\n})\n","module.exports = require(\"nestjs-otel\");","import { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http'\nimport { NestInstrumentation } from '@opentelemetry/instrumentation-nestjs-core'\nimport { Resource } from '@opentelemetry/resources'\nimport { NodeSDK } from '@opentelemetry/sdk-node'\nimport {\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n} from '@opentelemetry/sdk-trace-base'\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions'\nimport { MultiSpanProcessor } from './exporter/multi-span-processor'\n\nexport const otelSDK = new NodeSDK({\n  // instrumentations: [new NestInstrumentation()],\n  resource: new Resource({\n    [SemanticResourceAttributes.SERVICE_NAME]: 'platform-api',\n  }),\n  spanProcessor: new MultiSpanProcessor([\n    new SimpleSpanProcessor(new ConsoleSpanExporter()),\n    new SimpleSpanProcessor(new OTLPTraceExporter()),\n  ]),\n  /**\n   * Not needed, trace exporter is passed as param to span processor\n   */\n  // traceExporter: new ConsoleSpanExporter(),\n})\n\nprocess.on('SIGTERM', () => {\n  otelSDK\n    .shutdown()\n    .then(\n      () => console.log('SDK shut down successfully'),\n      (err) => console.log('Error shutting down SDK', err),\n    )\n    .finally(() => process.exit(0))\n})\n","module.exports = require(\"@opentelemetry/exporter-trace-otlp-http\");","module.exports = require(\"@opentelemetry/resources\");","module.exports = require(\"@opentelemetry/sdk-node\");","module.exports = require(\"@opentelemetry/sdk-trace-base\");","module.exports = require(\"@opentelemetry/semantic-conventions\");","module.exports = require(\"@nestjs/core\");","import { CodelabLoggerModule } from '@codelab/backend/infra/adapter/logger'\nimport { OpenTelemetryModuleConfig } from '@codelab/backend/infra/adapter/otel'\nimport { BullModule } from '@nestjs/bull'\nimport { LoggerService, Module } from '@nestjs/common'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { LoggerModule } from 'nestjs-pino'\nimport { CommandModule } from '../commands/command.module'\n\n@Module({\n  controllers: [],\n  imports: [\n    CommandModule,\n    CodelabLoggerModule,\n    OpenTelemetryModuleConfig,\n    BullModule.forRoot({\n      redis: {\n        host: 'localhost',\n        port: 6379,\n      },\n    }),\n    // Need to import in module that uses the queue\n    // BullModule.registerQueue({\n    //   name: 'import-admin-data',\n    // }),\n  ],\n  providers: [],\n})\nexport class AppModule {}\n","export * from './logger.module'\nexport * from './logger.service'\n","import { Module, RequestMethod } from '@nestjs/common'\nimport { LoggerModule } from 'nestjs-pino'\nimport { CodelabLogger } from './logger.service'\n\n@Module({\n  exports: [CodelabLogger],\n  imports: [LoggerModule.forRoot()],\n  providers: [CodelabLogger],\n})\nexport class CodelabLoggerModule {}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"nestjs-pino\");","import type { LoggerService } from '@nestjs/common'\nimport { ConsoleLogger } from '@nestjs/common'\nimport { context, trace } from '@opentelemetry/api'\nimport { Logger } from 'nestjs-pino'\nimport type { LoggerOptions } from 'pino'\nimport Pino from 'pino'\n\n// export const loggerOptions: LoggerOptions = {\n//   formatters: {\n//     level: (label) => {\n//       return { level: label }\n//     },\n//     // Workaround for PinoInstrumentation (does not support latest version yet)\n//     log: (object) => {\n//       const span = trace.getSpan(context.active())\n\n//       if (!span) {\n//         return { ...object }\n//       }\n\n//       const spanContext = trace.getSpan(context.active())?.spanContext()\n\n//       if (!spanContext) {\n//         return { ...object }\n//       }\n\n//       const { spanId, traceId } = spanContext\n\n//       return { ...object, spanId, traceId }\n//     },\n//   },\n//   level: 'info',\n//   // prettifier: process.env.NODE_ENV === 'local' ? require('pino-pretty') : false,\n// }\n\nexport class CodelabLogger extends ConsoleLogger implements LoggerService {}\n// export class CodelabLogger extends Logger implements LoggerService {}\n","module.exports = require(\"@nestjs/bull\");","import { ImportAdminDataService } from '@codelab/backend/application/admin'\nimport {\n  ImportService,\n  TerraformService,\n} from '@codelab/backend/infra/adapter/cli'\nimport { BullModule } from '@nestjs/bull'\nimport type { OnModuleInit } from '@nestjs/common'\nimport { Module } from '@nestjs/common'\nimport { CommandService } from './command.service'\n\n@Module({\n  exports: [CommandService],\n  imports: [\n    BullModule.registerQueue({\n      name: 'import-admin-data',\n    }),\n  ],\n  providers: [\n    CommandService,\n    ImportService,\n    ImportAdminDataService,\n    TerraformService,\n  ],\n})\nexport class CommandModule implements OnModuleInit {\n  constructor(private readonly commandService: CommandService) {}\n\n  onModuleInit() {\n    this.commandService.exec()\n  }\n  // https://github.com/codelab-app/platform/blob/2b929d723822dbf9654526deb29dfcef2b7af0e9/libs/backend/infra/adapter/cli/src/commands/import/import.service.ts#L38\n}\n","export * from './services'\nexport * from './use-case'\n","export * from './admin-seeder.service'\n","import { AuthService } from '@codelab/backend/application/service'\nimport {\n  ExtractAntDesignFieldsService,\n  ExtractHtmlFieldsService,\n} from '@codelab/backend/application/type'\nimport { antdTagTree, htmlTagTree } from '@codelab/backend/data/seed'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport { antdAtomData, htmlAtomData } from '@codelab/shared/data/seed'\nimport { SeedFrameworkService } from '../use-case'\n\nexport class AdminSeederService extends AuthService {\n  async seedAntDesign() {\n    const fields = async (atoms: Array<IAtomDTO>) =>\n      new ExtractAntDesignFieldsService(this.owner).execute(atoms)\n\n    await new SeedFrameworkService(this.owner).execute({\n      atoms: antdAtomData,\n      fields,\n      tags: antdTagTree,\n    })\n  }\n\n  async seedHtml() {\n    const fields = async (atoms: Array<IAtomDTO>) =>\n      new ExtractHtmlFieldsService(this.owner).execute(atoms)\n\n    await new SeedFrameworkService(this.owner).execute({\n      atoms: htmlAtomData,\n      fields,\n      tags: htmlTagTree,\n    })\n  }\n}\n","export * from './use-cases'\n","export * from './auth-use-case'\nexport * from './use-case'\n","import type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { UseCase } from './use-case'\n\n/**\n * For authenticated user\n */\nexport abstract class AuthUseCase<\n  IRequest = void,\n  IResponse = void,\n> extends UseCase<IRequest, IResponse> {\n  constructor(protected readonly owner: IAuth0Owner) {\n    super()\n  }\n}\n\nexport abstract class AuthService {\n  constructor(protected readonly owner: IAuth0Owner) {}\n}\n","import type { IUseCase } from '@codelab/backend/abstract/types'\nimport { withTracing } from '@codelab/shared/infra/otel'\nimport { Injectable } from '@nestjs/common'\n\nexport abstract class UseCase<IRequest = void, IResponse = void>\n  implements IUseCase<IRequest, IResponse>\n{\n  // tracer = trace.getTracer(CLI_TRACER)\n\n  execute = withTracing<IResponse, [IRequest]>(\n    `${this.constructor.name}.execute()`,\n    (request: IRequest) => {\n      const result = this._execute(request)\n\n      return result instanceof Promise ? result : Promise.resolve(result)\n    },\n  )\n\n  protected abstract _execute(request: IRequest): IResponse | Promise<IResponse>\n}\n","export * from './register'\nexport * from './span'\nexport * from './tracer'\n","import { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http'\nimport { NestInstrumentation } from '@opentelemetry/instrumentation-nestjs-core'\nimport { Resource } from '@opentelemetry/resources'\nimport { NodeSDK } from '@opentelemetry/sdk-node'\nimport { SimpleSpanProcessor } from '@opentelemetry/sdk-trace-node'\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions'\n\n/**\n * Custom setup code for CLI, since the vercel wrapper from `@vercel/otel` uses ESM, and we have to use CommonJS require.\n */\nexport const registerCustomOTel = (serviceName: string) => {\n  console.log('Initializing OpenTelemetry...')\n\n  // const collectorOptions = {\n  //   // an optional limit on pending requests\n  //   concurrencyLimit: 10,\n  //   // an optional object containing custom headers to be sent with each request\n  //   headers: {},\n  //   // url is optional and can be omitted - default is http://localhost:4318/v1/traces\n  //   url: '<opentelemetry-collector-url>',\n  // }\n\n  const sdk = new NodeSDK({\n    instrumentations: [new NestInstrumentation()],\n    resource: new Resource({\n      [SemanticResourceAttributes.SERVICE_NAME]: serviceName,\n    }),\n    /**\n     * The OTLPTraceExporter without any configuration parameters will default to sending data to localhost on port 4317 using the http/protobuf protocol.\n     *\n     * {\n     *  endpoint: 'http://localhost:4317',\n     *  protocol: 'http/protobuf',\n     *  }\n     */\n    spanProcessor: new SimpleSpanProcessor(new OTLPTraceExporter()),\n    // traceExporter: new ConsoleSpanExporter(),\n  })\n\n  sdk.start()\n\n  return sdk\n}\n","module.exports = require(\"@opentelemetry/instrumentation-nestjs-core\");","module.exports = require(\"@opentelemetry/sdk-trace-node\");","import type { Span } from '@opentelemetry/api'\nimport { context, trace } from '@opentelemetry/api'\n\nexport const startTracingSpan = (\n  tracerName: string,\n  spanName: string,\n): Span => {\n  const tracer = trace.getTracer(tracerName)\n  const span = tracer.startSpan(spanName)\n  const spanContext = trace.setSpan(context.active(), span)\n\n  return span\n}\n","module.exports = require(\"@opentelemetry/api\");","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { PromiseCallback } from '@codelab/shared/abstract/types'\nimport { toError } from '@codelab/shared/utils'\nimport type { Span } from '@opentelemetry/api'\nimport { context, SpanStatusCode, trace } from '@opentelemetry/api'\nimport { setSpan } from '@opentelemetry/api/build/src/trace/context-utils'\n\n//\nexport const CLI_TRACER = 'cli-tracer'\n\n/**\n * The startActiveSpan function is a utility function that simplifies the process of starting a span, setting it as active in the context, executing a function (synchronously or asynchronously) within the context of that span, and then ending the span.\n */\n// This function executes the callback and returns the result. If the result is a promise, it ensures the span is ended after the promise resolves.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst executeCallback = <Return, Param extends Array<any>>(\n  callback: PromiseCallback<Return, Param>,\n  args: Param,\n  span: Span,\n) => {\n  try {\n    const result = context.with(setSpan(context.active(), span), () =>\n      callback(...args),\n    )\n\n    if (result instanceof Promise) {\n      return result.finally(() => {\n        return span.end()\n      })\n    } else {\n      span.end()\n\n      return result\n    }\n  } catch (error) {\n    recordExceptionAndStatus(span, error)\n    throw error\n  }\n}\n\n// This function records an exception in the given span and sets the status to ERROR.\nconst recordExceptionAndStatus = (span: Span, error: unknown) => {\n  span.recordException(toError(error))\n  span.setStatus({ code: SpanStatusCode.ERROR })\n}\n\ninterface WithTracing {\n  <Return, Param extends Array<any>>(\n    /**\n     * Name of the span\n     */\n    operationName: string,\n    /**\n     * The function we are measuring\n     */\n    callback: PromiseCallback<Return, Param>,\n    /**\n     * Allows us to add attributes to span\n     */\n    spanCallback?: (span: Span) => void,\n  ): PromiseCallback<Return, Param>\n}\n\n// This is your withTracing function, now using the helper functions above.\nexport const withTracing: WithTracing = <Return, Param extends Array<any>>(\n  operationName: string,\n  callback: PromiseCallback<Return, Param>,\n  spanCallback?: (span: Span) => void,\n) => {\n  return async (...args: Param) => {\n    const tracer = trace.getTracer(CLI_TRACER)\n\n    return tracer.startActiveSpan(operationName, async (span) => {\n      try {\n        if (spanCallback) {\n          spanCallback(span)\n        }\n\n        const result = await executeCallback(callback, args, span)\n\n        return result\n      } finally {\n        span.end()\n      }\n    })\n  }\n}\n","export * from './assert'\nexport * from './cache'\nexport * from './entity'\nexport * from './env'\nexport * from './error'\nexport * from './filter'\nexport * from './logger'\nexport * from './mapDeep'\nexport * from './props'\nexport * from './regex'\nexport * from './transform'\nexport * from './types'\n","// export const assert = (\n//   condition: boolean,\n//   errorMessage = 'An assert error was thrown',\n// ) => {\n//   if (!condition) {\n//     throw new Error(errorMessage)\n//   }\n// }\n\ninterface AssertIsDefined {\n  <T>(val: T): asserts val is NonNullable<T>\n}\n\nexport const assertIsDefined: AssertIsDefined = <T>(\n  val: T,\n): asserts val is NonNullable<T> => {\n  if (val === undefined || val === null) {\n    throw new Error(`Expected 'val' to be defined, but received ${val}`)\n  }\n}\n","export * from './ttl-cache'\n","import type { ITTLCache } from '@codelab/backend/abstract/types'\n\nexport class TTLCache<TKey extends number | string | symbol, TValue>\n  implements ITTLCache<TKey, TValue>\n{\n  private cache: Map<TKey, { value: TValue; expiresAt: number }> = new Map()\n\n  constructor(private ttl: number) {}\n\n  set(key: TKey, value: TValue) {\n    this.cache.set(key, {\n      expiresAt: Date.now() + this.ttl,\n      value,\n    })\n  }\n\n  get(key: TKey): TValue | undefined {\n    const entry = this.cache.get(key)\n\n    if (entry && Date.now() < entry.expiresAt) {\n      return entry.value\n    }\n\n    this.cache.delete(key)\n\n    return undefined\n  }\n\n  clear() {\n    this.cache.clear()\n  }\n\n  size() {\n    return this.cache.size\n  }\n}\n","export * from './entity-id-set'\nexport * from './entity-map-by-id'\nexport * from './extract-id'\nexport * from './valid-uuid'\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport { extractId } from './extract-id'\n\nexport const entityIdSet = <T extends IEntity>(entities: Array<T>) =>\n  new Set(entities.map(extractId))\n","import type { IEntity } from '@codelab/shared/abstract/types'\n\nexport const extractId = (entity: IEntity) => entity.id\n","import type { IEntity, Nullish } from '@codelab/shared/abstract/types'\nimport keyBy from 'lodash/keyBy'\n\nexport const entityToIdAndEntity = <T extends IEntity>(\n  entity: T,\n): [string, T] => [entity.id, entity]\n\nexport const entityMapById = <T extends IEntity>(entities: Nullish<Array<T>>) =>\n  new Map(entities?.length ? entities.map(entityToIdAndEntity) : [])\n\nexport const entityRecordById = <T extends IEntity>(\n  entities: Nullish<Array<T>>,\n): Record<string, T> => (entities?.length ? keyBy(entities, 'id') : {})\n","module.exports = require(\"lodash/keyBy\");","import type { Key } from 'react'\n\n/* Check if string is valid UUID */\nexport const checkIfValidUUID = (str: Key | undefined) => {\n  if (!str) {\n    return false\n  }\n\n  // Regular expression to check if string is a valid UUID\n  const regexExp =\n    /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/gi\n\n  return regexExp.test(str.toString())\n}\n","export * from './is-server'\n","export const isServer = typeof window === 'undefined'\n","export * from './to-error'\n","export const toError = (error: unknown): Error | string => {\n  if (typeof error === 'string') {\n    return error\n  }\n\n  if (error instanceof Error) {\n    return { message: error.message, name: error.name, stack: error.stack }\n  }\n\n  return String(error)\n}\n","export * from './filter-empty-strings'\nexport * from './is-non-nullable'\n","import isArray from 'lodash/isArray'\nimport isObject from 'lodash/isObject'\nimport isObjectLike from 'lodash/isObjectLike'\nimport pickBy from 'lodash/pickBy'\n\nexport const filterEmptyStrings = (data: unknown): unknown =>\n  isObject(data)\n    ? pickBy(data, (value: unknown, key) => {\n        if (isArray(value)) {\n          return value.map(filterEmptyStrings)\n        }\n\n        if (isObjectLike(value)) {\n          return filterEmptyStrings(value)\n        }\n\n        return value !== ''\n      })\n    : data\n","module.exports = require(\"lodash/isArray\");","module.exports = require(\"lodash/isObject\");","module.exports = require(\"lodash/isObjectLike\");","module.exports = require(\"lodash/pickBy\");","export const isNonNullable = <T>(value?: T): value is NonNullable<T> =>\n  Boolean(value)\n","export * from './c-log'\nexport * from './log-task'\n","import * as util from 'util'\n\nexport const cLog = (...objects: Array<object | string>) => {\n  objects.forEach((obj) =>\n    console.log(\n      util.inspect(obj, { colors: true, depth: null, showHidden: false }),\n    ),\n  )\n}\n","module.exports = require(\"util\");","import util from 'util'\n\nexport const logTask = (task: string, label = '', data?: object) => {\n  if (data) {\n    return console.debug(\n      `[${task}]:`,\n      label,\n      util.inspect(data, false, null, true),\n    )\n  }\n\n  return console.debug(`[${task}]:`, label)\n}\n\nexport const logSection = (task: string) => {\n  console.log('---------------------')\n  console.log(`${task}...`)\n  console.log('---------------------')\n}\n","export * from './abstract'\nexport * from './map-deep'\n","import type { IPropData } from '@codelab/frontend/abstract/core'\nimport type { Key } from 'react'\nimport type { ArrayOrSingle } from 'ts-essentials'\n\nexport type IOutput = ArrayOrSingle<IPropData>\nexport type IValueMapper = (value: IPropData, key: Key) => unknown\nexport type IKeyMapper = (value: IPropData, key: Key) => Key\n","import type { IPropData } from '@codelab/frontend/abstract/core'\nimport isArray from 'lodash/isArray'\nimport isObjectLike from 'lodash/isObjectLike'\nimport map from 'lodash/map'\nimport toPairsIn from 'lodash/toPairsIn'\nimport { modelTypeKey } from 'mobx-keystone'\nimport type { Key } from 'react'\nimport { isServer } from '../env/is-server'\nimport type { IKeyMapper, IOutput, IValueMapper } from './abstract'\n\nconst isReactNode = (obj?: IPropData) => Boolean(obj?.['$$typeof'])\nconst isMobxModel = (obj?: IPropData) => Boolean(obj?.[modelTypeKey])\n\nconst isHtmlNode = (obj: unknown) =>\n  isServer ? false : obj instanceof HTMLElement\n\nconst isCyclic = (obj?: IPropData) =>\n  (isObjectLike(obj) && isReactNode(obj)) || isMobxModel(obj) || isHtmlNode(obj)\n\nexport const mapDeep = (\n  obj: IPropData,\n  valueMapper: IValueMapper,\n  keyMapper: IKeyMapper = (value, key) => key,\n  key: Key = '',\n): IOutput => {\n  obj = valueMapper(obj, key) as IOutput\n\n  return isCyclic(obj)\n    ? obj\n    : isArray(obj)\n    ? map(obj, (innerObj, index) =>\n        mapDeep(innerObj, valueMapper, keyMapper, index),\n      )\n    : isObjectLike(obj)\n    ? toPairsIn(obj)\n        .map(([_key, _value]) => {\n          const mappedKey = keyMapper(_value, _key)\n\n          const mappedValue = isObjectLike(_value)\n            ? mapDeep(_value, valueMapper, keyMapper, mappedKey)\n            : valueMapper(_value, _key)\n\n          return {\n            [mappedKey]: mappedValue,\n          }\n        })\n        .reduce((acc, cur) => ({ ...acc, ...cur }), {})\n    : (valueMapper(obj, '') as IPropData)\n}\n","module.exports = require(\"lodash/map\");","module.exports = require(\"lodash/toPairsIn\");","module.exports = require(\"mobx-keystone\");","export * from './merge-props'\nexport * from './prop-safe-stringify'\n","import type { IPropData } from '@codelab/frontend/abstract/core'\nimport mergeWith from 'lodash/mergeWith'\n\ntype PropsArray = Array<IPropData | null | undefined>\n\nconst propsCustomizer = (value: string, srcValue: string, key: string) => {\n  if (key === 'className') {\n    return `${value || ''} ${srcValue || ''}`\n  }\n\n  return undefined\n}\n\n/**\n *  Deep merges a list of props together, the latter props have priority over the prior ones in case of conflict\n * The following edge cases are handled:\n *\n * - Merging className strings together\n */\n\nexport const mergeProps = <TData extends IPropData = IPropData>(\n  ...propsArray: PropsArray\n): TData => {\n  return propsArray.reduce<TData>((mergedProps, nextProps) => {\n    return mergeWith(mergedProps, nextProps, propsCustomizer)\n  }, {} as TData)\n}\n","module.exports = require(\"lodash/mergeWith\");","import isArray from 'lodash/isArray'\nimport isFunction from 'lodash/isFunction'\nimport isObjectLike from 'lodash/isObjectLike'\nimport isPlainObject from 'lodash/isPlainObject'\nimport pickBy from 'lodash/pickBy'\nimport React from 'react'\n\nexport const propSafeStringify = (props: object, maskFunctions = true) => {\n  const obj = pickBy(props, (value, key) => !key.startsWith('_'))\n  const cache = new WeakMap<object, boolean>()\n\n  const replacer = (key: string, value: object) => {\n    if (key === 'children' && isObjectLike(value)) {\n      return\n    }\n\n    // handle ReactNodeType\n    if (React.isValidElement(value)) {\n      return 'React element'\n    }\n\n    if (isObjectLike(value)) {\n      if (!isArray(value) && !isPlainObject(value)) {\n        return `${value.constructor.name} instance`\n      }\n\n      // Duplicate reference found, discard key\n      if (cache.get(value)) {\n        return\n      }\n\n      // Store value in our collection\n      cache.set(value, true)\n    }\n\n    if (maskFunctions && isFunction(value)) {\n      return 'function'\n    }\n\n    return value\n  }\n\n  const result = JSON.stringify(obj, replacer, 4)\n\n  return result\n}\n","module.exports = require(\"lodash/isFunction\");","module.exports = require(\"lodash/isPlainObject\");","module.exports = require(\"react\");","export * from './cdn-esm-regex'\nexport * from './hexadecimal-regex'\nexport * from './singly-spaced-title-case-with-numbers-regex'\nexport * from './uuid-regex'\n","// accepts a cdn url for es modules from popular cdn providers\nexport const cdnEsmRegex =\n  /https?:\\/\\/(?:cdn\\.)?(?:[\\w-]+\\.)+[\\w-]+\\/(?:[\\w@%.-]+\\/)*?[^/@]+@[^/]+\\/\\+\\w+/\n","export const hexadecimalRegex = /^0[xX][0-9a-fA-F]+$/\n","export const singlySpacedTitleCaseWithNumbersRegex =\n  /^[A-Z][a-z0-9]*(?: ([A-Z][a-z0-9]*|[0-9]+))*$/g\n","export const uuidRegex =\n  /[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}/g\n","export * from './name'\nexport * from './strings'\n","import { uuidRegex } from '../regex'\n\n/**\n * Names should only be unique under the parent; however, neo4j @unique\n * constraint makes them unique globally. hence we need to append the\n * parent id to allow same name under different parents.\n */\nexport const createUniqueName = (name: string, prefix: string) =>\n  `${prefix}-${name}`\n\n/**\n * To reverse what createUniqueName did.\n */\nexport const extractName = (uniqueName: string) =>\n  uniqueName.replace(uuidRegex, '').substring(1)\n","/**\n * Implementation of camelCaseToTitleCase & PascalCaseToTitleCase are the same, so we give them a common name\n * @param input\n */\nexport const compoundCaseToTitleCase = (input: string) =>\n  input\n    // insert a space before all caps\n    .replace(/\\B([A-Z])\\B/g, (str) => ` ${str}`)\n    // uppercase the first character\n    .replace(/^./, (str) => str.toUpperCase())\n    .trim()\n\n// export const toPascalCase = (value: string) =>\n//   v.chain(value).camelCase().capitalize().value()\n\n// export const toCamelCase = (value: string) => v.chain(value).camelCase().value()\n\n// export const toTitleCase = (value: string) => v.titleCase(value)\n\n// export const toKebabCase = (value: string) => v.chain(value).kebabCase().value()\n\nexport const stripQuotes = (value: string) => value.replace(/['\"]/g, '')\n\nexport const capitalizeFirstLetter = (value: string) =>\n  value.charAt(0).toUpperCase() + value.slice(1)\n\n// export const startsWithCapital = (word: string) =>\n//   word.charAt(0) === word.charAt(0).toUpperCase()\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// We need to use this version of Omit as it's distributive (Will preserve unions)\nexport type DistributiveMerge<T, U> = T extends any ? T & U : never\n","module.exports = require(\"@opentelemetry/api/build/src/trace/context-utils\");","export * from './data'\nexport * from './mapper'\nexport * from './parser'\nexport * from './services'\nexport * from './use-case'\n","export * from './system-types.data'\n","import type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { IPrimitiveTypeKind, ITypeKind } from '@codelab/shared/abstract/core'\nimport { v4 } from 'uuid'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n// type WithRequiredKey<T, K extends keyof T> = T extends object\n//   ? Overwrite<T, Required<Pick<T, K>>>\n//   : never\n\n// type SystemTypes = Record<\n//   | Exclude<\n//       ITypeKind,\n//       | ITypeKind.AppType\n//       | ITypeKind.ArrayType\n//       | ITypeKind.CodeMirrorType\n//       | ITypeKind.ElementType\n//       | ITypeKind.EnumType\n//       | ITypeKind.InterfaceType\n//       | ITypeKind.LambdaType\n//       | ITypeKind.PageType\n//       | ITypeKind.PrimitiveType\n//       | ITypeKind.UnionType\n//     >\n//   | IPrimitiveTypeKind,\n//   WithRequiredKey<ITypeDTO, '__typename'>\n// >\n\n/**\n * Difficult to type this function, we just let it infer\n */\nexport const systemTypesData = (owner: IAuth0Owner) => ({\n  /**\n   * PrimitiveTypes\n   */\n  [IPrimitiveTypeKind.String]: {\n    __typename: `${ITypeKind.PrimitiveType}`,\n    id: v4(),\n    kind: ITypeKind.PrimitiveType,\n    name: IPrimitiveTypeKind.String,\n    owner,\n    primitiveKind: IPrimitiveTypeKind.String,\n  } as const,\n  [IPrimitiveTypeKind.Boolean]: {\n    __typename: `${ITypeKind.PrimitiveType}`,\n    id: v4(),\n    kind: ITypeKind.PrimitiveType,\n    name: IPrimitiveTypeKind.Boolean,\n    owner,\n    primitiveKind: IPrimitiveTypeKind.Boolean,\n  } as const,\n  [IPrimitiveTypeKind.Number]: {\n    __typename: `${ITypeKind.PrimitiveType}`,\n    id: v4(),\n    kind: ITypeKind.PrimitiveType,\n    name: IPrimitiveTypeKind.Number,\n    owner,\n    primitiveKind: IPrimitiveTypeKind.Number,\n  } as const,\n  [IPrimitiveTypeKind.Integer]: {\n    __typename: `${ITypeKind.PrimitiveType}`,\n    id: v4(),\n    kind: ITypeKind.PrimitiveType,\n    name: IPrimitiveTypeKind.Integer,\n    owner,\n    primitiveKind: IPrimitiveTypeKind.Integer,\n  } as const,\n  /**\n   * Other types\n   */\n  [ITypeKind.ReactNodeType]: {\n    __typename: `${ITypeKind.ReactNodeType}`,\n    id: v4(),\n    kind: ITypeKind.ReactNodeType,\n    name: ITypeKind.ReactNodeType,\n    owner,\n  } as const,\n  [ITypeKind.RenderPropType]: {\n    __typename: `${ITypeKind.RenderPropType}`,\n    id: v4(),\n    kind: ITypeKind.RenderPropType,\n    name: ITypeKind.RenderPropType,\n    owner,\n  } as const,\n  [ITypeKind.ActionType]: {\n    __typename: `${ITypeKind.ActionType}`,\n    id: v4(),\n    kind: ITypeKind.ActionType,\n    name: ITypeKind.ActionType,\n    owner,\n  } as const,\n})\n","export * from './action-kind.enum'\nexport * from './app.dto.interface'\nexport * from './atom.dto.interface'\nexport * from './atom.interface'\nexport * from './atom-type.enum'\nexport * from './code-mirror-language.enum'\nexport * from './element.dto.interface'\nexport * from './element-type.enum'\nexport * from './errors/domain'\nexport * from './field/field.dto.interface'\nexport * from './jwt.interface'\nexport * from './page.dto.interface'\nexport * from './page-kind.enum'\nexport * from './primitive-type.enum'\nexport * from './prop.dto.interface'\nexport * from './render-type'\nexport * from './resource-type.enum'\nexport * from './role.enum'\nexport * from './seed'\nexport * from './services'\nexport * from './store.dto.interface'\nexport * from './tag.dto.interface'\nexport * from './type'\nexport * from './type-kind.enum'\nexport * from './user.interface'\n","import { ActionKind } from '@codelab/shared/abstract/codegen'\n\nexport { ActionKind as IActionKind }\n\ninterface AssertIsActionKind {\n  <T extends ActionKind>(actual: ActionKind, expected: T): asserts actual is T\n}\n\nexport const assertIsActionKind: AssertIsActionKind = (actual, expected) => {\n  if (actual !== expected) {\n    throw new Error('ActionKind does not match')\n  }\n}\n","export * from './types.api.graphql.gen'\n","export type Maybe<T> = T | null\nexport type InputMaybe<T> = Maybe<T>\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K]\n}\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]?: Maybe<T[SubKey]>\n}\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]: Maybe<T[SubKey]>\n}\nexport type MakeEmpty<\n  T extends { [key: string]: unknown },\n  K extends keyof T,\n> = { [_ in K]?: never }\nexport type Incremental<T> =\n  | T\n  | {\n      [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never\n    }\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string | number; output: string }\n  String: { input: string; output: string }\n  Boolean: { input: boolean; output: boolean }\n  Int: { input: number; output: number }\n  Float: { input: number; output: number }\n}\n\nexport enum ActionKind {\n  /** Action responsible for fetching data from a resource */\n  ApiAction = 'ApiAction',\n  /** Action with custom code */\n  CodeAction = 'CodeAction',\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionType = IBaseType & {\n  __typename?: 'ActionType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<ActionTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ActionTypeAggregateSelection = {\n  __typename?: 'ActionTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ActionTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ActionTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ActionTypeConnectOrCreateWhere = {\n  node: ActionTypeUniqueWhere\n}\n\nexport type ActionTypeConnectWhere = {\n  node: ActionTypeWhere\n}\n\nexport type ActionTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ActionTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ActionTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ActionTypeEdge = {\n  __typename?: 'ActionTypeEdge'\n  cursor: Scalars['String']['output']\n  node: ActionType\n}\n\nexport type ActionTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type ActionTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ActionTypeSort objects to sort ActionTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ActionTypeSort>>\n}\n\nexport type ActionTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ActionTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ActionTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<ActionTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ActionTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ActionTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ActionTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ActionTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ActionTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ActionTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ActionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ActionTypeSort object. */\nexport type ActionTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type ActionTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ActionTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ActionTypeUserOwnerAggregationSelection = {\n  __typename?: 'ActionTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ActionTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ActionTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ActionTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ActionTypeWhere = {\n  AND?: InputMaybe<Array<ActionTypeWhere>>\n  NOT?: InputMaybe<ActionTypeWhere>\n  OR?: InputMaybe<Array<ActionTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ActionTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type ActionTypesConnection = {\n  __typename?: 'ActionTypesConnection'\n  edges: Array<ActionTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AnyAction = ApiAction | CodeAction\n\nexport type AnyActionWhere = {\n  ApiAction?: InputMaybe<ApiActionWhere>\n  CodeAction?: InputMaybe<CodeActionWhere>\n}\n\nexport type AnyType =\n  | ActionType\n  | AppType\n  | ArrayType\n  | CodeMirrorType\n  | ElementType\n  | EnumType\n  | InterfaceType\n  | LambdaType\n  | PageType\n  | PrimitiveType\n  | ReactNodeType\n  | RenderPropType\n  | UnionType\n\nexport type AnyTypeWhere = {\n  ActionType?: InputMaybe<ActionTypeWhere>\n  AppType?: InputMaybe<AppTypeWhere>\n  ArrayType?: InputMaybe<ArrayTypeWhere>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeWhere>\n  ElementType?: InputMaybe<ElementTypeWhere>\n  EnumType?: InputMaybe<EnumTypeWhere>\n  InterfaceType?: InputMaybe<InterfaceTypeWhere>\n  LambdaType?: InputMaybe<LambdaTypeWhere>\n  PageType?: InputMaybe<PageTypeWhere>\n  PrimitiveType?: InputMaybe<PrimitiveTypeWhere>\n  ReactNodeType?: InputMaybe<ReactNodeTypeWhere>\n  RenderPropType?: InputMaybe<RenderPropTypeWhere>\n  UnionType?: InputMaybe<UnionTypeWhere>\n}\n\nexport type ApiAction = BaseAction & {\n  __typename?: 'ApiAction'\n  config: Prop\n  configAggregate?: Maybe<ApiActionPropConfigAggregationSelection>\n  configConnection: ApiActionConfigConnection\n  element?: Maybe<Element>\n  elementAggregate?: Maybe<ApiActionElementElementAggregationSelection>\n  elementConnection: BaseActionElementConnection\n  errorAction?: Maybe<AnyAction>\n  errorActionConnection: ApiActionErrorActionConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  /** Resource to fetch data from */\n  resource: Resource\n  resourceAggregate?: Maybe<ApiActionResourceResourceAggregationSelection>\n  resourceConnection: ApiActionResourceConnection\n  store: Store\n  storeAggregate?: Maybe<ApiActionStoreStoreAggregationSelection>\n  storeConnection: BaseActionStoreConnection\n  /** Response handlers */\n  successAction?: Maybe<AnyAction>\n  successActionConnection: ApiActionSuccessActionConnection\n  type: ActionKind\n}\n\nexport type ApiActionConfigArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ApiActionConfigAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ApiActionConfigConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ApiActionConfigConnectionSort>>\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ApiActionElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ApiActionElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type ApiActionErrorActionArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n}\n\nexport type ApiActionErrorActionConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  where?: InputMaybe<ApiActionErrorActionConnectionWhere>\n}\n\nexport type ApiActionResourceArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ResourceOptions>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type ApiActionResourceAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type ApiActionResourceConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ApiActionResourceConnectionSort>>\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n}\n\nexport type ApiActionStoreArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type ApiActionStoreAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type ApiActionStoreConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type ApiActionSuccessActionArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n}\n\nexport type ApiActionSuccessActionConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  where?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n}\n\nexport type ApiActionAggregateSelection = {\n  __typename?: 'ApiActionAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionConfigAggregateInput = {\n  AND?: InputMaybe<Array<ApiActionConfigAggregateInput>>\n  NOT?: InputMaybe<ApiActionConfigAggregateInput>\n  OR?: InputMaybe<Array<ApiActionConfigAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ApiActionConfigNodeAggregationWhereInput>\n}\n\nexport type ApiActionConfigConnectFieldInput = {\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PropConnectWhere>\n}\n\nexport type ApiActionConfigConnectOrCreateFieldInput = {\n  onCreate: ApiActionConfigConnectOrCreateFieldInputOnCreate\n  where: PropConnectOrCreateWhere\n}\n\nexport type ApiActionConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ApiActionConfigConnection = {\n  __typename?: 'ApiActionConfigConnection'\n  edges: Array<ApiActionConfigRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ApiActionConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ApiActionConfigConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionConfigConnectionWhere>>\n  NOT?: InputMaybe<ApiActionConfigConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionConfigConnectionWhere>>\n  node?: InputMaybe<PropWhere>\n}\n\nexport type ApiActionConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ApiActionConfigDeleteFieldInput = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionConfigDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionConfigFieldInput = {\n  connect?: InputMaybe<ApiActionConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionConfigCreateFieldInput>\n}\n\nexport type ApiActionConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionConfigNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ApiActionConfigNodeAggregationWhereInput>>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ApiActionConfigRelationship = {\n  __typename?: 'ApiActionConfigRelationship'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type ApiActionConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ApiActionConfigUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionConfigCreateFieldInput>\n  delete?: InputMaybe<ApiActionConfigDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionConfigDisconnectFieldInput>\n  update?: InputMaybe<ApiActionConfigUpdateConnectionInput>\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionConnectInput = {\n  config?: InputMaybe<ApiActionConfigConnectFieldInput>\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionConnectInput>\n  resource?: InputMaybe<ApiActionResourceConnectFieldInput>\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionConnectInput>\n}\n\nexport type ApiActionConnectOrCreateInput = {\n  config?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n  element?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionConnectOrCreateInput>\n  resource?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n  store?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionConnectOrCreateInput>\n}\n\nexport type ApiActionConnectOrCreateWhere = {\n  node: ApiActionUniqueWhere\n}\n\nexport type ApiActionConnectWhere = {\n  node: ApiActionWhere\n}\n\nexport type ApiActionCreateInput = {\n  config?: InputMaybe<ApiActionConfigFieldInput>\n  element?: InputMaybe<BaseActionElementFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionCreateInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  resource?: InputMaybe<ApiActionResourceFieldInput>\n  store?: InputMaybe<BaseActionStoreFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionCreateInput>\n  type?: ActionKind\n}\n\nexport type ApiActionDeleteInput = {\n  config?: InputMaybe<ApiActionConfigDeleteFieldInput>\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionDeleteInput>\n  resource?: InputMaybe<ApiActionResourceDeleteFieldInput>\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionDeleteInput>\n}\n\nexport type ApiActionDisconnectInput = {\n  config?: InputMaybe<ApiActionConfigDisconnectFieldInput>\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionDisconnectInput>\n  resource?: InputMaybe<ApiActionResourceDisconnectFieldInput>\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionDisconnectInput>\n}\n\nexport type ApiActionEdge = {\n  __typename?: 'ApiActionEdge'\n  cursor: Scalars['String']['output']\n  node: ApiAction\n}\n\nexport type ApiActionElementAggregateInput = {\n  AND?: InputMaybe<Array<ApiActionElementAggregateInput>>\n  NOT?: InputMaybe<ApiActionElementAggregateInput>\n  OR?: InputMaybe<Array<ApiActionElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ApiActionElementNodeAggregationWhereInput>\n}\n\nexport type ApiActionElementElementAggregationSelection = {\n  __typename?: 'ApiActionElementElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ApiActionElementElementNodeAggregateSelection>\n}\n\nexport type ApiActionElementElementNodeAggregateSelection = {\n  __typename?: 'ApiActionElementElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ApiActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ApiActionElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ApiActionErrorActionApiActionConnectFieldInput = {\n  connect?: InputMaybe<ApiActionConnectInput>\n  where?: InputMaybe<ApiActionConnectWhere>\n}\n\nexport type ApiActionErrorActionApiActionConnectOrCreateFieldInput = {\n  onCreate: ApiActionErrorActionApiActionConnectOrCreateFieldInputOnCreate\n  where: ApiActionConnectOrCreateWhere\n}\n\nexport type ApiActionErrorActionApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type ApiActionErrorActionApiActionConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionErrorActionApiActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionErrorActionApiActionConnectionWhere>>\n  node?: InputMaybe<ApiActionWhere>\n}\n\nexport type ApiActionErrorActionApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type ApiActionErrorActionApiActionDeleteFieldInput = {\n  delete?: InputMaybe<ApiActionDeleteInput>\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionApiActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionApiActionFieldInput = {\n  connect?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n}\n\nexport type ApiActionErrorActionApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type ApiActionErrorActionApiActionUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionErrorActionApiActionDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionErrorActionApiActionDisconnectFieldInput>\n  update?: InputMaybe<ApiActionErrorActionApiActionUpdateConnectionInput>\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionCodeActionConnectFieldInput = {\n  connect?: InputMaybe<CodeActionConnectInput>\n  where?: InputMaybe<CodeActionConnectWhere>\n}\n\nexport type ApiActionErrorActionCodeActionConnectOrCreateFieldInput = {\n  onCreate: ApiActionErrorActionCodeActionConnectOrCreateFieldInputOnCreate\n  where: CodeActionConnectOrCreateWhere\n}\n\nexport type ApiActionErrorActionCodeActionConnectOrCreateFieldInputOnCreate = {\n  node: CodeActionOnCreateInput\n}\n\nexport type ApiActionErrorActionCodeActionConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionErrorActionCodeActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionErrorActionCodeActionConnectionWhere>>\n  node?: InputMaybe<CodeActionWhere>\n}\n\nexport type ApiActionErrorActionCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type ApiActionErrorActionCodeActionDeleteFieldInput = {\n  delete?: InputMaybe<CodeActionDeleteInput>\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionCodeActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionCodeActionFieldInput = {\n  connect?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type ApiActionErrorActionCodeActionUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionErrorActionCodeActionDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionErrorActionCodeActionDisconnectFieldInput>\n  update?: InputMaybe<ApiActionErrorActionCodeActionUpdateConnectionInput>\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionConnectInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n}\n\nexport type ApiActionErrorActionConnectOrCreateInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionConnection = {\n  __typename?: 'ApiActionErrorActionConnection'\n  edges: Array<ApiActionErrorActionRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ApiActionErrorActionConnectionWhere = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionCreateFieldInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCreateInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionFieldInput>\n}\n\nexport type ApiActionErrorActionDeleteInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionDeleteFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionDeleteFieldInput>\n}\n\nexport type ApiActionErrorActionDisconnectInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionDisconnectFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionDisconnectFieldInput>\n}\n\nexport type ApiActionErrorActionRelationship = {\n  __typename?: 'ApiActionErrorActionRelationship'\n  cursor: Scalars['String']['output']\n  node: AnyAction\n}\n\nexport type ApiActionErrorActionUpdateInput = {\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionUpdateFieldInput>\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionUpdateFieldInput>\n}\n\nexport type ApiActionOnCreateInput = {\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  type?: ActionKind\n}\n\nexport type ApiActionOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ApiActionSort objects to sort ApiActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ApiActionSort>>\n}\n\nexport type ApiActionPropConfigAggregationSelection = {\n  __typename?: 'ApiActionPropConfigAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ApiActionPropConfigNodeAggregateSelection>\n}\n\nexport type ApiActionPropConfigNodeAggregateSelection = {\n  __typename?: 'ApiActionPropConfigNodeAggregateSelection'\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type ApiActionRelationInput = {\n  config?: InputMaybe<ApiActionConfigCreateFieldInput>\n  element?: InputMaybe<BaseActionElementCreateFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionCreateFieldInput>\n  resource?: InputMaybe<ApiActionResourceCreateFieldInput>\n  store?: InputMaybe<BaseActionStoreCreateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionCreateFieldInput>\n}\n\nexport type ApiActionResourceAggregateInput = {\n  AND?: InputMaybe<Array<ApiActionResourceAggregateInput>>\n  NOT?: InputMaybe<ApiActionResourceAggregateInput>\n  OR?: InputMaybe<Array<ApiActionResourceAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ApiActionResourceNodeAggregationWhereInput>\n}\n\nexport type ApiActionResourceConnectFieldInput = {\n  connect?: InputMaybe<ResourceConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ResourceConnectWhere>\n}\n\nexport type ApiActionResourceConnectOrCreateFieldInput = {\n  onCreate: ApiActionResourceConnectOrCreateFieldInputOnCreate\n  where: ResourceConnectOrCreateWhere\n}\n\nexport type ApiActionResourceConnectOrCreateFieldInputOnCreate = {\n  node: ResourceOnCreateInput\n}\n\nexport type ApiActionResourceConnection = {\n  __typename?: 'ApiActionResourceConnection'\n  edges: Array<ApiActionResourceRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ApiActionResourceConnectionSort = {\n  node?: InputMaybe<ResourceSort>\n}\n\nexport type ApiActionResourceConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionResourceConnectionWhere>>\n  NOT?: InputMaybe<ApiActionResourceConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionResourceConnectionWhere>>\n  node?: InputMaybe<ResourceWhere>\n}\n\nexport type ApiActionResourceCreateFieldInput = {\n  node: ResourceCreateInput\n}\n\nexport type ApiActionResourceDeleteFieldInput = {\n  delete?: InputMaybe<ResourceDeleteInput>\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n}\n\nexport type ApiActionResourceDisconnectFieldInput = {\n  disconnect?: InputMaybe<ResourceDisconnectInput>\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n}\n\nexport type ApiActionResourceFieldInput = {\n  connect?: InputMaybe<ApiActionResourceConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionResourceCreateFieldInput>\n}\n\nexport type ApiActionResourceNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionResourceNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionResourceNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ApiActionResourceNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ApiActionResourceRelationship = {\n  __typename?: 'ApiActionResourceRelationship'\n  cursor: Scalars['String']['output']\n  node: Resource\n}\n\nexport type ApiActionResourceResourceAggregationSelection = {\n  __typename?: 'ApiActionResourceResourceAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ApiActionResourceResourceNodeAggregateSelection>\n}\n\nexport type ApiActionResourceResourceNodeAggregateSelection = {\n  __typename?: 'ApiActionResourceResourceNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionResourceUpdateConnectionInput = {\n  node?: InputMaybe<ResourceUpdateInput>\n}\n\nexport type ApiActionResourceUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionResourceConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionResourceCreateFieldInput>\n  delete?: InputMaybe<ApiActionResourceDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionResourceDisconnectFieldInput>\n  update?: InputMaybe<ApiActionResourceUpdateConnectionInput>\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n}\n\n/** Fields to sort ApiActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one ApiActionSort object. */\nexport type ApiActionSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type ApiActionStoreAggregateInput = {\n  AND?: InputMaybe<Array<ApiActionStoreAggregateInput>>\n  NOT?: InputMaybe<ApiActionStoreAggregateInput>\n  OR?: InputMaybe<Array<ApiActionStoreAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ApiActionStoreNodeAggregationWhereInput>\n}\n\nexport type ApiActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionStoreNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ApiActionStoreNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ApiActionStoreStoreAggregationSelection = {\n  __typename?: 'ApiActionStoreStoreAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ApiActionStoreStoreNodeAggregateSelection>\n}\n\nexport type ApiActionStoreStoreNodeAggregateSelection = {\n  __typename?: 'ApiActionStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionSuccessActionApiActionConnectFieldInput = {\n  connect?: InputMaybe<ApiActionConnectInput>\n  where?: InputMaybe<ApiActionConnectWhere>\n}\n\nexport type ApiActionSuccessActionApiActionConnectOrCreateFieldInput = {\n  onCreate: ApiActionSuccessActionApiActionConnectOrCreateFieldInputOnCreate\n  where: ApiActionConnectOrCreateWhere\n}\n\nexport type ApiActionSuccessActionApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type ApiActionSuccessActionApiActionConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionSuccessActionApiActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionSuccessActionApiActionConnectionWhere>>\n  node?: InputMaybe<ApiActionWhere>\n}\n\nexport type ApiActionSuccessActionApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type ApiActionSuccessActionApiActionDeleteFieldInput = {\n  delete?: InputMaybe<ApiActionDeleteInput>\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionApiActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionApiActionFieldInput = {\n  connect?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type ApiActionSuccessActionApiActionUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionSuccessActionApiActionDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionSuccessActionApiActionDisconnectFieldInput>\n  update?: InputMaybe<ApiActionSuccessActionApiActionUpdateConnectionInput>\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionConnectFieldInput = {\n  connect?: InputMaybe<CodeActionConnectInput>\n  where?: InputMaybe<CodeActionConnectWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionConnectOrCreateFieldInput = {\n  onCreate: ApiActionSuccessActionCodeActionConnectOrCreateFieldInputOnCreate\n  where: CodeActionConnectOrCreateWhere\n}\n\nexport type ApiActionSuccessActionCodeActionConnectOrCreateFieldInputOnCreate =\n  {\n    node: CodeActionOnCreateInput\n  }\n\nexport type ApiActionSuccessActionCodeActionConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionSuccessActionCodeActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  OR?: InputMaybe<Array<ApiActionSuccessActionCodeActionConnectionWhere>>\n  node?: InputMaybe<CodeActionWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type ApiActionSuccessActionCodeActionDeleteFieldInput = {\n  delete?: InputMaybe<CodeActionDeleteInput>\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionFieldInput = {\n  connect?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type ApiActionSuccessActionCodeActionUpdateFieldInput = {\n  connect?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionSuccessActionCodeActionDeleteFieldInput>\n  disconnect?: InputMaybe<ApiActionSuccessActionCodeActionDisconnectFieldInput>\n  update?: InputMaybe<ApiActionSuccessActionCodeActionUpdateConnectionInput>\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionConnectInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n}\n\nexport type ApiActionSuccessActionConnectOrCreateInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionConnection = {\n  __typename?: 'ApiActionSuccessActionConnection'\n  edges: Array<ApiActionSuccessActionRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ApiActionSuccessActionConnectionWhere = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionCreateFieldInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCreateInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionFieldInput>\n}\n\nexport type ApiActionSuccessActionDeleteInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionDeleteFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionDeleteFieldInput>\n}\n\nexport type ApiActionSuccessActionDisconnectInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionDisconnectFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionDisconnectFieldInput>\n}\n\nexport type ApiActionSuccessActionRelationship = {\n  __typename?: 'ApiActionSuccessActionRelationship'\n  cursor: Scalars['String']['output']\n  node: AnyAction\n}\n\nexport type ApiActionSuccessActionUpdateInput = {\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionUpdateFieldInput>\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionUpdateFieldInput>\n}\n\nexport type ApiActionUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ApiActionUpdateInput = {\n  config?: InputMaybe<ApiActionConfigUpdateFieldInput>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionUpdateInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  resource?: InputMaybe<ApiActionResourceUpdateFieldInput>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionUpdateInput>\n}\n\nexport type ApiActionWhere = {\n  AND?: InputMaybe<Array<ApiActionWhere>>\n  NOT?: InputMaybe<ApiActionWhere>\n  OR?: InputMaybe<Array<ApiActionWhere>>\n  config?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<ApiActionConfigAggregateInput>\n  configConnection?: InputMaybe<ApiActionConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<ApiActionConfigConnectionWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  element?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<ApiActionElementAggregateInput>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  errorActionConnection?: InputMaybe<ApiActionErrorActionConnectionWhere>\n  errorActionConnection_NOT?: InputMaybe<ApiActionErrorActionConnectionWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  resource?: InputMaybe<ResourceWhere>\n  resourceAggregate?: InputMaybe<ApiActionResourceAggregateInput>\n  resourceConnection?: InputMaybe<ApiActionResourceConnectionWhere>\n  resourceConnection_NOT?: InputMaybe<ApiActionResourceConnectionWhere>\n  resource_NOT?: InputMaybe<ResourceWhere>\n  store?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<ApiActionStoreAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  successActionConnection?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n  successActionConnection_NOT?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n  type?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n}\n\nexport type ApiActionsConnection = {\n  __typename?: 'ApiActionsConnection'\n  edges: Array<ApiActionEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type App = WithOwner & {\n  __typename?: 'App'\n  _compoundName: Scalars['String']['output']\n  domains: Array<Domain>\n  domainsAggregate?: Maybe<AppDomainDomainsAggregationSelection>\n  domainsConnection: AppDomainsConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<AppUserOwnerAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  pages: Array<Page>\n  pagesAggregate?: Maybe<AppPagePagesAggregationSelection>\n  pagesConnection: AppPagesConnection\n  slug: Scalars['String']['output']\n}\n\nexport type AppDomainsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<DomainOptions>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type AppDomainsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type AppDomainsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AppDomainsConnectionSort>>\n  where?: InputMaybe<AppDomainsConnectionWhere>\n}\n\nexport type AppOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type AppOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type AppOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type AppPagesArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type AppPagesAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type AppPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AppPagesConnectionSort>>\n  where?: InputMaybe<AppPagesConnectionWhere>\n}\n\nexport type AppAggregateSelection = {\n  __typename?: 'AppAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type AppConnectInput = {\n  domains?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  pages?: InputMaybe<Array<AppPagesConnectFieldInput>>\n}\n\nexport type AppConnectOrCreateInput = {\n  domains?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  pages?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n}\n\nexport type AppConnectOrCreateWhere = {\n  node: AppUniqueWhere\n}\n\nexport type AppConnectWhere = {\n  node: AppWhere\n}\n\nexport type AppCreateInput = {\n  _compoundName: Scalars['String']['input']\n  domains?: InputMaybe<AppDomainsFieldInput>\n  id: Scalars['ID']['input']\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  pages?: InputMaybe<AppPagesFieldInput>\n}\n\nexport type AppDeleteInput = {\n  domains?: InputMaybe<Array<AppDomainsDeleteFieldInput>>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  pages?: InputMaybe<Array<AppPagesDeleteFieldInput>>\n}\n\nexport type AppDisconnectInput = {\n  domains?: InputMaybe<Array<AppDomainsDisconnectFieldInput>>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  pages?: InputMaybe<Array<AppPagesDisconnectFieldInput>>\n}\n\nexport type AppDomainDomainsAggregationSelection = {\n  __typename?: 'AppDomainDomainsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AppDomainDomainsNodeAggregateSelection>\n}\n\nexport type AppDomainDomainsNodeAggregateSelection = {\n  __typename?: 'AppDomainDomainsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AppDomainsAggregateInput = {\n  AND?: InputMaybe<Array<AppDomainsAggregateInput>>\n  NOT?: InputMaybe<AppDomainsAggregateInput>\n  OR?: InputMaybe<Array<AppDomainsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AppDomainsNodeAggregationWhereInput>\n}\n\nexport type AppDomainsConnectFieldInput = {\n  connect?: InputMaybe<Array<DomainConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<DomainConnectWhere>\n}\n\nexport type AppDomainsConnectOrCreateFieldInput = {\n  onCreate: AppDomainsConnectOrCreateFieldInputOnCreate\n  where: DomainConnectOrCreateWhere\n}\n\nexport type AppDomainsConnectOrCreateFieldInputOnCreate = {\n  node: DomainOnCreateInput\n}\n\nexport type AppDomainsConnection = {\n  __typename?: 'AppDomainsConnection'\n  edges: Array<AppDomainsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AppDomainsConnectionSort = {\n  node?: InputMaybe<DomainSort>\n}\n\nexport type AppDomainsConnectionWhere = {\n  AND?: InputMaybe<Array<AppDomainsConnectionWhere>>\n  NOT?: InputMaybe<AppDomainsConnectionWhere>\n  OR?: InputMaybe<Array<AppDomainsConnectionWhere>>\n  node?: InputMaybe<DomainWhere>\n}\n\nexport type AppDomainsCreateFieldInput = {\n  node: DomainCreateInput\n}\n\nexport type AppDomainsDeleteFieldInput = {\n  delete?: InputMaybe<DomainDeleteInput>\n  where?: InputMaybe<AppDomainsConnectionWhere>\n}\n\nexport type AppDomainsDisconnectFieldInput = {\n  disconnect?: InputMaybe<DomainDisconnectInput>\n  where?: InputMaybe<AppDomainsConnectionWhere>\n}\n\nexport type AppDomainsFieldInput = {\n  connect?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n}\n\nexport type AppDomainsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppDomainsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppDomainsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AppDomainsNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AppDomainsRelationship = {\n  __typename?: 'AppDomainsRelationship'\n  cursor: Scalars['String']['output']\n  node: Domain\n}\n\nexport type AppDomainsUpdateConnectionInput = {\n  node?: InputMaybe<DomainUpdateInput>\n}\n\nexport type AppDomainsUpdateFieldInput = {\n  connect?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n  delete?: InputMaybe<Array<AppDomainsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<AppDomainsDisconnectFieldInput>>\n  update?: InputMaybe<AppDomainsUpdateConnectionInput>\n  where?: InputMaybe<AppDomainsConnectionWhere>\n}\n\nexport type AppEdge = {\n  __typename?: 'AppEdge'\n  cursor: Scalars['String']['output']\n  node: App\n}\n\nexport type AppOnCreateInput = {\n  _compoundName: Scalars['String']['input']\n  id: Scalars['ID']['input']\n}\n\nexport type AppOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more AppSort objects to sort Apps by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AppSort>>\n}\n\nexport type AppOwnerAggregateInput = {\n  AND?: InputMaybe<Array<AppOwnerAggregateInput>>\n  NOT?: InputMaybe<AppOwnerAggregateInput>\n  OR?: InputMaybe<Array<AppOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AppOwnerNodeAggregationWhereInput>\n}\n\nexport type AppOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AppOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AppPagePagesAggregationSelection = {\n  __typename?: 'AppPagePagesAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AppPagePagesNodeAggregateSelection>\n}\n\nexport type AppPagePagesNodeAggregateSelection = {\n  __typename?: 'AppPagePagesNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type AppPagesAggregateInput = {\n  AND?: InputMaybe<Array<AppPagesAggregateInput>>\n  NOT?: InputMaybe<AppPagesAggregateInput>\n  OR?: InputMaybe<Array<AppPagesAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AppPagesNodeAggregationWhereInput>\n}\n\nexport type AppPagesConnectFieldInput = {\n  connect?: InputMaybe<Array<PageConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PageConnectWhere>\n}\n\nexport type AppPagesConnectOrCreateFieldInput = {\n  onCreate: AppPagesConnectOrCreateFieldInputOnCreate\n  where: PageConnectOrCreateWhere\n}\n\nexport type AppPagesConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type AppPagesConnection = {\n  __typename?: 'AppPagesConnection'\n  edges: Array<AppPagesRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AppPagesConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type AppPagesConnectionWhere = {\n  AND?: InputMaybe<Array<AppPagesConnectionWhere>>\n  NOT?: InputMaybe<AppPagesConnectionWhere>\n  OR?: InputMaybe<Array<AppPagesConnectionWhere>>\n  node?: InputMaybe<PageWhere>\n}\n\nexport type AppPagesCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type AppPagesDeleteFieldInput = {\n  delete?: InputMaybe<PageDeleteInput>\n  where?: InputMaybe<AppPagesConnectionWhere>\n}\n\nexport type AppPagesDisconnectFieldInput = {\n  disconnect?: InputMaybe<PageDisconnectInput>\n  where?: InputMaybe<AppPagesConnectionWhere>\n}\n\nexport type AppPagesFieldInput = {\n  connect?: InputMaybe<Array<AppPagesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AppPagesCreateFieldInput>>\n}\n\nexport type AppPagesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppPagesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppPagesNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AppPagesNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AppPagesRelationship = {\n  __typename?: 'AppPagesRelationship'\n  cursor: Scalars['String']['output']\n  node: Page\n}\n\nexport type AppPagesUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type AppPagesUpdateFieldInput = {\n  connect?: InputMaybe<Array<AppPagesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AppPagesCreateFieldInput>>\n  delete?: InputMaybe<Array<AppPagesDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<AppPagesDisconnectFieldInput>>\n  update?: InputMaybe<AppPagesUpdateConnectionInput>\n  where?: InputMaybe<AppPagesConnectionWhere>\n}\n\nexport type AppRelationInput = {\n  domains?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  pages?: InputMaybe<Array<AppPagesCreateFieldInput>>\n}\n\n/** Fields to sort Apps by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppSort object. */\nexport type AppSort = {\n  _compoundName?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppType = IBaseType & {\n  __typename?: 'AppType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<AppTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type AppTypeAggregateSelection = {\n  __typename?: 'AppTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AppTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type AppTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type AppTypeConnectOrCreateWhere = {\n  node: AppTypeUniqueWhere\n}\n\nexport type AppTypeConnectWhere = {\n  node: AppTypeWhere\n}\n\nexport type AppTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type AppTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type AppTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type AppTypeEdge = {\n  __typename?: 'AppTypeEdge'\n  cursor: Scalars['String']['output']\n  node: AppType\n}\n\nexport type AppTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type AppTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more AppTypeSort objects to sort AppTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AppTypeSort>>\n}\n\nexport type AppTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<AppTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<AppTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<AppTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AppTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type AppTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AppTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AppTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort AppTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppTypeSort object. */\nexport type AppTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type AppTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type AppTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type AppTypeUserOwnerAggregationSelection = {\n  __typename?: 'AppTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AppTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type AppTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'AppTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type AppTypeWhere = {\n  AND?: InputMaybe<Array<AppTypeWhere>>\n  NOT?: InputMaybe<AppTypeWhere>\n  OR?: InputMaybe<Array<AppTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AppTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type AppTypesConnection = {\n  __typename?: 'AppTypesConnection'\n  edges: Array<AppTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AppUniqueWhere = {\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type AppUpdateInput = {\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  domains?: InputMaybe<Array<AppDomainsUpdateFieldInput>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  pages?: InputMaybe<Array<AppPagesUpdateFieldInput>>\n}\n\nexport type AppUserOwnerAggregationSelection = {\n  __typename?: 'AppUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AppUserOwnerNodeAggregateSelection>\n}\n\nexport type AppUserOwnerNodeAggregateSelection = {\n  __typename?: 'AppUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type AppWhere = {\n  AND?: InputMaybe<Array<AppWhere>>\n  NOT?: InputMaybe<AppWhere>\n  OR?: InputMaybe<Array<AppWhere>>\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  _compoundName_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  _compoundName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  _compoundName_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  _compoundName_MATCHES?: InputMaybe<Scalars['String']['input']>\n  _compoundName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  domainsAggregate?: InputMaybe<AppDomainsAggregateInput>\n  /** Return Apps where all of the related AppDomainsConnections match this filter */\n  domainsConnection_ALL?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where none of the related AppDomainsConnections match this filter */\n  domainsConnection_NONE?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where one of the related AppDomainsConnections match this filter */\n  domainsConnection_SINGLE?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where some of the related AppDomainsConnections match this filter */\n  domainsConnection_SOME?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where all of the related Domains match this filter */\n  domains_ALL?: InputMaybe<DomainWhere>\n  /** Return Apps where none of the related Domains match this filter */\n  domains_NONE?: InputMaybe<DomainWhere>\n  /** Return Apps where one of the related Domains match this filter */\n  domains_SINGLE?: InputMaybe<DomainWhere>\n  /** Return Apps where some of the related Domains match this filter */\n  domains_SOME?: InputMaybe<DomainWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AppOwnerAggregateInput>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  pagesAggregate?: InputMaybe<AppPagesAggregateInput>\n  /** Return Apps where all of the related AppPagesConnections match this filter */\n  pagesConnection_ALL?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where none of the related AppPagesConnections match this filter */\n  pagesConnection_NONE?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where one of the related AppPagesConnections match this filter */\n  pagesConnection_SINGLE?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where some of the related AppPagesConnections match this filter */\n  pagesConnection_SOME?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where all of the related Pages match this filter */\n  pages_ALL?: InputMaybe<PageWhere>\n  /** Return Apps where none of the related Pages match this filter */\n  pages_NONE?: InputMaybe<PageWhere>\n  /** Return Apps where one of the related Pages match this filter */\n  pages_SINGLE?: InputMaybe<PageWhere>\n  /** Return Apps where some of the related Pages match this filter */\n  pages_SOME?: InputMaybe<PageWhere>\n}\n\nexport type AppsConnection = {\n  __typename?: 'AppsConnection'\n  edges: Array<AppEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayType = IBaseType &\n  WithDescendants & {\n    __typename?: 'ArrayType'\n    descendantTypesIds: Array<Scalars['ID']['output']>\n    fieldRefs: Array<Field>\n    fieldRefsAggregate?: Maybe<ArrayTypeFieldFieldRefsAggregationSelection>\n    fieldRefsConnection: ArrayTypeFieldRefsConnection\n    id: Scalars['ID']['output']\n    itemType: IBaseType\n    itemTypeConnection: ArrayTypeItemTypeConnection\n    kind: TypeKind\n    name: Scalars['String']['output']\n    owner: User\n    ownerAggregate?: Maybe<ArrayTypeUserOwnerAggregationSelection>\n    ownerConnection: IBaseTypeOwnerConnection\n  }\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ArrayTypeFieldRefsConnectionSort>>\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeItemTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<IBaseTypeOptions>\n  where?: InputMaybe<IBaseTypeWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeItemTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ArrayTypeItemTypeConnectionSort>>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ArrayTypeAggregateSelection = {\n  __typename?: 'ArrayTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ArrayTypeConnectInput = {\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ArrayTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ArrayTypeConnectOrCreateWhere = {\n  node: ArrayTypeUniqueWhere\n}\n\nexport type ArrayTypeConnectWhere = {\n  node: ArrayTypeWhere\n}\n\nexport type ArrayTypeCreateInput = {\n  fieldRefs?: InputMaybe<ArrayTypeFieldRefsFieldInput>\n  id: Scalars['ID']['input']\n  itemType?: InputMaybe<ArrayTypeItemTypeFieldInput>\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ArrayTypeDeleteInput = {\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsDeleteFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeDeleteFieldInput>\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ArrayTypeDisconnectInput = {\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsDisconnectFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeDisconnectFieldInput>\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ArrayTypeEdge = {\n  __typename?: 'ArrayTypeEdge'\n  cursor: Scalars['String']['output']\n  node: ArrayType\n}\n\nexport type ArrayTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'ArrayTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ArrayTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type ArrayTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'ArrayTypeFieldFieldRefsNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type ArrayTypeFieldRefsAggregateInput = {\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsAggregateInput>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ArrayTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type ArrayTypeFieldRefsConnectFieldInput = {\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type ArrayTypeFieldRefsConnection = {\n  __typename?: 'ArrayTypeFieldRefsConnection'\n  edges: Array<ArrayTypeFieldRefsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ArrayTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type ArrayTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type ArrayTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type ArrayTypeFieldRefsDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n}\n\nexport type ArrayTypeFieldRefsDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n}\n\nexport type ArrayTypeFieldRefsFieldInput = {\n  connect?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n}\n\nexport type ArrayTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ArrayTypeFieldRefsRelationship = {\n  __typename?: 'ArrayTypeFieldRefsRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type ArrayTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type ArrayTypeFieldRefsUpdateFieldInput = {\n  connect?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<ArrayTypeFieldRefsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<ArrayTypeFieldRefsDisconnectFieldInput>>\n  update?: InputMaybe<ArrayTypeFieldRefsUpdateConnectionInput>\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n}\n\nexport type ArrayTypeItemTypeConnectFieldInput = {\n  connect?: InputMaybe<IBaseTypeConnectInput>\n  where?: InputMaybe<IBaseTypeConnectWhere>\n}\n\nexport type ArrayTypeItemTypeConnection = {\n  __typename?: 'ArrayTypeItemTypeConnection'\n  edges: Array<ArrayTypeItemTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ArrayTypeItemTypeConnectionSort = {\n  node?: InputMaybe<IBaseTypeSort>\n}\n\nexport type ArrayTypeItemTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ArrayTypeItemTypeConnectionWhere>>\n  NOT?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  OR?: InputMaybe<Array<ArrayTypeItemTypeConnectionWhere>>\n  node?: InputMaybe<IBaseTypeWhere>\n}\n\nexport type ArrayTypeItemTypeCreateFieldInput = {\n  node: IBaseTypeCreateInput\n}\n\nexport type ArrayTypeItemTypeDeleteFieldInput = {\n  delete?: InputMaybe<IBaseTypeDeleteInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeItemTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<IBaseTypeDisconnectInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeItemTypeFieldInput = {\n  connect?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n  create?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n}\n\nexport type ArrayTypeItemTypeRelationship = {\n  __typename?: 'ArrayTypeItemTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: IBaseType\n}\n\nexport type ArrayTypeItemTypeUpdateConnectionInput = {\n  node?: InputMaybe<IBaseTypeUpdateInput>\n}\n\nexport type ArrayTypeItemTypeUpdateFieldInput = {\n  connect?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n  create?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n  delete?: InputMaybe<ArrayTypeItemTypeDeleteFieldInput>\n  disconnect?: InputMaybe<ArrayTypeItemTypeDisconnectFieldInput>\n  update?: InputMaybe<ArrayTypeItemTypeUpdateConnectionInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type ArrayTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ArrayTypeSort objects to sort ArrayTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ArrayTypeSort>>\n}\n\nexport type ArrayTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ArrayTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ArrayTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<ArrayTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ArrayTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ArrayTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ArrayTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ArrayTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ArrayTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ArrayTypeRelationInput = {\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ArrayTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ArrayTypeSort object. */\nexport type ArrayTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type ArrayTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ArrayTypeUpdateInput = {\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsUpdateFieldInput>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  itemType?: InputMaybe<ArrayTypeItemTypeUpdateFieldInput>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ArrayTypeUserOwnerAggregationSelection = {\n  __typename?: 'ArrayTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ArrayTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ArrayTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ArrayTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ArrayTypeWhere = {\n  AND?: InputMaybe<Array<ArrayTypeWhere>>\n  NOT?: InputMaybe<ArrayTypeWhere>\n  OR?: InputMaybe<Array<ArrayTypeWhere>>\n  fieldRefsAggregate?: InputMaybe<ArrayTypeFieldRefsAggregateInput>\n  /** Return ArrayTypes where all of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where none of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where one of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where some of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  itemTypeConnection?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  itemTypeConnection_NOT?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ArrayTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type ArrayTypesConnection = {\n  __typename?: 'ArrayTypesConnection'\n  edges: Array<ArrayTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Atom = WithOwner & {\n  __typename?: 'Atom'\n  api: InterfaceType\n  apiAggregate?: Maybe<AtomInterfaceTypeApiAggregationSelection>\n  apiConnection: AtomApiConnection\n  externalCssSource?: Maybe<Scalars['String']['output']>\n  externalJsSource?: Maybe<Scalars['String']['output']>\n  externalSourceType?: Maybe<Scalars['String']['output']>\n  icon?: Maybe<Scalars['String']['output']>\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<AtomUserOwnerAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  requiredParents: Array<Atom>\n  requiredParentsAggregate?: Maybe<AtomAtomRequiredParentsAggregationSelection>\n  requiredParentsConnection: AtomRequiredParentsConnection\n  suggestedChildren: Array<Atom>\n  suggestedChildrenAggregate?: Maybe<AtomAtomSuggestedChildrenAggregationSelection>\n  suggestedChildrenConnection: AtomSuggestedChildrenConnection\n  tags: Array<Tag>\n  tagsAggregate?: Maybe<AtomTagTagsAggregationSelection>\n  tagsConnection: AtomTagsConnection\n  type: AtomType\n}\n\nexport type AtomApiArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type AtomApiAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type AtomApiConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AtomApiConnectionSort>>\n  where?: InputMaybe<AtomApiConnectionWhere>\n}\n\nexport type AtomOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type AtomOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type AtomOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type AtomRequiredParentsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type AtomRequiredParentsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type AtomRequiredParentsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AtomRequiredParentsConnectionSort>>\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n}\n\nexport type AtomSuggestedChildrenArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type AtomSuggestedChildrenAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type AtomSuggestedChildrenConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AtomSuggestedChildrenConnectionSort>>\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n}\n\nexport type AtomTagsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type AtomTagsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type AtomTagsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<AtomTagsConnectionSort>>\n  where?: InputMaybe<AtomTagsConnectionWhere>\n}\n\nexport type AtomAggregateSelection = {\n  __typename?: 'AtomAggregateSelection'\n  count: Scalars['Int']['output']\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomApiAggregateInput = {\n  AND?: InputMaybe<Array<AtomApiAggregateInput>>\n  NOT?: InputMaybe<AtomApiAggregateInput>\n  OR?: InputMaybe<Array<AtomApiAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AtomApiNodeAggregationWhereInput>\n}\n\nexport type AtomApiConnectFieldInput = {\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n}\n\nexport type AtomApiConnectOrCreateFieldInput = {\n  onCreate: AtomApiConnectOrCreateFieldInputOnCreate\n  where: InterfaceTypeConnectOrCreateWhere\n}\n\nexport type AtomApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type AtomApiConnection = {\n  __typename?: 'AtomApiConnection'\n  edges: Array<AtomApiRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AtomApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type AtomApiConnectionWhere = {\n  AND?: InputMaybe<Array<AtomApiConnectionWhere>>\n  NOT?: InputMaybe<AtomApiConnectionWhere>\n  OR?: InputMaybe<Array<AtomApiConnectionWhere>>\n  node?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type AtomApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type AtomApiDeleteFieldInput = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<AtomApiConnectionWhere>\n}\n\nexport type AtomApiDisconnectFieldInput = {\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  where?: InputMaybe<AtomApiConnectionWhere>\n}\n\nexport type AtomApiFieldInput = {\n  connect?: InputMaybe<AtomApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n  create?: InputMaybe<AtomApiCreateFieldInput>\n}\n\nexport type AtomApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomApiNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AtomApiNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AtomApiRelationship = {\n  __typename?: 'AtomApiRelationship'\n  cursor: Scalars['String']['output']\n  node: InterfaceType\n}\n\nexport type AtomApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type AtomApiUpdateFieldInput = {\n  connect?: InputMaybe<AtomApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n  create?: InputMaybe<AtomApiCreateFieldInput>\n  delete?: InputMaybe<AtomApiDeleteFieldInput>\n  disconnect?: InputMaybe<AtomApiDisconnectFieldInput>\n  update?: InputMaybe<AtomApiUpdateConnectionInput>\n  where?: InputMaybe<AtomApiConnectionWhere>\n}\n\nexport type AtomAtomRequiredParentsAggregationSelection = {\n  __typename?: 'AtomAtomRequiredParentsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AtomAtomRequiredParentsNodeAggregateSelection>\n}\n\nexport type AtomAtomRequiredParentsNodeAggregateSelection = {\n  __typename?: 'AtomAtomRequiredParentsNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomAtomSuggestedChildrenAggregationSelection = {\n  __typename?: 'AtomAtomSuggestedChildrenAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AtomAtomSuggestedChildrenNodeAggregateSelection>\n}\n\nexport type AtomAtomSuggestedChildrenNodeAggregateSelection = {\n  __typename?: 'AtomAtomSuggestedChildrenNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomConnectInput = {\n  api?: InputMaybe<AtomApiConnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n  tags?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n}\n\nexport type AtomConnectOrCreateInput = {\n  api?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  requiredParents?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n  suggestedChildren?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n  tags?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n}\n\nexport type AtomConnectOrCreateWhere = {\n  node: AtomUniqueWhere\n}\n\nexport type AtomConnectWhere = {\n  node: AtomWhere\n}\n\nexport type AtomCreateInput = {\n  api?: InputMaybe<AtomApiFieldInput>\n  externalCssSource?: InputMaybe<Scalars['String']['input']>\n  externalJsSource?: InputMaybe<Scalars['String']['input']>\n  externalSourceType?: InputMaybe<Scalars['String']['input']>\n  icon?: InputMaybe<Scalars['String']['input']>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  requiredParents?: InputMaybe<AtomRequiredParentsFieldInput>\n  suggestedChildren?: InputMaybe<AtomSuggestedChildrenFieldInput>\n  tags?: InputMaybe<AtomTagsFieldInput>\n  type: AtomType\n}\n\nexport type AtomDeleteInput = {\n  api?: InputMaybe<AtomApiDeleteFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsDeleteFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenDeleteFieldInput>>\n  tags?: InputMaybe<Array<AtomTagsDeleteFieldInput>>\n}\n\nexport type AtomDisconnectInput = {\n  api?: InputMaybe<AtomApiDisconnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsDisconnectFieldInput>>\n  suggestedChildren?: InputMaybe<\n    Array<AtomSuggestedChildrenDisconnectFieldInput>\n  >\n  tags?: InputMaybe<Array<AtomTagsDisconnectFieldInput>>\n}\n\nexport type AtomEdge = {\n  __typename?: 'AtomEdge'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type AtomInterfaceTypeApiAggregationSelection = {\n  __typename?: 'AtomInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AtomInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type AtomInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'AtomInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomOnCreateInput = {\n  externalCssSource?: InputMaybe<Scalars['String']['input']>\n  externalJsSource?: InputMaybe<Scalars['String']['input']>\n  externalSourceType?: InputMaybe<Scalars['String']['input']>\n  icon?: InputMaybe<Scalars['String']['input']>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  type: AtomType\n}\n\nexport type AtomOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more AtomSort objects to sort Atoms by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AtomSort>>\n}\n\nexport type AtomOwnerAggregateInput = {\n  AND?: InputMaybe<Array<AtomOwnerAggregateInput>>\n  NOT?: InputMaybe<AtomOwnerAggregateInput>\n  OR?: InputMaybe<Array<AtomOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AtomOwnerNodeAggregationWhereInput>\n}\n\nexport type AtomOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AtomOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AtomRelationInput = {\n  api?: InputMaybe<AtomApiCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n  tags?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n}\n\nexport type AtomRequiredParentsAggregateInput = {\n  AND?: InputMaybe<Array<AtomRequiredParentsAggregateInput>>\n  NOT?: InputMaybe<AtomRequiredParentsAggregateInput>\n  OR?: InputMaybe<Array<AtomRequiredParentsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AtomRequiredParentsNodeAggregationWhereInput>\n}\n\nexport type AtomRequiredParentsConnectFieldInput = {\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type AtomRequiredParentsConnectOrCreateFieldInput = {\n  onCreate: AtomRequiredParentsConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type AtomRequiredParentsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type AtomRequiredParentsConnection = {\n  __typename?: 'AtomRequiredParentsConnection'\n  edges: Array<AtomRequiredParentsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AtomRequiredParentsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type AtomRequiredParentsConnectionWhere = {\n  AND?: InputMaybe<Array<AtomRequiredParentsConnectionWhere>>\n  NOT?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  OR?: InputMaybe<Array<AtomRequiredParentsConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type AtomRequiredParentsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type AtomRequiredParentsDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n}\n\nexport type AtomRequiredParentsDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n}\n\nexport type AtomRequiredParentsFieldInput = {\n  connect?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n}\n\nexport type AtomRequiredParentsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomRequiredParentsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomRequiredParentsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AtomRequiredParentsNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AtomRequiredParentsRelationship = {\n  __typename?: 'AtomRequiredParentsRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type AtomRequiredParentsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type AtomRequiredParentsUpdateFieldInput = {\n  connect?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomRequiredParentsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<AtomRequiredParentsDisconnectFieldInput>>\n  update?: InputMaybe<AtomRequiredParentsUpdateConnectionInput>\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n}\n\n/** Fields to sort Atoms by. The order in which sorts are applied is not guaranteed when specifying many fields in one AtomSort object. */\nexport type AtomSort = {\n  externalCssSource?: InputMaybe<SortDirection>\n  externalJsSource?: InputMaybe<SortDirection>\n  externalSourceType?: InputMaybe<SortDirection>\n  icon?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type AtomSuggestedChildrenAggregateInput = {\n  AND?: InputMaybe<Array<AtomSuggestedChildrenAggregateInput>>\n  NOT?: InputMaybe<AtomSuggestedChildrenAggregateInput>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AtomSuggestedChildrenNodeAggregationWhereInput>\n}\n\nexport type AtomSuggestedChildrenConnectFieldInput = {\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type AtomSuggestedChildrenConnectOrCreateFieldInput = {\n  onCreate: AtomSuggestedChildrenConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type AtomSuggestedChildrenConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type AtomSuggestedChildrenConnection = {\n  __typename?: 'AtomSuggestedChildrenConnection'\n  edges: Array<AtomSuggestedChildrenRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AtomSuggestedChildrenConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type AtomSuggestedChildrenConnectionWhere = {\n  AND?: InputMaybe<Array<AtomSuggestedChildrenConnectionWhere>>\n  NOT?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type AtomSuggestedChildrenCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type AtomSuggestedChildrenDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n}\n\nexport type AtomSuggestedChildrenDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n}\n\nexport type AtomSuggestedChildrenFieldInput = {\n  connect?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n}\n\nexport type AtomSuggestedChildrenNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomSuggestedChildrenNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomSuggestedChildrenNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AtomSuggestedChildrenRelationship = {\n  __typename?: 'AtomSuggestedChildrenRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type AtomSuggestedChildrenUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type AtomSuggestedChildrenUpdateFieldInput = {\n  connect?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomSuggestedChildrenDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<AtomSuggestedChildrenDisconnectFieldInput>>\n  update?: InputMaybe<AtomSuggestedChildrenUpdateConnectionInput>\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n}\n\nexport type AtomTagTagsAggregationSelection = {\n  __typename?: 'AtomTagTagsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AtomTagTagsNodeAggregateSelection>\n}\n\nexport type AtomTagTagsNodeAggregateSelection = {\n  __typename?: 'AtomTagTagsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomTagsAggregateInput = {\n  AND?: InputMaybe<Array<AtomTagsAggregateInput>>\n  NOT?: InputMaybe<AtomTagsAggregateInput>\n  OR?: InputMaybe<Array<AtomTagsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<AtomTagsNodeAggregationWhereInput>\n}\n\nexport type AtomTagsConnectFieldInput = {\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<TagConnectWhere>\n}\n\nexport type AtomTagsConnectOrCreateFieldInput = {\n  onCreate: AtomTagsConnectOrCreateFieldInputOnCreate\n  where: TagConnectOrCreateWhere\n}\n\nexport type AtomTagsConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type AtomTagsConnection = {\n  __typename?: 'AtomTagsConnection'\n  edges: Array<AtomTagsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type AtomTagsConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type AtomTagsConnectionWhere = {\n  AND?: InputMaybe<Array<AtomTagsConnectionWhere>>\n  NOT?: InputMaybe<AtomTagsConnectionWhere>\n  OR?: InputMaybe<Array<AtomTagsConnectionWhere>>\n  node?: InputMaybe<TagWhere>\n}\n\nexport type AtomTagsCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type AtomTagsDeleteFieldInput = {\n  delete?: InputMaybe<TagDeleteInput>\n  where?: InputMaybe<AtomTagsConnectionWhere>\n}\n\nexport type AtomTagsDisconnectFieldInput = {\n  disconnect?: InputMaybe<TagDisconnectInput>\n  where?: InputMaybe<AtomTagsConnectionWhere>\n}\n\nexport type AtomTagsFieldInput = {\n  connect?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n}\n\nexport type AtomTagsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomTagsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomTagsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<AtomTagsNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type AtomTagsRelationship = {\n  __typename?: 'AtomTagsRelationship'\n  cursor: Scalars['String']['output']\n  node: Tag\n}\n\nexport type AtomTagsUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type AtomTagsUpdateFieldInput = {\n  connect?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomTagsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<AtomTagsDisconnectFieldInput>>\n  update?: InputMaybe<AtomTagsUpdateConnectionInput>\n  where?: InputMaybe<AtomTagsConnectionWhere>\n}\n\nexport enum AtomType {\n  AntDesignAffix = 'AntDesignAffix',\n  AntDesignAlert = 'AntDesignAlert',\n  AntDesignAnchor = 'AntDesignAnchor',\n  AntDesignAnchorLink = 'AntDesignAnchorLink',\n  AntDesignAutoComplete = 'AntDesignAutoComplete',\n  AntDesignAvatar = 'AntDesignAvatar',\n  AntDesignBackTop = 'AntDesignBackTop',\n  AntDesignBadge = 'AntDesignBadge',\n  AntDesignBreadcrumb = 'AntDesignBreadcrumb',\n  AntDesignBreadcrumbItem = 'AntDesignBreadcrumbItem',\n  AntDesignBreadcrumbSeparator = 'AntDesignBreadcrumbSeparator',\n  AntDesignButton = 'AntDesignButton',\n  AntDesignCalendar = 'AntDesignCalendar',\n  AntDesignCard = 'AntDesignCard',\n  AntDesignCardGrid = 'AntDesignCardGrid',\n  AntDesignCardMeta = 'AntDesignCardMeta',\n  AntDesignCarousel = 'AntDesignCarousel',\n  AntDesignCascader = 'AntDesignCascader',\n  AntDesignCheckbox = 'AntDesignCheckbox',\n  AntDesignCheckboxGroup = 'AntDesignCheckboxGroup',\n  AntDesignCollapse = 'AntDesignCollapse',\n  AntDesignCollapsePanel = 'AntDesignCollapsePanel',\n  AntDesignComment = 'AntDesignComment',\n  AntDesignConfigProvider = 'AntDesignConfigProvider',\n  AntDesignDatePicker = 'AntDesignDatePicker',\n  AntDesignDescriptions = 'AntDesignDescriptions',\n  AntDesignDescriptionsItem = 'AntDesignDescriptionsItem',\n  AntDesignDivider = 'AntDesignDivider',\n  AntDesignDrawer = 'AntDesignDrawer',\n  AntDesignDropdown = 'AntDesignDropdown',\n  AntDesignDropdownButton = 'AntDesignDropdownButton',\n  AntDesignEmpty = 'AntDesignEmpty',\n  AntDesignForm = 'AntDesignForm',\n  AntDesignFormErrorList = 'AntDesignFormErrorList',\n  AntDesignFormItem = 'AntDesignFormItem',\n  AntDesignFormList = 'AntDesignFormList',\n  AntDesignFormProvider = 'AntDesignFormProvider',\n  AntDesignGridCol = 'AntDesignGridCol',\n  AntDesignGridRow = 'AntDesignGridRow',\n  AntDesignIcon = 'AntDesignIcon',\n  AntDesignImage = 'AntDesignImage',\n  AntDesignInput = 'AntDesignInput',\n  AntDesignInputNumber = 'AntDesignInputNumber',\n  AntDesignLayout = 'AntDesignLayout',\n  AntDesignLayoutContent = 'AntDesignLayoutContent',\n  AntDesignLayoutFooter = 'AntDesignLayoutFooter',\n  AntDesignLayoutHeader = 'AntDesignLayoutHeader',\n  AntDesignLayoutSider = 'AntDesignLayoutSider',\n  AntDesignList = 'AntDesignList',\n  AntDesignListItem = 'AntDesignListItem',\n  AntDesignListItemMeta = 'AntDesignListItemMeta',\n  AntDesignMentions = 'AntDesignMentions',\n  AntDesignMentionsOption = 'AntDesignMentionsOption',\n  AntDesignMenu = 'AntDesignMenu',\n  AntDesignMessage = 'AntDesignMessage',\n  AntDesignModal = 'AntDesignModal',\n  AntDesignNotification = 'AntDesignNotification',\n  AntDesignPagination = 'AntDesignPagination',\n  AntDesignPopconfirm = 'AntDesignPopconfirm',\n  AntDesignPopover = 'AntDesignPopover',\n  AntDesignProgress = 'AntDesignProgress',\n  AntDesignRadio = 'AntDesignRadio',\n  AntDesignRadioGroup = 'AntDesignRadioGroup',\n  AntDesignRate = 'AntDesignRate',\n  AntDesignResult = 'AntDesignResult',\n  AntDesignSegmented = 'AntDesignSegmented',\n  AntDesignSelect = 'AntDesignSelect',\n  AntDesignSelectOption = 'AntDesignSelectOption',\n  AntDesignSkeleton = 'AntDesignSkeleton',\n  AntDesignSlider = 'AntDesignSlider',\n  AntDesignSpace = 'AntDesignSpace',\n  AntDesignSpin = 'AntDesignSpin',\n  AntDesignStatistic = 'AntDesignStatistic',\n  AntDesignSteps = 'AntDesignSteps',\n  AntDesignStepsStep = 'AntDesignStepsStep',\n  AntDesignSwitch = 'AntDesignSwitch',\n  AntDesignTable = 'AntDesignTable',\n  AntDesignTabs = 'AntDesignTabs',\n  AntDesignTabsTabPane = 'AntDesignTabsTabPane',\n  AntDesignTag = 'AntDesignTag',\n  AntDesignTimePicker = 'AntDesignTimePicker',\n  AntDesignTimeline = 'AntDesignTimeline',\n  AntDesignTimelineItem = 'AntDesignTimelineItem',\n  AntDesignTooltip = 'AntDesignTooltip',\n  AntDesignTransfer = 'AntDesignTransfer',\n  AntDesignTree = 'AntDesignTree',\n  AntDesignTreeSelect = 'AntDesignTreeSelect',\n  AntDesignTypographyParagraph = 'AntDesignTypographyParagraph',\n  AntDesignTypographyText = 'AntDesignTypographyText',\n  AntDesignTypographyTitle = 'AntDesignTypographyTitle',\n  AntDesignUpload = 'AntDesignUpload',\n  ExternalComponent = 'ExternalComponent',\n  GridLayout = 'GridLayout',\n  HookGraphqlMutation = 'HookGraphqlMutation',\n  HookGraphqlQuery = 'HookGraphqlQuery',\n  HookQueryConfig = 'HookQueryConfig',\n  HookQueryLambda = 'HookQueryLambda',\n  HookQueryPage = 'HookQueryPage',\n  HookQueryPages = 'HookQueryPages',\n  HookRecoilState = 'HookRecoilState',\n  HookRouter = 'HookRouter',\n  HtmlA = 'HtmlA',\n  HtmlAbbr = 'HtmlAbbr',\n  HtmlArea = 'HtmlArea',\n  HtmlArticle = 'HtmlArticle',\n  HtmlAside = 'HtmlAside',\n  HtmlAudio = 'HtmlAudio',\n  HtmlB = 'HtmlB',\n  HtmlBase = 'HtmlBase',\n  HtmlBdo = 'HtmlBdo',\n  HtmlBlockquote = 'HtmlBlockquote',\n  HtmlBr = 'HtmlBr',\n  HtmlButton = 'HtmlButton',\n  HtmlCanvas = 'HtmlCanvas',\n  HtmlCaption = 'HtmlCaption',\n  HtmlCite = 'HtmlCite',\n  HtmlCode = 'HtmlCode',\n  HtmlCol = 'HtmlCol',\n  HtmlData = 'HtmlData',\n  HtmlDatalist = 'HtmlDatalist',\n  HtmlDetails = 'HtmlDetails',\n  HtmlDfn = 'HtmlDfn',\n  HtmlDialog = 'HtmlDialog',\n  HtmlDiv = 'HtmlDiv',\n  HtmlDl = 'HtmlDl',\n  HtmlEm = 'HtmlEm',\n  HtmlEmbed = 'HtmlEmbed',\n  HtmlFieldset = 'HtmlFieldset',\n  HtmlFooter = 'HtmlFooter',\n  HtmlForm = 'HtmlForm',\n  HtmlH1 = 'HtmlH1',\n  HtmlH2 = 'HtmlH2',\n  HtmlH3 = 'HtmlH3',\n  HtmlH4 = 'HtmlH4',\n  HtmlH5 = 'HtmlH5',\n  HtmlH6 = 'HtmlH6',\n  HtmlHead = 'HtmlHead',\n  HtmlHeader = 'HtmlHeader',\n  HtmlHr = 'HtmlHr',\n  HtmlI = 'HtmlI',\n  HtmlIframe = 'HtmlIframe',\n  HtmlImg = 'HtmlImg',\n  HtmlInput = 'HtmlInput',\n  HtmlKbd = 'HtmlKbd',\n  HtmlLabel = 'HtmlLabel',\n  HtmlLegend = 'HtmlLegend',\n  HtmlLi = 'HtmlLi',\n  HtmlLink = 'HtmlLink',\n  HtmlMain = 'HtmlMain',\n  HtmlMap = 'HtmlMap',\n  HtmlMark = 'HtmlMark',\n  HtmlMath = 'HtmlMath',\n  HtmlMeta = 'HtmlMeta',\n  HtmlMeter = 'HtmlMeter',\n  HtmlNav = 'HtmlNav',\n  HtmlNoscript = 'HtmlNoscript',\n  HtmlObject = 'HtmlObject',\n  HtmlOl = 'HtmlOl',\n  HtmlOptgroup = 'HtmlOptgroup',\n  HtmlOption = 'HtmlOption',\n  HtmlOutput = 'HtmlOutput',\n  HtmlP = 'HtmlP',\n  HtmlParam = 'HtmlParam',\n  HtmlPicture = 'HtmlPicture',\n  HtmlPre = 'HtmlPre',\n  HtmlProgress = 'HtmlProgress',\n  HtmlQ = 'HtmlQ',\n  HtmlRuby = 'HtmlRuby',\n  HtmlS = 'HtmlS',\n  HtmlSamp = 'HtmlSamp',\n  HtmlScript = 'HtmlScript',\n  HtmlSection = 'HtmlSection',\n  HtmlSelect = 'HtmlSelect',\n  HtmlSmall = 'HtmlSmall',\n  HtmlSource = 'HtmlSource',\n  HtmlSpan = 'HtmlSpan',\n  HtmlStrong = 'HtmlStrong',\n  HtmlStyle = 'HtmlStyle',\n  HtmlSub = 'HtmlSub',\n  HtmlSup = 'HtmlSup',\n  HtmlSvg = 'HtmlSvg',\n  HtmlTable = 'HtmlTable',\n  HtmlTd = 'HtmlTd',\n  HtmlTemplate = 'HtmlTemplate',\n  HtmlTextarea = 'HtmlTextarea',\n  HtmlTh = 'HtmlTh',\n  HtmlTime = 'HtmlTime',\n  HtmlTitle = 'HtmlTitle',\n  HtmlTr = 'HtmlTr',\n  HtmlTrack = 'HtmlTrack',\n  HtmlU = 'HtmlU',\n  HtmlUl = 'HtmlUl',\n  HtmlVar = 'HtmlVar',\n  HtmlVideo = 'HtmlVideo',\n  HtmlWbr = 'HtmlWbr',\n  MuiAccordion = 'MuiAccordion',\n  MuiAccordionActions = 'MuiAccordionActions',\n  MuiAccordionDetails = 'MuiAccordionDetails',\n  MuiAccordionSummary = 'MuiAccordionSummary',\n  MuiAlert = 'MuiAlert',\n  MuiAlertTitle = 'MuiAlertTitle',\n  MuiAppBar = 'MuiAppBar',\n  MuiAutocomplete = 'MuiAutocomplete',\n  MuiAvatar = 'MuiAvatar',\n  MuiAvatarGroup = 'MuiAvatarGroup',\n  MuiBackdrop = 'MuiBackdrop',\n  MuiBadge = 'MuiBadge',\n  MuiBadgeUnstyled = 'MuiBadgeUnstyled',\n  MuiBottomNavigation = 'MuiBottomNavigation',\n  MuiBottomNavigationAction = 'MuiBottomNavigationAction',\n  MuiBox = 'MuiBox',\n  MuiBreadcrumbs = 'MuiBreadcrumbs',\n  MuiButton = 'MuiButton',\n  MuiButtonBase = 'MuiButtonBase',\n  MuiButtonGroup = 'MuiButtonGroup',\n  MuiButtonUnstyled = 'MuiButtonUnstyled',\n  MuiCalendarPicker = 'MuiCalendarPicker',\n  MuiCalendarPickerSkeleton = 'MuiCalendarPickerSkeleton',\n  MuiCard = 'MuiCard',\n  MuiCardActionArea = 'MuiCardActionArea',\n  MuiCardActions = 'MuiCardActions',\n  MuiCardContent = 'MuiCardContent',\n  MuiCardHeader = 'MuiCardHeader',\n  MuiCardMedia = 'MuiCardMedia',\n  MuiCheckbox = 'MuiCheckbox',\n  MuiChip = 'MuiChip',\n  MuiCircularProgress = 'MuiCircularProgress',\n  MuiClickAwayListener = 'MuiClickAwayListener',\n  MuiClockPicker = 'MuiClockPicker',\n  MuiCollapse = 'MuiCollapse',\n  MuiContainer = 'MuiContainer',\n  MuiCssBaseline = 'MuiCssBaseline',\n  MuiDataGrid = 'MuiDataGrid',\n  MuiDatePicker = 'MuiDatePicker',\n  MuiDateRangePicker = 'MuiDateRangePicker',\n  MuiDateRangePickerDay = 'MuiDateRangePickerDay',\n  MuiDateTimePicker = 'MuiDateTimePicker',\n  MuiDesktopDatePicker = 'MuiDesktopDatePicker',\n  MuiDesktopDateRangePicker = 'MuiDesktopDateRangePicker',\n  MuiDesktopDateTimePicker = 'MuiDesktopDateTimePicker',\n  MuiDesktopTimePicker = 'MuiDesktopTimePicker',\n  MuiDialog = 'MuiDialog',\n  MuiDialogActions = 'MuiDialogActions',\n  MuiDialogContent = 'MuiDialogContent',\n  MuiDialogContentText = 'MuiDialogContentText',\n  MuiDialogTitle = 'MuiDialogTitle',\n  MuiDivider = 'MuiDivider',\n  MuiDrawer = 'MuiDrawer',\n  MuiFab = 'MuiFab',\n  MuiFade = 'MuiFade',\n  MuiFilledInput = 'MuiFilledInput',\n  MuiFormControl = 'MuiFormControl',\n  MuiFormControlLabel = 'MuiFormControlLabel',\n  MuiFormControlUnstyled = 'MuiFormControlUnstyled',\n  MuiFormGroup = 'MuiFormGroup',\n  MuiFormHelperText = 'MuiFormHelperText',\n  MuiFormLabel = 'MuiFormLabel',\n  MuiGlobalStyles = 'MuiGlobalStyles',\n  MuiGrid = 'MuiGrid',\n  MuiGridColDef = 'MuiGridColDef',\n  MuiGrow = 'MuiGrow',\n  MuiHidden = 'MuiHidden',\n  MuiIcon = 'MuiIcon',\n  MuiIconButton = 'MuiIconButton',\n  MuiImageList = 'MuiImageList',\n  MuiImageListItem = 'MuiImageListItem',\n  MuiImageListItemBar = 'MuiImageListItemBar',\n  MuiInput = 'MuiInput',\n  MuiInputAdornment = 'MuiInputAdornment',\n  MuiInputBase = 'MuiInputBase',\n  MuiInputLabel = 'MuiInputLabel',\n  MuiLinearProgress = 'MuiLinearProgress',\n  MuiLink = 'MuiLink',\n  MuiList = 'MuiList',\n  MuiListItem = 'MuiListItem',\n  MuiListItemAvatar = 'MuiListItemAvatar',\n  MuiListItemButton = 'MuiListItemButton',\n  MuiListItemIcon = 'MuiListItemIcon',\n  MuiListItemSecondaryAction = 'MuiListItemSecondaryAction',\n  MuiListItemText = 'MuiListItemText',\n  MuiListSubheader = 'MuiListSubheader',\n  MuiLoadingButton = 'MuiLoadingButton',\n  MuiMasonry = 'MuiMasonry',\n  MuiMasonryItem = 'MuiMasonryItem',\n  MuiMenu = 'MuiMenu',\n  MuiMenuItem = 'MuiMenuItem',\n  MuiMenuList = 'MuiMenuList',\n  MuiMobileDatePicker = 'MuiMobileDatePicker',\n  MuiMobileDateRangePicker = 'MuiMobileDateRangePicker',\n  MuiMobileDateTimePicker = 'MuiMobileDateTimePicker',\n  MuiMobileStepper = 'MuiMobileStepper',\n  MuiMobileTimePicker = 'MuiMobileTimePicker',\n  MuiModal = 'MuiModal',\n  MuiModalUnstyled = 'MuiModalUnstyled',\n  MuiMonthPicker = 'MuiMonthPicker',\n  MuiNativeSelect = 'MuiNativeSelect',\n  MuiNoSsr = 'MuiNoSsr',\n  MuiOutlinedInput = 'MuiOutlinedInput',\n  MuiPagination = 'MuiPagination',\n  MuiPaginationItem = 'MuiPaginationItem',\n  MuiPaper = 'MuiPaper',\n  MuiPickersDay = 'MuiPickersDay',\n  MuiPopover = 'MuiPopover',\n  MuiPopper = 'MuiPopper',\n  MuiPortal = 'MuiPortal',\n  MuiRadio = 'MuiRadio',\n  MuiRadioGroup = 'MuiRadioGroup',\n  MuiRating = 'MuiRating',\n  MuiScopedCssBaseline = 'MuiScopedCssBaseline',\n  MuiSelect = 'MuiSelect',\n  MuiSkeleton = 'MuiSkeleton',\n  MuiSlide = 'MuiSlide',\n  MuiSlider = 'MuiSlider',\n  MuiSliderUnstyled = 'MuiSliderUnstyled',\n  MuiSnackbar = 'MuiSnackbar',\n  MuiSnackbarContent = 'MuiSnackbarContent',\n  MuiSpeedDial = 'MuiSpeedDial',\n  MuiSpeedDialAction = 'MuiSpeedDialAction',\n  MuiSpeedDialIcon = 'MuiSpeedDialIcon',\n  MuiStack = 'MuiStack',\n  MuiStaticDatePicker = 'MuiStaticDatePicker',\n  MuiStaticDateRangePicker = 'MuiStaticDateRangePicker',\n  MuiStaticDateTimePicker = 'MuiStaticDateTimePicker',\n  MuiStaticTimePicker = 'MuiStaticTimePicker',\n  MuiStep = 'MuiStep',\n  MuiStepButton = 'MuiStepButton',\n  MuiStepConnector = 'MuiStepConnector',\n  MuiStepContent = 'MuiStepContent',\n  MuiStepIcon = 'MuiStepIcon',\n  MuiStepLabel = 'MuiStepLabel',\n  MuiStepper = 'MuiStepper',\n  MuiSvgIcon = 'MuiSvgIcon',\n  MuiSwipeableDrawer = 'MuiSwipeableDrawer',\n  MuiSwitch = 'MuiSwitch',\n  MuiSwitchUnstyled = 'MuiSwitchUnstyled',\n  MuiTab = 'MuiTab',\n  MuiTabContext = 'MuiTabContext',\n  MuiTabList = 'MuiTabList',\n  MuiTabPanel = 'MuiTabPanel',\n  MuiTabScrollButton = 'MuiTabScrollButton',\n  MuiTable = 'MuiTable',\n  MuiTableBody = 'MuiTableBody',\n  MuiTableCell = 'MuiTableCell',\n  MuiTableContainer = 'MuiTableContainer',\n  MuiTableFooter = 'MuiTableFooter',\n  MuiTableHead = 'MuiTableHead',\n  MuiTablePagination = 'MuiTablePagination',\n  MuiTableRow = 'MuiTableRow',\n  MuiTableSortLabel = 'MuiTableSortLabel',\n  MuiTabs = 'MuiTabs',\n  MuiTextField = 'MuiTextField',\n  MuiTextareaAutosize = 'MuiTextareaAutosize',\n  MuiTimePicker = 'MuiTimePicker',\n  MuiTimeline = 'MuiTimeline',\n  MuiTimelineConnector = 'MuiTimelineConnector',\n  MuiTimelineContent = 'MuiTimelineContent',\n  MuiTimelineDot = 'MuiTimelineDot',\n  MuiTimelineItem = 'MuiTimelineItem',\n  MuiTimelineOppositeContent = 'MuiTimelineOppositeContent',\n  MuiTimelineSeparator = 'MuiTimelineSeparator',\n  MuiToggleButton = 'MuiToggleButton',\n  MuiToggleButtonGroup = 'MuiToggleButtonGroup',\n  MuiToolbar = 'MuiToolbar',\n  MuiTooltip = 'MuiTooltip',\n  MuiTreeItem = 'MuiTreeItem',\n  MuiTreeView = 'MuiTreeView',\n  MuiTypography = 'MuiTypography',\n  MuiUnstableTrapFocus = 'MuiUnstableTrapFocus',\n  MuiYearPicker = 'MuiYearPicker',\n  MuiZoom = 'MuiZoom',\n  Query = 'Query',\n  ReactFragment = 'ReactFragment',\n  Script = 'Script',\n  State = 'State',\n  Text = 'Text',\n  TextList = 'TextList',\n}\n\nexport type AtomUniqueWhere = {\n  externalSourceType?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type AtomUpdateInput = {\n  api?: InputMaybe<AtomApiUpdateFieldInput>\n  externalCssSource?: InputMaybe<Scalars['String']['input']>\n  externalJsSource?: InputMaybe<Scalars['String']['input']>\n  externalSourceType?: InputMaybe<Scalars['String']['input']>\n  icon?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsUpdateFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenUpdateFieldInput>>\n  tags?: InputMaybe<Array<AtomTagsUpdateFieldInput>>\n  type?: InputMaybe<AtomType>\n}\n\nexport type AtomUserOwnerAggregationSelection = {\n  __typename?: 'AtomUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<AtomUserOwnerNodeAggregateSelection>\n}\n\nexport type AtomUserOwnerNodeAggregateSelection = {\n  __typename?: 'AtomUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type AtomWhere = {\n  AND?: InputMaybe<Array<AtomWhere>>\n  NOT?: InputMaybe<AtomWhere>\n  OR?: InputMaybe<Array<AtomWhere>>\n  api?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<AtomApiAggregateInput>\n  apiConnection?: InputMaybe<AtomApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<AtomApiConnectionWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  externalCssSource?: InputMaybe<Scalars['String']['input']>\n  externalCssSource_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  externalCssSource_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  externalCssSource_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  externalCssSource_MATCHES?: InputMaybe<Scalars['String']['input']>\n  externalCssSource_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  externalJsSource?: InputMaybe<Scalars['String']['input']>\n  externalJsSource_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  externalJsSource_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  externalJsSource_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  externalJsSource_MATCHES?: InputMaybe<Scalars['String']['input']>\n  externalJsSource_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  externalSourceType?: InputMaybe<Scalars['String']['input']>\n  externalSourceType_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  externalSourceType_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  externalSourceType_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  externalSourceType_MATCHES?: InputMaybe<Scalars['String']['input']>\n  externalSourceType_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  icon?: InputMaybe<Scalars['String']['input']>\n  icon_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  icon_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  icon_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  icon_MATCHES?: InputMaybe<Scalars['String']['input']>\n  icon_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AtomOwnerAggregateInput>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  requiredParentsAggregate?: InputMaybe<AtomRequiredParentsAggregateInput>\n  /** Return Atoms where all of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_ALL?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where none of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_NONE?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where one of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_SINGLE?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where some of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_SOME?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where all of the related Atoms match this filter */\n  requiredParents_ALL?: InputMaybe<AtomWhere>\n  /** Return Atoms where none of the related Atoms match this filter */\n  requiredParents_NONE?: InputMaybe<AtomWhere>\n  /** Return Atoms where one of the related Atoms match this filter */\n  requiredParents_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Atoms where some of the related Atoms match this filter */\n  requiredParents_SOME?: InputMaybe<AtomWhere>\n  suggestedChildrenAggregate?: InputMaybe<AtomSuggestedChildrenAggregateInput>\n  /** Return Atoms where all of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_ALL?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where none of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_NONE?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where one of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_SINGLE?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where some of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_SOME?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where all of the related Atoms match this filter */\n  suggestedChildren_ALL?: InputMaybe<AtomWhere>\n  /** Return Atoms where none of the related Atoms match this filter */\n  suggestedChildren_NONE?: InputMaybe<AtomWhere>\n  /** Return Atoms where one of the related Atoms match this filter */\n  suggestedChildren_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Atoms where some of the related Atoms match this filter */\n  suggestedChildren_SOME?: InputMaybe<AtomWhere>\n  tagsAggregate?: InputMaybe<AtomTagsAggregateInput>\n  /** Return Atoms where all of the related AtomTagsConnections match this filter */\n  tagsConnection_ALL?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where none of the related AtomTagsConnections match this filter */\n  tagsConnection_NONE?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where one of the related AtomTagsConnections match this filter */\n  tagsConnection_SINGLE?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where some of the related AtomTagsConnections match this filter */\n  tagsConnection_SOME?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where all of the related Tags match this filter */\n  tags_ALL?: InputMaybe<TagWhere>\n  /** Return Atoms where none of the related Tags match this filter */\n  tags_NONE?: InputMaybe<TagWhere>\n  /** Return Atoms where one of the related Tags match this filter */\n  tags_SINGLE?: InputMaybe<TagWhere>\n  /** Return Atoms where some of the related Tags match this filter */\n  tags_SOME?: InputMaybe<TagWhere>\n  type?: InputMaybe<AtomType>\n  type_IN?: InputMaybe<Array<AtomType>>\n}\n\nexport type AtomsConnection = {\n  __typename?: 'AtomsConnection'\n  edges: Array<AtomEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type BaseAction = {\n  element?: Maybe<Element>\n  elementConnection: BaseActionElementConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  store: Store\n  storeConnection: BaseActionStoreConnection\n  type: ActionKind\n}\n\nexport type BaseActionElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type BaseActionElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type BaseActionStoreArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type BaseActionStoreConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type BaseActionConnectInput = {\n  _on?: InputMaybe<BaseActionImplementationsConnectInput>\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n}\n\nexport type BaseActionConnectWhere = {\n  node: BaseActionWhere\n}\n\nexport type BaseActionCreateInput = {\n  ApiAction?: InputMaybe<ApiActionCreateInput>\n  CodeAction?: InputMaybe<CodeActionCreateInput>\n}\n\nexport type BaseActionDeleteInput = {\n  _on?: InputMaybe<BaseActionImplementationsDeleteInput>\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n}\n\nexport type BaseActionDisconnectInput = {\n  _on?: InputMaybe<BaseActionImplementationsDisconnectInput>\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n}\n\nexport type BaseActionElementAggregateInput = {\n  AND?: InputMaybe<Array<BaseActionElementAggregateInput>>\n  NOT?: InputMaybe<BaseActionElementAggregateInput>\n  OR?: InputMaybe<Array<BaseActionElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<BaseActionElementNodeAggregationWhereInput>\n}\n\nexport type BaseActionElementConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type BaseActionElementConnectOrCreateFieldInput = {\n  onCreate: BaseActionElementConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type BaseActionElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type BaseActionElementConnection = {\n  __typename?: 'BaseActionElementConnection'\n  edges: Array<BaseActionElementRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type BaseActionElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type BaseActionElementConnectionWhere = {\n  AND?: InputMaybe<Array<BaseActionElementConnectionWhere>>\n  NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  OR?: InputMaybe<Array<BaseActionElementConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type BaseActionElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type BaseActionElementDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type BaseActionElementDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type BaseActionElementFieldInput = {\n  connect?: InputMaybe<BaseActionElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n  create?: InputMaybe<BaseActionElementCreateFieldInput>\n}\n\nexport type BaseActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseActionElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<BaseActionElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type BaseActionElementRelationship = {\n  __typename?: 'BaseActionElementRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type BaseActionElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type BaseActionElementUpdateFieldInput = {\n  connect?: InputMaybe<BaseActionElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n  create?: InputMaybe<BaseActionElementCreateFieldInput>\n  delete?: InputMaybe<BaseActionElementDeleteFieldInput>\n  disconnect?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  update?: InputMaybe<BaseActionElementUpdateConnectionInput>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type BaseActionImplementationsConnectInput = {\n  ApiAction?: InputMaybe<Array<ApiActionConnectInput>>\n  CodeAction?: InputMaybe<Array<CodeActionConnectInput>>\n}\n\nexport type BaseActionImplementationsDeleteInput = {\n  ApiAction?: InputMaybe<Array<ApiActionDeleteInput>>\n  CodeAction?: InputMaybe<Array<CodeActionDeleteInput>>\n}\n\nexport type BaseActionImplementationsDisconnectInput = {\n  ApiAction?: InputMaybe<Array<ApiActionDisconnectInput>>\n  CodeAction?: InputMaybe<Array<CodeActionDisconnectInput>>\n}\n\nexport type BaseActionImplementationsUpdateInput = {\n  ApiAction?: InputMaybe<ApiActionUpdateInput>\n  CodeAction?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type BaseActionImplementationsWhere = {\n  ApiAction?: InputMaybe<ApiActionWhere>\n  CodeAction?: InputMaybe<CodeActionWhere>\n}\n\nexport type BaseActionOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more BaseActionSort objects to sort BaseActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InputMaybe<BaseActionSort>>>\n}\n\n/** Fields to sort BaseActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseActionSort object. */\nexport type BaseActionSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type BaseActionStoreAggregateInput = {\n  AND?: InputMaybe<Array<BaseActionStoreAggregateInput>>\n  NOT?: InputMaybe<BaseActionStoreAggregateInput>\n  OR?: InputMaybe<Array<BaseActionStoreAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<BaseActionStoreNodeAggregationWhereInput>\n}\n\nexport type BaseActionStoreConnectFieldInput = {\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<StoreConnectWhere>\n}\n\nexport type BaseActionStoreConnectOrCreateFieldInput = {\n  onCreate: BaseActionStoreConnectOrCreateFieldInputOnCreate\n  where: StoreConnectOrCreateWhere\n}\n\nexport type BaseActionStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type BaseActionStoreConnection = {\n  __typename?: 'BaseActionStoreConnection'\n  edges: Array<BaseActionStoreRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type BaseActionStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type BaseActionStoreConnectionWhere = {\n  AND?: InputMaybe<Array<BaseActionStoreConnectionWhere>>\n  NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  OR?: InputMaybe<Array<BaseActionStoreConnectionWhere>>\n  node?: InputMaybe<StoreWhere>\n}\n\nexport type BaseActionStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type BaseActionStoreDeleteFieldInput = {\n  delete?: InputMaybe<StoreDeleteInput>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type BaseActionStoreDisconnectFieldInput = {\n  disconnect?: InputMaybe<StoreDisconnectInput>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type BaseActionStoreFieldInput = {\n  connect?: InputMaybe<BaseActionStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<BaseActionStoreCreateFieldInput>\n}\n\nexport type BaseActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseActionStoreNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<BaseActionStoreNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type BaseActionStoreRelationship = {\n  __typename?: 'BaseActionStoreRelationship'\n  cursor: Scalars['String']['output']\n  node: Store\n}\n\nexport type BaseActionStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type BaseActionStoreUpdateFieldInput = {\n  connect?: InputMaybe<BaseActionStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<BaseActionStoreCreateFieldInput>\n  delete?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  disconnect?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  update?: InputMaybe<BaseActionStoreUpdateConnectionInput>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type BaseActionUpdateInput = {\n  _on?: InputMaybe<BaseActionImplementationsUpdateInput>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n}\n\nexport type BaseActionWhere = {\n  _on?: InputMaybe<BaseActionImplementationsWhere>\n  element?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<BaseActionElementAggregateInput>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  store?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<BaseActionStoreAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  type?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n}\n\nexport type BaseType = IBaseType & {\n  __typename?: 'BaseType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<BaseTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\nexport type BaseTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type BaseTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type BaseTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type BaseTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type BaseTypeConnectOrCreateWhere = {\n  node: BaseTypeUniqueWhere\n}\n\nexport type BaseTypeConnectWhere = {\n  node: BaseTypeWhere\n}\n\nexport type BaseTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type BaseTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type BaseTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type BaseTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type BaseTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more BaseTypeSort objects to sort BaseTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<BaseTypeSort>>\n}\n\nexport type BaseTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<BaseTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<BaseTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<BaseTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<BaseTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type BaseTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<BaseTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\n/** Fields to sort BaseTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseTypeSort object. */\nexport type BaseTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type BaseTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type BaseTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type BaseTypeUserOwnerAggregationSelection = {\n  __typename?: 'BaseTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<BaseTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type BaseTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'BaseTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type BaseTypeWhere = {\n  AND?: InputMaybe<Array<BaseTypeWhere>>\n  NOT?: InputMaybe<BaseTypeWhere>\n  OR?: InputMaybe<Array<BaseTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<BaseTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type BaseTypesWhere = {\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type CodeAction = BaseAction & {\n  __typename?: 'CodeAction'\n  /** Code to run when action is triggered */\n  code: Scalars['String']['output']\n  element?: Maybe<Element>\n  elementAggregate?: Maybe<CodeActionElementElementAggregationSelection>\n  elementConnection: BaseActionElementConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  store: Store\n  storeAggregate?: Maybe<CodeActionStoreStoreAggregationSelection>\n  storeConnection: BaseActionStoreConnection\n  type: ActionKind\n}\n\nexport type CodeActionElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type CodeActionElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type CodeActionElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type CodeActionStoreArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type CodeActionStoreAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type CodeActionStoreConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n}\n\nexport type CodeActionAggregateSelection = {\n  __typename?: 'CodeActionAggregateSelection'\n  code: StringAggregateSelectionNonNullable\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type CodeActionConnectInput = {\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n}\n\nexport type CodeActionConnectOrCreateInput = {\n  element?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n  store?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n}\n\nexport type CodeActionConnectOrCreateWhere = {\n  node: CodeActionUniqueWhere\n}\n\nexport type CodeActionConnectWhere = {\n  node: CodeActionWhere\n}\n\nexport type CodeActionCreateInput = {\n  code: Scalars['String']['input']\n  element?: InputMaybe<BaseActionElementFieldInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  store?: InputMaybe<BaseActionStoreFieldInput>\n  type?: ActionKind\n}\n\nexport type CodeActionDeleteInput = {\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n}\n\nexport type CodeActionDisconnectInput = {\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n}\n\nexport type CodeActionEdge = {\n  __typename?: 'CodeActionEdge'\n  cursor: Scalars['String']['output']\n  node: CodeAction\n}\n\nexport type CodeActionElementAggregateInput = {\n  AND?: InputMaybe<Array<CodeActionElementAggregateInput>>\n  NOT?: InputMaybe<CodeActionElementAggregateInput>\n  OR?: InputMaybe<Array<CodeActionElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<CodeActionElementNodeAggregationWhereInput>\n}\n\nexport type CodeActionElementElementAggregationSelection = {\n  __typename?: 'CodeActionElementElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<CodeActionElementElementNodeAggregateSelection>\n}\n\nexport type CodeActionElementElementNodeAggregateSelection = {\n  __typename?: 'CodeActionElementElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type CodeActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeActionElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<CodeActionElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type CodeActionOnCreateInput = {\n  code: Scalars['String']['input']\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  type?: ActionKind\n}\n\nexport type CodeActionOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more CodeActionSort objects to sort CodeActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<CodeActionSort>>\n}\n\nexport type CodeActionRelationInput = {\n  element?: InputMaybe<BaseActionElementCreateFieldInput>\n  store?: InputMaybe<BaseActionStoreCreateFieldInput>\n}\n\n/** Fields to sort CodeActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeActionSort object. */\nexport type CodeActionSort = {\n  code?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type CodeActionStoreAggregateInput = {\n  AND?: InputMaybe<Array<CodeActionStoreAggregateInput>>\n  NOT?: InputMaybe<CodeActionStoreAggregateInput>\n  OR?: InputMaybe<Array<CodeActionStoreAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<CodeActionStoreNodeAggregationWhereInput>\n}\n\nexport type CodeActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeActionStoreNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<CodeActionStoreNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type CodeActionStoreStoreAggregationSelection = {\n  __typename?: 'CodeActionStoreStoreAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<CodeActionStoreStoreNodeAggregateSelection>\n}\n\nexport type CodeActionStoreStoreNodeAggregateSelection = {\n  __typename?: 'CodeActionStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type CodeActionUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type CodeActionUpdateInput = {\n  code?: InputMaybe<Scalars['String']['input']>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n}\n\nexport type CodeActionWhere = {\n  AND?: InputMaybe<Array<CodeActionWhere>>\n  NOT?: InputMaybe<CodeActionWhere>\n  OR?: InputMaybe<Array<CodeActionWhere>>\n  code?: InputMaybe<Scalars['String']['input']>\n  code_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  code_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  code_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  code_MATCHES?: InputMaybe<Scalars['String']['input']>\n  code_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  element?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<CodeActionElementAggregateInput>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  store?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<CodeActionStoreAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  type?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n}\n\nexport type CodeActionsConnection = {\n  __typename?: 'CodeActionsConnection'\n  edges: Array<CodeActionEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport enum CodeMirrorLanguage {\n  Css = 'Css',\n  CssInJs = 'CssInJs',\n  Graphql = 'Graphql',\n  Javascript = 'Javascript',\n  Json = 'Json',\n  Typescript = 'Typescript',\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorType = IBaseType & {\n  __typename?: 'CodeMirrorType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  language: CodeMirrorLanguage\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<CodeMirrorTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type CodeMirrorTypeAggregateSelection = {\n  __typename?: 'CodeMirrorTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type CodeMirrorTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type CodeMirrorTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type CodeMirrorTypeConnectOrCreateWhere = {\n  node: CodeMirrorTypeUniqueWhere\n}\n\nexport type CodeMirrorTypeConnectWhere = {\n  node: CodeMirrorTypeWhere\n}\n\nexport type CodeMirrorTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  language: CodeMirrorLanguage\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type CodeMirrorTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type CodeMirrorTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type CodeMirrorTypeEdge = {\n  __typename?: 'CodeMirrorTypeEdge'\n  cursor: Scalars['String']['output']\n  node: CodeMirrorType\n}\n\nexport type CodeMirrorTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  language: CodeMirrorLanguage\n  name: Scalars['String']['input']\n}\n\nexport type CodeMirrorTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more CodeMirrorTypeSort objects to sort CodeMirrorTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<CodeMirrorTypeSort>>\n}\n\nexport type CodeMirrorTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<CodeMirrorTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<CodeMirrorTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<CodeMirrorTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<CodeMirrorTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type CodeMirrorTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeMirrorTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeMirrorTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<CodeMirrorTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type CodeMirrorTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort CodeMirrorTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeMirrorTypeSort object. */\nexport type CodeMirrorTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  language?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type CodeMirrorTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type CodeMirrorTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  language?: InputMaybe<CodeMirrorLanguage>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type CodeMirrorTypeUserOwnerAggregationSelection = {\n  __typename?: 'CodeMirrorTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<CodeMirrorTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type CodeMirrorTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'CodeMirrorTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type CodeMirrorTypeWhere = {\n  AND?: InputMaybe<Array<CodeMirrorTypeWhere>>\n  NOT?: InputMaybe<CodeMirrorTypeWhere>\n  OR?: InputMaybe<Array<CodeMirrorTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  language?: InputMaybe<CodeMirrorLanguage>\n  language_IN?: InputMaybe<Array<CodeMirrorLanguage>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<CodeMirrorTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type CodeMirrorTypesConnection = {\n  __typename?: 'CodeMirrorTypesConnection'\n  edges: Array<CodeMirrorTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Component = WithOwner & {\n  __typename?: 'Component'\n  api: InterfaceType\n  apiAggregate?: Maybe<ComponentInterfaceTypeApiAggregationSelection>\n  apiConnection: ComponentApiConnection\n  childrenContainerElement: Element\n  childrenContainerElementAggregate?: Maybe<ComponentElementChildrenContainerElementAggregationSelection>\n  childrenContainerElementConnection: ComponentChildrenContainerElementConnection\n  id: Scalars['ID']['output']\n  keyGenerator?: Maybe<Scalars['String']['output']>\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<ComponentUserOwnerAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  props: Prop\n  propsAggregate?: Maybe<ComponentPropPropsAggregationSelection>\n  propsConnection: ComponentPropsConnection\n  rootElement: Element\n  rootElementAggregate?: Maybe<ComponentElementRootElementAggregationSelection>\n  rootElementConnection: ComponentRootElementConnection\n  store: Store\n  storeAggregate?: Maybe<ComponentStoreStoreAggregationSelection>\n  storeConnection: ComponentStoreConnection\n}\n\nexport type ComponentApiArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type ComponentApiAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type ComponentApiConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ComponentApiConnectionSort>>\n  where?: InputMaybe<ComponentApiConnectionWhere>\n}\n\nexport type ComponentChildrenContainerElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentChildrenContainerElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentChildrenContainerElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ComponentChildrenContainerElementConnectionSort>>\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n}\n\nexport type ComponentOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type ComponentOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type ComponentOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type ComponentPropsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ComponentPropsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ComponentPropsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ComponentPropsConnectionSort>>\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentRootElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentRootElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentRootElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ComponentRootElementConnectionSort>>\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n}\n\nexport type ComponentStoreArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type ComponentStoreAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type ComponentStoreConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ComponentStoreConnectionSort>>\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n}\n\nexport type ComponentAggregateSelection = {\n  __typename?: 'ComponentAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentApiAggregateInput = {\n  AND?: InputMaybe<Array<ComponentApiAggregateInput>>\n  NOT?: InputMaybe<ComponentApiAggregateInput>\n  OR?: InputMaybe<Array<ComponentApiAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentApiNodeAggregationWhereInput>\n}\n\nexport type ComponentApiConnectFieldInput = {\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n}\n\nexport type ComponentApiConnectOrCreateFieldInput = {\n  onCreate: ComponentApiConnectOrCreateFieldInputOnCreate\n  where: InterfaceTypeConnectOrCreateWhere\n}\n\nexport type ComponentApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type ComponentApiConnection = {\n  __typename?: 'ComponentApiConnection'\n  edges: Array<ComponentApiRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ComponentApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type ComponentApiConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentApiConnectionWhere>>\n  NOT?: InputMaybe<ComponentApiConnectionWhere>\n  OR?: InputMaybe<Array<ComponentApiConnectionWhere>>\n  node?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type ComponentApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type ComponentApiDeleteFieldInput = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<ComponentApiConnectionWhere>\n}\n\nexport type ComponentApiDisconnectFieldInput = {\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  where?: InputMaybe<ComponentApiConnectionWhere>\n}\n\nexport type ComponentApiFieldInput = {\n  connect?: InputMaybe<ComponentApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentApiCreateFieldInput>\n}\n\nexport type ComponentApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentApiNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ComponentApiNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentApiRelationship = {\n  __typename?: 'ComponentApiRelationship'\n  cursor: Scalars['String']['output']\n  node: InterfaceType\n}\n\nexport type ComponentApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type ComponentApiUpdateFieldInput = {\n  connect?: InputMaybe<ComponentApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentApiCreateFieldInput>\n  delete?: InputMaybe<ComponentApiDeleteFieldInput>\n  disconnect?: InputMaybe<ComponentApiDisconnectFieldInput>\n  update?: InputMaybe<ComponentApiUpdateConnectionInput>\n  where?: InputMaybe<ComponentApiConnectionWhere>\n}\n\nexport type ComponentChildrenContainerElementAggregateInput = {\n  AND?: InputMaybe<Array<ComponentChildrenContainerElementAggregateInput>>\n  NOT?: InputMaybe<ComponentChildrenContainerElementAggregateInput>\n  OR?: InputMaybe<Array<ComponentChildrenContainerElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentChildrenContainerElementNodeAggregationWhereInput>\n}\n\nexport type ComponentChildrenContainerElementConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ComponentChildrenContainerElementConnectOrCreateFieldInput = {\n  onCreate: ComponentChildrenContainerElementConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ComponentChildrenContainerElementConnectOrCreateFieldInputOnCreate =\n  {\n    node: ElementOnCreateInput\n  }\n\nexport type ComponentChildrenContainerElementConnection = {\n  __typename?: 'ComponentChildrenContainerElementConnection'\n  edges: Array<ComponentChildrenContainerElementRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ComponentChildrenContainerElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ComponentChildrenContainerElementConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentChildrenContainerElementConnectionWhere>>\n  NOT?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  OR?: InputMaybe<Array<ComponentChildrenContainerElementConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentChildrenContainerElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ComponentChildrenContainerElementDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n}\n\nexport type ComponentChildrenContainerElementDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n}\n\nexport type ComponentChildrenContainerElementFieldInput = {\n  connect?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n}\n\nexport type ComponentChildrenContainerElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<\n    Array<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  >\n  NOT?: InputMaybe<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  OR?: InputMaybe<\n    Array<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  >\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentChildrenContainerElementRelationship = {\n  __typename?: 'ComponentChildrenContainerElementRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ComponentChildrenContainerElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ComponentChildrenContainerElementUpdateFieldInput = {\n  connect?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n  delete?: InputMaybe<ComponentChildrenContainerElementDeleteFieldInput>\n  disconnect?: InputMaybe<ComponentChildrenContainerElementDisconnectFieldInput>\n  update?: InputMaybe<ComponentChildrenContainerElementUpdateConnectionInput>\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n}\n\nexport type ComponentConnectInput = {\n  api?: InputMaybe<ComponentApiConnectFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  props?: InputMaybe<ComponentPropsConnectFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementConnectFieldInput>\n  store?: InputMaybe<ComponentStoreConnectFieldInput>\n}\n\nexport type ComponentConnectOrCreateInput = {\n  api?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  props?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n  store?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n}\n\nexport type ComponentConnectOrCreateWhere = {\n  node: ComponentUniqueWhere\n}\n\nexport type ComponentConnectWhere = {\n  node: ComponentWhere\n}\n\nexport type ComponentCreateInput = {\n  api?: InputMaybe<ComponentApiFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementFieldInput>\n  id: Scalars['ID']['input']\n  keyGenerator?: InputMaybe<Scalars['String']['input']>\n  name: Scalars['String']['input']\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  props?: InputMaybe<ComponentPropsFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementFieldInput>\n  store?: InputMaybe<ComponentStoreFieldInput>\n}\n\nexport type ComponentDeleteInput = {\n  api?: InputMaybe<ComponentApiDeleteFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementDeleteFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  props?: InputMaybe<ComponentPropsDeleteFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementDeleteFieldInput>\n  store?: InputMaybe<ComponentStoreDeleteFieldInput>\n}\n\nexport type ComponentDisconnectInput = {\n  api?: InputMaybe<ComponentApiDisconnectFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementDisconnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  props?: InputMaybe<ComponentPropsDisconnectFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementDisconnectFieldInput>\n  store?: InputMaybe<ComponentStoreDisconnectFieldInput>\n}\n\nexport type ComponentEdge = {\n  __typename?: 'ComponentEdge'\n  cursor: Scalars['String']['output']\n  node: Component\n}\n\nexport type ComponentElementChildrenContainerElementAggregationSelection = {\n  __typename?: 'ComponentElementChildrenContainerElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentElementChildrenContainerElementNodeAggregateSelection>\n}\n\nexport type ComponentElementChildrenContainerElementNodeAggregateSelection = {\n  __typename?: 'ComponentElementChildrenContainerElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ComponentElementRootElementAggregationSelection = {\n  __typename?: 'ComponentElementRootElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentElementRootElementNodeAggregateSelection>\n}\n\nexport type ComponentElementRootElementNodeAggregateSelection = {\n  __typename?: 'ComponentElementRootElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ComponentInterfaceTypeApiAggregationSelection = {\n  __typename?: 'ComponentInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type ComponentInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'ComponentInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentOnCreateInput = {\n  id: Scalars['ID']['input']\n  keyGenerator?: InputMaybe<Scalars['String']['input']>\n  name: Scalars['String']['input']\n}\n\nexport type ComponentOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ComponentSort objects to sort Components by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ComponentSort>>\n}\n\nexport type ComponentOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ComponentOwnerAggregateInput>>\n  NOT?: InputMaybe<ComponentOwnerAggregateInput>\n  OR?: InputMaybe<Array<ComponentOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentOwnerNodeAggregationWhereInput>\n}\n\nexport type ComponentOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ComponentOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentPropPropsAggregationSelection = {\n  __typename?: 'ComponentPropPropsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentPropPropsNodeAggregateSelection>\n}\n\nexport type ComponentPropPropsNodeAggregateSelection = {\n  __typename?: 'ComponentPropPropsNodeAggregateSelection'\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type ComponentPropsAggregateInput = {\n  AND?: InputMaybe<Array<ComponentPropsAggregateInput>>\n  NOT?: InputMaybe<ComponentPropsAggregateInput>\n  OR?: InputMaybe<Array<ComponentPropsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentPropsNodeAggregationWhereInput>\n}\n\nexport type ComponentPropsConnectFieldInput = {\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PropConnectWhere>\n}\n\nexport type ComponentPropsConnectOrCreateFieldInput = {\n  onCreate: ComponentPropsConnectOrCreateFieldInputOnCreate\n  where: PropConnectOrCreateWhere\n}\n\nexport type ComponentPropsConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ComponentPropsConnection = {\n  __typename?: 'ComponentPropsConnection'\n  edges: Array<ComponentPropsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ComponentPropsConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ComponentPropsConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentPropsConnectionWhere>>\n  NOT?: InputMaybe<ComponentPropsConnectionWhere>\n  OR?: InputMaybe<Array<ComponentPropsConnectionWhere>>\n  node?: InputMaybe<PropWhere>\n}\n\nexport type ComponentPropsCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ComponentPropsDeleteFieldInput = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentPropsDisconnectFieldInput = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentPropsFieldInput = {\n  connect?: InputMaybe<ComponentPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentPropsCreateFieldInput>\n}\n\nexport type ComponentPropsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentPropsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentPropsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ComponentPropsNodeAggregationWhereInput>>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentPropsRelationship = {\n  __typename?: 'ComponentPropsRelationship'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type ComponentPropsUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ComponentPropsUpdateFieldInput = {\n  connect?: InputMaybe<ComponentPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentPropsCreateFieldInput>\n  delete?: InputMaybe<ComponentPropsDeleteFieldInput>\n  disconnect?: InputMaybe<ComponentPropsDisconnectFieldInput>\n  update?: InputMaybe<ComponentPropsUpdateConnectionInput>\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentRelationInput = {\n  api?: InputMaybe<ComponentApiCreateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  props?: InputMaybe<ComponentPropsCreateFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementCreateFieldInput>\n  store?: InputMaybe<ComponentStoreCreateFieldInput>\n}\n\nexport type ComponentRootElementAggregateInput = {\n  AND?: InputMaybe<Array<ComponentRootElementAggregateInput>>\n  NOT?: InputMaybe<ComponentRootElementAggregateInput>\n  OR?: InputMaybe<Array<ComponentRootElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentRootElementNodeAggregationWhereInput>\n}\n\nexport type ComponentRootElementConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ComponentRootElementConnectOrCreateFieldInput = {\n  onCreate: ComponentRootElementConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ComponentRootElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ComponentRootElementConnection = {\n  __typename?: 'ComponentRootElementConnection'\n  edges: Array<ComponentRootElementRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ComponentRootElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ComponentRootElementConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentRootElementConnectionWhere>>\n  NOT?: InputMaybe<ComponentRootElementConnectionWhere>\n  OR?: InputMaybe<Array<ComponentRootElementConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentRootElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ComponentRootElementDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n}\n\nexport type ComponentRootElementDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n}\n\nexport type ComponentRootElementFieldInput = {\n  connect?: InputMaybe<ComponentRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentRootElementCreateFieldInput>\n}\n\nexport type ComponentRootElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentRootElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentRootElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ComponentRootElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentRootElementRelationship = {\n  __typename?: 'ComponentRootElementRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ComponentRootElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ComponentRootElementUpdateFieldInput = {\n  connect?: InputMaybe<ComponentRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentRootElementCreateFieldInput>\n  delete?: InputMaybe<ComponentRootElementDeleteFieldInput>\n  disconnect?: InputMaybe<ComponentRootElementDisconnectFieldInput>\n  update?: InputMaybe<ComponentRootElementUpdateConnectionInput>\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n}\n\n/** Fields to sort Components by. The order in which sorts are applied is not guaranteed when specifying many fields in one ComponentSort object. */\nexport type ComponentSort = {\n  id?: InputMaybe<SortDirection>\n  keyGenerator?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type ComponentStoreAggregateInput = {\n  AND?: InputMaybe<Array<ComponentStoreAggregateInput>>\n  NOT?: InputMaybe<ComponentStoreAggregateInput>\n  OR?: InputMaybe<Array<ComponentStoreAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ComponentStoreNodeAggregationWhereInput>\n}\n\nexport type ComponentStoreConnectFieldInput = {\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<StoreConnectWhere>\n}\n\nexport type ComponentStoreConnectOrCreateFieldInput = {\n  onCreate: ComponentStoreConnectOrCreateFieldInputOnCreate\n  where: StoreConnectOrCreateWhere\n}\n\nexport type ComponentStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type ComponentStoreConnection = {\n  __typename?: 'ComponentStoreConnection'\n  edges: Array<ComponentStoreRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ComponentStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type ComponentStoreConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentStoreConnectionWhere>>\n  NOT?: InputMaybe<ComponentStoreConnectionWhere>\n  OR?: InputMaybe<Array<ComponentStoreConnectionWhere>>\n  node?: InputMaybe<StoreWhere>\n}\n\nexport type ComponentStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type ComponentStoreDeleteFieldInput = {\n  delete?: InputMaybe<StoreDeleteInput>\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n}\n\nexport type ComponentStoreDisconnectFieldInput = {\n  disconnect?: InputMaybe<StoreDisconnectInput>\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n}\n\nexport type ComponentStoreFieldInput = {\n  connect?: InputMaybe<ComponentStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentStoreCreateFieldInput>\n}\n\nexport type ComponentStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentStoreNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ComponentStoreNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ComponentStoreRelationship = {\n  __typename?: 'ComponentStoreRelationship'\n  cursor: Scalars['String']['output']\n  node: Store\n}\n\nexport type ComponentStoreStoreAggregationSelection = {\n  __typename?: 'ComponentStoreStoreAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentStoreStoreNodeAggregateSelection>\n}\n\nexport type ComponentStoreStoreNodeAggregateSelection = {\n  __typename?: 'ComponentStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type ComponentStoreUpdateFieldInput = {\n  connect?: InputMaybe<ComponentStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<ComponentStoreCreateFieldInput>\n  delete?: InputMaybe<ComponentStoreDeleteFieldInput>\n  disconnect?: InputMaybe<ComponentStoreDisconnectFieldInput>\n  update?: InputMaybe<ComponentStoreUpdateConnectionInput>\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n}\n\nexport type ComponentUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ComponentUpdateInput = {\n  api?: InputMaybe<ComponentApiUpdateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  keyGenerator?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  props?: InputMaybe<ComponentPropsUpdateFieldInput>\n  rootElement?: InputMaybe<ComponentRootElementUpdateFieldInput>\n  store?: InputMaybe<ComponentStoreUpdateFieldInput>\n}\n\nexport type ComponentUserOwnerAggregationSelection = {\n  __typename?: 'ComponentUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ComponentUserOwnerNodeAggregateSelection>\n}\n\nexport type ComponentUserOwnerNodeAggregateSelection = {\n  __typename?: 'ComponentUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentWhere = {\n  AND?: InputMaybe<Array<ComponentWhere>>\n  NOT?: InputMaybe<ComponentWhere>\n  OR?: InputMaybe<Array<ComponentWhere>>\n  api?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<ComponentApiAggregateInput>\n  apiConnection?: InputMaybe<ComponentApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<ComponentApiConnectionWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  childrenContainerElement?: InputMaybe<ElementWhere>\n  childrenContainerElementAggregate?: InputMaybe<ComponentChildrenContainerElementAggregateInput>\n  childrenContainerElementConnection?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  childrenContainerElementConnection_NOT?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  childrenContainerElement_NOT?: InputMaybe<ElementWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  keyGenerator?: InputMaybe<Scalars['String']['input']>\n  keyGenerator_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  keyGenerator_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  keyGenerator_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  keyGenerator_MATCHES?: InputMaybe<Scalars['String']['input']>\n  keyGenerator_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ComponentOwnerAggregateInput>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  props?: InputMaybe<PropWhere>\n  propsAggregate?: InputMaybe<ComponentPropsAggregateInput>\n  propsConnection?: InputMaybe<ComponentPropsConnectionWhere>\n  propsConnection_NOT?: InputMaybe<ComponentPropsConnectionWhere>\n  props_NOT?: InputMaybe<PropWhere>\n  rootElement?: InputMaybe<ElementWhere>\n  rootElementAggregate?: InputMaybe<ComponentRootElementAggregateInput>\n  rootElementConnection?: InputMaybe<ComponentRootElementConnectionWhere>\n  rootElementConnection_NOT?: InputMaybe<ComponentRootElementConnectionWhere>\n  rootElement_NOT?: InputMaybe<ElementWhere>\n  store?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<ComponentStoreAggregateInput>\n  storeConnection?: InputMaybe<ComponentStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<ComponentStoreConnectionWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n}\n\nexport type ComponentsConnection = {\n  __typename?: 'ComponentsConnection'\n  edges: Array<ComponentEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type CreateActionTypesMutationResponse = {\n  __typename?: 'CreateActionTypesMutationResponse'\n  actionTypes: Array<ActionType>\n  info: CreateInfo\n}\n\nexport type CreateApiActionsMutationResponse = {\n  __typename?: 'CreateApiActionsMutationResponse'\n  apiActions: Array<ApiAction>\n  info: CreateInfo\n}\n\nexport type CreateAppTypesMutationResponse = {\n  __typename?: 'CreateAppTypesMutationResponse'\n  appTypes: Array<AppType>\n  info: CreateInfo\n}\n\nexport type CreateAppsMutationResponse = {\n  __typename?: 'CreateAppsMutationResponse'\n  apps: Array<App>\n  info: CreateInfo\n}\n\nexport type CreateArrayTypesMutationResponse = {\n  __typename?: 'CreateArrayTypesMutationResponse'\n  arrayTypes: Array<ArrayType>\n  info: CreateInfo\n}\n\nexport type CreateAtomsMutationResponse = {\n  __typename?: 'CreateAtomsMutationResponse'\n  atoms: Array<Atom>\n  info: CreateInfo\n}\n\nexport type CreateCodeActionsMutationResponse = {\n  __typename?: 'CreateCodeActionsMutationResponse'\n  codeActions: Array<CodeAction>\n  info: CreateInfo\n}\n\nexport type CreateCodeMirrorTypesMutationResponse = {\n  __typename?: 'CreateCodeMirrorTypesMutationResponse'\n  codeMirrorTypes: Array<CodeMirrorType>\n  info: CreateInfo\n}\n\nexport type CreateComponentsMutationResponse = {\n  __typename?: 'CreateComponentsMutationResponse'\n  components: Array<Component>\n  info: CreateInfo\n}\n\nexport type CreateDomainsMutationResponse = {\n  __typename?: 'CreateDomainsMutationResponse'\n  domains: Array<Domain>\n  info: CreateInfo\n}\n\nexport type CreateElementTypesMutationResponse = {\n  __typename?: 'CreateElementTypesMutationResponse'\n  elementTypes: Array<ElementType>\n  info: CreateInfo\n}\n\nexport type CreateElementsMutationResponse = {\n  __typename?: 'CreateElementsMutationResponse'\n  elements: Array<Element>\n  info: CreateInfo\n}\n\nexport type CreateEnumTypeValuesMutationResponse = {\n  __typename?: 'CreateEnumTypeValuesMutationResponse'\n  enumTypeValues: Array<EnumTypeValue>\n  info: CreateInfo\n}\n\nexport type CreateEnumTypesMutationResponse = {\n  __typename?: 'CreateEnumTypesMutationResponse'\n  enumTypes: Array<EnumType>\n  info: CreateInfo\n}\n\nexport type CreateFieldsMutationResponse = {\n  __typename?: 'CreateFieldsMutationResponse'\n  fields: Array<Field>\n  info: CreateInfo\n}\n\nexport type CreateGetBaseTypesReturnsMutationResponse = {\n  __typename?: 'CreateGetBaseTypesReturnsMutationResponse'\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n  info: CreateInfo\n}\n\nexport type CreateHooksMutationResponse = {\n  __typename?: 'CreateHooksMutationResponse'\n  hooks: Array<Hook>\n  info: CreateInfo\n}\n\nexport type CreateInfo = {\n  __typename?: 'CreateInfo'\n  bookmark?: Maybe<Scalars['String']['output']>\n  nodesCreated: Scalars['Int']['output']\n  relationshipsCreated: Scalars['Int']['output']\n}\n\nexport type CreateInterfaceTypesMutationResponse = {\n  __typename?: 'CreateInterfaceTypesMutationResponse'\n  info: CreateInfo\n  interfaceTypes: Array<InterfaceType>\n}\n\nexport type CreateLambdaTypesMutationResponse = {\n  __typename?: 'CreateLambdaTypesMutationResponse'\n  info: CreateInfo\n  lambdaTypes: Array<LambdaType>\n}\n\nexport type CreatePageTypesMutationResponse = {\n  __typename?: 'CreatePageTypesMutationResponse'\n  info: CreateInfo\n  pageTypes: Array<PageType>\n}\n\nexport type CreatePagesMutationResponse = {\n  __typename?: 'CreatePagesMutationResponse'\n  info: CreateInfo\n  pages: Array<Page>\n}\n\nexport type CreatePrimitiveTypesMutationResponse = {\n  __typename?: 'CreatePrimitiveTypesMutationResponse'\n  info: CreateInfo\n  primitiveTypes: Array<PrimitiveType>\n}\n\nexport type CreatePropsMutationResponse = {\n  __typename?: 'CreatePropsMutationResponse'\n  info: CreateInfo\n  props: Array<Prop>\n}\n\nexport type CreateReactNodeTypesMutationResponse = {\n  __typename?: 'CreateReactNodeTypesMutationResponse'\n  info: CreateInfo\n  reactNodeTypes: Array<ReactNodeType>\n}\n\nexport type CreateRenderPropTypesMutationResponse = {\n  __typename?: 'CreateRenderPropTypesMutationResponse'\n  info: CreateInfo\n  renderPropTypes: Array<RenderPropType>\n}\n\nexport type CreateResourcesMutationResponse = {\n  __typename?: 'CreateResourcesMutationResponse'\n  info: CreateInfo\n  resources: Array<Resource>\n}\n\nexport type CreateStoresMutationResponse = {\n  __typename?: 'CreateStoresMutationResponse'\n  info: CreateInfo\n  stores: Array<Store>\n}\n\nexport type CreateTagsMutationResponse = {\n  __typename?: 'CreateTagsMutationResponse'\n  info: CreateInfo\n  tags: Array<Tag>\n}\n\nexport type CreateTypeReferencesMutationResponse = {\n  __typename?: 'CreateTypeReferencesMutationResponse'\n  info: CreateInfo\n  typeReferences: Array<TypeReference>\n}\n\nexport type CreateUnionTypesMutationResponse = {\n  __typename?: 'CreateUnionTypesMutationResponse'\n  info: CreateInfo\n  unionTypes: Array<UnionType>\n}\n\nexport type CreateUsersMutationResponse = {\n  __typename?: 'CreateUsersMutationResponse'\n  info: CreateInfo\n  users: Array<User>\n}\n\nexport type DeleteInfo = {\n  __typename?: 'DeleteInfo'\n  bookmark?: Maybe<Scalars['String']['output']>\n  nodesDeleted: Scalars['Int']['output']\n  relationshipsDeleted: Scalars['Int']['output']\n}\n\nexport type Domain = {\n  __typename?: 'Domain'\n  app: App\n  appAggregate?: Maybe<DomainAppAppAggregationSelection>\n  appConnection: DomainAppConnection\n  domainConfig: VercelDomainConfig\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  projectDomain: VercelProjectDomain\n}\n\nexport type DomainAppArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type DomainAppAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type DomainAppConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<DomainAppConnectionSort>>\n  where?: InputMaybe<DomainAppConnectionWhere>\n}\n\nexport type DomainAggregateSelection = {\n  __typename?: 'DomainAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type DomainAppAggregateInput = {\n  AND?: InputMaybe<Array<DomainAppAggregateInput>>\n  NOT?: InputMaybe<DomainAppAggregateInput>\n  OR?: InputMaybe<Array<DomainAppAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<DomainAppNodeAggregationWhereInput>\n}\n\nexport type DomainAppAppAggregationSelection = {\n  __typename?: 'DomainAppAppAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<DomainAppAppNodeAggregateSelection>\n}\n\nexport type DomainAppAppNodeAggregateSelection = {\n  __typename?: 'DomainAppAppNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type DomainAppConnectFieldInput = {\n  connect?: InputMaybe<AppConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AppConnectWhere>\n}\n\nexport type DomainAppConnectOrCreateFieldInput = {\n  onCreate: DomainAppConnectOrCreateFieldInputOnCreate\n  where: AppConnectOrCreateWhere\n}\n\nexport type DomainAppConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type DomainAppConnection = {\n  __typename?: 'DomainAppConnection'\n  edges: Array<DomainAppRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type DomainAppConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type DomainAppConnectionWhere = {\n  AND?: InputMaybe<Array<DomainAppConnectionWhere>>\n  NOT?: InputMaybe<DomainAppConnectionWhere>\n  OR?: InputMaybe<Array<DomainAppConnectionWhere>>\n  node?: InputMaybe<AppWhere>\n}\n\nexport type DomainAppCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type DomainAppDeleteFieldInput = {\n  delete?: InputMaybe<AppDeleteInput>\n  where?: InputMaybe<DomainAppConnectionWhere>\n}\n\nexport type DomainAppDisconnectFieldInput = {\n  disconnect?: InputMaybe<AppDisconnectInput>\n  where?: InputMaybe<DomainAppConnectionWhere>\n}\n\nexport type DomainAppFieldInput = {\n  connect?: InputMaybe<DomainAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n  create?: InputMaybe<DomainAppCreateFieldInput>\n}\n\nexport type DomainAppNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<DomainAppNodeAggregationWhereInput>>\n  NOT?: InputMaybe<DomainAppNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<DomainAppNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type DomainAppRelationship = {\n  __typename?: 'DomainAppRelationship'\n  cursor: Scalars['String']['output']\n  node: App\n}\n\nexport type DomainAppUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type DomainAppUpdateFieldInput = {\n  connect?: InputMaybe<DomainAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n  create?: InputMaybe<DomainAppCreateFieldInput>\n  delete?: InputMaybe<DomainAppDeleteFieldInput>\n  disconnect?: InputMaybe<DomainAppDisconnectFieldInput>\n  update?: InputMaybe<DomainAppUpdateConnectionInput>\n  where?: InputMaybe<DomainAppConnectionWhere>\n}\n\nexport type DomainConnectInput = {\n  app?: InputMaybe<DomainAppConnectFieldInput>\n}\n\nexport type DomainConnectOrCreateInput = {\n  app?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n}\n\nexport type DomainConnectOrCreateWhere = {\n  node: DomainUniqueWhere\n}\n\nexport type DomainConnectWhere = {\n  node: DomainWhere\n}\n\nexport type DomainCreateInput = {\n  app?: InputMaybe<DomainAppFieldInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n}\n\nexport type DomainDeleteInput = {\n  app?: InputMaybe<DomainAppDeleteFieldInput>\n}\n\nexport type DomainDisconnectInput = {\n  app?: InputMaybe<DomainAppDisconnectFieldInput>\n}\n\nexport type DomainEdge = {\n  __typename?: 'DomainEdge'\n  cursor: Scalars['String']['output']\n  node: Domain\n}\n\nexport type DomainOnCreateInput = {\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n}\n\nexport type DomainOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more DomainSort objects to sort Domains by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<DomainSort>>\n}\n\nexport type DomainRelationInput = {\n  app?: InputMaybe<DomainAppCreateFieldInput>\n}\n\n/** Fields to sort Domains by. The order in which sorts are applied is not guaranteed when specifying many fields in one DomainSort object. */\nexport type DomainSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type DomainUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type DomainUpdateInput = {\n  app?: InputMaybe<DomainAppUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type DomainWhere = {\n  AND?: InputMaybe<Array<DomainWhere>>\n  NOT?: InputMaybe<DomainWhere>\n  OR?: InputMaybe<Array<DomainWhere>>\n  app?: InputMaybe<AppWhere>\n  appAggregate?: InputMaybe<DomainAppAggregateInput>\n  appConnection?: InputMaybe<DomainAppConnectionWhere>\n  appConnection_NOT?: InputMaybe<DomainAppConnectionWhere>\n  app_NOT?: InputMaybe<AppWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type DomainsConnection = {\n  __typename?: 'DomainsConnection'\n  edges: Array<DomainEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Element = {\n  __typename?: 'Element'\n  customCss?: Maybe<Scalars['String']['output']>\n  descendantElements: Array<Element>\n  firstChild?: Maybe<Element>\n  firstChildAggregate?: Maybe<ElementElementFirstChildAggregationSelection>\n  firstChildConnection: ElementFirstChildConnection\n  guiCss?: Maybe<Scalars['String']['output']>\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  nextSibling?: Maybe<Element>\n  nextSiblingAggregate?: Maybe<ElementElementNextSiblingAggregationSelection>\n  nextSiblingConnection: ElementNextSiblingConnection\n  page?: Maybe<Page>\n  pageAggregate?: Maybe<ElementPagePageAggregationSelection>\n  pageConnection: ElementPageConnection\n  parent?: Maybe<Element>\n  parentAggregate?: Maybe<ElementElementParentAggregationSelection>\n  parentComponent?: Maybe<Component>\n  parentComponentAggregate?: Maybe<ElementComponentParentComponentAggregationSelection>\n  parentComponentConnection: ElementParentComponentConnection\n  parentConnection: ElementParentConnection\n  postRenderAction?: Maybe<BaseAction>\n  postRenderActionConnection: ElementPostRenderActionConnection\n  preRenderAction?: Maybe<BaseAction>\n  preRenderActionConnection: ElementPreRenderActionConnection\n  prevSibling?: Maybe<Element>\n  prevSiblingAggregate?: Maybe<ElementElementPrevSiblingAggregationSelection>\n  prevSiblingConnection: ElementPrevSiblingConnection\n  propTransformationJs?: Maybe<Scalars['String']['output']>\n  props: Prop\n  propsAggregate?: Maybe<ElementPropPropsAggregationSelection>\n  propsConnection: ElementPropsConnection\n  renderAtomType?: Maybe<Atom>\n  renderAtomTypeAggregate?: Maybe<ElementAtomRenderAtomTypeAggregationSelection>\n  renderAtomTypeConnection: ElementRenderAtomTypeConnection\n  renderComponentType?: Maybe<Component>\n  renderComponentTypeAggregate?: Maybe<ElementComponentRenderComponentTypeAggregationSelection>\n  renderComponentTypeConnection: ElementRenderComponentTypeConnection\n  renderForEachPropKey?: Maybe<Scalars['String']['output']>\n  renderIfExpression?: Maybe<Scalars['String']['output']>\n  renderType?: Maybe<RenderType>\n}\n\nexport type ElementFirstChildArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementFirstChildAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementFirstChildConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementFirstChildConnectionSort>>\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n}\n\nexport type ElementNextSiblingArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementNextSiblingAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementNextSiblingConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementNextSiblingConnectionSort>>\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n}\n\nexport type ElementPageArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type ElementPageAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type ElementPageConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementPageConnectionSort>>\n  where?: InputMaybe<ElementPageConnectionWhere>\n}\n\nexport type ElementParentArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementParentAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementParentComponentArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementParentComponentAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementParentComponentConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementParentComponentConnectionSort>>\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n}\n\nexport type ElementParentConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementParentConnectionSort>>\n  where?: InputMaybe<ElementParentConnectionWhere>\n}\n\nexport type ElementPostRenderActionArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<BaseActionOptions>\n  where?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPostRenderActionConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementPostRenderActionConnectionSort>>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<BaseActionOptions>\n  where?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPreRenderActionConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementPreRenderActionConnectionSort>>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPrevSiblingArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementPrevSiblingAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type ElementPrevSiblingConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementPrevSiblingConnectionSort>>\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n}\n\nexport type ElementPropsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ElementPropsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ElementPropsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementPropsConnectionSort>>\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementRenderAtomTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type ElementRenderAtomTypeAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type ElementRenderAtomTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementRenderAtomTypeConnectionSort>>\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n}\n\nexport type ElementRenderComponentTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementRenderComponentTypeAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementRenderComponentTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ElementRenderComponentTypeConnectionSort>>\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n}\n\nexport type ElementAggregateSelection = {\n  __typename?: 'ElementAggregateSelection'\n  count: Scalars['Int']['output']\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementAtomRenderAtomTypeAggregationSelection = {\n  __typename?: 'ElementAtomRenderAtomTypeAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementAtomRenderAtomTypeNodeAggregateSelection>\n}\n\nexport type ElementAtomRenderAtomTypeNodeAggregateSelection = {\n  __typename?: 'ElementAtomRenderAtomTypeNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ElementComponentParentComponentAggregationSelection = {\n  __typename?: 'ElementComponentParentComponentAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementComponentParentComponentNodeAggregateSelection>\n}\n\nexport type ElementComponentParentComponentNodeAggregateSelection = {\n  __typename?: 'ElementComponentParentComponentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ElementComponentRenderComponentTypeAggregationSelection = {\n  __typename?: 'ElementComponentRenderComponentTypeAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementComponentRenderComponentTypeNodeAggregateSelection>\n}\n\nexport type ElementComponentRenderComponentTypeNodeAggregateSelection = {\n  __typename?: 'ElementComponentRenderComponentTypeNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ElementConnectInput = {\n  firstChild?: InputMaybe<ElementFirstChildConnectFieldInput>\n  nextSibling?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  page?: InputMaybe<ElementPageConnectFieldInput>\n  parent?: InputMaybe<ElementParentConnectFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentConnectFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  props?: InputMaybe<ElementPropsConnectFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n}\n\nexport type ElementConnectOrCreateInput = {\n  firstChild?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n  nextSibling?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n  page?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n  parent?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n  props?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n}\n\nexport type ElementConnectOrCreateWhere = {\n  node: ElementUniqueWhere\n}\n\nexport type ElementConnectWhere = {\n  node: ElementWhere\n}\n\nexport type ElementCreateInput = {\n  customCss?: InputMaybe<Scalars['String']['input']>\n  firstChild?: InputMaybe<ElementFirstChildFieldInput>\n  guiCss?: InputMaybe<Scalars['String']['input']>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  nextSibling?: InputMaybe<ElementNextSiblingFieldInput>\n  page?: InputMaybe<ElementPageFieldInput>\n  parent?: InputMaybe<ElementParentFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingFieldInput>\n  propTransformationJs?: InputMaybe<Scalars['String']['input']>\n  props?: InputMaybe<ElementPropsFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeFieldInput>\n  renderForEachPropKey?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ElementDeleteInput = {\n  firstChild?: InputMaybe<ElementFirstChildDeleteFieldInput>\n  nextSibling?: InputMaybe<ElementNextSiblingDeleteFieldInput>\n  page?: InputMaybe<ElementPageDeleteFieldInput>\n  parent?: InputMaybe<ElementParentDeleteFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentDeleteFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionDeleteFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionDeleteFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingDeleteFieldInput>\n  props?: InputMaybe<ElementPropsDeleteFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeDeleteFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeDeleteFieldInput>\n}\n\nexport type ElementDisconnectInput = {\n  firstChild?: InputMaybe<ElementFirstChildDisconnectFieldInput>\n  nextSibling?: InputMaybe<ElementNextSiblingDisconnectFieldInput>\n  page?: InputMaybe<ElementPageDisconnectFieldInput>\n  parent?: InputMaybe<ElementParentDisconnectFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentDisconnectFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionDisconnectFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionDisconnectFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingDisconnectFieldInput>\n  props?: InputMaybe<ElementPropsDisconnectFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeDisconnectFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeDisconnectFieldInput>\n}\n\nexport type ElementEdge = {\n  __typename?: 'ElementEdge'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ElementElementFirstChildAggregationSelection = {\n  __typename?: 'ElementElementFirstChildAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementElementFirstChildNodeAggregateSelection>\n}\n\nexport type ElementElementFirstChildNodeAggregateSelection = {\n  __typename?: 'ElementElementFirstChildNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementNextSiblingAggregationSelection = {\n  __typename?: 'ElementElementNextSiblingAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementElementNextSiblingNodeAggregateSelection>\n}\n\nexport type ElementElementNextSiblingNodeAggregateSelection = {\n  __typename?: 'ElementElementNextSiblingNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementParentAggregationSelection = {\n  __typename?: 'ElementElementParentAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementElementParentNodeAggregateSelection>\n}\n\nexport type ElementElementParentNodeAggregateSelection = {\n  __typename?: 'ElementElementParentNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementPrevSiblingAggregationSelection = {\n  __typename?: 'ElementElementPrevSiblingAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementElementPrevSiblingNodeAggregateSelection>\n}\n\nexport type ElementElementPrevSiblingNodeAggregateSelection = {\n  __typename?: 'ElementElementPrevSiblingNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementFirstChildAggregateInput = {\n  AND?: InputMaybe<Array<ElementFirstChildAggregateInput>>\n  NOT?: InputMaybe<ElementFirstChildAggregateInput>\n  OR?: InputMaybe<Array<ElementFirstChildAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementFirstChildNodeAggregationWhereInput>\n}\n\nexport type ElementFirstChildConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ElementFirstChildConnectOrCreateFieldInput = {\n  onCreate: ElementFirstChildConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ElementFirstChildConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementFirstChildConnection = {\n  __typename?: 'ElementFirstChildConnection'\n  edges: Array<ElementFirstChildRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementFirstChildConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementFirstChildConnectionWhere = {\n  AND?: InputMaybe<Array<ElementFirstChildConnectionWhere>>\n  NOT?: InputMaybe<ElementFirstChildConnectionWhere>\n  OR?: InputMaybe<Array<ElementFirstChildConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ElementFirstChildCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementFirstChildDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n}\n\nexport type ElementFirstChildDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n}\n\nexport type ElementFirstChildFieldInput = {\n  connect?: InputMaybe<ElementFirstChildConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementFirstChildCreateFieldInput>\n}\n\nexport type ElementFirstChildNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementFirstChildNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementFirstChildNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementFirstChildNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementFirstChildRelationship = {\n  __typename?: 'ElementFirstChildRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ElementFirstChildUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementFirstChildUpdateFieldInput = {\n  connect?: InputMaybe<ElementFirstChildConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementFirstChildCreateFieldInput>\n  delete?: InputMaybe<ElementFirstChildDeleteFieldInput>\n  disconnect?: InputMaybe<ElementFirstChildDisconnectFieldInput>\n  update?: InputMaybe<ElementFirstChildUpdateConnectionInput>\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n}\n\nexport type ElementNextSiblingAggregateInput = {\n  AND?: InputMaybe<Array<ElementNextSiblingAggregateInput>>\n  NOT?: InputMaybe<ElementNextSiblingAggregateInput>\n  OR?: InputMaybe<Array<ElementNextSiblingAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementNextSiblingNodeAggregationWhereInput>\n}\n\nexport type ElementNextSiblingConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ElementNextSiblingConnectOrCreateFieldInput = {\n  onCreate: ElementNextSiblingConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ElementNextSiblingConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementNextSiblingConnection = {\n  __typename?: 'ElementNextSiblingConnection'\n  edges: Array<ElementNextSiblingRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementNextSiblingConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementNextSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<ElementNextSiblingConnectionWhere>>\n  NOT?: InputMaybe<ElementNextSiblingConnectionWhere>\n  OR?: InputMaybe<Array<ElementNextSiblingConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ElementNextSiblingCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementNextSiblingDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n}\n\nexport type ElementNextSiblingDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n}\n\nexport type ElementNextSiblingFieldInput = {\n  connect?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementNextSiblingCreateFieldInput>\n}\n\nexport type ElementNextSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementNextSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementNextSiblingNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementNextSiblingNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementNextSiblingRelationship = {\n  __typename?: 'ElementNextSiblingRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ElementNextSiblingUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementNextSiblingUpdateFieldInput = {\n  connect?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementNextSiblingCreateFieldInput>\n  delete?: InputMaybe<ElementNextSiblingDeleteFieldInput>\n  disconnect?: InputMaybe<ElementNextSiblingDisconnectFieldInput>\n  update?: InputMaybe<ElementNextSiblingUpdateConnectionInput>\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n}\n\nexport type ElementOnCreateInput = {\n  customCss?: InputMaybe<Scalars['String']['input']>\n  guiCss?: InputMaybe<Scalars['String']['input']>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  propTransformationJs?: InputMaybe<Scalars['String']['input']>\n  renderForEachPropKey?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ElementOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ElementSort objects to sort Elements by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ElementSort>>\n}\n\nexport type ElementPageAggregateInput = {\n  AND?: InputMaybe<Array<ElementPageAggregateInput>>\n  NOT?: InputMaybe<ElementPageAggregateInput>\n  OR?: InputMaybe<Array<ElementPageAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementPageNodeAggregationWhereInput>\n}\n\nexport type ElementPageConnectFieldInput = {\n  connect?: InputMaybe<PageConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PageConnectWhere>\n}\n\nexport type ElementPageConnectOrCreateFieldInput = {\n  onCreate: ElementPageConnectOrCreateFieldInputOnCreate\n  where: PageConnectOrCreateWhere\n}\n\nexport type ElementPageConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type ElementPageConnection = {\n  __typename?: 'ElementPageConnection'\n  edges: Array<ElementPageRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementPageConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type ElementPageConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPageConnectionWhere>>\n  NOT?: InputMaybe<ElementPageConnectionWhere>\n  OR?: InputMaybe<Array<ElementPageConnectionWhere>>\n  node?: InputMaybe<PageWhere>\n}\n\nexport type ElementPageCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type ElementPageDeleteFieldInput = {\n  delete?: InputMaybe<PageDeleteInput>\n  where?: InputMaybe<ElementPageConnectionWhere>\n}\n\nexport type ElementPageDisconnectFieldInput = {\n  disconnect?: InputMaybe<PageDisconnectInput>\n  where?: InputMaybe<ElementPageConnectionWhere>\n}\n\nexport type ElementPageFieldInput = {\n  connect?: InputMaybe<ElementPageConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPageCreateFieldInput>\n}\n\nexport type ElementPageNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPageNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPageNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementPageNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementPagePageAggregationSelection = {\n  __typename?: 'ElementPagePageAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementPagePageNodeAggregateSelection>\n}\n\nexport type ElementPagePageNodeAggregateSelection = {\n  __typename?: 'ElementPagePageNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type ElementPageRelationship = {\n  __typename?: 'ElementPageRelationship'\n  cursor: Scalars['String']['output']\n  node: Page\n}\n\nexport type ElementPageUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type ElementPageUpdateFieldInput = {\n  connect?: InputMaybe<ElementPageConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPageCreateFieldInput>\n  delete?: InputMaybe<ElementPageDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPageDisconnectFieldInput>\n  update?: InputMaybe<ElementPageUpdateConnectionInput>\n  where?: InputMaybe<ElementPageConnectionWhere>\n}\n\nexport type ElementParentAggregateInput = {\n  AND?: InputMaybe<Array<ElementParentAggregateInput>>\n  NOT?: InputMaybe<ElementParentAggregateInput>\n  OR?: InputMaybe<Array<ElementParentAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementParentNodeAggregationWhereInput>\n}\n\nexport type ElementParentComponentAggregateInput = {\n  AND?: InputMaybe<Array<ElementParentComponentAggregateInput>>\n  NOT?: InputMaybe<ElementParentComponentAggregateInput>\n  OR?: InputMaybe<Array<ElementParentComponentAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementParentComponentNodeAggregationWhereInput>\n}\n\nexport type ElementParentComponentConnectFieldInput = {\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ComponentConnectWhere>\n}\n\nexport type ElementParentComponentConnectOrCreateFieldInput = {\n  onCreate: ElementParentComponentConnectOrCreateFieldInputOnCreate\n  where: ComponentConnectOrCreateWhere\n}\n\nexport type ElementParentComponentConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type ElementParentComponentConnection = {\n  __typename?: 'ElementParentComponentConnection'\n  edges: Array<ElementParentComponentRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementParentComponentConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type ElementParentComponentConnectionWhere = {\n  AND?: InputMaybe<Array<ElementParentComponentConnectionWhere>>\n  NOT?: InputMaybe<ElementParentComponentConnectionWhere>\n  OR?: InputMaybe<Array<ElementParentComponentConnectionWhere>>\n  node?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementParentComponentCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type ElementParentComponentDeleteFieldInput = {\n  delete?: InputMaybe<ComponentDeleteInput>\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n}\n\nexport type ElementParentComponentDisconnectFieldInput = {\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n}\n\nexport type ElementParentComponentFieldInput = {\n  connect?: InputMaybe<ElementParentComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementParentComponentCreateFieldInput>\n}\n\nexport type ElementParentComponentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementParentComponentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementParentComponentNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementParentComponentNodeAggregationWhereInput>>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementParentComponentRelationship = {\n  __typename?: 'ElementParentComponentRelationship'\n  cursor: Scalars['String']['output']\n  node: Component\n}\n\nexport type ElementParentComponentUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type ElementParentComponentUpdateFieldInput = {\n  connect?: InputMaybe<ElementParentComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementParentComponentCreateFieldInput>\n  delete?: InputMaybe<ElementParentComponentDeleteFieldInput>\n  disconnect?: InputMaybe<ElementParentComponentDisconnectFieldInput>\n  update?: InputMaybe<ElementParentComponentUpdateConnectionInput>\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n}\n\nexport type ElementParentConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ElementParentConnectOrCreateFieldInput = {\n  onCreate: ElementParentConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ElementParentConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementParentConnection = {\n  __typename?: 'ElementParentConnection'\n  edges: Array<ElementParentRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementParentConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementParentConnectionWhere = {\n  AND?: InputMaybe<Array<ElementParentConnectionWhere>>\n  NOT?: InputMaybe<ElementParentConnectionWhere>\n  OR?: InputMaybe<Array<ElementParentConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ElementParentCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementParentDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ElementParentConnectionWhere>\n}\n\nexport type ElementParentDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ElementParentConnectionWhere>\n}\n\nexport type ElementParentFieldInput = {\n  connect?: InputMaybe<ElementParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementParentCreateFieldInput>\n}\n\nexport type ElementParentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementParentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementParentNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementParentNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementParentRelationship = {\n  __typename?: 'ElementParentRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ElementParentUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementParentUpdateFieldInput = {\n  connect?: InputMaybe<ElementParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementParentCreateFieldInput>\n  delete?: InputMaybe<ElementParentDeleteFieldInput>\n  disconnect?: InputMaybe<ElementParentDisconnectFieldInput>\n  update?: InputMaybe<ElementParentUpdateConnectionInput>\n  where?: InputMaybe<ElementParentConnectionWhere>\n}\n\nexport type ElementPostRenderActionConnectFieldInput = {\n  connect?: InputMaybe<BaseActionConnectInput>\n  where?: InputMaybe<BaseActionConnectWhere>\n}\n\nexport type ElementPostRenderActionConnection = {\n  __typename?: 'ElementPostRenderActionConnection'\n  edges: Array<ElementPostRenderActionRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementPostRenderActionConnectionSort = {\n  node?: InputMaybe<BaseActionSort>\n}\n\nexport type ElementPostRenderActionConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPostRenderActionConnectionWhere>>\n  NOT?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  OR?: InputMaybe<Array<ElementPostRenderActionConnectionWhere>>\n  node?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPostRenderActionCreateFieldInput = {\n  node: BaseActionCreateInput\n}\n\nexport type ElementPostRenderActionDeleteFieldInput = {\n  delete?: InputMaybe<BaseActionDeleteInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPostRenderActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<BaseActionDisconnectInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPostRenderActionFieldInput = {\n  connect?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n}\n\nexport type ElementPostRenderActionRelationship = {\n  __typename?: 'ElementPostRenderActionRelationship'\n  cursor: Scalars['String']['output']\n  node: BaseAction\n}\n\nexport type ElementPostRenderActionUpdateConnectionInput = {\n  node?: InputMaybe<BaseActionUpdateInput>\n}\n\nexport type ElementPostRenderActionUpdateFieldInput = {\n  connect?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n  delete?: InputMaybe<ElementPostRenderActionDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPostRenderActionDisconnectFieldInput>\n  update?: InputMaybe<ElementPostRenderActionUpdateConnectionInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionConnectFieldInput = {\n  connect?: InputMaybe<BaseActionConnectInput>\n  where?: InputMaybe<BaseActionConnectWhere>\n}\n\nexport type ElementPreRenderActionConnection = {\n  __typename?: 'ElementPreRenderActionConnection'\n  edges: Array<ElementPreRenderActionRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementPreRenderActionConnectionSort = {\n  node?: InputMaybe<BaseActionSort>\n}\n\nexport type ElementPreRenderActionConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPreRenderActionConnectionWhere>>\n  NOT?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  OR?: InputMaybe<Array<ElementPreRenderActionConnectionWhere>>\n  node?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPreRenderActionCreateFieldInput = {\n  node: BaseActionCreateInput\n}\n\nexport type ElementPreRenderActionDeleteFieldInput = {\n  delete?: InputMaybe<BaseActionDeleteInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<BaseActionDisconnectInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionFieldInput = {\n  connect?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n}\n\nexport type ElementPreRenderActionRelationship = {\n  __typename?: 'ElementPreRenderActionRelationship'\n  cursor: Scalars['String']['output']\n  node: BaseAction\n}\n\nexport type ElementPreRenderActionUpdateConnectionInput = {\n  node?: InputMaybe<BaseActionUpdateInput>\n}\n\nexport type ElementPreRenderActionUpdateFieldInput = {\n  connect?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n  delete?: InputMaybe<ElementPreRenderActionDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPreRenderActionDisconnectFieldInput>\n  update?: InputMaybe<ElementPreRenderActionUpdateConnectionInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPrevSiblingAggregateInput = {\n  AND?: InputMaybe<Array<ElementPrevSiblingAggregateInput>>\n  NOT?: InputMaybe<ElementPrevSiblingAggregateInput>\n  OR?: InputMaybe<Array<ElementPrevSiblingAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementPrevSiblingNodeAggregationWhereInput>\n}\n\nexport type ElementPrevSiblingConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type ElementPrevSiblingConnectOrCreateFieldInput = {\n  onCreate: ElementPrevSiblingConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type ElementPrevSiblingConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementPrevSiblingConnection = {\n  __typename?: 'ElementPrevSiblingConnection'\n  edges: Array<ElementPrevSiblingRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementPrevSiblingConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementPrevSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPrevSiblingConnectionWhere>>\n  NOT?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  OR?: InputMaybe<Array<ElementPrevSiblingConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type ElementPrevSiblingCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementPrevSiblingDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n}\n\nexport type ElementPrevSiblingDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n}\n\nexport type ElementPrevSiblingFieldInput = {\n  connect?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n}\n\nexport type ElementPrevSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPrevSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPrevSiblingNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementPrevSiblingNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementPrevSiblingRelationship = {\n  __typename?: 'ElementPrevSiblingRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type ElementPrevSiblingUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementPrevSiblingUpdateFieldInput = {\n  connect?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n  delete?: InputMaybe<ElementPrevSiblingDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPrevSiblingDisconnectFieldInput>\n  update?: InputMaybe<ElementPrevSiblingUpdateConnectionInput>\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n}\n\nexport type ElementPropPropsAggregationSelection = {\n  __typename?: 'ElementPropPropsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementPropPropsNodeAggregateSelection>\n}\n\nexport type ElementPropPropsNodeAggregateSelection = {\n  __typename?: 'ElementPropPropsNodeAggregateSelection'\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type ElementPropsAggregateInput = {\n  AND?: InputMaybe<Array<ElementPropsAggregateInput>>\n  NOT?: InputMaybe<ElementPropsAggregateInput>\n  OR?: InputMaybe<Array<ElementPropsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementPropsNodeAggregationWhereInput>\n}\n\nexport type ElementPropsConnectFieldInput = {\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PropConnectWhere>\n}\n\nexport type ElementPropsConnectOrCreateFieldInput = {\n  onCreate: ElementPropsConnectOrCreateFieldInputOnCreate\n  where: PropConnectOrCreateWhere\n}\n\nexport type ElementPropsConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ElementPropsConnection = {\n  __typename?: 'ElementPropsConnection'\n  edges: Array<ElementPropsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementPropsConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ElementPropsConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPropsConnectionWhere>>\n  NOT?: InputMaybe<ElementPropsConnectionWhere>\n  OR?: InputMaybe<Array<ElementPropsConnectionWhere>>\n  node?: InputMaybe<PropWhere>\n}\n\nexport type ElementPropsCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ElementPropsDeleteFieldInput = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementPropsDisconnectFieldInput = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementPropsFieldInput = {\n  connect?: InputMaybe<ElementPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPropsCreateFieldInput>\n}\n\nexport type ElementPropsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPropsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPropsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementPropsNodeAggregationWhereInput>>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementPropsRelationship = {\n  __typename?: 'ElementPropsRelationship'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type ElementPropsUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ElementPropsUpdateFieldInput = {\n  connect?: InputMaybe<ElementPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementPropsCreateFieldInput>\n  delete?: InputMaybe<ElementPropsDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPropsDisconnectFieldInput>\n  update?: InputMaybe<ElementPropsUpdateConnectionInput>\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementRelationInput = {\n  firstChild?: InputMaybe<ElementFirstChildCreateFieldInput>\n  nextSibling?: InputMaybe<ElementNextSiblingCreateFieldInput>\n  page?: InputMaybe<ElementPageCreateFieldInput>\n  parent?: InputMaybe<ElementParentCreateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentCreateFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n  props?: InputMaybe<ElementPropsCreateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n}\n\nexport type ElementRenderAtomTypeAggregateInput = {\n  AND?: InputMaybe<Array<ElementRenderAtomTypeAggregateInput>>\n  NOT?: InputMaybe<ElementRenderAtomTypeAggregateInput>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementRenderAtomTypeNodeAggregationWhereInput>\n}\n\nexport type ElementRenderAtomTypeConnectFieldInput = {\n  connect?: InputMaybe<AtomConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type ElementRenderAtomTypeConnectOrCreateFieldInput = {\n  onCreate: ElementRenderAtomTypeConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type ElementRenderAtomTypeConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type ElementRenderAtomTypeConnection = {\n  __typename?: 'ElementRenderAtomTypeConnection'\n  edges: Array<ElementRenderAtomTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementRenderAtomTypeConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type ElementRenderAtomTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ElementRenderAtomTypeConnectionWhere>>\n  NOT?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type ElementRenderAtomTypeCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type ElementRenderAtomTypeDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n}\n\nexport type ElementRenderAtomTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n}\n\nexport type ElementRenderAtomTypeFieldInput = {\n  connect?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n}\n\nexport type ElementRenderAtomTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementRenderAtomTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementRenderAtomTypeNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementRenderAtomTypeRelationship = {\n  __typename?: 'ElementRenderAtomTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type ElementRenderAtomTypeUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type ElementRenderAtomTypeUpdateFieldInput = {\n  connect?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n  delete?: InputMaybe<ElementRenderAtomTypeDeleteFieldInput>\n  disconnect?: InputMaybe<ElementRenderAtomTypeDisconnectFieldInput>\n  update?: InputMaybe<ElementRenderAtomTypeUpdateConnectionInput>\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n}\n\nexport type ElementRenderComponentTypeAggregateInput = {\n  AND?: InputMaybe<Array<ElementRenderComponentTypeAggregateInput>>\n  NOT?: InputMaybe<ElementRenderComponentTypeAggregateInput>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementRenderComponentTypeNodeAggregationWhereInput>\n}\n\nexport type ElementRenderComponentTypeConnectFieldInput = {\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ComponentConnectWhere>\n}\n\nexport type ElementRenderComponentTypeConnectOrCreateFieldInput = {\n  onCreate: ElementRenderComponentTypeConnectOrCreateFieldInputOnCreate\n  where: ComponentConnectOrCreateWhere\n}\n\nexport type ElementRenderComponentTypeConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type ElementRenderComponentTypeConnection = {\n  __typename?: 'ElementRenderComponentTypeConnection'\n  edges: Array<ElementRenderComponentTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementRenderComponentTypeConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type ElementRenderComponentTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ElementRenderComponentTypeConnectionWhere>>\n  NOT?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeConnectionWhere>>\n  node?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementRenderComponentTypeCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type ElementRenderComponentTypeDeleteFieldInput = {\n  delete?: InputMaybe<ComponentDeleteInput>\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n}\n\nexport type ElementRenderComponentTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n}\n\nexport type ElementRenderComponentTypeFieldInput = {\n  connect?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n}\n\nexport type ElementRenderComponentTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementRenderComponentTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementRenderComponentTypeNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeNodeAggregationWhereInput>>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementRenderComponentTypeRelationship = {\n  __typename?: 'ElementRenderComponentTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: Component\n}\n\nexport type ElementRenderComponentTypeUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type ElementRenderComponentTypeUpdateFieldInput = {\n  connect?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n  delete?: InputMaybe<ElementRenderComponentTypeDeleteFieldInput>\n  disconnect?: InputMaybe<ElementRenderComponentTypeDisconnectFieldInput>\n  update?: InputMaybe<ElementRenderComponentTypeUpdateConnectionInput>\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n}\n\n/** Fields to sort Elements by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementSort object. */\nexport type ElementSort = {\n  customCss?: InputMaybe<SortDirection>\n  guiCss?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  propTransformationJs?: InputMaybe<SortDirection>\n  renderForEachPropKey?: InputMaybe<SortDirection>\n  renderIfExpression?: InputMaybe<SortDirection>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementType = IBaseType & {\n  __typename?: 'ElementType'\n  /** Allows scoping the type of element to only descendants, children or all elements */\n  elementKind: ElementTypeKind\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<ElementTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ElementTypeAggregateSelection = {\n  __typename?: 'ElementTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ElementTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ElementTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ElementTypeConnectOrCreateWhere = {\n  node: ElementTypeUniqueWhere\n}\n\nexport type ElementTypeConnectWhere = {\n  node: ElementTypeWhere\n}\n\nexport type ElementTypeCreateInput = {\n  elementKind: ElementTypeKind\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ElementTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ElementTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ElementTypeEdge = {\n  __typename?: 'ElementTypeEdge'\n  cursor: Scalars['String']['output']\n  node: ElementType\n}\n\nexport enum ElementTypeKind {\n  AllElements = 'AllElements',\n  ChildrenOnly = 'ChildrenOnly',\n  DescendantsOnly = 'DescendantsOnly',\n  ExcludeDescendantsElements = 'ExcludeDescendantsElements',\n}\n\nexport type ElementTypeOnCreateInput = {\n  elementKind: ElementTypeKind\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type ElementTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ElementTypeSort objects to sort ElementTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ElementTypeSort>>\n}\n\nexport type ElementTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ElementTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ElementTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<ElementTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ElementTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ElementTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ElementTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ElementTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ElementTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementTypeSort object. */\nexport type ElementTypeSort = {\n  elementKind?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type ElementTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ElementTypeUpdateInput = {\n  elementKind?: InputMaybe<ElementTypeKind>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ElementTypeUserOwnerAggregationSelection = {\n  __typename?: 'ElementTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ElementTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ElementTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ElementTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ElementTypeWhere = {\n  AND?: InputMaybe<Array<ElementTypeWhere>>\n  NOT?: InputMaybe<ElementTypeWhere>\n  OR?: InputMaybe<Array<ElementTypeWhere>>\n  elementKind?: InputMaybe<ElementTypeKind>\n  elementKind_IN?: InputMaybe<Array<ElementTypeKind>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ElementTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type ElementTypesConnection = {\n  __typename?: 'ElementTypesConnection'\n  edges: Array<ElementTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ElementUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ElementUpdateInput = {\n  customCss?: InputMaybe<Scalars['String']['input']>\n  firstChild?: InputMaybe<ElementFirstChildUpdateFieldInput>\n  guiCss?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  nextSibling?: InputMaybe<ElementNextSiblingUpdateFieldInput>\n  page?: InputMaybe<ElementPageUpdateFieldInput>\n  parent?: InputMaybe<ElementParentUpdateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentUpdateFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionUpdateFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionUpdateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingUpdateFieldInput>\n  propTransformationJs?: InputMaybe<Scalars['String']['input']>\n  props?: InputMaybe<ElementPropsUpdateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeUpdateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeUpdateFieldInput>\n  renderForEachPropKey?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ElementWhere = {\n  AND?: InputMaybe<Array<ElementWhere>>\n  NOT?: InputMaybe<ElementWhere>\n  OR?: InputMaybe<Array<ElementWhere>>\n  customCss?: InputMaybe<Scalars['String']['input']>\n  customCss_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  customCss_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  customCss_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  customCss_MATCHES?: InputMaybe<Scalars['String']['input']>\n  customCss_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  firstChild?: InputMaybe<ElementWhere>\n  firstChildAggregate?: InputMaybe<ElementFirstChildAggregateInput>\n  firstChildConnection?: InputMaybe<ElementFirstChildConnectionWhere>\n  firstChildConnection_NOT?: InputMaybe<ElementFirstChildConnectionWhere>\n  firstChild_NOT?: InputMaybe<ElementWhere>\n  guiCss?: InputMaybe<Scalars['String']['input']>\n  guiCss_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  guiCss_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  guiCss_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  guiCss_MATCHES?: InputMaybe<Scalars['String']['input']>\n  guiCss_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  nextSibling?: InputMaybe<ElementWhere>\n  nextSiblingAggregate?: InputMaybe<ElementNextSiblingAggregateInput>\n  nextSiblingConnection?: InputMaybe<ElementNextSiblingConnectionWhere>\n  nextSiblingConnection_NOT?: InputMaybe<ElementNextSiblingConnectionWhere>\n  nextSibling_NOT?: InputMaybe<ElementWhere>\n  page?: InputMaybe<PageWhere>\n  pageAggregate?: InputMaybe<ElementPageAggregateInput>\n  pageConnection?: InputMaybe<ElementPageConnectionWhere>\n  pageConnection_NOT?: InputMaybe<ElementPageConnectionWhere>\n  page_NOT?: InputMaybe<PageWhere>\n  parent?: InputMaybe<ElementWhere>\n  parentAggregate?: InputMaybe<ElementParentAggregateInput>\n  parentComponent?: InputMaybe<ComponentWhere>\n  parentComponentAggregate?: InputMaybe<ElementParentComponentAggregateInput>\n  parentComponentConnection?: InputMaybe<ElementParentComponentConnectionWhere>\n  parentComponentConnection_NOT?: InputMaybe<ElementParentComponentConnectionWhere>\n  parentComponent_NOT?: InputMaybe<ComponentWhere>\n  parentConnection?: InputMaybe<ElementParentConnectionWhere>\n  parentConnection_NOT?: InputMaybe<ElementParentConnectionWhere>\n  parent_NOT?: InputMaybe<ElementWhere>\n  postRenderActionConnection?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  postRenderActionConnection_NOT?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  preRenderActionConnection?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  preRenderActionConnection_NOT?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  prevSibling?: InputMaybe<ElementWhere>\n  prevSiblingAggregate?: InputMaybe<ElementPrevSiblingAggregateInput>\n  prevSiblingConnection?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  prevSiblingConnection_NOT?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  prevSibling_NOT?: InputMaybe<ElementWhere>\n  propTransformationJs?: InputMaybe<Scalars['String']['input']>\n  propTransformationJs_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  propTransformationJs_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  propTransformationJs_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  propTransformationJs_MATCHES?: InputMaybe<Scalars['String']['input']>\n  propTransformationJs_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  props?: InputMaybe<PropWhere>\n  propsAggregate?: InputMaybe<ElementPropsAggregateInput>\n  propsConnection?: InputMaybe<ElementPropsConnectionWhere>\n  propsConnection_NOT?: InputMaybe<ElementPropsConnectionWhere>\n  props_NOT?: InputMaybe<PropWhere>\n  renderAtomType?: InputMaybe<AtomWhere>\n  renderAtomTypeAggregate?: InputMaybe<ElementRenderAtomTypeAggregateInput>\n  renderAtomTypeConnection?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  renderAtomTypeConnection_NOT?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  renderAtomType_NOT?: InputMaybe<AtomWhere>\n  renderComponentType?: InputMaybe<ComponentWhere>\n  renderComponentTypeAggregate?: InputMaybe<ElementRenderComponentTypeAggregateInput>\n  renderComponentTypeConnection?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  renderComponentTypeConnection_NOT?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  renderComponentType_NOT?: InputMaybe<ComponentWhere>\n  renderForEachPropKey?: InputMaybe<Scalars['String']['input']>\n  renderForEachPropKey_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  renderForEachPropKey_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  renderForEachPropKey_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  renderForEachPropKey_MATCHES?: InputMaybe<Scalars['String']['input']>\n  renderForEachPropKey_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression_IN?: InputMaybe<\n    Array<InputMaybe<Scalars['String']['input']>>\n  >\n  renderIfExpression_MATCHES?: InputMaybe<Scalars['String']['input']>\n  renderIfExpression_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ElementsConnection = {\n  __typename?: 'ElementsConnection'\n  edges: Array<ElementEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumType = IBaseType & {\n  __typename?: 'EnumType'\n  allowedValues: Array<EnumTypeValue>\n  allowedValuesAggregate?: Maybe<EnumTypeEnumTypeValueAllowedValuesAggregationSelection>\n  allowedValuesConnection: EnumTypeAllowedValuesConnection\n  fieldRefs: Array<Field>\n  fieldRefsAggregate?: Maybe<EnumTypeFieldFieldRefsAggregationSelection>\n  fieldRefsConnection: EnumTypeFieldRefsConnection\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<EnumTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<EnumTypeValueOptions>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<EnumTypeAllowedValuesConnectionSort>>\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<EnumTypeFieldRefsConnectionSort>>\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type EnumTypeAggregateSelection = {\n  __typename?: 'EnumTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeAllowedValuesAggregateInput = {\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesAggregateInput>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesAggregateInput>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<EnumTypeAllowedValuesNodeAggregationWhereInput>\n}\n\nexport type EnumTypeAllowedValuesConnectFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeValueConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<EnumTypeValueConnectWhere>\n}\n\nexport type EnumTypeAllowedValuesConnection = {\n  __typename?: 'EnumTypeAllowedValuesConnection'\n  edges: Array<EnumTypeAllowedValuesRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type EnumTypeAllowedValuesConnectionSort = {\n  node?: InputMaybe<EnumTypeValueSort>\n}\n\nexport type EnumTypeAllowedValuesConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesConnectionWhere>>\n  node?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type EnumTypeAllowedValuesCreateFieldInput = {\n  node: EnumTypeValueCreateInput\n}\n\nexport type EnumTypeAllowedValuesDeleteFieldInput = {\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n}\n\nexport type EnumTypeAllowedValuesDisconnectFieldInput = {\n  disconnect?: InputMaybe<EnumTypeValueDisconnectInput>\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n}\n\nexport type EnumTypeAllowedValuesFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n}\n\nexport type EnumTypeAllowedValuesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesNodeAggregationWhereInput>>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  value_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  value_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  value_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  value_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  value_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  value_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  value_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  value_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  value_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  value_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  value_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  value_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  value_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  value_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  value_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type EnumTypeAllowedValuesRelationship = {\n  __typename?: 'EnumTypeAllowedValuesRelationship'\n  cursor: Scalars['String']['output']\n  node: EnumTypeValue\n}\n\nexport type EnumTypeAllowedValuesUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeValueUpdateInput>\n}\n\nexport type EnumTypeAllowedValuesUpdateFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n  delete?: InputMaybe<Array<EnumTypeAllowedValuesDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<EnumTypeAllowedValuesDisconnectFieldInput>>\n  update?: InputMaybe<EnumTypeAllowedValuesUpdateConnectionInput>\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n}\n\nexport type EnumTypeConnectInput = {\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type EnumTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeConnectOrCreateWhere = {\n  node: EnumTypeUniqueWhere\n}\n\nexport type EnumTypeConnectWhere = {\n  node: EnumTypeWhere\n}\n\nexport type EnumTypeCreateInput = {\n  allowedValues?: InputMaybe<EnumTypeAllowedValuesFieldInput>\n  fieldRefs?: InputMaybe<EnumTypeFieldRefsFieldInput>\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type EnumTypeDeleteInput = {\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesDeleteFieldInput>>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsDeleteFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type EnumTypeDisconnectInput = {\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesDisconnectFieldInput>>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsDisconnectFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type EnumTypeEdge = {\n  __typename?: 'EnumTypeEdge'\n  cursor: Scalars['String']['output']\n  node: EnumType\n}\n\nexport type EnumTypeEnumTypeValueAllowedValuesAggregationSelection = {\n  __typename?: 'EnumTypeEnumTypeValueAllowedValuesAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection>\n}\n\nexport type EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection = {\n  __typename?: 'EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  value: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'EnumTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<EnumTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type EnumTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'EnumTypeFieldFieldRefsNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type EnumTypeFieldRefsAggregateInput = {\n  AND?: InputMaybe<Array<EnumTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<EnumTypeFieldRefsAggregateInput>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<EnumTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type EnumTypeFieldRefsConnectFieldInput = {\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type EnumTypeFieldRefsConnection = {\n  __typename?: 'EnumTypeFieldRefsConnection'\n  edges: Array<EnumTypeFieldRefsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type EnumTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type EnumTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type EnumTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type EnumTypeFieldRefsDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n}\n\nexport type EnumTypeFieldRefsDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n}\n\nexport type EnumTypeFieldRefsFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n}\n\nexport type EnumTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeFieldRefsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type EnumTypeFieldRefsRelationship = {\n  __typename?: 'EnumTypeFieldRefsRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type EnumTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type EnumTypeFieldRefsUpdateFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<EnumTypeFieldRefsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<EnumTypeFieldRefsDisconnectFieldInput>>\n  update?: InputMaybe<EnumTypeFieldRefsUpdateConnectionInput>\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n}\n\nexport type EnumTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type EnumTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more EnumTypeSort objects to sort EnumTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<EnumTypeSort>>\n}\n\nexport type EnumTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<EnumTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<EnumTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<EnumTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<EnumTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type EnumTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<EnumTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type EnumTypeRelationInput = {\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort EnumTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeSort object. */\nexport type EnumTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type EnumTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type EnumTypeUpdateInput = {\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesUpdateFieldInput>>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsUpdateFieldInput>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type EnumTypeUserOwnerAggregationSelection = {\n  __typename?: 'EnumTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<EnumTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type EnumTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'EnumTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValue = {\n  __typename?: 'EnumTypeValue'\n  enumType?: Maybe<EnumType>\n  enumTypeAggregate?: Maybe<EnumTypeValueEnumTypeEnumTypeAggregationSelection>\n  enumTypeConnection: EnumTypeValueEnumTypeConnection\n  id: Scalars['ID']['output']\n  key: Scalars['String']['output']\n  value: Scalars['String']['output']\n}\n\nexport type EnumTypeValueEnumTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<EnumTypeOptions>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type EnumTypeValueEnumTypeAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type EnumTypeValueEnumTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionSort>>\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n}\n\nexport type EnumTypeValueAggregateSelection = {\n  __typename?: 'EnumTypeValueAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  value: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValueConnectInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n}\n\nexport type EnumTypeValueConnectOrCreateInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeValueConnectWhere = {\n  node: EnumTypeValueWhere\n}\n\nexport type EnumTypeValueCreateInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeFieldInput>\n  id: Scalars['ID']['input']\n  key: Scalars['String']['input']\n  value: Scalars['String']['input']\n}\n\nexport type EnumTypeValueDeleteInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeDeleteFieldInput>\n}\n\nexport type EnumTypeValueDisconnectInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeDisconnectFieldInput>\n}\n\nexport type EnumTypeValueEdge = {\n  __typename?: 'EnumTypeValueEdge'\n  cursor: Scalars['String']['output']\n  node: EnumTypeValue\n}\n\nexport type EnumTypeValueEnumTypeAggregateInput = {\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeAggregateInput>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeAggregateInput>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<EnumTypeValueEnumTypeNodeAggregationWhereInput>\n}\n\nexport type EnumTypeValueEnumTypeConnectFieldInput = {\n  connect?: InputMaybe<EnumTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<EnumTypeConnectWhere>\n}\n\nexport type EnumTypeValueEnumTypeConnectOrCreateFieldInput = {\n  onCreate: EnumTypeValueEnumTypeConnectOrCreateFieldInputOnCreate\n  where: EnumTypeConnectOrCreateWhere\n}\n\nexport type EnumTypeValueEnumTypeConnectOrCreateFieldInputOnCreate = {\n  node: EnumTypeOnCreateInput\n}\n\nexport type EnumTypeValueEnumTypeConnection = {\n  __typename?: 'EnumTypeValueEnumTypeConnection'\n  edges: Array<EnumTypeValueEnumTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type EnumTypeValueEnumTypeConnectionSort = {\n  node?: InputMaybe<EnumTypeSort>\n}\n\nexport type EnumTypeValueEnumTypeConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionWhere>>\n  node?: InputMaybe<EnumTypeWhere>\n}\n\nexport type EnumTypeValueEnumTypeCreateFieldInput = {\n  node: EnumTypeCreateInput\n}\n\nexport type EnumTypeValueEnumTypeDeleteFieldInput = {\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n}\n\nexport type EnumTypeValueEnumTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n}\n\nexport type EnumTypeValueEnumTypeEnumTypeAggregationSelection = {\n  __typename?: 'EnumTypeValueEnumTypeEnumTypeAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection>\n}\n\nexport type EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection = {\n  __typename?: 'EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValueEnumTypeFieldInput = {\n  connect?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n}\n\nexport type EnumTypeValueEnumTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type EnumTypeValueEnumTypeRelationship = {\n  __typename?: 'EnumTypeValueEnumTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: EnumType\n}\n\nexport type EnumTypeValueEnumTypeUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeUpdateInput>\n}\n\nexport type EnumTypeValueEnumTypeUpdateFieldInput = {\n  connect?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n  create?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n  delete?: InputMaybe<EnumTypeValueEnumTypeDeleteFieldInput>\n  disconnect?: InputMaybe<EnumTypeValueEnumTypeDisconnectFieldInput>\n  update?: InputMaybe<EnumTypeValueEnumTypeUpdateConnectionInput>\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n}\n\nexport type EnumTypeValueOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more EnumTypeValueSort objects to sort EnumTypeValues by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<EnumTypeValueSort>>\n}\n\nexport type EnumTypeValueRelationInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n}\n\n/** Fields to sort EnumTypeValues by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeValueSort object. */\nexport type EnumTypeValueSort = {\n  id?: InputMaybe<SortDirection>\n  key?: InputMaybe<SortDirection>\n  value?: InputMaybe<SortDirection>\n}\n\nexport type EnumTypeValueUpdateInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  key?: InputMaybe<Scalars['String']['input']>\n  value?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type EnumTypeValueWhere = {\n  AND?: InputMaybe<Array<EnumTypeValueWhere>>\n  NOT?: InputMaybe<EnumTypeValueWhere>\n  OR?: InputMaybe<Array<EnumTypeValueWhere>>\n  enumType?: InputMaybe<EnumTypeWhere>\n  enumTypeAggregate?: InputMaybe<EnumTypeValueEnumTypeAggregateInput>\n  enumTypeConnection?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  enumTypeConnection_NOT?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  enumType_NOT?: InputMaybe<EnumTypeWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  key?: InputMaybe<Scalars['String']['input']>\n  key_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  key_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  key_MATCHES?: InputMaybe<Scalars['String']['input']>\n  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  value?: InputMaybe<Scalars['String']['input']>\n  value_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  value_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  value_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  value_MATCHES?: InputMaybe<Scalars['String']['input']>\n  value_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type EnumTypeValuesConnection = {\n  __typename?: 'EnumTypeValuesConnection'\n  edges: Array<EnumTypeValueEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type EnumTypeWhere = {\n  AND?: InputMaybe<Array<EnumTypeWhere>>\n  NOT?: InputMaybe<EnumTypeWhere>\n  OR?: InputMaybe<Array<EnumTypeWhere>>\n  allowedValuesAggregate?: InputMaybe<EnumTypeAllowedValuesAggregateInput>\n  /** Return EnumTypes where all of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_ALL?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where none of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_NONE?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where one of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_SINGLE?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where some of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_SOME?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where all of the related EnumTypeValues match this filter */\n  allowedValues_ALL?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where none of the related EnumTypeValues match this filter */\n  allowedValues_NONE?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where one of the related EnumTypeValues match this filter */\n  allowedValues_SINGLE?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where some of the related EnumTypeValues match this filter */\n  allowedValues_SOME?: InputMaybe<EnumTypeValueWhere>\n  fieldRefsAggregate?: InputMaybe<EnumTypeFieldRefsAggregateInput>\n  /** Return EnumTypes where all of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where none of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where one of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where some of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<EnumTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type EnumTypesConnection = {\n  __typename?: 'EnumTypesConnection'\n  edges: Array<EnumTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Field = {\n  __typename?: 'Field'\n  api: InterfaceType\n  apiAggregate?: Maybe<FieldInterfaceTypeApiAggregationSelection>\n  apiConnection: FieldApiConnection\n  defaultValues?: Maybe<Scalars['String']['output']>\n  description?: Maybe<Scalars['String']['output']>\n  fieldType: IBaseType\n  fieldTypeConnection: FieldFieldTypeConnection\n  id: Scalars['ID']['output']\n  key: Scalars['String']['output']\n  name?: Maybe<Scalars['String']['output']>\n  nextSibling?: Maybe<Field>\n  nextSiblingAggregate?: Maybe<FieldFieldNextSiblingAggregationSelection>\n  nextSiblingConnection: FieldNextSiblingConnection\n  prevSibling?: Maybe<Field>\n  prevSiblingAggregate?: Maybe<FieldFieldPrevSiblingAggregationSelection>\n  prevSiblingConnection: FieldPrevSiblingConnection\n  validationRules?: Maybe<Scalars['String']['output']>\n}\n\nexport type FieldApiArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type FieldApiAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type FieldApiConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<FieldApiConnectionSort>>\n  where?: InputMaybe<FieldApiConnectionWhere>\n}\n\nexport type FieldFieldTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<IBaseTypeOptions>\n  where?: InputMaybe<IBaseTypeWhere>\n}\n\nexport type FieldFieldTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<FieldFieldTypeConnectionSort>>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldNextSiblingArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type FieldNextSiblingAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type FieldNextSiblingConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<FieldNextSiblingConnectionSort>>\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n}\n\nexport type FieldPrevSiblingArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type FieldPrevSiblingAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type FieldPrevSiblingConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<FieldPrevSiblingConnectionSort>>\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n}\n\nexport type FieldAggregateSelection = {\n  __typename?: 'FieldAggregateSelection'\n  count: Scalars['Int']['output']\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type FieldApiAggregateInput = {\n  AND?: InputMaybe<Array<FieldApiAggregateInput>>\n  NOT?: InputMaybe<FieldApiAggregateInput>\n  OR?: InputMaybe<Array<FieldApiAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<FieldApiNodeAggregationWhereInput>\n}\n\nexport type FieldApiConnectFieldInput = {\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n}\n\nexport type FieldApiConnectOrCreateFieldInput = {\n  onCreate: FieldApiConnectOrCreateFieldInputOnCreate\n  where: InterfaceTypeConnectOrCreateWhere\n}\n\nexport type FieldApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type FieldApiConnection = {\n  __typename?: 'FieldApiConnection'\n  edges: Array<FieldApiRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type FieldApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type FieldApiConnectionWhere = {\n  AND?: InputMaybe<Array<FieldApiConnectionWhere>>\n  NOT?: InputMaybe<FieldApiConnectionWhere>\n  OR?: InputMaybe<Array<FieldApiConnectionWhere>>\n  node?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type FieldApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type FieldApiDeleteFieldInput = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<FieldApiConnectionWhere>\n}\n\nexport type FieldApiDisconnectFieldInput = {\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  where?: InputMaybe<FieldApiConnectionWhere>\n}\n\nexport type FieldApiFieldInput = {\n  connect?: InputMaybe<FieldApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n  create?: InputMaybe<FieldApiCreateFieldInput>\n}\n\nexport type FieldApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldApiNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<FieldApiNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type FieldApiRelationship = {\n  __typename?: 'FieldApiRelationship'\n  cursor: Scalars['String']['output']\n  node: InterfaceType\n}\n\nexport type FieldApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type FieldApiUpdateFieldInput = {\n  connect?: InputMaybe<FieldApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n  create?: InputMaybe<FieldApiCreateFieldInput>\n  delete?: InputMaybe<FieldApiDeleteFieldInput>\n  disconnect?: InputMaybe<FieldApiDisconnectFieldInput>\n  update?: InputMaybe<FieldApiUpdateConnectionInput>\n  where?: InputMaybe<FieldApiConnectionWhere>\n}\n\nexport type FieldConnectInput = {\n  api?: InputMaybe<FieldApiConnectFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeConnectFieldInput>\n  nextSibling?: InputMaybe<FieldNextSiblingConnectFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n}\n\nexport type FieldConnectOrCreateInput = {\n  api?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n}\n\nexport type FieldConnectWhere = {\n  node: FieldWhere\n}\n\nexport type FieldCreateInput = {\n  api?: InputMaybe<FieldApiFieldInput>\n  defaultValues?: InputMaybe<Scalars['String']['input']>\n  description?: InputMaybe<Scalars['String']['input']>\n  fieldType?: InputMaybe<FieldFieldTypeFieldInput>\n  id: Scalars['ID']['input']\n  key: Scalars['String']['input']\n  name?: InputMaybe<Scalars['String']['input']>\n  nextSibling?: InputMaybe<FieldNextSiblingFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingFieldInput>\n  validationRules?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type FieldDeleteInput = {\n  api?: InputMaybe<FieldApiDeleteFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeDeleteFieldInput>\n  nextSibling?: InputMaybe<FieldNextSiblingDeleteFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingDeleteFieldInput>\n}\n\nexport type FieldDisconnectInput = {\n  api?: InputMaybe<FieldApiDisconnectFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeDisconnectFieldInput>\n  nextSibling?: InputMaybe<FieldNextSiblingDisconnectFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingDisconnectFieldInput>\n}\n\nexport type FieldEdge = {\n  __typename?: 'FieldEdge'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type FieldFieldNextSiblingAggregationSelection = {\n  __typename?: 'FieldFieldNextSiblingAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<FieldFieldNextSiblingNodeAggregateSelection>\n}\n\nexport type FieldFieldNextSiblingNodeAggregateSelection = {\n  __typename?: 'FieldFieldNextSiblingNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type FieldFieldPrevSiblingAggregationSelection = {\n  __typename?: 'FieldFieldPrevSiblingAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<FieldFieldPrevSiblingNodeAggregateSelection>\n}\n\nexport type FieldFieldPrevSiblingNodeAggregateSelection = {\n  __typename?: 'FieldFieldPrevSiblingNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type FieldFieldTypeConnectFieldInput = {\n  connect?: InputMaybe<IBaseTypeConnectInput>\n  where?: InputMaybe<IBaseTypeConnectWhere>\n}\n\nexport type FieldFieldTypeConnection = {\n  __typename?: 'FieldFieldTypeConnection'\n  edges: Array<FieldFieldTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type FieldFieldTypeConnectionSort = {\n  node?: InputMaybe<IBaseTypeSort>\n}\n\nexport type FieldFieldTypeConnectionWhere = {\n  AND?: InputMaybe<Array<FieldFieldTypeConnectionWhere>>\n  NOT?: InputMaybe<FieldFieldTypeConnectionWhere>\n  OR?: InputMaybe<Array<FieldFieldTypeConnectionWhere>>\n  node?: InputMaybe<IBaseTypeWhere>\n}\n\nexport type FieldFieldTypeCreateFieldInput = {\n  node: IBaseTypeCreateInput\n}\n\nexport type FieldFieldTypeDeleteFieldInput = {\n  delete?: InputMaybe<IBaseTypeDeleteInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldFieldTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<IBaseTypeDisconnectInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldFieldTypeFieldInput = {\n  connect?: InputMaybe<FieldFieldTypeConnectFieldInput>\n  create?: InputMaybe<FieldFieldTypeCreateFieldInput>\n}\n\nexport type FieldFieldTypeRelationship = {\n  __typename?: 'FieldFieldTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: IBaseType\n}\n\nexport type FieldFieldTypeUpdateConnectionInput = {\n  node?: InputMaybe<IBaseTypeUpdateInput>\n}\n\nexport type FieldFieldTypeUpdateFieldInput = {\n  connect?: InputMaybe<FieldFieldTypeConnectFieldInput>\n  create?: InputMaybe<FieldFieldTypeCreateFieldInput>\n  delete?: InputMaybe<FieldFieldTypeDeleteFieldInput>\n  disconnect?: InputMaybe<FieldFieldTypeDisconnectFieldInput>\n  update?: InputMaybe<FieldFieldTypeUpdateConnectionInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldInterfaceTypeApiAggregationSelection = {\n  __typename?: 'FieldInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<FieldInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type FieldInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'FieldInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type FieldNextSiblingAggregateInput = {\n  AND?: InputMaybe<Array<FieldNextSiblingAggregateInput>>\n  NOT?: InputMaybe<FieldNextSiblingAggregateInput>\n  OR?: InputMaybe<Array<FieldNextSiblingAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<FieldNextSiblingNodeAggregationWhereInput>\n}\n\nexport type FieldNextSiblingConnectFieldInput = {\n  connect?: InputMaybe<FieldConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type FieldNextSiblingConnection = {\n  __typename?: 'FieldNextSiblingConnection'\n  edges: Array<FieldNextSiblingRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type FieldNextSiblingConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type FieldNextSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<FieldNextSiblingConnectionWhere>>\n  NOT?: InputMaybe<FieldNextSiblingConnectionWhere>\n  OR?: InputMaybe<Array<FieldNextSiblingConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type FieldNextSiblingCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type FieldNextSiblingDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n}\n\nexport type FieldNextSiblingDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n}\n\nexport type FieldNextSiblingFieldInput = {\n  connect?: InputMaybe<FieldNextSiblingConnectFieldInput>\n  create?: InputMaybe<FieldNextSiblingCreateFieldInput>\n}\n\nexport type FieldNextSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldNextSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldNextSiblingNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<FieldNextSiblingNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type FieldNextSiblingRelationship = {\n  __typename?: 'FieldNextSiblingRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type FieldNextSiblingUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type FieldNextSiblingUpdateFieldInput = {\n  connect?: InputMaybe<FieldNextSiblingConnectFieldInput>\n  create?: InputMaybe<FieldNextSiblingCreateFieldInput>\n  delete?: InputMaybe<FieldNextSiblingDeleteFieldInput>\n  disconnect?: InputMaybe<FieldNextSiblingDisconnectFieldInput>\n  update?: InputMaybe<FieldNextSiblingUpdateConnectionInput>\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n}\n\nexport type FieldOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more FieldSort objects to sort Fields by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<FieldSort>>\n}\n\nexport type FieldPrevSiblingAggregateInput = {\n  AND?: InputMaybe<Array<FieldPrevSiblingAggregateInput>>\n  NOT?: InputMaybe<FieldPrevSiblingAggregateInput>\n  OR?: InputMaybe<Array<FieldPrevSiblingAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<FieldPrevSiblingNodeAggregationWhereInput>\n}\n\nexport type FieldPrevSiblingConnectFieldInput = {\n  connect?: InputMaybe<FieldConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type FieldPrevSiblingConnection = {\n  __typename?: 'FieldPrevSiblingConnection'\n  edges: Array<FieldPrevSiblingRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type FieldPrevSiblingConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type FieldPrevSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<FieldPrevSiblingConnectionWhere>>\n  NOT?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  OR?: InputMaybe<Array<FieldPrevSiblingConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type FieldPrevSiblingCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type FieldPrevSiblingDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n}\n\nexport type FieldPrevSiblingDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n}\n\nexport type FieldPrevSiblingFieldInput = {\n  connect?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n  create?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n}\n\nexport type FieldPrevSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldPrevSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldPrevSiblingNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<FieldPrevSiblingNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type FieldPrevSiblingRelationship = {\n  __typename?: 'FieldPrevSiblingRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type FieldPrevSiblingUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type FieldPrevSiblingUpdateFieldInput = {\n  connect?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n  create?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n  delete?: InputMaybe<FieldPrevSiblingDeleteFieldInput>\n  disconnect?: InputMaybe<FieldPrevSiblingDisconnectFieldInput>\n  update?: InputMaybe<FieldPrevSiblingUpdateConnectionInput>\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n}\n\nexport type FieldRelationInput = {\n  api?: InputMaybe<FieldApiCreateFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeCreateFieldInput>\n  nextSibling?: InputMaybe<FieldNextSiblingCreateFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n}\n\n/** Fields to sort Fields by. The order in which sorts are applied is not guaranteed when specifying many fields in one FieldSort object. */\nexport type FieldSort = {\n  defaultValues?: InputMaybe<SortDirection>\n  description?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  key?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  validationRules?: InputMaybe<SortDirection>\n}\n\nexport type FieldUpdateInput = {\n  api?: InputMaybe<FieldApiUpdateFieldInput>\n  defaultValues?: InputMaybe<Scalars['String']['input']>\n  description?: InputMaybe<Scalars['String']['input']>\n  fieldType?: InputMaybe<FieldFieldTypeUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  key?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  nextSibling?: InputMaybe<FieldNextSiblingUpdateFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingUpdateFieldInput>\n  validationRules?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type FieldWhere = {\n  AND?: InputMaybe<Array<FieldWhere>>\n  NOT?: InputMaybe<FieldWhere>\n  OR?: InputMaybe<Array<FieldWhere>>\n  api?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<FieldApiAggregateInput>\n  apiConnection?: InputMaybe<FieldApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<FieldApiConnectionWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  defaultValues?: InputMaybe<Scalars['String']['input']>\n  defaultValues_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  defaultValues_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  defaultValues_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  defaultValues_MATCHES?: InputMaybe<Scalars['String']['input']>\n  defaultValues_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  description?: InputMaybe<Scalars['String']['input']>\n  description_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  description_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  description_MATCHES?: InputMaybe<Scalars['String']['input']>\n  description_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  fieldTypeConnection?: InputMaybe<FieldFieldTypeConnectionWhere>\n  fieldTypeConnection_NOT?: InputMaybe<FieldFieldTypeConnectionWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  key?: InputMaybe<Scalars['String']['input']>\n  key_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  key_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  key_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  key_MATCHES?: InputMaybe<Scalars['String']['input']>\n  key_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  nextSibling?: InputMaybe<FieldWhere>\n  nextSiblingAggregate?: InputMaybe<FieldNextSiblingAggregateInput>\n  nextSiblingConnection?: InputMaybe<FieldNextSiblingConnectionWhere>\n  nextSiblingConnection_NOT?: InputMaybe<FieldNextSiblingConnectionWhere>\n  nextSibling_NOT?: InputMaybe<FieldWhere>\n  prevSibling?: InputMaybe<FieldWhere>\n  prevSiblingAggregate?: InputMaybe<FieldPrevSiblingAggregateInput>\n  prevSiblingConnection?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  prevSiblingConnection_NOT?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  prevSibling_NOT?: InputMaybe<FieldWhere>\n  validationRules?: InputMaybe<Scalars['String']['input']>\n  validationRules_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  validationRules_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  validationRules_IN?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>\n  validationRules_MATCHES?: InputMaybe<Scalars['String']['input']>\n  validationRules_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type FieldsConnection = {\n  __typename?: 'FieldsConnection'\n  edges: Array<FieldEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type GetBaseTypesOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  where?: InputMaybe<BaseTypesWhere>\n}\n\nexport type GetBaseTypesReturn = {\n  __typename?: 'GetBaseTypesReturn'\n  items: Array<BaseType>\n  totalCount: Scalars['Int']['output']\n}\n\nexport type GetBaseTypesReturnAggregateSelection = {\n  __typename?: 'GetBaseTypesReturnAggregateSelection'\n  count: Scalars['Int']['output']\n  totalCount: IntAggregateSelectionNonNullable\n}\n\nexport type GetBaseTypesReturnCreateInput = {\n  totalCount: Scalars['Int']['input']\n}\n\nexport type GetBaseTypesReturnEdge = {\n  __typename?: 'GetBaseTypesReturnEdge'\n  cursor: Scalars['String']['output']\n  node: GetBaseTypesReturn\n}\n\nexport type GetBaseTypesReturnOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more GetBaseTypesReturnSort objects to sort GetBaseTypesReturns by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<GetBaseTypesReturnSort>>\n}\n\n/** Fields to sort GetBaseTypesReturns by. The order in which sorts are applied is not guaranteed when specifying many fields in one GetBaseTypesReturnSort object. */\nexport type GetBaseTypesReturnSort = {\n  totalCount?: InputMaybe<SortDirection>\n}\n\nexport type GetBaseTypesReturnUpdateInput = {\n  totalCount?: InputMaybe<Scalars['Int']['input']>\n  totalCount_DECREMENT?: InputMaybe<Scalars['Int']['input']>\n  totalCount_INCREMENT?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type GetBaseTypesReturnWhere = {\n  AND?: InputMaybe<Array<GetBaseTypesReturnWhere>>\n  NOT?: InputMaybe<GetBaseTypesReturnWhere>\n  OR?: InputMaybe<Array<GetBaseTypesReturnWhere>>\n  totalCount?: InputMaybe<Scalars['Int']['input']>\n  totalCount_GT?: InputMaybe<Scalars['Int']['input']>\n  totalCount_GTE?: InputMaybe<Scalars['Int']['input']>\n  totalCount_IN?: InputMaybe<Array<Scalars['Int']['input']>>\n  totalCount_LT?: InputMaybe<Scalars['Int']['input']>\n  totalCount_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type GetBaseTypesReturnsConnection = {\n  __typename?: 'GetBaseTypesReturnsConnection'\n  edges: Array<GetBaseTypesReturnEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Hook = {\n  __typename?: 'Hook'\n  config: Prop\n  configAggregate?: Maybe<HookPropConfigAggregationSelection>\n  configConnection: HookConfigConnection\n  element: Element\n  elementAggregate?: Maybe<HookElementElementAggregationSelection>\n  elementConnection: HookElementConnection\n  id: Scalars['ID']['output']\n  type: AtomType\n}\n\nexport type HookConfigArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type HookConfigAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type HookConfigConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<HookConfigConnectionSort>>\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type HookElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type HookElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<HookElementConnectionSort>>\n  where?: InputMaybe<HookElementConnectionWhere>\n}\n\nexport type HookAggregateSelection = {\n  __typename?: 'HookAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type HookConfigAggregateInput = {\n  AND?: InputMaybe<Array<HookConfigAggregateInput>>\n  NOT?: InputMaybe<HookConfigAggregateInput>\n  OR?: InputMaybe<Array<HookConfigAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<HookConfigNodeAggregationWhereInput>\n}\n\nexport type HookConfigConnectFieldInput = {\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PropConnectWhere>\n}\n\nexport type HookConfigConnectOrCreateFieldInput = {\n  onCreate: HookConfigConnectOrCreateFieldInputOnCreate\n  where: PropConnectOrCreateWhere\n}\n\nexport type HookConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type HookConfigConnection = {\n  __typename?: 'HookConfigConnection'\n  edges: Array<HookConfigRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type HookConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type HookConfigConnectionWhere = {\n  AND?: InputMaybe<Array<HookConfigConnectionWhere>>\n  NOT?: InputMaybe<HookConfigConnectionWhere>\n  OR?: InputMaybe<Array<HookConfigConnectionWhere>>\n  node?: InputMaybe<PropWhere>\n}\n\nexport type HookConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type HookConfigDeleteFieldInput = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookConfigDisconnectFieldInput = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookConfigFieldInput = {\n  connect?: InputMaybe<HookConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<HookConfigCreateFieldInput>\n}\n\nexport type HookConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<HookConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<HookConfigNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<HookConfigNodeAggregationWhereInput>>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type HookConfigRelationship = {\n  __typename?: 'HookConfigRelationship'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type HookConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type HookConfigUpdateFieldInput = {\n  connect?: InputMaybe<HookConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<HookConfigCreateFieldInput>\n  delete?: InputMaybe<HookConfigDeleteFieldInput>\n  disconnect?: InputMaybe<HookConfigDisconnectFieldInput>\n  update?: InputMaybe<HookConfigUpdateConnectionInput>\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookConnectInput = {\n  config?: InputMaybe<HookConfigConnectFieldInput>\n  element?: InputMaybe<HookElementConnectFieldInput>\n}\n\nexport type HookConnectOrCreateInput = {\n  config?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n  element?: InputMaybe<HookElementConnectOrCreateFieldInput>\n}\n\nexport type HookCreateInput = {\n  config?: InputMaybe<HookConfigFieldInput>\n  element?: InputMaybe<HookElementFieldInput>\n  type: AtomType\n}\n\nexport type HookDeleteInput = {\n  config?: InputMaybe<HookConfigDeleteFieldInput>\n  element?: InputMaybe<HookElementDeleteFieldInput>\n}\n\nexport type HookDisconnectInput = {\n  config?: InputMaybe<HookConfigDisconnectFieldInput>\n  element?: InputMaybe<HookElementDisconnectFieldInput>\n}\n\nexport type HookEdge = {\n  __typename?: 'HookEdge'\n  cursor: Scalars['String']['output']\n  node: Hook\n}\n\nexport type HookElementAggregateInput = {\n  AND?: InputMaybe<Array<HookElementAggregateInput>>\n  NOT?: InputMaybe<HookElementAggregateInput>\n  OR?: InputMaybe<Array<HookElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<HookElementNodeAggregationWhereInput>\n}\n\nexport type HookElementConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type HookElementConnectOrCreateFieldInput = {\n  onCreate: HookElementConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type HookElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type HookElementConnection = {\n  __typename?: 'HookElementConnection'\n  edges: Array<HookElementRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type HookElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type HookElementConnectionWhere = {\n  AND?: InputMaybe<Array<HookElementConnectionWhere>>\n  NOT?: InputMaybe<HookElementConnectionWhere>\n  OR?: InputMaybe<Array<HookElementConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type HookElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type HookElementDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<HookElementConnectionWhere>\n}\n\nexport type HookElementDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<HookElementConnectionWhere>\n}\n\nexport type HookElementElementAggregationSelection = {\n  __typename?: 'HookElementElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<HookElementElementNodeAggregateSelection>\n}\n\nexport type HookElementElementNodeAggregateSelection = {\n  __typename?: 'HookElementElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type HookElementFieldInput = {\n  connect?: InputMaybe<HookElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookElementConnectOrCreateFieldInput>\n  create?: InputMaybe<HookElementCreateFieldInput>\n}\n\nexport type HookElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<HookElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<HookElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<HookElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type HookElementRelationship = {\n  __typename?: 'HookElementRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type HookElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type HookElementUpdateFieldInput = {\n  connect?: InputMaybe<HookElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookElementConnectOrCreateFieldInput>\n  create?: InputMaybe<HookElementCreateFieldInput>\n  delete?: InputMaybe<HookElementDeleteFieldInput>\n  disconnect?: InputMaybe<HookElementDisconnectFieldInput>\n  update?: InputMaybe<HookElementUpdateConnectionInput>\n  where?: InputMaybe<HookElementConnectionWhere>\n}\n\nexport type HookOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more HookSort objects to sort Hooks by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<HookSort>>\n}\n\nexport type HookPropConfigAggregationSelection = {\n  __typename?: 'HookPropConfigAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<HookPropConfigNodeAggregateSelection>\n}\n\nexport type HookPropConfigNodeAggregateSelection = {\n  __typename?: 'HookPropConfigNodeAggregateSelection'\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type HookRelationInput = {\n  config?: InputMaybe<HookConfigCreateFieldInput>\n  element?: InputMaybe<HookElementCreateFieldInput>\n}\n\n/** Fields to sort Hooks by. The order in which sorts are applied is not guaranteed when specifying many fields in one HookSort object. */\nexport type HookSort = {\n  id?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type HookUpdateInput = {\n  config?: InputMaybe<HookConfigUpdateFieldInput>\n  element?: InputMaybe<HookElementUpdateFieldInput>\n  type?: InputMaybe<AtomType>\n}\n\nexport type HookWhere = {\n  AND?: InputMaybe<Array<HookWhere>>\n  NOT?: InputMaybe<HookWhere>\n  OR?: InputMaybe<Array<HookWhere>>\n  config?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<HookConfigAggregateInput>\n  configConnection?: InputMaybe<HookConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<HookConfigConnectionWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  element?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<HookElementAggregateInput>\n  elementConnection?: InputMaybe<HookElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<HookElementConnectionWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  type?: InputMaybe<AtomType>\n  type_IN?: InputMaybe<Array<AtomType>>\n}\n\nexport type HooksConnection = {\n  __typename?: 'HooksConnection'\n  edges: Array<HookEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type IBaseType = {\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\nexport type IBaseTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type IBaseTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type IBaseTypeConnectInput = {\n  _on?: InputMaybe<IBaseTypeImplementationsConnectInput>\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type IBaseTypeConnectWhere = {\n  node: IBaseTypeWhere\n}\n\nexport type IBaseTypeCreateInput = {\n  ActionType?: InputMaybe<ActionTypeCreateInput>\n  AppType?: InputMaybe<AppTypeCreateInput>\n  ArrayType?: InputMaybe<ArrayTypeCreateInput>\n  BaseType?: InputMaybe<BaseTypeCreateInput>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeCreateInput>\n  ElementType?: InputMaybe<ElementTypeCreateInput>\n  EnumType?: InputMaybe<EnumTypeCreateInput>\n  InterfaceType?: InputMaybe<InterfaceTypeCreateInput>\n  LambdaType?: InputMaybe<LambdaTypeCreateInput>\n  PageType?: InputMaybe<PageTypeCreateInput>\n  PrimitiveType?: InputMaybe<PrimitiveTypeCreateInput>\n  ReactNodeType?: InputMaybe<ReactNodeTypeCreateInput>\n  RenderPropType?: InputMaybe<RenderPropTypeCreateInput>\n  UnionType?: InputMaybe<UnionTypeCreateInput>\n}\n\nexport type IBaseTypeDeleteInput = {\n  _on?: InputMaybe<IBaseTypeImplementationsDeleteInput>\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type IBaseTypeDisconnectInput = {\n  _on?: InputMaybe<IBaseTypeImplementationsDisconnectInput>\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type IBaseTypeImplementationsConnectInput = {\n  ActionType?: InputMaybe<Array<ActionTypeConnectInput>>\n  AppType?: InputMaybe<Array<AppTypeConnectInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeConnectInput>>\n  BaseType?: InputMaybe<Array<BaseTypeConnectInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeConnectInput>>\n  ElementType?: InputMaybe<Array<ElementTypeConnectInput>>\n  EnumType?: InputMaybe<Array<EnumTypeConnectInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeConnectInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeConnectInput>>\n  PageType?: InputMaybe<Array<PageTypeConnectInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeConnectInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeConnectInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeConnectInput>>\n  UnionType?: InputMaybe<Array<UnionTypeConnectInput>>\n}\n\nexport type IBaseTypeImplementationsDeleteInput = {\n  ActionType?: InputMaybe<Array<ActionTypeDeleteInput>>\n  AppType?: InputMaybe<Array<AppTypeDeleteInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeDeleteInput>>\n  BaseType?: InputMaybe<Array<BaseTypeDeleteInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeDeleteInput>>\n  ElementType?: InputMaybe<Array<ElementTypeDeleteInput>>\n  EnumType?: InputMaybe<Array<EnumTypeDeleteInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeDeleteInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeDeleteInput>>\n  PageType?: InputMaybe<Array<PageTypeDeleteInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeDeleteInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeDeleteInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeDeleteInput>>\n  UnionType?: InputMaybe<Array<UnionTypeDeleteInput>>\n}\n\nexport type IBaseTypeImplementationsDisconnectInput = {\n  ActionType?: InputMaybe<Array<ActionTypeDisconnectInput>>\n  AppType?: InputMaybe<Array<AppTypeDisconnectInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeDisconnectInput>>\n  BaseType?: InputMaybe<Array<BaseTypeDisconnectInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeDisconnectInput>>\n  ElementType?: InputMaybe<Array<ElementTypeDisconnectInput>>\n  EnumType?: InputMaybe<Array<EnumTypeDisconnectInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeDisconnectInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeDisconnectInput>>\n  PageType?: InputMaybe<Array<PageTypeDisconnectInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeDisconnectInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeDisconnectInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeDisconnectInput>>\n  UnionType?: InputMaybe<Array<UnionTypeDisconnectInput>>\n}\n\nexport type IBaseTypeImplementationsUpdateInput = {\n  ActionType?: InputMaybe<ActionTypeUpdateInput>\n  AppType?: InputMaybe<AppTypeUpdateInput>\n  ArrayType?: InputMaybe<ArrayTypeUpdateInput>\n  BaseType?: InputMaybe<BaseTypeUpdateInput>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeUpdateInput>\n  ElementType?: InputMaybe<ElementTypeUpdateInput>\n  EnumType?: InputMaybe<EnumTypeUpdateInput>\n  InterfaceType?: InputMaybe<InterfaceTypeUpdateInput>\n  LambdaType?: InputMaybe<LambdaTypeUpdateInput>\n  PageType?: InputMaybe<PageTypeUpdateInput>\n  PrimitiveType?: InputMaybe<PrimitiveTypeUpdateInput>\n  ReactNodeType?: InputMaybe<ReactNodeTypeUpdateInput>\n  RenderPropType?: InputMaybe<RenderPropTypeUpdateInput>\n  UnionType?: InputMaybe<UnionTypeUpdateInput>\n}\n\nexport type IBaseTypeImplementationsWhere = {\n  ActionType?: InputMaybe<ActionTypeWhere>\n  AppType?: InputMaybe<AppTypeWhere>\n  ArrayType?: InputMaybe<ArrayTypeWhere>\n  BaseType?: InputMaybe<BaseTypeWhere>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeWhere>\n  ElementType?: InputMaybe<ElementTypeWhere>\n  EnumType?: InputMaybe<EnumTypeWhere>\n  InterfaceType?: InputMaybe<InterfaceTypeWhere>\n  LambdaType?: InputMaybe<LambdaTypeWhere>\n  PageType?: InputMaybe<PageTypeWhere>\n  PrimitiveType?: InputMaybe<PrimitiveTypeWhere>\n  ReactNodeType?: InputMaybe<ReactNodeTypeWhere>\n  RenderPropType?: InputMaybe<RenderPropTypeWhere>\n  UnionType?: InputMaybe<UnionTypeWhere>\n}\n\nexport type IBaseTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more IBaseTypeSort objects to sort IBaseTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InputMaybe<IBaseTypeSort>>>\n}\n\nexport type IBaseTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<IBaseTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<IBaseTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<IBaseTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<IBaseTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type IBaseTypeOwnerConnectFieldInput = {\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<UserConnectWhere>\n}\n\nexport type IBaseTypeOwnerConnectOrCreateFieldInput = {\n  onCreate: IBaseTypeOwnerConnectOrCreateFieldInputOnCreate\n  where: UserConnectOrCreateWhere\n}\n\nexport type IBaseTypeOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type IBaseTypeOwnerConnection = {\n  __typename?: 'IBaseTypeOwnerConnection'\n  edges: Array<IBaseTypeOwnerRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type IBaseTypeOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type IBaseTypeOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<IBaseTypeOwnerConnectionWhere>>\n  NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  OR?: InputMaybe<Array<IBaseTypeOwnerConnectionWhere>>\n  node?: InputMaybe<UserWhere>\n}\n\nexport type IBaseTypeOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type IBaseTypeOwnerDeleteFieldInput = {\n  delete?: InputMaybe<UserDeleteInput>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type IBaseTypeOwnerDisconnectFieldInput = {\n  disconnect?: InputMaybe<UserDisconnectInput>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type IBaseTypeOwnerFieldInput = {\n  connect?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\nexport type IBaseTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<IBaseTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<IBaseTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<IBaseTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type IBaseTypeOwnerRelationship = {\n  __typename?: 'IBaseTypeOwnerRelationship'\n  cursor: Scalars['String']['output']\n  node: User\n}\n\nexport type IBaseTypeOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type IBaseTypeOwnerUpdateFieldInput = {\n  connect?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  delete?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  disconnect?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  update?: InputMaybe<IBaseTypeOwnerUpdateConnectionInput>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\n/** Fields to sort IBaseTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one IBaseTypeSort object. */\nexport type IBaseTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type IBaseTypeUpdateInput = {\n  _on?: InputMaybe<IBaseTypeImplementationsUpdateInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type IBaseTypeWhere = {\n  _on?: InputMaybe<IBaseTypeImplementationsWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<IBaseTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type IdAggregateSelectionNonNullable = {\n  __typename?: 'IDAggregateSelectionNonNullable'\n  longest: Scalars['ID']['output']\n  shortest: Scalars['ID']['output']\n}\n\nexport type IntAggregateSelectionNonNullable = {\n  __typename?: 'IntAggregateSelectionNonNullable'\n  average: Scalars['Float']['output']\n  max: Scalars['Int']['output']\n  min: Scalars['Int']['output']\n  sum: Scalars['Int']['output']\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceType = IBaseType &\n  WithDescendants & {\n    __typename?: 'InterfaceType'\n    apiOfAtoms: Array<Atom>\n    apiOfAtomsAggregate?: Maybe<InterfaceTypeAtomApiOfAtomsAggregationSelection>\n    apiOfAtomsConnection: InterfaceTypeApiOfAtomsConnection\n    descendantTypesIds: Array<Scalars['ID']['output']>\n    fieldRefs: Array<Field>\n    fieldRefsAggregate?: Maybe<InterfaceTypeFieldFieldRefsAggregationSelection>\n    fieldRefsConnection: InterfaceTypeFieldRefsConnection\n    fields: Array<Field>\n    fieldsAggregate?: Maybe<InterfaceTypeFieldFieldsAggregationSelection>\n    fieldsConnection: InterfaceTypeFieldsConnection\n    id: Scalars['ID']['output']\n    kind: TypeKind\n    name: Scalars['String']['output']\n    owner: User\n    ownerAggregate?: Maybe<InterfaceTypeUserOwnerAggregationSelection>\n    ownerConnection: IBaseTypeOwnerConnection\n  }\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionSort>>\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionSort>>\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<FieldWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InterfaceTypeFieldsConnectionSort>>\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type InterfaceTypeAggregateSelection = {\n  __typename?: 'InterfaceTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type InterfaceTypeApiOfAtomsAggregateInput = {\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsAggregateInput>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectFieldInput = {\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectOrCreateFieldInput = {\n  onCreate: InterfaceTypeApiOfAtomsConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type InterfaceTypeApiOfAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type InterfaceTypeApiOfAtomsConnection = {\n  __typename?: 'InterfaceTypeApiOfAtomsConnection'\n  edges: Array<InterfaceTypeApiOfAtomsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type InterfaceTypeApiOfAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type InterfaceTypeApiOfAtomsDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n}\n\nexport type InterfaceTypeApiOfAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type InterfaceTypeApiOfAtomsRelationship = {\n  __typename?: 'InterfaceTypeApiOfAtomsRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type InterfaceTypeApiOfAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type InterfaceTypeApiOfAtomsUpdateFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeApiOfAtomsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeApiOfAtomsDisconnectFieldInput>>\n  update?: InputMaybe<InterfaceTypeApiOfAtomsUpdateConnectionInput>\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n}\n\nexport type InterfaceTypeAtomApiOfAtomsAggregationSelection = {\n  __typename?: 'InterfaceTypeAtomApiOfAtomsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<InterfaceTypeAtomApiOfAtomsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeAtomApiOfAtomsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeAtomApiOfAtomsNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type InterfaceTypeConnectInput = {\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type InterfaceTypeConnectOrCreateInput = {\n  apiOfAtoms?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type InterfaceTypeConnectOrCreateWhere = {\n  node: InterfaceTypeUniqueWhere\n}\n\nexport type InterfaceTypeConnectWhere = {\n  node: InterfaceTypeWhere\n}\n\nexport type InterfaceTypeCreateInput = {\n  apiOfAtoms?: InputMaybe<InterfaceTypeApiOfAtomsFieldInput>\n  fieldRefs?: InputMaybe<InterfaceTypeFieldRefsFieldInput>\n  fields?: InputMaybe<InterfaceTypeFieldsFieldInput>\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type InterfaceTypeDeleteInput = {\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsDeleteFieldInput>>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsDeleteFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsDeleteFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type InterfaceTypeDisconnectInput = {\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsDisconnectFieldInput>>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsDisconnectFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsDisconnectFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type InterfaceTypeEdge = {\n  __typename?: 'InterfaceTypeEdge'\n  cursor: Scalars['String']['output']\n  node: InterfaceType\n}\n\nexport type InterfaceTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'InterfaceTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<InterfaceTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeFieldFieldRefsNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type InterfaceTypeFieldFieldsAggregationSelection = {\n  __typename?: 'InterfaceTypeFieldFieldsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<InterfaceTypeFieldFieldsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeFieldFieldsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeFieldFieldsNodeAggregateSelection'\n  defaultValues: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n}\n\nexport type InterfaceTypeFieldRefsAggregateInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsAggregateInput>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<InterfaceTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeFieldRefsConnectFieldInput = {\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type InterfaceTypeFieldRefsConnection = {\n  __typename?: 'InterfaceTypeFieldRefsConnection'\n  edges: Array<InterfaceTypeFieldRefsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type InterfaceTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type InterfaceTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type InterfaceTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type InterfaceTypeFieldRefsDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n}\n\nexport type InterfaceTypeFieldRefsDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n}\n\nexport type InterfaceTypeFieldRefsFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n}\n\nexport type InterfaceTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type InterfaceTypeFieldRefsRelationship = {\n  __typename?: 'InterfaceTypeFieldRefsRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type InterfaceTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type InterfaceTypeFieldRefsUpdateFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeFieldRefsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeFieldRefsDisconnectFieldInput>>\n  update?: InputMaybe<InterfaceTypeFieldRefsUpdateConnectionInput>\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n}\n\nexport type InterfaceTypeFieldsAggregateInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldsAggregateInput>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<InterfaceTypeFieldsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeFieldsConnectFieldInput = {\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<FieldConnectWhere>\n}\n\nexport type InterfaceTypeFieldsConnection = {\n  __typename?: 'InterfaceTypeFieldsConnection'\n  edges: Array<InterfaceTypeFieldsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type InterfaceTypeFieldsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type InterfaceTypeFieldsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsConnectionWhere>>\n  node?: InputMaybe<FieldWhere>\n}\n\nexport type InterfaceTypeFieldsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type InterfaceTypeFieldsDeleteFieldInput = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n}\n\nexport type InterfaceTypeFieldsDisconnectFieldInput = {\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n}\n\nexport type InterfaceTypeFieldsFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n}\n\nexport type InterfaceTypeFieldsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsNodeAggregationWhereInput>>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type InterfaceTypeFieldsRelationship = {\n  __typename?: 'InterfaceTypeFieldsRelationship'\n  cursor: Scalars['String']['output']\n  node: Field\n}\n\nexport type InterfaceTypeFieldsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type InterfaceTypeFieldsUpdateFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeFieldsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeFieldsDisconnectFieldInput>>\n  update?: InputMaybe<InterfaceTypeFieldsUpdateConnectionInput>\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n}\n\nexport type InterfaceTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type InterfaceTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more InterfaceTypeSort objects to sort InterfaceTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InterfaceTypeSort>>\n}\n\nexport type InterfaceTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<InterfaceTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<InterfaceTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<InterfaceTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<InterfaceTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type InterfaceTypeRelationInput = {\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort InterfaceTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one InterfaceTypeSort object. */\nexport type InterfaceTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type InterfaceTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type InterfaceTypeUpdateInput = {\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsUpdateFieldInput>>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsUpdateFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsUpdateFieldInput>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type InterfaceTypeUserOwnerAggregationSelection = {\n  __typename?: 'InterfaceTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<InterfaceTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type InterfaceTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type InterfaceTypeWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeWhere>>\n  NOT?: InputMaybe<InterfaceTypeWhere>\n  OR?: InputMaybe<Array<InterfaceTypeWhere>>\n  apiOfAtomsAggregate?: InputMaybe<InterfaceTypeApiOfAtomsAggregateInput>\n  /** Return InterfaceTypes where all of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_ALL?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_NONE?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_SINGLE?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_SOME?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where all of the related Atoms match this filter */\n  apiOfAtoms_ALL?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where none of the related Atoms match this filter */\n  apiOfAtoms_NONE?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where one of the related Atoms match this filter */\n  apiOfAtoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where some of the related Atoms match this filter */\n  apiOfAtoms_SOME?: InputMaybe<AtomWhere>\n  fieldRefsAggregate?: InputMaybe<InterfaceTypeFieldRefsAggregateInput>\n  /** Return InterfaceTypes where all of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  fieldsAggregate?: InputMaybe<InterfaceTypeFieldsAggregateInput>\n  /** Return InterfaceTypes where all of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_ALL?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_NONE?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_SINGLE?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_SOME?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where all of the related Fields match this filter */\n  fields_ALL?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where none of the related Fields match this filter */\n  fields_NONE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where one of the related Fields match this filter */\n  fields_SINGLE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where some of the related Fields match this filter */\n  fields_SOME?: InputMaybe<FieldWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<InterfaceTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type InterfaceTypesConnection = {\n  __typename?: 'InterfaceTypesConnection'\n  edges: Array<InterfaceTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/** Allows picking a lambda */\nexport type LambdaType = IBaseType & {\n  __typename?: 'LambdaType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<LambdaTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type LambdaTypeAggregateSelection = {\n  __typename?: 'LambdaTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type LambdaTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type LambdaTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type LambdaTypeConnectOrCreateWhere = {\n  node: LambdaTypeUniqueWhere\n}\n\nexport type LambdaTypeConnectWhere = {\n  node: LambdaTypeWhere\n}\n\nexport type LambdaTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type LambdaTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type LambdaTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type LambdaTypeEdge = {\n  __typename?: 'LambdaTypeEdge'\n  cursor: Scalars['String']['output']\n  node: LambdaType\n}\n\nexport type LambdaTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type LambdaTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more LambdaTypeSort objects to sort LambdaTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<LambdaTypeSort>>\n}\n\nexport type LambdaTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<LambdaTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<LambdaTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<LambdaTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<LambdaTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type LambdaTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<LambdaTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<LambdaTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<LambdaTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type LambdaTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort LambdaTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one LambdaTypeSort object. */\nexport type LambdaTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type LambdaTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type LambdaTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type LambdaTypeUserOwnerAggregationSelection = {\n  __typename?: 'LambdaTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<LambdaTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type LambdaTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'LambdaTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type LambdaTypeWhere = {\n  AND?: InputMaybe<Array<LambdaTypeWhere>>\n  NOT?: InputMaybe<LambdaTypeWhere>\n  OR?: InputMaybe<Array<LambdaTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<LambdaTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type LambdaTypesConnection = {\n  __typename?: 'LambdaTypesConnection'\n  edges: Array<LambdaTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation'\n  createActionTypes: CreateActionTypesMutationResponse\n  createApiActions: CreateApiActionsMutationResponse\n  createAppTypes: CreateAppTypesMutationResponse\n  createApps: CreateAppsMutationResponse\n  createArrayTypes: CreateArrayTypesMutationResponse\n  createAtoms: CreateAtomsMutationResponse\n  createCodeActions: CreateCodeActionsMutationResponse\n  createCodeMirrorTypes: CreateCodeMirrorTypesMutationResponse\n  createComponents: CreateComponentsMutationResponse\n  createDomains: CreateDomainsMutationResponse\n  createElementTypes: CreateElementTypesMutationResponse\n  createElements: CreateElementsMutationResponse\n  createEnumTypeValues: CreateEnumTypeValuesMutationResponse\n  createEnumTypes: CreateEnumTypesMutationResponse\n  createFields: CreateFieldsMutationResponse\n  createGetBaseTypesReturns: CreateGetBaseTypesReturnsMutationResponse\n  createHooks: CreateHooksMutationResponse\n  createInterfaceTypes: CreateInterfaceTypesMutationResponse\n  createLambdaTypes: CreateLambdaTypesMutationResponse\n  createPageTypes: CreatePageTypesMutationResponse\n  createPages: CreatePagesMutationResponse\n  createPrimitiveTypes: CreatePrimitiveTypesMutationResponse\n  createProps: CreatePropsMutationResponse\n  createReactNodeTypes: CreateReactNodeTypesMutationResponse\n  createRenderPropTypes: CreateRenderPropTypesMutationResponse\n  createResources: CreateResourcesMutationResponse\n  createStores: CreateStoresMutationResponse\n  createTags: CreateTagsMutationResponse\n  createTypeReferences: CreateTypeReferencesMutationResponse\n  createUnionTypes: CreateUnionTypesMutationResponse\n  createUsers: CreateUsersMutationResponse\n  deleteActionTypes: DeleteInfo\n  deleteApiActions: DeleteInfo\n  deleteAppTypes: DeleteInfo\n  deleteApps: DeleteInfo\n  deleteArrayTypes: DeleteInfo\n  deleteAtoms: DeleteInfo\n  deleteCodeActions: DeleteInfo\n  deleteCodeMirrorTypes: DeleteInfo\n  deleteComponents: DeleteInfo\n  deleteDomains: DeleteInfo\n  deleteElementTypes: DeleteInfo\n  deleteElements: DeleteInfo\n  deleteEnumTypeValues: DeleteInfo\n  deleteEnumTypes: DeleteInfo\n  deleteFields: DeleteInfo\n  deleteGetBaseTypesReturns: DeleteInfo\n  deleteHooks: DeleteInfo\n  deleteInterfaceTypes: DeleteInfo\n  deleteLambdaTypes: DeleteInfo\n  deletePageTypes: DeleteInfo\n  deletePages: DeleteInfo\n  deletePrimitiveTypes: DeleteInfo\n  deleteProps: DeleteInfo\n  deleteReactNodeTypes: DeleteInfo\n  deleteRenderPropTypes: DeleteInfo\n  deleteResources: DeleteInfo\n  deleteStores: DeleteInfo\n  deleteTags: DeleteInfo\n  deleteTypeReferences: DeleteInfo\n  deleteUnionTypes: DeleteInfo\n  deleteUsers: DeleteInfo\n  resetDatabase?: Maybe<ResetDatabaseMutationResponse>\n  updateActionTypes: UpdateActionTypesMutationResponse\n  updateApiActions: UpdateApiActionsMutationResponse\n  updateAppTypes: UpdateAppTypesMutationResponse\n  updateApps: UpdateAppsMutationResponse\n  updateArrayTypes: UpdateArrayTypesMutationResponse\n  updateAtoms: UpdateAtomsMutationResponse\n  updateCodeActions: UpdateCodeActionsMutationResponse\n  updateCodeMirrorTypes: UpdateCodeMirrorTypesMutationResponse\n  updateComponents: UpdateComponentsMutationResponse\n  updateDomains: UpdateDomainsMutationResponse\n  updateElementTypes: UpdateElementTypesMutationResponse\n  updateElements: UpdateElementsMutationResponse\n  updateEnumTypeValues: UpdateEnumTypeValuesMutationResponse\n  updateEnumTypes: UpdateEnumTypesMutationResponse\n  updateFields: UpdateFieldsMutationResponse\n  updateGetBaseTypesReturns: UpdateGetBaseTypesReturnsMutationResponse\n  updateHooks: UpdateHooksMutationResponse\n  updateInterfaceTypes: UpdateInterfaceTypesMutationResponse\n  updateLambdaTypes: UpdateLambdaTypesMutationResponse\n  updatePageTypes: UpdatePageTypesMutationResponse\n  updatePages: UpdatePagesMutationResponse\n  updatePrimitiveTypes: UpdatePrimitiveTypesMutationResponse\n  updateProps: UpdatePropsMutationResponse\n  updateReactNodeTypes: UpdateReactNodeTypesMutationResponse\n  updateRenderPropTypes: UpdateRenderPropTypesMutationResponse\n  updateResources: UpdateResourcesMutationResponse\n  updateStores: UpdateStoresMutationResponse\n  updateTags: UpdateTagsMutationResponse\n  updateTypeReferences: UpdateTypeReferencesMutationResponse\n  updateUnionTypes: UpdateUnionTypesMutationResponse\n}\n\nexport type MutationCreateActionTypesArgs = {\n  input: Array<ActionTypeCreateInput>\n}\n\nexport type MutationCreateApiActionsArgs = {\n  input: Array<ApiActionCreateInput>\n}\n\nexport type MutationCreateAppTypesArgs = {\n  input: Array<AppTypeCreateInput>\n}\n\nexport type MutationCreateAppsArgs = {\n  input: Array<AppCreateInput>\n}\n\nexport type MutationCreateArrayTypesArgs = {\n  input: Array<ArrayTypeCreateInput>\n}\n\nexport type MutationCreateAtomsArgs = {\n  input: Array<AtomCreateInput>\n}\n\nexport type MutationCreateCodeActionsArgs = {\n  input: Array<CodeActionCreateInput>\n}\n\nexport type MutationCreateCodeMirrorTypesArgs = {\n  input: Array<CodeMirrorTypeCreateInput>\n}\n\nexport type MutationCreateComponentsArgs = {\n  input: Array<ComponentCreateInput>\n}\n\nexport type MutationCreateDomainsArgs = {\n  input: Array<DomainCreateInput>\n}\n\nexport type MutationCreateElementTypesArgs = {\n  input: Array<ElementTypeCreateInput>\n}\n\nexport type MutationCreateElementsArgs = {\n  input: Array<ElementCreateInput>\n}\n\nexport type MutationCreateEnumTypeValuesArgs = {\n  input: Array<EnumTypeValueCreateInput>\n}\n\nexport type MutationCreateEnumTypesArgs = {\n  input: Array<EnumTypeCreateInput>\n}\n\nexport type MutationCreateFieldsArgs = {\n  input: Array<FieldCreateInput>\n}\n\nexport type MutationCreateGetBaseTypesReturnsArgs = {\n  input: Array<GetBaseTypesReturnCreateInput>\n}\n\nexport type MutationCreateHooksArgs = {\n  input: Array<HookCreateInput>\n}\n\nexport type MutationCreateInterfaceTypesArgs = {\n  input: Array<InterfaceTypeCreateInput>\n}\n\nexport type MutationCreateLambdaTypesArgs = {\n  input: Array<LambdaTypeCreateInput>\n}\n\nexport type MutationCreatePageTypesArgs = {\n  input: Array<PageTypeCreateInput>\n}\n\nexport type MutationCreatePagesArgs = {\n  input: Array<PageCreateInput>\n}\n\nexport type MutationCreatePrimitiveTypesArgs = {\n  input: Array<PrimitiveTypeCreateInput>\n}\n\nexport type MutationCreatePropsArgs = {\n  input: Array<PropCreateInput>\n}\n\nexport type MutationCreateReactNodeTypesArgs = {\n  input: Array<ReactNodeTypeCreateInput>\n}\n\nexport type MutationCreateRenderPropTypesArgs = {\n  input: Array<RenderPropTypeCreateInput>\n}\n\nexport type MutationCreateResourcesArgs = {\n  input: Array<ResourceCreateInput>\n}\n\nexport type MutationCreateStoresArgs = {\n  input: Array<StoreCreateInput>\n}\n\nexport type MutationCreateTagsArgs = {\n  input: Array<TagCreateInput>\n}\n\nexport type MutationCreateTypeReferencesArgs = {\n  input: Array<TypeReferenceCreateInput>\n}\n\nexport type MutationCreateUnionTypesArgs = {\n  input: Array<UnionTypeCreateInput>\n}\n\nexport type MutationCreateUsersArgs = {\n  input: Array<UserCreateInput>\n}\n\nexport type MutationDeleteActionTypesArgs = {\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type MutationDeleteApiActionsArgs = {\n  delete?: InputMaybe<ApiActionDeleteInput>\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type MutationDeleteAppTypesArgs = {\n  delete?: InputMaybe<AppTypeDeleteInput>\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type MutationDeleteAppsArgs = {\n  delete?: InputMaybe<AppDeleteInput>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type MutationDeleteArrayTypesArgs = {\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type MutationDeleteAtomsArgs = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type MutationDeleteCodeActionsArgs = {\n  delete?: InputMaybe<CodeActionDeleteInput>\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type MutationDeleteCodeMirrorTypesArgs = {\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type MutationDeleteComponentsArgs = {\n  delete?: InputMaybe<ComponentDeleteInput>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type MutationDeleteDomainsArgs = {\n  delete?: InputMaybe<DomainDeleteInput>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type MutationDeleteElementTypesArgs = {\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type MutationDeleteElementsArgs = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type MutationDeleteEnumTypeValuesArgs = {\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type MutationDeleteEnumTypesArgs = {\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type MutationDeleteFieldsArgs = {\n  delete?: InputMaybe<FieldDeleteInput>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type MutationDeleteGetBaseTypesReturnsArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type MutationDeleteHooksArgs = {\n  delete?: InputMaybe<HookDeleteInput>\n  where?: InputMaybe<HookWhere>\n}\n\nexport type MutationDeleteInterfaceTypesArgs = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type MutationDeleteLambdaTypesArgs = {\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type MutationDeletePageTypesArgs = {\n  delete?: InputMaybe<PageTypeDeleteInput>\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type MutationDeletePagesArgs = {\n  delete?: InputMaybe<PageDeleteInput>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type MutationDeletePrimitiveTypesArgs = {\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type MutationDeletePropsArgs = {\n  where?: InputMaybe<PropWhere>\n}\n\nexport type MutationDeleteReactNodeTypesArgs = {\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type MutationDeleteRenderPropTypesArgs = {\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type MutationDeleteResourcesArgs = {\n  delete?: InputMaybe<ResourceDeleteInput>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type MutationDeleteStoresArgs = {\n  delete?: InputMaybe<StoreDeleteInput>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type MutationDeleteTagsArgs = {\n  delete?: InputMaybe<TagDeleteInput>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type MutationDeleteTypeReferencesArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type MutationDeleteUnionTypesArgs = {\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type MutationDeleteUsersArgs = {\n  delete?: InputMaybe<UserDeleteInput>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type MutationUpdateActionTypesArgs = {\n  connect?: InputMaybe<ActionTypeConnectInput>\n  connectOrCreate?: InputMaybe<ActionTypeConnectOrCreateInput>\n  create?: InputMaybe<ActionTypeRelationInput>\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  disconnect?: InputMaybe<ActionTypeDisconnectInput>\n  update?: InputMaybe<ActionTypeUpdateInput>\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type MutationUpdateApiActionsArgs = {\n  connect?: InputMaybe<ApiActionConnectInput>\n  connectOrCreate?: InputMaybe<ApiActionConnectOrCreateInput>\n  create?: InputMaybe<ApiActionRelationInput>\n  delete?: InputMaybe<ApiActionDeleteInput>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  update?: InputMaybe<ApiActionUpdateInput>\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type MutationUpdateAppTypesArgs = {\n  connect?: InputMaybe<AppTypeConnectInput>\n  connectOrCreate?: InputMaybe<AppTypeConnectOrCreateInput>\n  create?: InputMaybe<AppTypeRelationInput>\n  delete?: InputMaybe<AppTypeDeleteInput>\n  disconnect?: InputMaybe<AppTypeDisconnectInput>\n  update?: InputMaybe<AppTypeUpdateInput>\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type MutationUpdateAppsArgs = {\n  connect?: InputMaybe<AppConnectInput>\n  connectOrCreate?: InputMaybe<AppConnectOrCreateInput>\n  create?: InputMaybe<AppRelationInput>\n  delete?: InputMaybe<AppDeleteInput>\n  disconnect?: InputMaybe<AppDisconnectInput>\n  update?: InputMaybe<AppUpdateInput>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type MutationUpdateArrayTypesArgs = {\n  connect?: InputMaybe<ArrayTypeConnectInput>\n  connectOrCreate?: InputMaybe<ArrayTypeConnectOrCreateInput>\n  create?: InputMaybe<ArrayTypeRelationInput>\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  disconnect?: InputMaybe<ArrayTypeDisconnectInput>\n  update?: InputMaybe<ArrayTypeUpdateInput>\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type MutationUpdateAtomsArgs = {\n  connect?: InputMaybe<AtomConnectInput>\n  connectOrCreate?: InputMaybe<AtomConnectOrCreateInput>\n  create?: InputMaybe<AtomRelationInput>\n  delete?: InputMaybe<AtomDeleteInput>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  update?: InputMaybe<AtomUpdateInput>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type MutationUpdateCodeActionsArgs = {\n  connect?: InputMaybe<CodeActionConnectInput>\n  connectOrCreate?: InputMaybe<CodeActionConnectOrCreateInput>\n  create?: InputMaybe<CodeActionRelationInput>\n  delete?: InputMaybe<CodeActionDeleteInput>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  update?: InputMaybe<CodeActionUpdateInput>\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type MutationUpdateCodeMirrorTypesArgs = {\n  connect?: InputMaybe<CodeMirrorTypeConnectInput>\n  connectOrCreate?: InputMaybe<CodeMirrorTypeConnectOrCreateInput>\n  create?: InputMaybe<CodeMirrorTypeRelationInput>\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  disconnect?: InputMaybe<CodeMirrorTypeDisconnectInput>\n  update?: InputMaybe<CodeMirrorTypeUpdateInput>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type MutationUpdateComponentsArgs = {\n  connect?: InputMaybe<ComponentConnectInput>\n  connectOrCreate?: InputMaybe<ComponentConnectOrCreateInput>\n  create?: InputMaybe<ComponentRelationInput>\n  delete?: InputMaybe<ComponentDeleteInput>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  update?: InputMaybe<ComponentUpdateInput>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type MutationUpdateDomainsArgs = {\n  connect?: InputMaybe<DomainConnectInput>\n  connectOrCreate?: InputMaybe<DomainConnectOrCreateInput>\n  create?: InputMaybe<DomainRelationInput>\n  delete?: InputMaybe<DomainDeleteInput>\n  disconnect?: InputMaybe<DomainDisconnectInput>\n  update?: InputMaybe<DomainUpdateInput>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type MutationUpdateElementTypesArgs = {\n  connect?: InputMaybe<ElementTypeConnectInput>\n  connectOrCreate?: InputMaybe<ElementTypeConnectOrCreateInput>\n  create?: InputMaybe<ElementTypeRelationInput>\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  disconnect?: InputMaybe<ElementTypeDisconnectInput>\n  update?: InputMaybe<ElementTypeUpdateInput>\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type MutationUpdateElementsArgs = {\n  connect?: InputMaybe<ElementConnectInput>\n  connectOrCreate?: InputMaybe<ElementConnectOrCreateInput>\n  create?: InputMaybe<ElementRelationInput>\n  delete?: InputMaybe<ElementDeleteInput>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  update?: InputMaybe<ElementUpdateInput>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type MutationUpdateEnumTypeValuesArgs = {\n  connect?: InputMaybe<EnumTypeValueConnectInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueConnectOrCreateInput>\n  create?: InputMaybe<EnumTypeValueRelationInput>\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n  disconnect?: InputMaybe<EnumTypeValueDisconnectInput>\n  update?: InputMaybe<EnumTypeValueUpdateInput>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type MutationUpdateEnumTypesArgs = {\n  connect?: InputMaybe<EnumTypeConnectInput>\n  connectOrCreate?: InputMaybe<EnumTypeConnectOrCreateInput>\n  create?: InputMaybe<EnumTypeRelationInput>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n  update?: InputMaybe<EnumTypeUpdateInput>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type MutationUpdateFieldsArgs = {\n  connect?: InputMaybe<FieldConnectInput>\n  connectOrCreate?: InputMaybe<FieldConnectOrCreateInput>\n  create?: InputMaybe<FieldRelationInput>\n  delete?: InputMaybe<FieldDeleteInput>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  update?: InputMaybe<FieldUpdateInput>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type MutationUpdateGetBaseTypesReturnsArgs = {\n  update?: InputMaybe<GetBaseTypesReturnUpdateInput>\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type MutationUpdateHooksArgs = {\n  connect?: InputMaybe<HookConnectInput>\n  connectOrCreate?: InputMaybe<HookConnectOrCreateInput>\n  create?: InputMaybe<HookRelationInput>\n  delete?: InputMaybe<HookDeleteInput>\n  disconnect?: InputMaybe<HookDisconnectInput>\n  update?: InputMaybe<HookUpdateInput>\n  where?: InputMaybe<HookWhere>\n}\n\nexport type MutationUpdateInterfaceTypesArgs = {\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  connectOrCreate?: InputMaybe<InterfaceTypeConnectOrCreateInput>\n  create?: InputMaybe<InterfaceTypeRelationInput>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  update?: InputMaybe<InterfaceTypeUpdateInput>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type MutationUpdateLambdaTypesArgs = {\n  connect?: InputMaybe<LambdaTypeConnectInput>\n  connectOrCreate?: InputMaybe<LambdaTypeConnectOrCreateInput>\n  create?: InputMaybe<LambdaTypeRelationInput>\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  disconnect?: InputMaybe<LambdaTypeDisconnectInput>\n  update?: InputMaybe<LambdaTypeUpdateInput>\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type MutationUpdatePageTypesArgs = {\n  connect?: InputMaybe<PageTypeConnectInput>\n  connectOrCreate?: InputMaybe<PageTypeConnectOrCreateInput>\n  create?: InputMaybe<PageTypeRelationInput>\n  delete?: InputMaybe<PageTypeDeleteInput>\n  disconnect?: InputMaybe<PageTypeDisconnectInput>\n  update?: InputMaybe<PageTypeUpdateInput>\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type MutationUpdatePagesArgs = {\n  connect?: InputMaybe<PageConnectInput>\n  connectOrCreate?: InputMaybe<PageConnectOrCreateInput>\n  create?: InputMaybe<PageRelationInput>\n  delete?: InputMaybe<PageDeleteInput>\n  disconnect?: InputMaybe<PageDisconnectInput>\n  update?: InputMaybe<PageUpdateInput>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type MutationUpdatePrimitiveTypesArgs = {\n  connect?: InputMaybe<PrimitiveTypeConnectInput>\n  connectOrCreate?: InputMaybe<PrimitiveTypeConnectOrCreateInput>\n  create?: InputMaybe<PrimitiveTypeRelationInput>\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  disconnect?: InputMaybe<PrimitiveTypeDisconnectInput>\n  update?: InputMaybe<PrimitiveTypeUpdateInput>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type MutationUpdatePropsArgs = {\n  update?: InputMaybe<PropUpdateInput>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type MutationUpdateReactNodeTypesArgs = {\n  connect?: InputMaybe<ReactNodeTypeConnectInput>\n  connectOrCreate?: InputMaybe<ReactNodeTypeConnectOrCreateInput>\n  create?: InputMaybe<ReactNodeTypeRelationInput>\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  disconnect?: InputMaybe<ReactNodeTypeDisconnectInput>\n  update?: InputMaybe<ReactNodeTypeUpdateInput>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type MutationUpdateRenderPropTypesArgs = {\n  connect?: InputMaybe<RenderPropTypeConnectInput>\n  connectOrCreate?: InputMaybe<RenderPropTypeConnectOrCreateInput>\n  create?: InputMaybe<RenderPropTypeRelationInput>\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  disconnect?: InputMaybe<RenderPropTypeDisconnectInput>\n  update?: InputMaybe<RenderPropTypeUpdateInput>\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type MutationUpdateResourcesArgs = {\n  connect?: InputMaybe<ResourceConnectInput>\n  connectOrCreate?: InputMaybe<ResourceConnectOrCreateInput>\n  create?: InputMaybe<ResourceRelationInput>\n  delete?: InputMaybe<ResourceDeleteInput>\n  disconnect?: InputMaybe<ResourceDisconnectInput>\n  update?: InputMaybe<ResourceUpdateInput>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type MutationUpdateStoresArgs = {\n  connect?: InputMaybe<StoreConnectInput>\n  connectOrCreate?: InputMaybe<StoreConnectOrCreateInput>\n  create?: InputMaybe<StoreRelationInput>\n  delete?: InputMaybe<StoreDeleteInput>\n  disconnect?: InputMaybe<StoreDisconnectInput>\n  update?: InputMaybe<StoreUpdateInput>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type MutationUpdateTagsArgs = {\n  connect?: InputMaybe<TagConnectInput>\n  connectOrCreate?: InputMaybe<TagConnectOrCreateInput>\n  create?: InputMaybe<TagRelationInput>\n  delete?: InputMaybe<TagDeleteInput>\n  disconnect?: InputMaybe<TagDisconnectInput>\n  update?: InputMaybe<TagUpdateInput>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type MutationUpdateTypeReferencesArgs = {\n  update?: InputMaybe<TypeReferenceUpdateInput>\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type MutationUpdateUnionTypesArgs = {\n  connect?: InputMaybe<UnionTypeConnectInput>\n  connectOrCreate?: InputMaybe<UnionTypeConnectOrCreateInput>\n  create?: InputMaybe<UnionTypeRelationInput>\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  disconnect?: InputMaybe<UnionTypeDisconnectInput>\n  update?: InputMaybe<UnionTypeUpdateInput>\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type Page = {\n  __typename?: 'Page'\n  _compoundName: Scalars['String']['output']\n  app: App\n  appAggregate?: Maybe<PageAppAppAggregationSelection>\n  appConnection: PageAppConnection\n  id: Scalars['ID']['output']\n  kind: PageKind\n  name: Scalars['String']['output']\n  pageContentContainer?: Maybe<Element>\n  pageContentContainerAggregate?: Maybe<PageElementPageContentContainerAggregationSelection>\n  pageContentContainerConnection: PagePageContentContainerConnection\n  rootElement: Element\n  rootElementAggregate?: Maybe<PageElementRootElementAggregationSelection>\n  rootElementConnection: PageRootElementConnection\n  slug: Scalars['String']['output']\n  store: Store\n  storeAggregate?: Maybe<PageStoreStoreAggregationSelection>\n  storeConnection: PageStoreConnection\n  url: Scalars['String']['output']\n}\n\nexport type PageAppArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type PageAppAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type PageAppConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<PageAppConnectionSort>>\n  where?: InputMaybe<PageAppConnectionWhere>\n}\n\nexport type PagePageContentContainerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type PagePageContentContainerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type PagePageContentContainerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<PagePageContentContainerConnectionSort>>\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n}\n\nexport type PageRootElementArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type PageRootElementAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type PageRootElementConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<PageRootElementConnectionSort>>\n  where?: InputMaybe<PageRootElementConnectionWhere>\n}\n\nexport type PageStoreArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type PageStoreAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type PageStoreConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<PageStoreConnectionSort>>\n  where?: InputMaybe<PageStoreConnectionWhere>\n}\n\nexport type PageAggregateSelection = {\n  __typename?: 'PageAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type PageAppAggregateInput = {\n  AND?: InputMaybe<Array<PageAppAggregateInput>>\n  NOT?: InputMaybe<PageAppAggregateInput>\n  OR?: InputMaybe<Array<PageAppAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PageAppNodeAggregationWhereInput>\n}\n\nexport type PageAppAppAggregationSelection = {\n  __typename?: 'PageAppAppAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PageAppAppNodeAggregateSelection>\n}\n\nexport type PageAppAppNodeAggregateSelection = {\n  __typename?: 'PageAppAppNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type PageAppConnectFieldInput = {\n  connect?: InputMaybe<AppConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AppConnectWhere>\n}\n\nexport type PageAppConnectOrCreateFieldInput = {\n  onCreate: PageAppConnectOrCreateFieldInputOnCreate\n  where: AppConnectOrCreateWhere\n}\n\nexport type PageAppConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type PageAppConnection = {\n  __typename?: 'PageAppConnection'\n  edges: Array<PageAppRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type PageAppConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type PageAppConnectionWhere = {\n  AND?: InputMaybe<Array<PageAppConnectionWhere>>\n  NOT?: InputMaybe<PageAppConnectionWhere>\n  OR?: InputMaybe<Array<PageAppConnectionWhere>>\n  node?: InputMaybe<AppWhere>\n}\n\nexport type PageAppCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type PageAppDeleteFieldInput = {\n  delete?: InputMaybe<AppDeleteInput>\n  where?: InputMaybe<PageAppConnectionWhere>\n}\n\nexport type PageAppDisconnectFieldInput = {\n  disconnect?: InputMaybe<AppDisconnectInput>\n  where?: InputMaybe<PageAppConnectionWhere>\n}\n\nexport type PageAppFieldInput = {\n  connect?: InputMaybe<PageAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageAppConnectOrCreateFieldInput>\n  create?: InputMaybe<PageAppCreateFieldInput>\n}\n\nexport type PageAppNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageAppNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageAppNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PageAppNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PageAppRelationship = {\n  __typename?: 'PageAppRelationship'\n  cursor: Scalars['String']['output']\n  node: App\n}\n\nexport type PageAppUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type PageAppUpdateFieldInput = {\n  connect?: InputMaybe<PageAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageAppConnectOrCreateFieldInput>\n  create?: InputMaybe<PageAppCreateFieldInput>\n  delete?: InputMaybe<PageAppDeleteFieldInput>\n  disconnect?: InputMaybe<PageAppDisconnectFieldInput>\n  update?: InputMaybe<PageAppUpdateConnectionInput>\n  where?: InputMaybe<PageAppConnectionWhere>\n}\n\nexport type PageConnectInput = {\n  app?: InputMaybe<PageAppConnectFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerConnectFieldInput>\n  rootElement?: InputMaybe<PageRootElementConnectFieldInput>\n  store?: InputMaybe<PageStoreConnectFieldInput>\n}\n\nexport type PageConnectOrCreateInput = {\n  app?: InputMaybe<PageAppConnectOrCreateFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n  rootElement?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n  store?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n}\n\nexport type PageConnectOrCreateWhere = {\n  node: PageUniqueWhere\n}\n\nexport type PageConnectWhere = {\n  node: PageWhere\n}\n\nexport type PageCreateInput = {\n  _compoundName: Scalars['String']['input']\n  app?: InputMaybe<PageAppFieldInput>\n  id: Scalars['ID']['input']\n  kind: PageKind\n  pageContentContainer?: InputMaybe<PagePageContentContainerFieldInput>\n  rootElement?: InputMaybe<PageRootElementFieldInput>\n  store?: InputMaybe<PageStoreFieldInput>\n  url: Scalars['String']['input']\n}\n\nexport type PageDeleteInput = {\n  app?: InputMaybe<PageAppDeleteFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerDeleteFieldInput>\n  rootElement?: InputMaybe<PageRootElementDeleteFieldInput>\n  store?: InputMaybe<PageStoreDeleteFieldInput>\n}\n\nexport type PageDisconnectInput = {\n  app?: InputMaybe<PageAppDisconnectFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerDisconnectFieldInput>\n  rootElement?: InputMaybe<PageRootElementDisconnectFieldInput>\n  store?: InputMaybe<PageStoreDisconnectFieldInput>\n}\n\nexport type PageEdge = {\n  __typename?: 'PageEdge'\n  cursor: Scalars['String']['output']\n  node: Page\n}\n\nexport type PageElementPageContentContainerAggregationSelection = {\n  __typename?: 'PageElementPageContentContainerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PageElementPageContentContainerNodeAggregateSelection>\n}\n\nexport type PageElementPageContentContainerNodeAggregateSelection = {\n  __typename?: 'PageElementPageContentContainerNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type PageElementRootElementAggregationSelection = {\n  __typename?: 'PageElementRootElementAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PageElementRootElementNodeAggregateSelection>\n}\n\nexport type PageElementRootElementNodeAggregateSelection = {\n  __typename?: 'PageElementRootElementNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\n/** Pagination information (Relay) */\nexport type PageInfo = {\n  __typename?: 'PageInfo'\n  endCursor?: Maybe<Scalars['String']['output']>\n  hasNextPage: Scalars['Boolean']['output']\n  hasPreviousPage: Scalars['Boolean']['output']\n  startCursor?: Maybe<Scalars['String']['output']>\n}\n\nexport enum PageKind {\n  InternalServerError = 'InternalServerError',\n  NotFound = 'NotFound',\n  Provider = 'Provider',\n  Regular = 'Regular',\n}\n\nexport type PageOnCreateInput = {\n  _compoundName: Scalars['String']['input']\n  id: Scalars['ID']['input']\n  kind: PageKind\n  url: Scalars['String']['input']\n}\n\nexport type PageOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more PageSort objects to sort Pages by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PageSort>>\n}\n\nexport type PagePageContentContainerAggregateInput = {\n  AND?: InputMaybe<Array<PagePageContentContainerAggregateInput>>\n  NOT?: InputMaybe<PagePageContentContainerAggregateInput>\n  OR?: InputMaybe<Array<PagePageContentContainerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PagePageContentContainerNodeAggregationWhereInput>\n}\n\nexport type PagePageContentContainerConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type PagePageContentContainerConnectOrCreateFieldInput = {\n  onCreate: PagePageContentContainerConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type PagePageContentContainerConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type PagePageContentContainerConnection = {\n  __typename?: 'PagePageContentContainerConnection'\n  edges: Array<PagePageContentContainerRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type PagePageContentContainerConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type PagePageContentContainerConnectionWhere = {\n  AND?: InputMaybe<Array<PagePageContentContainerConnectionWhere>>\n  NOT?: InputMaybe<PagePageContentContainerConnectionWhere>\n  OR?: InputMaybe<Array<PagePageContentContainerConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type PagePageContentContainerCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type PagePageContentContainerDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n}\n\nexport type PagePageContentContainerDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n}\n\nexport type PagePageContentContainerFieldInput = {\n  connect?: InputMaybe<PagePageContentContainerConnectFieldInput>\n  connectOrCreate?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n  create?: InputMaybe<PagePageContentContainerCreateFieldInput>\n}\n\nexport type PagePageContentContainerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PagePageContentContainerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PagePageContentContainerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PagePageContentContainerNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PagePageContentContainerRelationship = {\n  __typename?: 'PagePageContentContainerRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type PagePageContentContainerUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type PagePageContentContainerUpdateFieldInput = {\n  connect?: InputMaybe<PagePageContentContainerConnectFieldInput>\n  connectOrCreate?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n  create?: InputMaybe<PagePageContentContainerCreateFieldInput>\n  delete?: InputMaybe<PagePageContentContainerDeleteFieldInput>\n  disconnect?: InputMaybe<PagePageContentContainerDisconnectFieldInput>\n  update?: InputMaybe<PagePageContentContainerUpdateConnectionInput>\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n}\n\nexport type PageRelationInput = {\n  app?: InputMaybe<PageAppCreateFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerCreateFieldInput>\n  rootElement?: InputMaybe<PageRootElementCreateFieldInput>\n  store?: InputMaybe<PageStoreCreateFieldInput>\n}\n\nexport type PageRootElementAggregateInput = {\n  AND?: InputMaybe<Array<PageRootElementAggregateInput>>\n  NOT?: InputMaybe<PageRootElementAggregateInput>\n  OR?: InputMaybe<Array<PageRootElementAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PageRootElementNodeAggregationWhereInput>\n}\n\nexport type PageRootElementConnectFieldInput = {\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type PageRootElementConnectOrCreateFieldInput = {\n  onCreate: PageRootElementConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type PageRootElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type PageRootElementConnection = {\n  __typename?: 'PageRootElementConnection'\n  edges: Array<PageRootElementRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type PageRootElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type PageRootElementConnectionWhere = {\n  AND?: InputMaybe<Array<PageRootElementConnectionWhere>>\n  NOT?: InputMaybe<PageRootElementConnectionWhere>\n  OR?: InputMaybe<Array<PageRootElementConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type PageRootElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type PageRootElementDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<PageRootElementConnectionWhere>\n}\n\nexport type PageRootElementDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<PageRootElementConnectionWhere>\n}\n\nexport type PageRootElementFieldInput = {\n  connect?: InputMaybe<PageRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n  create?: InputMaybe<PageRootElementCreateFieldInput>\n}\n\nexport type PageRootElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageRootElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageRootElementNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PageRootElementNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PageRootElementRelationship = {\n  __typename?: 'PageRootElementRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type PageRootElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type PageRootElementUpdateFieldInput = {\n  connect?: InputMaybe<PageRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n  create?: InputMaybe<PageRootElementCreateFieldInput>\n  delete?: InputMaybe<PageRootElementDeleteFieldInput>\n  disconnect?: InputMaybe<PageRootElementDisconnectFieldInput>\n  update?: InputMaybe<PageRootElementUpdateConnectionInput>\n  where?: InputMaybe<PageRootElementConnectionWhere>\n}\n\n/** Fields to sort Pages by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageSort object. */\nexport type PageSort = {\n  _compoundName?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  url?: InputMaybe<SortDirection>\n}\n\nexport type PageStoreAggregateInput = {\n  AND?: InputMaybe<Array<PageStoreAggregateInput>>\n  NOT?: InputMaybe<PageStoreAggregateInput>\n  OR?: InputMaybe<Array<PageStoreAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PageStoreNodeAggregationWhereInput>\n}\n\nexport type PageStoreConnectFieldInput = {\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<StoreConnectWhere>\n}\n\nexport type PageStoreConnectOrCreateFieldInput = {\n  onCreate: PageStoreConnectOrCreateFieldInputOnCreate\n  where: StoreConnectOrCreateWhere\n}\n\nexport type PageStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type PageStoreConnection = {\n  __typename?: 'PageStoreConnection'\n  edges: Array<PageStoreRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type PageStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type PageStoreConnectionWhere = {\n  AND?: InputMaybe<Array<PageStoreConnectionWhere>>\n  NOT?: InputMaybe<PageStoreConnectionWhere>\n  OR?: InputMaybe<Array<PageStoreConnectionWhere>>\n  node?: InputMaybe<StoreWhere>\n}\n\nexport type PageStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type PageStoreDeleteFieldInput = {\n  delete?: InputMaybe<StoreDeleteInput>\n  where?: InputMaybe<PageStoreConnectionWhere>\n}\n\nexport type PageStoreDisconnectFieldInput = {\n  disconnect?: InputMaybe<StoreDisconnectInput>\n  where?: InputMaybe<PageStoreConnectionWhere>\n}\n\nexport type PageStoreFieldInput = {\n  connect?: InputMaybe<PageStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<PageStoreCreateFieldInput>\n}\n\nexport type PageStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageStoreNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PageStoreNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PageStoreRelationship = {\n  __typename?: 'PageStoreRelationship'\n  cursor: Scalars['String']['output']\n  node: Store\n}\n\nexport type PageStoreStoreAggregationSelection = {\n  __typename?: 'PageStoreStoreAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PageStoreStoreNodeAggregateSelection>\n}\n\nexport type PageStoreStoreNodeAggregateSelection = {\n  __typename?: 'PageStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type PageStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type PageStoreUpdateFieldInput = {\n  connect?: InputMaybe<PageStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n  create?: InputMaybe<PageStoreCreateFieldInput>\n  delete?: InputMaybe<PageStoreDeleteFieldInput>\n  disconnect?: InputMaybe<PageStoreDisconnectFieldInput>\n  update?: InputMaybe<PageStoreUpdateConnectionInput>\n  where?: InputMaybe<PageStoreConnectionWhere>\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageType = IBaseType & {\n  __typename?: 'PageType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<PageTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type PageTypeAggregateSelection = {\n  __typename?: 'PageTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type PageTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type PageTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type PageTypeConnectOrCreateWhere = {\n  node: PageTypeUniqueWhere\n}\n\nexport type PageTypeConnectWhere = {\n  node: PageTypeWhere\n}\n\nexport type PageTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type PageTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type PageTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type PageTypeEdge = {\n  __typename?: 'PageTypeEdge'\n  cursor: Scalars['String']['output']\n  node: PageType\n}\n\nexport type PageTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type PageTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more PageTypeSort objects to sort PageTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PageTypeSort>>\n}\n\nexport type PageTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<PageTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<PageTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<PageTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PageTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type PageTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PageTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PageTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort PageTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageTypeSort object. */\nexport type PageTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type PageTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type PageTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type PageTypeUserOwnerAggregationSelection = {\n  __typename?: 'PageTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PageTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type PageTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'PageTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type PageTypeWhere = {\n  AND?: InputMaybe<Array<PageTypeWhere>>\n  NOT?: InputMaybe<PageTypeWhere>\n  OR?: InputMaybe<Array<PageTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<PageTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type PageTypesConnection = {\n  __typename?: 'PageTypesConnection'\n  edges: Array<PageTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type PageUniqueWhere = {\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type PageUpdateInput = {\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  app?: InputMaybe<PageAppUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<PageKind>\n  pageContentContainer?: InputMaybe<PagePageContentContainerUpdateFieldInput>\n  rootElement?: InputMaybe<PageRootElementUpdateFieldInput>\n  store?: InputMaybe<PageStoreUpdateFieldInput>\n  url?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type PageWhere = {\n  AND?: InputMaybe<Array<PageWhere>>\n  NOT?: InputMaybe<PageWhere>\n  OR?: InputMaybe<Array<PageWhere>>\n  _compoundName?: InputMaybe<Scalars['String']['input']>\n  _compoundName_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  _compoundName_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  _compoundName_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  _compoundName_MATCHES?: InputMaybe<Scalars['String']['input']>\n  _compoundName_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  app?: InputMaybe<AppWhere>\n  appAggregate?: InputMaybe<PageAppAggregateInput>\n  appConnection?: InputMaybe<PageAppConnectionWhere>\n  appConnection_NOT?: InputMaybe<PageAppConnectionWhere>\n  app_NOT?: InputMaybe<AppWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<PageKind>\n  kind_IN?: InputMaybe<Array<PageKind>>\n  pageContentContainer?: InputMaybe<ElementWhere>\n  pageContentContainerAggregate?: InputMaybe<PagePageContentContainerAggregateInput>\n  pageContentContainerConnection?: InputMaybe<PagePageContentContainerConnectionWhere>\n  pageContentContainerConnection_NOT?: InputMaybe<PagePageContentContainerConnectionWhere>\n  pageContentContainer_NOT?: InputMaybe<ElementWhere>\n  rootElement?: InputMaybe<ElementWhere>\n  rootElementAggregate?: InputMaybe<PageRootElementAggregateInput>\n  rootElementConnection?: InputMaybe<PageRootElementConnectionWhere>\n  rootElementConnection_NOT?: InputMaybe<PageRootElementConnectionWhere>\n  rootElement_NOT?: InputMaybe<ElementWhere>\n  store?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<PageStoreAggregateInput>\n  storeConnection?: InputMaybe<PageStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<PageStoreConnectionWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  url?: InputMaybe<Scalars['String']['input']>\n  url_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  url_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  url_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  url_MATCHES?: InputMaybe<Scalars['String']['input']>\n  url_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type PagesConnection = {\n  __typename?: 'PagesConnection'\n  edges: Array<PageEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveType = IBaseType & {\n  __typename?: 'PrimitiveType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<PrimitiveTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n  primitiveKind: PrimitiveTypeKind\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type PrimitiveTypeAggregateSelection = {\n  __typename?: 'PrimitiveTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type PrimitiveTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type PrimitiveTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type PrimitiveTypeConnectOrCreateWhere = {\n  node: PrimitiveTypeUniqueWhere\n}\n\nexport type PrimitiveTypeConnectWhere = {\n  node: PrimitiveTypeWhere\n}\n\nexport type PrimitiveTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  primitiveKind: PrimitiveTypeKind\n}\n\nexport type PrimitiveTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type PrimitiveTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type PrimitiveTypeEdge = {\n  __typename?: 'PrimitiveTypeEdge'\n  cursor: Scalars['String']['output']\n  node: PrimitiveType\n}\n\nexport enum PrimitiveTypeKind {\n  Boolean = 'Boolean',\n  Integer = 'Integer',\n  Number = 'Number',\n  String = 'String',\n}\n\nexport type PrimitiveTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  primitiveKind: PrimitiveTypeKind\n}\n\nexport type PrimitiveTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more PrimitiveTypeSort objects to sort PrimitiveTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PrimitiveTypeSort>>\n}\n\nexport type PrimitiveTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<PrimitiveTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<PrimitiveTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<PrimitiveTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<PrimitiveTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type PrimitiveTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PrimitiveTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PrimitiveTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<PrimitiveTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type PrimitiveTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort PrimitiveTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PrimitiveTypeSort object. */\nexport type PrimitiveTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  primitiveKind?: InputMaybe<SortDirection>\n}\n\nexport type PrimitiveTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n}\n\nexport type PrimitiveTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n}\n\nexport type PrimitiveTypeUserOwnerAggregationSelection = {\n  __typename?: 'PrimitiveTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<PrimitiveTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type PrimitiveTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'PrimitiveTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type PrimitiveTypeWhere = {\n  AND?: InputMaybe<Array<PrimitiveTypeWhere>>\n  NOT?: InputMaybe<PrimitiveTypeWhere>\n  OR?: InputMaybe<Array<PrimitiveTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<PrimitiveTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n  primitiveKind_IN?: InputMaybe<Array<PrimitiveTypeKind>>\n}\n\nexport type PrimitiveTypesConnection = {\n  __typename?: 'PrimitiveTypesConnection'\n  edges: Array<PrimitiveTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Prop = {\n  __typename?: 'Prop'\n  data: Scalars['String']['output']\n  id: Scalars['ID']['output']\n}\n\nexport type PropAggregateSelection = {\n  __typename?: 'PropAggregateSelection'\n  count: Scalars['Int']['output']\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type PropConnectOrCreateWhere = {\n  node: PropUniqueWhere\n}\n\nexport type PropConnectWhere = {\n  node: PropWhere\n}\n\nexport type PropCreateInput = {\n  data: Scalars['String']['input']\n  id: Scalars['ID']['input']\n}\n\nexport type PropEdge = {\n  __typename?: 'PropEdge'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type PropOnCreateInput = {\n  data: Scalars['String']['input']\n  id: Scalars['ID']['input']\n}\n\nexport type PropOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more PropSort objects to sort Props by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PropSort>>\n}\n\n/** Fields to sort Props by. The order in which sorts are applied is not guaranteed when specifying many fields in one PropSort object. */\nexport type PropSort = {\n  data?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n}\n\nexport type PropUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type PropUpdateInput = {\n  data?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type PropWhere = {\n  AND?: InputMaybe<Array<PropWhere>>\n  NOT?: InputMaybe<PropWhere>\n  OR?: InputMaybe<Array<PropWhere>>\n  data?: InputMaybe<Scalars['String']['input']>\n  data_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  data_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  data_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  data_MATCHES?: InputMaybe<Scalars['String']['input']>\n  data_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type PropsConnection = {\n  __typename?: 'PropsConnection'\n  edges: Array<PropEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type Query = {\n  __typename?: 'Query'\n  actionTypes: Array<ActionType>\n  actionTypesAggregate: ActionTypeAggregateSelection\n  actionTypesConnection: ActionTypesConnection\n  apiActions: Array<ApiAction>\n  apiActionsAggregate: ApiActionAggregateSelection\n  apiActionsConnection: ApiActionsConnection\n  appTypes: Array<AppType>\n  appTypesAggregate: AppTypeAggregateSelection\n  appTypesConnection: AppTypesConnection\n  apps: Array<App>\n  appsAggregate: AppAggregateSelection\n  appsConnection: AppsConnection\n  arrayTypes: Array<ArrayType>\n  arrayTypesAggregate: ArrayTypeAggregateSelection\n  arrayTypesConnection: ArrayTypesConnection\n  atoms: Array<Atom>\n  atomsAggregate: AtomAggregateSelection\n  atomsConnection: AtomsConnection\n  baseTypes: GetBaseTypesReturn\n  codeActions: Array<CodeAction>\n  codeActionsAggregate: CodeActionAggregateSelection\n  codeActionsConnection: CodeActionsConnection\n  codeMirrorTypes: Array<CodeMirrorType>\n  codeMirrorTypesAggregate: CodeMirrorTypeAggregateSelection\n  codeMirrorTypesConnection: CodeMirrorTypesConnection\n  components: Array<Component>\n  componentsAggregate: ComponentAggregateSelection\n  componentsConnection: ComponentsConnection\n  domains: Array<Domain>\n  domainsAggregate: DomainAggregateSelection\n  domainsConnection: DomainsConnection\n  elementTypes: Array<ElementType>\n  elementTypesAggregate: ElementTypeAggregateSelection\n  elementTypesConnection: ElementTypesConnection\n  elements: Array<Element>\n  elementsAggregate: ElementAggregateSelection\n  elementsConnection: ElementsConnection\n  enumTypeValues: Array<EnumTypeValue>\n  enumTypeValuesAggregate: EnumTypeValueAggregateSelection\n  enumTypeValuesConnection: EnumTypeValuesConnection\n  enumTypes: Array<EnumType>\n  enumTypesAggregate: EnumTypeAggregateSelection\n  enumTypesConnection: EnumTypesConnection\n  fields: Array<Field>\n  fieldsAggregate: FieldAggregateSelection\n  fieldsConnection: FieldsConnection\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n  getBaseTypesReturnsAggregate: GetBaseTypesReturnAggregateSelection\n  getBaseTypesReturnsConnection: GetBaseTypesReturnsConnection\n  /**\n   * Returns a list of all Type and Atom entities that reference the type with the given id\n   * This could be different types of relationships like Atom-Api, ArrayType-itemType, InterfaceType-field, UnionType-unionTypeChild\n   */\n  getTypeReferences?: Maybe<Array<TypeReference>>\n  hooks: Array<Hook>\n  hooksAggregate: HookAggregateSelection\n  hooksConnection: HooksConnection\n  interfaceTypes: Array<InterfaceType>\n  interfaceTypesAggregate: InterfaceTypeAggregateSelection\n  interfaceTypesConnection: InterfaceTypesConnection\n  /** Does a recursive check to see if the parent type (parentTypeId) contains the descendant type (descendantTypeId) at any level of nesting. Useful for checking for recursion */\n  isTypeDescendantOf?: Maybe<Scalars['Boolean']['output']>\n  lambdaTypes: Array<LambdaType>\n  lambdaTypesAggregate: LambdaTypeAggregateSelection\n  lambdaTypesConnection: LambdaTypesConnection\n  pageTypes: Array<PageType>\n  pageTypesAggregate: PageTypeAggregateSelection\n  pageTypesConnection: PageTypesConnection\n  pages: Array<Page>\n  pagesAggregate: PageAggregateSelection\n  pagesConnection: PagesConnection\n  primitiveTypes: Array<PrimitiveType>\n  primitiveTypesAggregate: PrimitiveTypeAggregateSelection\n  primitiveTypesConnection: PrimitiveTypesConnection\n  props: Array<Prop>\n  propsAggregate: PropAggregateSelection\n  propsConnection: PropsConnection\n  reactNodeTypes: Array<ReactNodeType>\n  reactNodeTypesAggregate: ReactNodeTypeAggregateSelection\n  reactNodeTypesConnection: ReactNodeTypesConnection\n  renderPropTypes: Array<RenderPropType>\n  renderPropTypesAggregate: RenderPropTypeAggregateSelection\n  renderPropTypesConnection: RenderPropTypesConnection\n  resources: Array<Resource>\n  resourcesAggregate: ResourceAggregateSelection\n  resourcesConnection: ResourcesConnection\n  stores: Array<Store>\n  storesAggregate: StoreAggregateSelection\n  storesConnection: StoresConnection\n  tags: Array<Tag>\n  tagsAggregate: TagAggregateSelection\n  tagsConnection: TagsConnection\n  typeReferences: Array<TypeReference>\n  typeReferencesAggregate: TypeReferenceAggregateSelection\n  typeReferencesConnection: TypeReferencesConnection\n  unionTypes: Array<UnionType>\n  unionTypesAggregate: UnionTypeAggregateSelection\n  unionTypesConnection: UnionTypesConnection\n  users: Array<User>\n  usersAggregate: UserAggregateSelection\n  usersConnection: UsersConnection\n}\n\nexport type QueryActionTypesArgs = {\n  options?: InputMaybe<ActionTypeOptions>\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type QueryActionTypesAggregateArgs = {\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type QueryActionTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ActionTypeSort>>>\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type QueryApiActionsArgs = {\n  options?: InputMaybe<ApiActionOptions>\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type QueryApiActionsAggregateArgs = {\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type QueryApiActionsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ApiActionSort>>>\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type QueryAppTypesArgs = {\n  options?: InputMaybe<AppTypeOptions>\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type QueryAppTypesAggregateArgs = {\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type QueryAppTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<AppTypeSort>>>\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type QueryAppsArgs = {\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type QueryAppsAggregateArgs = {\n  where?: InputMaybe<AppWhere>\n}\n\nexport type QueryAppsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<AppSort>>>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type QueryArrayTypesArgs = {\n  options?: InputMaybe<ArrayTypeOptions>\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type QueryArrayTypesAggregateArgs = {\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type QueryArrayTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ArrayTypeSort>>>\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type QueryAtomsArgs = {\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type QueryAtomsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type QueryAtomsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<AtomSort>>>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type QueryBaseTypesArgs = {\n  options?: InputMaybe<GetBaseTypesOptions>\n}\n\nexport type QueryCodeActionsArgs = {\n  options?: InputMaybe<CodeActionOptions>\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type QueryCodeActionsAggregateArgs = {\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type QueryCodeActionsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<CodeActionSort>>>\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type QueryCodeMirrorTypesArgs = {\n  options?: InputMaybe<CodeMirrorTypeOptions>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type QueryCodeMirrorTypesAggregateArgs = {\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type QueryCodeMirrorTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<CodeMirrorTypeSort>>>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type QueryComponentsArgs = {\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type QueryComponentsAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type QueryComponentsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ComponentSort>>>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type QueryDomainsArgs = {\n  options?: InputMaybe<DomainOptions>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type QueryDomainsAggregateArgs = {\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type QueryDomainsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<DomainSort>>>\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type QueryElementTypesArgs = {\n  options?: InputMaybe<ElementTypeOptions>\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type QueryElementTypesAggregateArgs = {\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type QueryElementTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ElementTypeSort>>>\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type QueryElementsArgs = {\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type QueryElementsAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type QueryElementsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ElementSort>>>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type QueryEnumTypeValuesArgs = {\n  options?: InputMaybe<EnumTypeValueOptions>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type QueryEnumTypeValuesAggregateArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type QueryEnumTypeValuesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<EnumTypeValueSort>>>\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type QueryEnumTypesArgs = {\n  options?: InputMaybe<EnumTypeOptions>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type QueryEnumTypesAggregateArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type QueryEnumTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<EnumTypeSort>>>\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type QueryFieldsArgs = {\n  options?: InputMaybe<FieldOptions>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type QueryFieldsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type QueryFieldsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<FieldSort>>>\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type QueryGetBaseTypesReturnsArgs = {\n  options?: InputMaybe<GetBaseTypesReturnOptions>\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type QueryGetBaseTypesReturnsAggregateArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type QueryGetBaseTypesReturnsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<GetBaseTypesReturnSort>>>\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type QueryGetTypeReferencesArgs = {\n  typeId: Scalars['ID']['input']\n}\n\nexport type QueryHooksArgs = {\n  options?: InputMaybe<HookOptions>\n  where?: InputMaybe<HookWhere>\n}\n\nexport type QueryHooksAggregateArgs = {\n  where?: InputMaybe<HookWhere>\n}\n\nexport type QueryHooksConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<HookSort>>>\n  where?: InputMaybe<HookWhere>\n}\n\nexport type QueryInterfaceTypesArgs = {\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type QueryInterfaceTypesAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type QueryInterfaceTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<InterfaceTypeSort>>>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type QueryIsTypeDescendantOfArgs = {\n  descendantTypeId: Scalars['ID']['input']\n  parentTypeId: Scalars['ID']['input']\n}\n\nexport type QueryLambdaTypesArgs = {\n  options?: InputMaybe<LambdaTypeOptions>\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type QueryLambdaTypesAggregateArgs = {\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type QueryLambdaTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<LambdaTypeSort>>>\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type QueryPageTypesArgs = {\n  options?: InputMaybe<PageTypeOptions>\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type QueryPageTypesAggregateArgs = {\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type QueryPageTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<PageTypeSort>>>\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type QueryPagesArgs = {\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type QueryPagesAggregateArgs = {\n  where?: InputMaybe<PageWhere>\n}\n\nexport type QueryPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<PageSort>>>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type QueryPrimitiveTypesArgs = {\n  options?: InputMaybe<PrimitiveTypeOptions>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type QueryPrimitiveTypesAggregateArgs = {\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type QueryPrimitiveTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<PrimitiveTypeSort>>>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type QueryPropsArgs = {\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type QueryPropsAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n}\n\nexport type QueryPropsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<PropSort>>>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type QueryReactNodeTypesArgs = {\n  options?: InputMaybe<ReactNodeTypeOptions>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type QueryReactNodeTypesAggregateArgs = {\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type QueryReactNodeTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ReactNodeTypeSort>>>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type QueryRenderPropTypesArgs = {\n  options?: InputMaybe<RenderPropTypeOptions>\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type QueryRenderPropTypesAggregateArgs = {\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type QueryRenderPropTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<RenderPropTypeSort>>>\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type QueryResourcesArgs = {\n  options?: InputMaybe<ResourceOptions>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type QueryResourcesAggregateArgs = {\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type QueryResourcesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<ResourceSort>>>\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type QueryStoresArgs = {\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type QueryStoresAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type QueryStoresConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<StoreSort>>>\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type QueryTagsArgs = {\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type QueryTagsAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n}\n\nexport type QueryTagsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<TagSort>>>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type QueryTypeReferencesArgs = {\n  options?: InputMaybe<TypeReferenceOptions>\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type QueryTypeReferencesAggregateArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type QueryTypeReferencesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<TypeReferenceSort>>>\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type QueryUnionTypesArgs = {\n  options?: InputMaybe<UnionTypeOptions>\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type QueryUnionTypesAggregateArgs = {\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type QueryUnionTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<UnionTypeSort>>>\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type QueryUsersArgs = {\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type QueryUsersAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n}\n\nexport type QueryUsersConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<InputMaybe<UserSort>>>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type QueryOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeType = IBaseType & {\n  __typename?: 'ReactNodeType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<ReactNodeTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ReactNodeTypeAggregateSelection = {\n  __typename?: 'ReactNodeTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ReactNodeTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ReactNodeTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ReactNodeTypeConnectOrCreateWhere = {\n  node: ReactNodeTypeUniqueWhere\n}\n\nexport type ReactNodeTypeConnectWhere = {\n  node: ReactNodeTypeWhere\n}\n\nexport type ReactNodeTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ReactNodeTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ReactNodeTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ReactNodeTypeEdge = {\n  __typename?: 'ReactNodeTypeEdge'\n  cursor: Scalars['String']['output']\n  node: ReactNodeType\n}\n\nexport type ReactNodeTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type ReactNodeTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ReactNodeTypeSort objects to sort ReactNodeTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ReactNodeTypeSort>>\n}\n\nexport type ReactNodeTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ReactNodeTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ReactNodeTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<ReactNodeTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ReactNodeTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ReactNodeTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ReactNodeTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ReactNodeTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ReactNodeTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ReactNodeTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ReactNodeTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ReactNodeTypeSort object. */\nexport type ReactNodeTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type ReactNodeTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type ReactNodeTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ReactNodeTypeUserOwnerAggregationSelection = {\n  __typename?: 'ReactNodeTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ReactNodeTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ReactNodeTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ReactNodeTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ReactNodeTypeWhere = {\n  AND?: InputMaybe<Array<ReactNodeTypeWhere>>\n  NOT?: InputMaybe<ReactNodeTypeWhere>\n  OR?: InputMaybe<Array<ReactNodeTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ReactNodeTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type ReactNodeTypesConnection = {\n  __typename?: 'ReactNodeTypesConnection'\n  edges: Array<ReactNodeTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropType = IBaseType & {\n  __typename?: 'RenderPropType'\n  id: Scalars['ID']['output']\n  kind: TypeKind\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<RenderPropTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type RenderPropTypeAggregateSelection = {\n  __typename?: 'RenderPropTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type RenderPropTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type RenderPropTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type RenderPropTypeConnectOrCreateWhere = {\n  node: RenderPropTypeUniqueWhere\n}\n\nexport type RenderPropTypeConnectWhere = {\n  node: RenderPropTypeWhere\n}\n\nexport type RenderPropTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type RenderPropTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type RenderPropTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type RenderPropTypeEdge = {\n  __typename?: 'RenderPropTypeEdge'\n  cursor: Scalars['String']['output']\n  node: RenderPropType\n}\n\nexport type RenderPropTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type RenderPropTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more RenderPropTypeSort objects to sort RenderPropTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<RenderPropTypeSort>>\n}\n\nexport type RenderPropTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<RenderPropTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<RenderPropTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<RenderPropTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<RenderPropTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type RenderPropTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<RenderPropTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<RenderPropTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<RenderPropTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type RenderPropTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort RenderPropTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one RenderPropTypeSort object. */\nexport type RenderPropTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type RenderPropTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type RenderPropTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type RenderPropTypeUserOwnerAggregationSelection = {\n  __typename?: 'RenderPropTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<RenderPropTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type RenderPropTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'RenderPropTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type RenderPropTypeWhere = {\n  AND?: InputMaybe<Array<RenderPropTypeWhere>>\n  NOT?: InputMaybe<RenderPropTypeWhere>\n  OR?: InputMaybe<Array<RenderPropTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<RenderPropTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n}\n\nexport type RenderPropTypesConnection = {\n  __typename?: 'RenderPropTypesConnection'\n  edges: Array<RenderPropTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type RenderType = {\n  __typename?: 'RenderType'\n  id: Scalars['ID']['output']\n  kind: RenderTypeKind\n}\n\nexport enum RenderTypeKind {\n  Atom = 'Atom',\n  Component = 'Component',\n}\n\nexport type ResetDatabaseMutationResponse = {\n  __typename?: 'ResetDatabaseMutationResponse'\n  success?: Maybe<Scalars['Boolean']['output']>\n}\n\nexport type Resource = WithOwner & {\n  __typename?: 'Resource'\n  config: Prop\n  configAggregate?: Maybe<ResourcePropConfigAggregationSelection>\n  configConnection: ResourceConfigConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<ResourceUserOwnerAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  type: ResourceType\n}\n\nexport type ResourceConfigArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ResourceConfigAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PropWhere>\n}\n\nexport type ResourceConfigConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<ResourceConfigConnectionSort>>\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type ResourceOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type ResourceOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type ResourceAggregateSelection = {\n  __typename?: 'ResourceAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ResourceConfigAggregateInput = {\n  AND?: InputMaybe<Array<ResourceConfigAggregateInput>>\n  NOT?: InputMaybe<ResourceConfigAggregateInput>\n  OR?: InputMaybe<Array<ResourceConfigAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ResourceConfigNodeAggregationWhereInput>\n}\n\nexport type ResourceConfigConnectFieldInput = {\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PropConnectWhere>\n}\n\nexport type ResourceConfigConnectOrCreateFieldInput = {\n  onCreate: ResourceConfigConnectOrCreateFieldInputOnCreate\n  where: PropConnectOrCreateWhere\n}\n\nexport type ResourceConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ResourceConfigConnection = {\n  __typename?: 'ResourceConfigConnection'\n  edges: Array<ResourceConfigRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type ResourceConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ResourceConfigConnectionWhere = {\n  AND?: InputMaybe<Array<ResourceConfigConnectionWhere>>\n  NOT?: InputMaybe<ResourceConfigConnectionWhere>\n  OR?: InputMaybe<Array<ResourceConfigConnectionWhere>>\n  node?: InputMaybe<PropWhere>\n}\n\nexport type ResourceConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ResourceConfigDeleteFieldInput = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceConfigDisconnectFieldInput = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceConfigFieldInput = {\n  connect?: InputMaybe<ResourceConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<ResourceConfigCreateFieldInput>\n}\n\nexport type ResourceConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ResourceConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ResourceConfigNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ResourceConfigNodeAggregationWhereInput>>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ResourceConfigRelationship = {\n  __typename?: 'ResourceConfigRelationship'\n  cursor: Scalars['String']['output']\n  node: Prop\n}\n\nexport type ResourceConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ResourceConfigUpdateFieldInput = {\n  connect?: InputMaybe<ResourceConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n  create?: InputMaybe<ResourceConfigCreateFieldInput>\n  delete?: InputMaybe<ResourceConfigDeleteFieldInput>\n  disconnect?: InputMaybe<ResourceConfigDisconnectFieldInput>\n  update?: InputMaybe<ResourceConfigUpdateConnectionInput>\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceConnectInput = {\n  config?: InputMaybe<ResourceConfigConnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n}\n\nexport type ResourceConnectOrCreateInput = {\n  config?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n}\n\nexport type ResourceConnectOrCreateWhere = {\n  node: ResourceUniqueWhere\n}\n\nexport type ResourceConnectWhere = {\n  node: ResourceWhere\n}\n\nexport type ResourceCreateInput = {\n  config?: InputMaybe<ResourceConfigFieldInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  type: ResourceType\n}\n\nexport type ResourceDeleteInput = {\n  config?: InputMaybe<ResourceConfigDeleteFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n}\n\nexport type ResourceDisconnectInput = {\n  config?: InputMaybe<ResourceConfigDisconnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n}\n\nexport type ResourceEdge = {\n  __typename?: 'ResourceEdge'\n  cursor: Scalars['String']['output']\n  node: Resource\n}\n\nexport type ResourceOnCreateInput = {\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  type: ResourceType\n}\n\nexport type ResourceOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more ResourceSort objects to sort Resources by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ResourceSort>>\n}\n\nexport type ResourceOwnerAggregateInput = {\n  AND?: InputMaybe<Array<ResourceOwnerAggregateInput>>\n  NOT?: InputMaybe<ResourceOwnerAggregateInput>\n  OR?: InputMaybe<Array<ResourceOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<ResourceOwnerNodeAggregationWhereInput>\n}\n\nexport type ResourceOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ResourceOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ResourceOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<ResourceOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type ResourcePropConfigAggregationSelection = {\n  __typename?: 'ResourcePropConfigAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ResourcePropConfigNodeAggregateSelection>\n}\n\nexport type ResourcePropConfigNodeAggregateSelection = {\n  __typename?: 'ResourcePropConfigNodeAggregateSelection'\n  data: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type ResourceRelationInput = {\n  config?: InputMaybe<ResourceConfigCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n}\n\n/** Fields to sort Resources by. The order in which sorts are applied is not guaranteed when specifying many fields in one ResourceSort object. */\nexport type ResourceSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport enum ResourceType {\n  GraphQL = 'GraphQL',\n  Rest = 'Rest',\n}\n\nexport type ResourceUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type ResourceUpdateInput = {\n  config?: InputMaybe<ResourceConfigUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  type?: InputMaybe<ResourceType>\n}\n\nexport type ResourceUserOwnerAggregationSelection = {\n  __typename?: 'ResourceUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<ResourceUserOwnerNodeAggregateSelection>\n}\n\nexport type ResourceUserOwnerNodeAggregateSelection = {\n  __typename?: 'ResourceUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ResourceWhere = {\n  AND?: InputMaybe<Array<ResourceWhere>>\n  NOT?: InputMaybe<ResourceWhere>\n  OR?: InputMaybe<Array<ResourceWhere>>\n  config?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<ResourceConfigAggregateInput>\n  configConnection?: InputMaybe<ResourceConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<ResourceConfigConnectionWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ResourceOwnerAggregateInput>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  type?: InputMaybe<ResourceType>\n  type_IN?: InputMaybe<Array<ResourceType>>\n}\n\nexport type ResourcesConnection = {\n  __typename?: 'ResourcesConnection'\n  edges: Array<ResourceEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport enum Role {\n  Admin = 'Admin',\n  User = 'User',\n}\n\nexport enum SortDirection {\n  /** Sort by field values in ascending order. */\n  ASC = 'ASC',\n  /** Sort by field values in descending order. */\n  DESC = 'DESC',\n}\n\nexport type Store = {\n  __typename?: 'Store'\n  actions: Array<AnyAction>\n  actionsConnection: StoreActionsConnection\n  api: InterfaceType\n  apiAggregate?: Maybe<StoreInterfaceTypeApiAggregationSelection>\n  apiConnection: StoreApiConnection\n  component?: Maybe<Component>\n  componentAggregate?: Maybe<StoreComponentComponentAggregationSelection>\n  componentConnection: StoreComponentConnection\n  id: Scalars['ID']['output']\n  name: Scalars['String']['output']\n  page?: Maybe<Page>\n  pageAggregate?: Maybe<StorePagePageAggregationSelection>\n  pageConnection: StorePageConnection\n}\n\nexport type StoreActionsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n}\n\nexport type StoreActionsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  where?: InputMaybe<StoreActionsConnectionWhere>\n}\n\nexport type StoreApiArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type StoreApiAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type StoreApiConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<StoreApiConnectionSort>>\n  where?: InputMaybe<StoreApiConnectionWhere>\n}\n\nexport type StoreComponentArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type StoreComponentAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type StoreComponentConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<StoreComponentConnectionSort>>\n  where?: InputMaybe<StoreComponentConnectionWhere>\n}\n\nexport type StorePageArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type StorePageAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<PageWhere>\n}\n\nexport type StorePageConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<StorePageConnectionSort>>\n  where?: InputMaybe<StorePageConnectionWhere>\n}\n\nexport type StoreActionsApiActionConnectFieldInput = {\n  connect?: InputMaybe<Array<ApiActionConnectInput>>\n  where?: InputMaybe<ApiActionConnectWhere>\n}\n\nexport type StoreActionsApiActionConnectOrCreateFieldInput = {\n  onCreate: StoreActionsApiActionConnectOrCreateFieldInputOnCreate\n  where: ApiActionConnectOrCreateWhere\n}\n\nexport type StoreActionsApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type StoreActionsApiActionConnectionWhere = {\n  AND?: InputMaybe<Array<StoreActionsApiActionConnectionWhere>>\n  NOT?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  OR?: InputMaybe<Array<StoreActionsApiActionConnectionWhere>>\n  node?: InputMaybe<ApiActionWhere>\n}\n\nexport type StoreActionsApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type StoreActionsApiActionDeleteFieldInput = {\n  delete?: InputMaybe<ApiActionDeleteInput>\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n}\n\nexport type StoreActionsApiActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n}\n\nexport type StoreActionsApiActionFieldInput = {\n  connect?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsApiActionConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n}\n\nexport type StoreActionsApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type StoreActionsApiActionUpdateFieldInput = {\n  connect?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsApiActionConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n  delete?: InputMaybe<Array<StoreActionsApiActionDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<StoreActionsApiActionDisconnectFieldInput>>\n  update?: InputMaybe<StoreActionsApiActionUpdateConnectionInput>\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n}\n\nexport type StoreActionsCodeActionConnectFieldInput = {\n  connect?: InputMaybe<Array<CodeActionConnectInput>>\n  where?: InputMaybe<CodeActionConnectWhere>\n}\n\nexport type StoreActionsCodeActionConnectOrCreateFieldInput = {\n  onCreate: StoreActionsCodeActionConnectOrCreateFieldInputOnCreate\n  where: CodeActionConnectOrCreateWhere\n}\n\nexport type StoreActionsCodeActionConnectOrCreateFieldInputOnCreate = {\n  node: CodeActionOnCreateInput\n}\n\nexport type StoreActionsCodeActionConnectionWhere = {\n  AND?: InputMaybe<Array<StoreActionsCodeActionConnectionWhere>>\n  NOT?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  OR?: InputMaybe<Array<StoreActionsCodeActionConnectionWhere>>\n  node?: InputMaybe<CodeActionWhere>\n}\n\nexport type StoreActionsCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type StoreActionsCodeActionDeleteFieldInput = {\n  delete?: InputMaybe<CodeActionDeleteInput>\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n}\n\nexport type StoreActionsCodeActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n}\n\nexport type StoreActionsCodeActionFieldInput = {\n  connect?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n}\n\nexport type StoreActionsCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type StoreActionsCodeActionUpdateFieldInput = {\n  connect?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n  delete?: InputMaybe<Array<StoreActionsCodeActionDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<StoreActionsCodeActionDisconnectFieldInput>>\n  update?: InputMaybe<StoreActionsCodeActionUpdateConnectionInput>\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n}\n\nexport type StoreActionsConnectInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n}\n\nexport type StoreActionsConnectOrCreateInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionConnectOrCreateFieldInput>>\n  CodeAction?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n}\n\nexport type StoreActionsConnection = {\n  __typename?: 'StoreActionsConnection'\n  edges: Array<StoreActionsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type StoreActionsConnectionWhere = {\n  ApiAction?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  CodeAction?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n}\n\nexport type StoreActionsCreateFieldInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n}\n\nexport type StoreActionsCreateInput = {\n  ApiAction?: InputMaybe<StoreActionsApiActionFieldInput>\n  CodeAction?: InputMaybe<StoreActionsCodeActionFieldInput>\n}\n\nexport type StoreActionsDeleteInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionDeleteFieldInput>>\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionDeleteFieldInput>>\n}\n\nexport type StoreActionsDisconnectInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionDisconnectFieldInput>>\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionDisconnectFieldInput>>\n}\n\nexport type StoreActionsRelationship = {\n  __typename?: 'StoreActionsRelationship'\n  cursor: Scalars['String']['output']\n  node: AnyAction\n}\n\nexport type StoreActionsUpdateInput = {\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionUpdateFieldInput>>\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionUpdateFieldInput>>\n}\n\nexport type StoreAggregateSelection = {\n  __typename?: 'StoreAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type StoreApiAggregateInput = {\n  AND?: InputMaybe<Array<StoreApiAggregateInput>>\n  NOT?: InputMaybe<StoreApiAggregateInput>\n  OR?: InputMaybe<Array<StoreApiAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<StoreApiNodeAggregationWhereInput>\n}\n\nexport type StoreApiConnectFieldInput = {\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n}\n\nexport type StoreApiConnectOrCreateFieldInput = {\n  onCreate: StoreApiConnectOrCreateFieldInputOnCreate\n  where: InterfaceTypeConnectOrCreateWhere\n}\n\nexport type StoreApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type StoreApiConnection = {\n  __typename?: 'StoreApiConnection'\n  edges: Array<StoreApiRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type StoreApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type StoreApiConnectionWhere = {\n  AND?: InputMaybe<Array<StoreApiConnectionWhere>>\n  NOT?: InputMaybe<StoreApiConnectionWhere>\n  OR?: InputMaybe<Array<StoreApiConnectionWhere>>\n  node?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type StoreApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type StoreApiDeleteFieldInput = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<StoreApiConnectionWhere>\n}\n\nexport type StoreApiDisconnectFieldInput = {\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  where?: InputMaybe<StoreApiConnectionWhere>\n}\n\nexport type StoreApiFieldInput = {\n  connect?: InputMaybe<StoreApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n  create?: InputMaybe<StoreApiCreateFieldInput>\n}\n\nexport type StoreApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StoreApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StoreApiNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<StoreApiNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type StoreApiRelationship = {\n  __typename?: 'StoreApiRelationship'\n  cursor: Scalars['String']['output']\n  node: InterfaceType\n}\n\nexport type StoreApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type StoreApiUpdateFieldInput = {\n  connect?: InputMaybe<StoreApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n  create?: InputMaybe<StoreApiCreateFieldInput>\n  delete?: InputMaybe<StoreApiDeleteFieldInput>\n  disconnect?: InputMaybe<StoreApiDisconnectFieldInput>\n  update?: InputMaybe<StoreApiUpdateConnectionInput>\n  where?: InputMaybe<StoreApiConnectionWhere>\n}\n\nexport type StoreComponentAggregateInput = {\n  AND?: InputMaybe<Array<StoreComponentAggregateInput>>\n  NOT?: InputMaybe<StoreComponentAggregateInput>\n  OR?: InputMaybe<Array<StoreComponentAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<StoreComponentNodeAggregationWhereInput>\n}\n\nexport type StoreComponentComponentAggregationSelection = {\n  __typename?: 'StoreComponentComponentAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<StoreComponentComponentNodeAggregateSelection>\n}\n\nexport type StoreComponentComponentNodeAggregateSelection = {\n  __typename?: 'StoreComponentComponentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type StoreComponentConnectFieldInput = {\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ComponentConnectWhere>\n}\n\nexport type StoreComponentConnectOrCreateFieldInput = {\n  onCreate: StoreComponentConnectOrCreateFieldInputOnCreate\n  where: ComponentConnectOrCreateWhere\n}\n\nexport type StoreComponentConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type StoreComponentConnection = {\n  __typename?: 'StoreComponentConnection'\n  edges: Array<StoreComponentRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type StoreComponentConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type StoreComponentConnectionWhere = {\n  AND?: InputMaybe<Array<StoreComponentConnectionWhere>>\n  NOT?: InputMaybe<StoreComponentConnectionWhere>\n  OR?: InputMaybe<Array<StoreComponentConnectionWhere>>\n  node?: InputMaybe<ComponentWhere>\n}\n\nexport type StoreComponentCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type StoreComponentDeleteFieldInput = {\n  delete?: InputMaybe<ComponentDeleteInput>\n  where?: InputMaybe<StoreComponentConnectionWhere>\n}\n\nexport type StoreComponentDisconnectFieldInput = {\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  where?: InputMaybe<StoreComponentConnectionWhere>\n}\n\nexport type StoreComponentFieldInput = {\n  connect?: InputMaybe<StoreComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n  create?: InputMaybe<StoreComponentCreateFieldInput>\n}\n\nexport type StoreComponentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StoreComponentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StoreComponentNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<StoreComponentNodeAggregationWhereInput>>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type StoreComponentRelationship = {\n  __typename?: 'StoreComponentRelationship'\n  cursor: Scalars['String']['output']\n  node: Component\n}\n\nexport type StoreComponentUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type StoreComponentUpdateFieldInput = {\n  connect?: InputMaybe<StoreComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n  create?: InputMaybe<StoreComponentCreateFieldInput>\n  delete?: InputMaybe<StoreComponentDeleteFieldInput>\n  disconnect?: InputMaybe<StoreComponentDisconnectFieldInput>\n  update?: InputMaybe<StoreComponentUpdateConnectionInput>\n  where?: InputMaybe<StoreComponentConnectionWhere>\n}\n\nexport type StoreConnectInput = {\n  actions?: InputMaybe<StoreActionsConnectInput>\n  api?: InputMaybe<StoreApiConnectFieldInput>\n  component?: InputMaybe<StoreComponentConnectFieldInput>\n  page?: InputMaybe<StorePageConnectFieldInput>\n}\n\nexport type StoreConnectOrCreateInput = {\n  actions?: InputMaybe<StoreActionsConnectOrCreateInput>\n  api?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n  component?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n  page?: InputMaybe<StorePageConnectOrCreateFieldInput>\n}\n\nexport type StoreConnectOrCreateWhere = {\n  node: StoreUniqueWhere\n}\n\nexport type StoreConnectWhere = {\n  node: StoreWhere\n}\n\nexport type StoreCreateInput = {\n  actions?: InputMaybe<StoreActionsCreateInput>\n  api?: InputMaybe<StoreApiFieldInput>\n  component?: InputMaybe<StoreComponentFieldInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  page?: InputMaybe<StorePageFieldInput>\n}\n\nexport type StoreDeleteInput = {\n  actions?: InputMaybe<StoreActionsDeleteInput>\n  api?: InputMaybe<StoreApiDeleteFieldInput>\n  component?: InputMaybe<StoreComponentDeleteFieldInput>\n  page?: InputMaybe<StorePageDeleteFieldInput>\n}\n\nexport type StoreDisconnectInput = {\n  actions?: InputMaybe<StoreActionsDisconnectInput>\n  api?: InputMaybe<StoreApiDisconnectFieldInput>\n  component?: InputMaybe<StoreComponentDisconnectFieldInput>\n  page?: InputMaybe<StorePageDisconnectFieldInput>\n}\n\nexport type StoreEdge = {\n  __typename?: 'StoreEdge'\n  cursor: Scalars['String']['output']\n  node: Store\n}\n\nexport type StoreInterfaceTypeApiAggregationSelection = {\n  __typename?: 'StoreInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<StoreInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type StoreInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'StoreInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type StoreOnCreateInput = {\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n}\n\nexport type StoreOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more StoreSort objects to sort Stores by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<StoreSort>>\n}\n\nexport type StorePageAggregateInput = {\n  AND?: InputMaybe<Array<StorePageAggregateInput>>\n  NOT?: InputMaybe<StorePageAggregateInput>\n  OR?: InputMaybe<Array<StorePageAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<StorePageNodeAggregationWhereInput>\n}\n\nexport type StorePageConnectFieldInput = {\n  connect?: InputMaybe<PageConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<PageConnectWhere>\n}\n\nexport type StorePageConnectOrCreateFieldInput = {\n  onCreate: StorePageConnectOrCreateFieldInputOnCreate\n  where: PageConnectOrCreateWhere\n}\n\nexport type StorePageConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type StorePageConnection = {\n  __typename?: 'StorePageConnection'\n  edges: Array<StorePageRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type StorePageConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type StorePageConnectionWhere = {\n  AND?: InputMaybe<Array<StorePageConnectionWhere>>\n  NOT?: InputMaybe<StorePageConnectionWhere>\n  OR?: InputMaybe<Array<StorePageConnectionWhere>>\n  node?: InputMaybe<PageWhere>\n}\n\nexport type StorePageCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type StorePageDeleteFieldInput = {\n  delete?: InputMaybe<PageDeleteInput>\n  where?: InputMaybe<StorePageConnectionWhere>\n}\n\nexport type StorePageDisconnectFieldInput = {\n  disconnect?: InputMaybe<PageDisconnectInput>\n  where?: InputMaybe<StorePageConnectionWhere>\n}\n\nexport type StorePageFieldInput = {\n  connect?: InputMaybe<StorePageConnectFieldInput>\n  connectOrCreate?: InputMaybe<StorePageConnectOrCreateFieldInput>\n  create?: InputMaybe<StorePageCreateFieldInput>\n}\n\nexport type StorePageNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StorePageNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StorePageNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<StorePageNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type StorePagePageAggregationSelection = {\n  __typename?: 'StorePagePageAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<StorePagePageNodeAggregateSelection>\n}\n\nexport type StorePagePageNodeAggregateSelection = {\n  __typename?: 'StorePagePageNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type StorePageRelationship = {\n  __typename?: 'StorePageRelationship'\n  cursor: Scalars['String']['output']\n  node: Page\n}\n\nexport type StorePageUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type StorePageUpdateFieldInput = {\n  connect?: InputMaybe<StorePageConnectFieldInput>\n  connectOrCreate?: InputMaybe<StorePageConnectOrCreateFieldInput>\n  create?: InputMaybe<StorePageCreateFieldInput>\n  delete?: InputMaybe<StorePageDeleteFieldInput>\n  disconnect?: InputMaybe<StorePageDisconnectFieldInput>\n  update?: InputMaybe<StorePageUpdateConnectionInput>\n  where?: InputMaybe<StorePageConnectionWhere>\n}\n\nexport type StoreRelationInput = {\n  actions?: InputMaybe<StoreActionsCreateFieldInput>\n  api?: InputMaybe<StoreApiCreateFieldInput>\n  component?: InputMaybe<StoreComponentCreateFieldInput>\n  page?: InputMaybe<StorePageCreateFieldInput>\n}\n\n/** Fields to sort Stores by. The order in which sorts are applied is not guaranteed when specifying many fields in one StoreSort object. */\nexport type StoreSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type StoreUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n}\n\nexport type StoreUpdateInput = {\n  actions?: InputMaybe<StoreActionsUpdateInput>\n  api?: InputMaybe<StoreApiUpdateFieldInput>\n  component?: InputMaybe<StoreComponentUpdateFieldInput>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  page?: InputMaybe<StorePageUpdateFieldInput>\n}\n\nexport type StoreWhere = {\n  AND?: InputMaybe<Array<StoreWhere>>\n  NOT?: InputMaybe<StoreWhere>\n  OR?: InputMaybe<Array<StoreWhere>>\n  /** Return Stores where all of the related StoreActionsConnections match this filter */\n  actionsConnection_ALL?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where none of the related StoreActionsConnections match this filter */\n  actionsConnection_NONE?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where one of the related StoreActionsConnections match this filter */\n  actionsConnection_SINGLE?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where some of the related StoreActionsConnections match this filter */\n  actionsConnection_SOME?: InputMaybe<StoreActionsConnectionWhere>\n  api?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<StoreApiAggregateInput>\n  apiConnection?: InputMaybe<StoreApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<StoreApiConnectionWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  component?: InputMaybe<ComponentWhere>\n  componentAggregate?: InputMaybe<StoreComponentAggregateInput>\n  componentConnection?: InputMaybe<StoreComponentConnectionWhere>\n  componentConnection_NOT?: InputMaybe<StoreComponentConnectionWhere>\n  component_NOT?: InputMaybe<ComponentWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  page?: InputMaybe<PageWhere>\n  pageAggregate?: InputMaybe<StorePageAggregateInput>\n  pageConnection?: InputMaybe<StorePageConnectionWhere>\n  pageConnection_NOT?: InputMaybe<StorePageConnectionWhere>\n  page_NOT?: InputMaybe<PageWhere>\n}\n\nexport type StoresConnection = {\n  __typename?: 'StoresConnection'\n  edges: Array<StoreEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type StringAggregateSelectionNonNullable = {\n  __typename?: 'StringAggregateSelectionNonNullable'\n  longest: Scalars['String']['output']\n  shortest: Scalars['String']['output']\n}\n\nexport type StringAggregateSelectionNullable = {\n  __typename?: 'StringAggregateSelectionNullable'\n  longest?: Maybe<Scalars['String']['output']>\n  shortest?: Maybe<Scalars['String']['output']>\n}\n\nexport type Tag = {\n  __typename?: 'Tag'\n  atoms: Array<Atom>\n  atomsAggregate?: Maybe<TagAtomAtomsAggregationSelection>\n  atomsConnection: TagAtomsConnection\n  children: Array<Tag>\n  childrenAggregate?: Maybe<TagTagChildrenAggregationSelection>\n  childrenConnection: TagChildrenConnection\n  descendants: Array<Tag>\n  id: Scalars['ID']['output']\n  isRoot?: Maybe<Scalars['Boolean']['output']>\n  name: Scalars['String']['output']\n  owner: User\n  ownerAggregate?: Maybe<TagUserOwnerAggregationSelection>\n  ownerConnection: TagOwnerConnection\n  parent?: Maybe<Tag>\n  parentAggregate?: Maybe<TagTagParentAggregationSelection>\n  parentConnection: TagParentConnection\n}\n\nexport type TagAtomsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type TagAtomsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type TagAtomsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<TagAtomsConnectionSort>>\n  where?: InputMaybe<TagAtomsConnectionWhere>\n}\n\nexport type TagChildrenArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type TagChildrenAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type TagChildrenConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<TagChildrenConnectionSort>>\n  where?: InputMaybe<TagChildrenConnectionWhere>\n}\n\nexport type TagOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type TagOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\nexport type TagOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<TagOwnerConnectionSort>>\n  where?: InputMaybe<TagOwnerConnectionWhere>\n}\n\nexport type TagParentArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type TagParentAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type TagParentConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<TagParentConnectionSort>>\n  where?: InputMaybe<TagParentConnectionWhere>\n}\n\nexport type TagAggregateSelection = {\n  __typename?: 'TagAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagAtomAtomsAggregationSelection = {\n  __typename?: 'TagAtomAtomsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<TagAtomAtomsNodeAggregateSelection>\n}\n\nexport type TagAtomAtomsNodeAggregateSelection = {\n  __typename?: 'TagAtomAtomsNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagAtomsAggregateInput = {\n  AND?: InputMaybe<Array<TagAtomsAggregateInput>>\n  NOT?: InputMaybe<TagAtomsAggregateInput>\n  OR?: InputMaybe<Array<TagAtomsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<TagAtomsNodeAggregationWhereInput>\n}\n\nexport type TagAtomsConnectFieldInput = {\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type TagAtomsConnectOrCreateFieldInput = {\n  onCreate: TagAtomsConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type TagAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type TagAtomsConnection = {\n  __typename?: 'TagAtomsConnection'\n  edges: Array<TagAtomsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type TagAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type TagAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<TagAtomsConnectionWhere>>\n  NOT?: InputMaybe<TagAtomsConnectionWhere>\n  OR?: InputMaybe<Array<TagAtomsConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type TagAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type TagAtomsDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<TagAtomsConnectionWhere>\n}\n\nexport type TagAtomsDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<TagAtomsConnectionWhere>\n}\n\nexport type TagAtomsFieldInput = {\n  connect?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n}\n\nexport type TagAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagAtomsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<TagAtomsNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type TagAtomsRelationship = {\n  __typename?: 'TagAtomsRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type TagAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type TagAtomsUpdateFieldInput = {\n  connect?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<TagAtomsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<TagAtomsDisconnectFieldInput>>\n  update?: InputMaybe<TagAtomsUpdateConnectionInput>\n  where?: InputMaybe<TagAtomsConnectionWhere>\n}\n\nexport type TagChildrenAggregateInput = {\n  AND?: InputMaybe<Array<TagChildrenAggregateInput>>\n  NOT?: InputMaybe<TagChildrenAggregateInput>\n  OR?: InputMaybe<Array<TagChildrenAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<TagChildrenNodeAggregationWhereInput>\n}\n\nexport type TagChildrenConnectFieldInput = {\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<TagConnectWhere>\n}\n\nexport type TagChildrenConnectOrCreateFieldInput = {\n  onCreate: TagChildrenConnectOrCreateFieldInputOnCreate\n  where: TagConnectOrCreateWhere\n}\n\nexport type TagChildrenConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type TagChildrenConnection = {\n  __typename?: 'TagChildrenConnection'\n  edges: Array<TagChildrenRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type TagChildrenConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type TagChildrenConnectionWhere = {\n  AND?: InputMaybe<Array<TagChildrenConnectionWhere>>\n  NOT?: InputMaybe<TagChildrenConnectionWhere>\n  OR?: InputMaybe<Array<TagChildrenConnectionWhere>>\n  node?: InputMaybe<TagWhere>\n}\n\nexport type TagChildrenCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type TagChildrenDeleteFieldInput = {\n  delete?: InputMaybe<TagDeleteInput>\n  where?: InputMaybe<TagChildrenConnectionWhere>\n}\n\nexport type TagChildrenDisconnectFieldInput = {\n  disconnect?: InputMaybe<TagDisconnectInput>\n  where?: InputMaybe<TagChildrenConnectionWhere>\n}\n\nexport type TagChildrenFieldInput = {\n  connect?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n}\n\nexport type TagChildrenNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagChildrenNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagChildrenNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<TagChildrenNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type TagChildrenRelationship = {\n  __typename?: 'TagChildrenRelationship'\n  cursor: Scalars['String']['output']\n  node: Tag\n}\n\nexport type TagChildrenUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type TagChildrenUpdateFieldInput = {\n  connect?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n  delete?: InputMaybe<Array<TagChildrenDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<TagChildrenDisconnectFieldInput>>\n  update?: InputMaybe<TagChildrenUpdateConnectionInput>\n  where?: InputMaybe<TagChildrenConnectionWhere>\n}\n\nexport type TagConnectInput = {\n  atoms?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n  children?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  owner?: InputMaybe<TagOwnerConnectFieldInput>\n  parent?: InputMaybe<TagParentConnectFieldInput>\n}\n\nexport type TagConnectOrCreateInput = {\n  atoms?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n  children?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n  owner?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n  parent?: InputMaybe<TagParentConnectOrCreateFieldInput>\n}\n\nexport type TagConnectOrCreateWhere = {\n  node: TagUniqueWhere\n}\n\nexport type TagConnectWhere = {\n  node: TagWhere\n}\n\nexport type TagCreateInput = {\n  atoms?: InputMaybe<TagAtomsFieldInput>\n  children?: InputMaybe<TagChildrenFieldInput>\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n  owner?: InputMaybe<TagOwnerFieldInput>\n  parent?: InputMaybe<TagParentFieldInput>\n}\n\nexport type TagDeleteInput = {\n  atoms?: InputMaybe<Array<TagAtomsDeleteFieldInput>>\n  children?: InputMaybe<Array<TagChildrenDeleteFieldInput>>\n  owner?: InputMaybe<TagOwnerDeleteFieldInput>\n  parent?: InputMaybe<TagParentDeleteFieldInput>\n}\n\nexport type TagDisconnectInput = {\n  atoms?: InputMaybe<Array<TagAtomsDisconnectFieldInput>>\n  children?: InputMaybe<Array<TagChildrenDisconnectFieldInput>>\n  owner?: InputMaybe<TagOwnerDisconnectFieldInput>\n  parent?: InputMaybe<TagParentDisconnectFieldInput>\n}\n\nexport type TagEdge = {\n  __typename?: 'TagEdge'\n  cursor: Scalars['String']['output']\n  node: Tag\n}\n\nexport type TagOnCreateInput = {\n  id: Scalars['ID']['input']\n  name: Scalars['String']['input']\n}\n\nexport type TagOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more TagSort objects to sort Tags by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<TagSort>>\n}\n\nexport type TagOwnerAggregateInput = {\n  AND?: InputMaybe<Array<TagOwnerAggregateInput>>\n  NOT?: InputMaybe<TagOwnerAggregateInput>\n  OR?: InputMaybe<Array<TagOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<TagOwnerNodeAggregationWhereInput>\n}\n\nexport type TagOwnerConnectFieldInput = {\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<UserConnectWhere>\n}\n\nexport type TagOwnerConnectOrCreateFieldInput = {\n  onCreate: TagOwnerConnectOrCreateFieldInputOnCreate\n  where: UserConnectOrCreateWhere\n}\n\nexport type TagOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type TagOwnerConnection = {\n  __typename?: 'TagOwnerConnection'\n  edges: Array<TagOwnerRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type TagOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type TagOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<TagOwnerConnectionWhere>>\n  NOT?: InputMaybe<TagOwnerConnectionWhere>\n  OR?: InputMaybe<Array<TagOwnerConnectionWhere>>\n  node?: InputMaybe<UserWhere>\n}\n\nexport type TagOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type TagOwnerDeleteFieldInput = {\n  delete?: InputMaybe<UserDeleteInput>\n  where?: InputMaybe<TagOwnerConnectionWhere>\n}\n\nexport type TagOwnerDisconnectFieldInput = {\n  disconnect?: InputMaybe<UserDisconnectInput>\n  where?: InputMaybe<TagOwnerConnectionWhere>\n}\n\nexport type TagOwnerFieldInput = {\n  connect?: InputMaybe<TagOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<TagOwnerCreateFieldInput>\n}\n\nexport type TagOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<TagOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type TagOwnerRelationship = {\n  __typename?: 'TagOwnerRelationship'\n  cursor: Scalars['String']['output']\n  node: User\n}\n\nexport type TagOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type TagOwnerUpdateFieldInput = {\n  connect?: InputMaybe<TagOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<TagOwnerCreateFieldInput>\n  delete?: InputMaybe<TagOwnerDeleteFieldInput>\n  disconnect?: InputMaybe<TagOwnerDisconnectFieldInput>\n  update?: InputMaybe<TagOwnerUpdateConnectionInput>\n  where?: InputMaybe<TagOwnerConnectionWhere>\n}\n\nexport type TagParentAggregateInput = {\n  AND?: InputMaybe<Array<TagParentAggregateInput>>\n  NOT?: InputMaybe<TagParentAggregateInput>\n  OR?: InputMaybe<Array<TagParentAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<TagParentNodeAggregationWhereInput>\n}\n\nexport type TagParentConnectFieldInput = {\n  connect?: InputMaybe<TagConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<TagConnectWhere>\n}\n\nexport type TagParentConnectOrCreateFieldInput = {\n  onCreate: TagParentConnectOrCreateFieldInputOnCreate\n  where: TagConnectOrCreateWhere\n}\n\nexport type TagParentConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type TagParentConnection = {\n  __typename?: 'TagParentConnection'\n  edges: Array<TagParentRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type TagParentConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type TagParentConnectionWhere = {\n  AND?: InputMaybe<Array<TagParentConnectionWhere>>\n  NOT?: InputMaybe<TagParentConnectionWhere>\n  OR?: InputMaybe<Array<TagParentConnectionWhere>>\n  node?: InputMaybe<TagWhere>\n}\n\nexport type TagParentCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type TagParentDeleteFieldInput = {\n  delete?: InputMaybe<TagDeleteInput>\n  where?: InputMaybe<TagParentConnectionWhere>\n}\n\nexport type TagParentDisconnectFieldInput = {\n  disconnect?: InputMaybe<TagDisconnectInput>\n  where?: InputMaybe<TagParentConnectionWhere>\n}\n\nexport type TagParentFieldInput = {\n  connect?: InputMaybe<TagParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagParentConnectOrCreateFieldInput>\n  create?: InputMaybe<TagParentCreateFieldInput>\n}\n\nexport type TagParentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagParentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagParentNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<TagParentNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type TagParentRelationship = {\n  __typename?: 'TagParentRelationship'\n  cursor: Scalars['String']['output']\n  node: Tag\n}\n\nexport type TagParentUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type TagParentUpdateFieldInput = {\n  connect?: InputMaybe<TagParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagParentConnectOrCreateFieldInput>\n  create?: InputMaybe<TagParentCreateFieldInput>\n  delete?: InputMaybe<TagParentDeleteFieldInput>\n  disconnect?: InputMaybe<TagParentDisconnectFieldInput>\n  update?: InputMaybe<TagParentUpdateConnectionInput>\n  where?: InputMaybe<TagParentConnectionWhere>\n}\n\nexport type TagRelationInput = {\n  atoms?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n  children?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n  owner?: InputMaybe<TagOwnerCreateFieldInput>\n  parent?: InputMaybe<TagParentCreateFieldInput>\n}\n\n/** Fields to sort Tags by. The order in which sorts are applied is not guaranteed when specifying many fields in one TagSort object. */\nexport type TagSort = {\n  id?: InputMaybe<SortDirection>\n  isRoot?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type TagTagChildrenAggregationSelection = {\n  __typename?: 'TagTagChildrenAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<TagTagChildrenNodeAggregateSelection>\n}\n\nexport type TagTagChildrenNodeAggregateSelection = {\n  __typename?: 'TagTagChildrenNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagTagParentAggregationSelection = {\n  __typename?: 'TagTagParentAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<TagTagParentNodeAggregateSelection>\n}\n\nexport type TagTagParentNodeAggregateSelection = {\n  __typename?: 'TagTagParentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type TagUpdateInput = {\n  atoms?: InputMaybe<Array<TagAtomsUpdateFieldInput>>\n  children?: InputMaybe<Array<TagChildrenUpdateFieldInput>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<TagOwnerUpdateFieldInput>\n  parent?: InputMaybe<TagParentUpdateFieldInput>\n}\n\nexport type TagUserOwnerAggregationSelection = {\n  __typename?: 'TagUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<TagUserOwnerNodeAggregateSelection>\n}\n\nexport type TagUserOwnerNodeAggregateSelection = {\n  __typename?: 'TagUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type TagWhere = {\n  AND?: InputMaybe<Array<TagWhere>>\n  NOT?: InputMaybe<TagWhere>\n  OR?: InputMaybe<Array<TagWhere>>\n  atomsAggregate?: InputMaybe<TagAtomsAggregateInput>\n  /** Return Tags where all of the related TagAtomsConnections match this filter */\n  atomsConnection_ALL?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where none of the related TagAtomsConnections match this filter */\n  atomsConnection_NONE?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where one of the related TagAtomsConnections match this filter */\n  atomsConnection_SINGLE?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where some of the related TagAtomsConnections match this filter */\n  atomsConnection_SOME?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where all of the related Atoms match this filter */\n  atoms_ALL?: InputMaybe<AtomWhere>\n  /** Return Tags where none of the related Atoms match this filter */\n  atoms_NONE?: InputMaybe<AtomWhere>\n  /** Return Tags where one of the related Atoms match this filter */\n  atoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Tags where some of the related Atoms match this filter */\n  atoms_SOME?: InputMaybe<AtomWhere>\n  childrenAggregate?: InputMaybe<TagChildrenAggregateInput>\n  /** Return Tags where all of the related TagChildrenConnections match this filter */\n  childrenConnection_ALL?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where none of the related TagChildrenConnections match this filter */\n  childrenConnection_NONE?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where one of the related TagChildrenConnections match this filter */\n  childrenConnection_SINGLE?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where some of the related TagChildrenConnections match this filter */\n  childrenConnection_SOME?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where all of the related Tags match this filter */\n  children_ALL?: InputMaybe<TagWhere>\n  /** Return Tags where none of the related Tags match this filter */\n  children_NONE?: InputMaybe<TagWhere>\n  /** Return Tags where one of the related Tags match this filter */\n  children_SINGLE?: InputMaybe<TagWhere>\n  /** Return Tags where some of the related Tags match this filter */\n  children_SOME?: InputMaybe<TagWhere>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<TagOwnerAggregateInput>\n  ownerConnection?: InputMaybe<TagOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<TagOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  parent?: InputMaybe<TagWhere>\n  parentAggregate?: InputMaybe<TagParentAggregateInput>\n  parentConnection?: InputMaybe<TagParentConnectionWhere>\n  parentConnection_NOT?: InputMaybe<TagParentConnectionWhere>\n  parent_NOT?: InputMaybe<TagWhere>\n}\n\nexport type TagsConnection = {\n  __typename?: 'TagsConnection'\n  edges: Array<TagEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport enum TypeKind {\n  ActionType = 'ActionType',\n  AppType = 'AppType',\n  ArrayType = 'ArrayType',\n  CodeMirrorType = 'CodeMirrorType',\n  ElementType = 'ElementType',\n  EnumType = 'EnumType',\n  InterfaceType = 'InterfaceType',\n  LambdaType = 'LambdaType',\n  PageType = 'PageType',\n  PrimitiveType = 'PrimitiveType',\n  ReactNodeType = 'ReactNodeType',\n  RenderPropType = 'RenderPropType',\n  UnionType = 'UnionType',\n}\n\nexport type TypeReference = {\n  __typename?: 'TypeReference'\n  /** The type of resource - Atom, InterfaceType, etc. */\n  label: Scalars['String']['output']\n  /** The name of the resource referencing the type */\n  name: Scalars['String']['output']\n}\n\nexport type TypeReferenceAggregateSelection = {\n  __typename?: 'TypeReferenceAggregateSelection'\n  count: Scalars['Int']['output']\n  label: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TypeReferenceCreateInput = {\n  label: Scalars['String']['input']\n  name: Scalars['String']['input']\n}\n\nexport type TypeReferenceEdge = {\n  __typename?: 'TypeReferenceEdge'\n  cursor: Scalars['String']['output']\n  node: TypeReference\n}\n\nexport type TypeReferenceOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more TypeReferenceSort objects to sort TypeReferences by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<TypeReferenceSort>>\n}\n\n/** Fields to sort TypeReferences by. The order in which sorts are applied is not guaranteed when specifying many fields in one TypeReferenceSort object. */\nexport type TypeReferenceSort = {\n  label?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type TypeReferenceUpdateInput = {\n  label?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type TypeReferenceWhere = {\n  AND?: InputMaybe<Array<TypeReferenceWhere>>\n  NOT?: InputMaybe<TypeReferenceWhere>\n  OR?: InputMaybe<Array<TypeReferenceWhere>>\n  label?: InputMaybe<Scalars['String']['input']>\n  label_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  label_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  label_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  label_MATCHES?: InputMaybe<Scalars['String']['input']>\n  label_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type TypeReferencesConnection = {\n  __typename?: 'TypeReferencesConnection'\n  edges: Array<TypeReferenceEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\n/** Allows picking one of a set of types */\nexport type UnionType = IBaseType &\n  WithDescendants & {\n    __typename?: 'UnionType'\n    descendantTypesIds: Array<Scalars['ID']['output']>\n    id: Scalars['ID']['output']\n    kind: TypeKind\n    name: Scalars['String']['output']\n    owner: User\n    ownerAggregate?: Maybe<UnionTypeUserOwnerAggregationSelection>\n    ownerConnection: IBaseTypeOwnerConnection\n    typesOfUnionType: Array<AnyType>\n    typesOfUnionTypeConnection: UnionTypeTypesOfUnionTypeConnection\n  }\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<UserOptions>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<UserWhere>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeTypesOfUnionTypeArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyTypeWhere>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeTypesOfUnionTypeConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n}\n\nexport type UnionTypeAggregateSelection = {\n  __typename?: 'UnionTypeAggregateSelection'\n  count: Scalars['Int']['output']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UnionTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeConnectInput>\n}\n\nexport type UnionTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeConnectOrCreateInput>\n}\n\nexport type UnionTypeConnectOrCreateWhere = {\n  node: UnionTypeUniqueWhere\n}\n\nexport type UnionTypeConnectWhere = {\n  node: UnionTypeWhere\n}\n\nexport type UnionTypeCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeCreateInput>\n}\n\nexport type UnionTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeDeleteInput>\n}\n\nexport type UnionTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeDisconnectInput>\n}\n\nexport type UnionTypeEdge = {\n  __typename?: 'UnionTypeEdge'\n  cursor: Scalars['String']['output']\n  node: UnionType\n}\n\nexport type UnionTypeOnCreateInput = {\n  id: Scalars['ID']['input']\n  kind?: TypeKind\n  name: Scalars['String']['input']\n}\n\nexport type UnionTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more UnionTypeSort objects to sort UnionTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<UnionTypeSort>>\n}\n\nexport type UnionTypeOwnerAggregateInput = {\n  AND?: InputMaybe<Array<UnionTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<UnionTypeOwnerAggregateInput>\n  OR?: InputMaybe<Array<UnionTypeOwnerAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UnionTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type UnionTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UnionTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UnionTypeOwnerNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UnionTypeOwnerNodeAggregationWhereInput>>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UnionTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeCreateFieldInput>\n}\n\n/** Fields to sort UnionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one UnionTypeSort object. */\nexport type UnionTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<ActionTypeConnectInput>>\n  where?: InputMaybe<ActionTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInputOnCreate\n  where: ActionTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ActionTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>>\n  node?: InputMaybe<ActionTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput = {\n  node: ActionTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput = {\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<ActionTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput = {\n  node?: InputMaybe<ActionTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<AppTypeConnectInput>>\n  where?: InputMaybe<AppTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInputOnCreate\n  where: AppTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: AppTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>>\n  node?: InputMaybe<AppTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput = {\n  node: AppTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput = {\n  delete?: InputMaybe<AppTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<AppTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeFieldInput = {\n  connect?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput = {\n  node?: InputMaybe<AppTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput = {\n  connect?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<ArrayTypeConnectInput>>\n  where?: InputMaybe<ArrayTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInputOnCreate\n  where: ArrayTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ArrayTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>>\n  node?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput = {\n  node: ArrayTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput = {\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<ArrayTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput = {\n  node?: InputMaybe<ArrayTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<CodeMirrorTypeConnectInput>>\n  where?: InputMaybe<CodeMirrorTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInputOnCreate\n  where: CodeMirrorTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: CodeMirrorTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere = {\n  AND?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  >\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>>\n  node?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput = {\n  node: CodeMirrorTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput = {\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<CodeMirrorTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput = {\n  node?: InputMaybe<CodeMirrorTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectOrCreateInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n  AppType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeConnection = {\n  __typename?: 'UnionTypeTypesOfUnionTypeConnection'\n  edges: Array<UnionTypeTypesOfUnionTypeRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectionWhere = {\n  ActionType?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  AppType?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  ArrayType?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  CodeMirrorType?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  ElementType?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  EnumType?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  InterfaceType?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  LambdaType?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  PageType?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  PrimitiveType?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  ReactNodeType?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  RenderPropType?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  UnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCreateFieldInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCreateInput = {\n  ActionType?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeFieldInput>\n  AppType?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeFieldInput>\n  ArrayType?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeFieldInput>\n  CodeMirrorType?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput>\n  ElementType?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeFieldInput>\n  EnumType?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeFieldInput>\n  InterfaceType?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput>\n  LambdaType?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeFieldInput>\n  PageType?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeFieldInput>\n  PrimitiveType?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput>\n  ReactNodeType?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput>\n  RenderPropType?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput>\n  UnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeFieldInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeDeleteInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput>>\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeDisconnectInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput>\n  >\n  AppType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<ElementTypeConnectInput>>\n  where?: InputMaybe<ElementTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInputOnCreate\n  where: ElementTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ElementTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>>\n  node?: InputMaybe<ElementTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput = {\n  node: ElementTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput = {\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput = {\n  node?: InputMaybe<ElementTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<EnumTypeConnectInput>>\n  where?: InputMaybe<EnumTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInputOnCreate\n  where: EnumTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: EnumTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>>\n  node?: InputMaybe<EnumTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput = {\n  node: EnumTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput = {\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<InterfaceTypeConnectInput>>\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInputOnCreate\n  where: InterfaceTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: InterfaceTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>>\n  node?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput = {\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<LambdaTypeConnectInput>>\n  where?: InputMaybe<LambdaTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInputOnCreate\n  where: LambdaTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: LambdaTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>>\n  node?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput = {\n  node: LambdaTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput = {\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<LambdaTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput = {\n  node?: InputMaybe<LambdaTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<PageTypeConnectInput>>\n  where?: InputMaybe<PageTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInputOnCreate\n  where: PageTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: PageTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>>\n  node?: InputMaybe<PageTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeCreateFieldInput = {\n  node: PageTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput = {\n  delete?: InputMaybe<PageTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<PageTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput = {\n  node?: InputMaybe<PageTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<PrimitiveTypeConnectInput>>\n  where?: InputMaybe<PrimitiveTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInputOnCreate\n  where: PrimitiveTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: PrimitiveTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>>\n  node?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput = {\n  node: PrimitiveTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput = {\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<PrimitiveTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput = {\n  node?: InputMaybe<PrimitiveTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<ReactNodeTypeConnectInput>>\n  where?: InputMaybe<ReactNodeTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInputOnCreate\n  where: ReactNodeTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ReactNodeTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>>\n  node?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput = {\n  node: ReactNodeTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput = {\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<ReactNodeTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput = {\n  node?: InputMaybe<ReactNodeTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRelationship = {\n  __typename?: 'UnionTypeTypesOfUnionTypeRelationship'\n  cursor: Scalars['String']['output']\n  node: AnyType\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<RenderPropTypeConnectInput>>\n  where?: InputMaybe<RenderPropTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInputOnCreate\n  where: RenderPropTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: RenderPropTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere = {\n  AND?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  >\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>>\n  node?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput = {\n  node: RenderPropTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput = {\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<RenderPropTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput = {\n  node?: InputMaybe<RenderPropTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput = {\n  connect?: InputMaybe<Array<UnionTypeConnectInput>>\n  where?: InputMaybe<UnionTypeConnectWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput = {\n  onCreate: UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInputOnCreate\n  where: UnionTypeConnectOrCreateWhere\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: UnionTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere = {\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>>\n  node?: InputMaybe<UnionTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput = {\n  node: UnionTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput = {\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<UnionTypeDisconnectInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput = {\n  node?: InputMaybe<UnionTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput = {\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput>\n  >\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput>\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUpdateInput = {\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput>>\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput>\n  >\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput>\n  >\n}\n\nexport type UnionTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type UnionTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']['input']>\n  name?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUpdateInput>\n}\n\nexport type UnionTypeUserOwnerAggregationSelection = {\n  __typename?: 'UnionTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UnionTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type UnionTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'UnionTypeUserOwnerNodeAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type UnionTypeWhere = {\n  AND?: InputMaybe<Array<UnionTypeWhere>>\n  NOT?: InputMaybe<UnionTypeWhere>\n  OR?: InputMaybe<Array<UnionTypeWhere>>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  kind?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  name?: InputMaybe<Scalars['String']['input']>\n  name_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  name_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  name_MATCHES?: InputMaybe<Scalars['String']['input']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  owner?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<UnionTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  /** Return UnionTypes where all of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_ALL?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where none of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_NONE?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where one of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_SINGLE?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where some of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_SOME?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n}\n\nexport type UnionTypesConnection = {\n  __typename?: 'UnionTypesConnection'\n  edges: Array<UnionTypeEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UpdateActionTypesMutationResponse = {\n  __typename?: 'UpdateActionTypesMutationResponse'\n  actionTypes: Array<ActionType>\n  info: UpdateInfo\n}\n\nexport type UpdateApiActionsMutationResponse = {\n  __typename?: 'UpdateApiActionsMutationResponse'\n  apiActions: Array<ApiAction>\n  info: UpdateInfo\n}\n\nexport type UpdateAppTypesMutationResponse = {\n  __typename?: 'UpdateAppTypesMutationResponse'\n  appTypes: Array<AppType>\n  info: UpdateInfo\n}\n\nexport type UpdateAppsMutationResponse = {\n  __typename?: 'UpdateAppsMutationResponse'\n  apps: Array<App>\n  info: UpdateInfo\n}\n\nexport type UpdateArrayTypesMutationResponse = {\n  __typename?: 'UpdateArrayTypesMutationResponse'\n  arrayTypes: Array<ArrayType>\n  info: UpdateInfo\n}\n\nexport type UpdateAtomsMutationResponse = {\n  __typename?: 'UpdateAtomsMutationResponse'\n  atoms: Array<Atom>\n  info: UpdateInfo\n}\n\nexport type UpdateCodeActionsMutationResponse = {\n  __typename?: 'UpdateCodeActionsMutationResponse'\n  codeActions: Array<CodeAction>\n  info: UpdateInfo\n}\n\nexport type UpdateCodeMirrorTypesMutationResponse = {\n  __typename?: 'UpdateCodeMirrorTypesMutationResponse'\n  codeMirrorTypes: Array<CodeMirrorType>\n  info: UpdateInfo\n}\n\nexport type UpdateComponentsMutationResponse = {\n  __typename?: 'UpdateComponentsMutationResponse'\n  components: Array<Component>\n  info: UpdateInfo\n}\n\nexport type UpdateDomainsMutationResponse = {\n  __typename?: 'UpdateDomainsMutationResponse'\n  domains: Array<Domain>\n  info: UpdateInfo\n}\n\nexport type UpdateElementTypesMutationResponse = {\n  __typename?: 'UpdateElementTypesMutationResponse'\n  elementTypes: Array<ElementType>\n  info: UpdateInfo\n}\n\nexport type UpdateElementsMutationResponse = {\n  __typename?: 'UpdateElementsMutationResponse'\n  elements: Array<Element>\n  info: UpdateInfo\n}\n\nexport type UpdateEnumTypeValuesMutationResponse = {\n  __typename?: 'UpdateEnumTypeValuesMutationResponse'\n  enumTypeValues: Array<EnumTypeValue>\n  info: UpdateInfo\n}\n\nexport type UpdateEnumTypesMutationResponse = {\n  __typename?: 'UpdateEnumTypesMutationResponse'\n  enumTypes: Array<EnumType>\n  info: UpdateInfo\n}\n\nexport type UpdateFieldsMutationResponse = {\n  __typename?: 'UpdateFieldsMutationResponse'\n  fields: Array<Field>\n  info: UpdateInfo\n}\n\nexport type UpdateGetBaseTypesReturnsMutationResponse = {\n  __typename?: 'UpdateGetBaseTypesReturnsMutationResponse'\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n  info: UpdateInfo\n}\n\nexport type UpdateHooksMutationResponse = {\n  __typename?: 'UpdateHooksMutationResponse'\n  hooks: Array<Hook>\n  info: UpdateInfo\n}\n\nexport type UpdateInfo = {\n  __typename?: 'UpdateInfo'\n  bookmark?: Maybe<Scalars['String']['output']>\n  nodesCreated: Scalars['Int']['output']\n  nodesDeleted: Scalars['Int']['output']\n  relationshipsCreated: Scalars['Int']['output']\n  relationshipsDeleted: Scalars['Int']['output']\n}\n\nexport type UpdateInterfaceTypesMutationResponse = {\n  __typename?: 'UpdateInterfaceTypesMutationResponse'\n  info: UpdateInfo\n  interfaceTypes: Array<InterfaceType>\n}\n\nexport type UpdateLambdaTypesMutationResponse = {\n  __typename?: 'UpdateLambdaTypesMutationResponse'\n  info: UpdateInfo\n  lambdaTypes: Array<LambdaType>\n}\n\nexport type UpdatePageTypesMutationResponse = {\n  __typename?: 'UpdatePageTypesMutationResponse'\n  info: UpdateInfo\n  pageTypes: Array<PageType>\n}\n\nexport type UpdatePagesMutationResponse = {\n  __typename?: 'UpdatePagesMutationResponse'\n  info: UpdateInfo\n  pages: Array<Page>\n}\n\nexport type UpdatePrimitiveTypesMutationResponse = {\n  __typename?: 'UpdatePrimitiveTypesMutationResponse'\n  info: UpdateInfo\n  primitiveTypes: Array<PrimitiveType>\n}\n\nexport type UpdatePropsMutationResponse = {\n  __typename?: 'UpdatePropsMutationResponse'\n  info: UpdateInfo\n  props: Array<Prop>\n}\n\nexport type UpdateReactNodeTypesMutationResponse = {\n  __typename?: 'UpdateReactNodeTypesMutationResponse'\n  info: UpdateInfo\n  reactNodeTypes: Array<ReactNodeType>\n}\n\nexport type UpdateRenderPropTypesMutationResponse = {\n  __typename?: 'UpdateRenderPropTypesMutationResponse'\n  info: UpdateInfo\n  renderPropTypes: Array<RenderPropType>\n}\n\nexport type UpdateResourcesMutationResponse = {\n  __typename?: 'UpdateResourcesMutationResponse'\n  info: UpdateInfo\n  resources: Array<Resource>\n}\n\nexport type UpdateStoresMutationResponse = {\n  __typename?: 'UpdateStoresMutationResponse'\n  info: UpdateInfo\n  stores: Array<Store>\n}\n\nexport type UpdateTagsMutationResponse = {\n  __typename?: 'UpdateTagsMutationResponse'\n  info: UpdateInfo\n  tags: Array<Tag>\n}\n\nexport type UpdateTypeReferencesMutationResponse = {\n  __typename?: 'UpdateTypeReferencesMutationResponse'\n  info: UpdateInfo\n  typeReferences: Array<TypeReference>\n}\n\nexport type UpdateUnionTypesMutationResponse = {\n  __typename?: 'UpdateUnionTypesMutationResponse'\n  info: UpdateInfo\n  unionTypes: Array<UnionType>\n}\n\nexport type User = {\n  __typename?: 'User'\n  apps: Array<App>\n  appsAggregate?: Maybe<UserAppAppsAggregationSelection>\n  appsConnection: UserAppsConnection\n  atoms: Array<Atom>\n  atomsAggregate?: Maybe<UserAtomAtomsAggregationSelection>\n  atomsConnection: UserAtomsConnection\n  auth0Id: Scalars['String']['output']\n  components: Array<Component>\n  componentsAggregate?: Maybe<UserComponentComponentsAggregationSelection>\n  componentsConnection: UserComponentsConnection\n  elements: Array<Element>\n  elementsAggregate?: Maybe<UserElementElementsAggregationSelection>\n  elementsConnection: UserElementsConnection\n  email: Scalars['String']['output']\n  id: Scalars['ID']['output']\n  roles?: Maybe<Array<Role>>\n  tags: Array<Tag>\n  tagsAggregate?: Maybe<UserTagTagsAggregationSelection>\n  tagsConnection: UserTagsConnection\n  types: Array<BaseType>\n  typesAggregate?: Maybe<UserBaseTypeTypesAggregationSelection>\n  typesConnection: UserTypesConnection\n  username: Scalars['String']['output']\n}\n\nexport type UserAppsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type UserAppsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AppWhere>\n}\n\nexport type UserAppsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserAppsConnectionSort>>\n  where?: InputMaybe<UserAppsConnectionWhere>\n}\n\nexport type UserAtomsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type UserAtomsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type UserAtomsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserAtomsConnectionSort>>\n  where?: InputMaybe<UserAtomsConnectionWhere>\n}\n\nexport type UserComponentsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type UserComponentsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type UserComponentsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserComponentsConnectionSort>>\n  where?: InputMaybe<UserComponentsConnectionWhere>\n}\n\nexport type UserElementsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type UserElementsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type UserElementsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserElementsConnectionSort>>\n  where?: InputMaybe<UserElementsConnectionWhere>\n}\n\nexport type UserTagsArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type UserTagsAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<TagWhere>\n}\n\nexport type UserTagsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserTagsConnectionSort>>\n  where?: InputMaybe<UserTagsConnectionWhere>\n}\n\nexport type UserTypesArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  options?: InputMaybe<BaseTypeOptions>\n  where?: InputMaybe<BaseTypeWhere>\n}\n\nexport type UserTypesAggregateArgs = {\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  where?: InputMaybe<BaseTypeWhere>\n}\n\nexport type UserTypesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>\n  directed?: InputMaybe<Scalars['Boolean']['input']>\n  first?: InputMaybe<Scalars['Int']['input']>\n  sort?: InputMaybe<Array<UserTypesConnectionSort>>\n  where?: InputMaybe<UserTypesConnectionWhere>\n}\n\nexport type UserAggregateSelection = {\n  __typename?: 'UserAggregateSelection'\n  auth0Id: StringAggregateSelectionNonNullable\n  count: Scalars['Int']['output']\n  email: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type UserAppAppsAggregationSelection = {\n  __typename?: 'UserAppAppsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserAppAppsNodeAggregateSelection>\n}\n\nexport type UserAppAppsNodeAggregateSelection = {\n  __typename?: 'UserAppAppsNodeAggregateSelection'\n  _compoundName: StringAggregateSelectionNonNullable\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type UserAppsAggregateInput = {\n  AND?: InputMaybe<Array<UserAppsAggregateInput>>\n  NOT?: InputMaybe<UserAppsAggregateInput>\n  OR?: InputMaybe<Array<UserAppsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserAppsNodeAggregationWhereInput>\n}\n\nexport type UserAppsConnectFieldInput = {\n  connect?: InputMaybe<Array<AppConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AppConnectWhere>\n}\n\nexport type UserAppsConnectOrCreateFieldInput = {\n  onCreate: UserAppsConnectOrCreateFieldInputOnCreate\n  where: AppConnectOrCreateWhere\n}\n\nexport type UserAppsConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type UserAppsConnection = {\n  __typename?: 'UserAppsConnection'\n  edges: Array<UserAppsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserAppsConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type UserAppsConnectionWhere = {\n  AND?: InputMaybe<Array<UserAppsConnectionWhere>>\n  NOT?: InputMaybe<UserAppsConnectionWhere>\n  OR?: InputMaybe<Array<UserAppsConnectionWhere>>\n  node?: InputMaybe<AppWhere>\n}\n\nexport type UserAppsCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type UserAppsDeleteFieldInput = {\n  delete?: InputMaybe<AppDeleteInput>\n  where?: InputMaybe<UserAppsConnectionWhere>\n}\n\nexport type UserAppsDisconnectFieldInput = {\n  disconnect?: InputMaybe<AppDisconnectInput>\n  where?: InputMaybe<UserAppsConnectionWhere>\n}\n\nexport type UserAppsFieldInput = {\n  connect?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAppsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserAppsCreateFieldInput>>\n}\n\nexport type UserAppsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserAppsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserAppsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserAppsNodeAggregationWhereInput>>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserAppsRelationship = {\n  __typename?: 'UserAppsRelationship'\n  cursor: Scalars['String']['output']\n  node: App\n}\n\nexport type UserAppsUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type UserAppsUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAppsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserAppsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserAppsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserAppsDisconnectFieldInput>>\n  update?: InputMaybe<UserAppsUpdateConnectionInput>\n  where?: InputMaybe<UserAppsConnectionWhere>\n}\n\nexport type UserAtomAtomsAggregationSelection = {\n  __typename?: 'UserAtomAtomsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserAtomAtomsNodeAggregateSelection>\n}\n\nexport type UserAtomAtomsNodeAggregateSelection = {\n  __typename?: 'UserAtomAtomsNodeAggregateSelection'\n  externalCssSource: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n  icon: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserAtomsAggregateInput = {\n  AND?: InputMaybe<Array<UserAtomsAggregateInput>>\n  NOT?: InputMaybe<UserAtomsAggregateInput>\n  OR?: InputMaybe<Array<UserAtomsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserAtomsNodeAggregationWhereInput>\n}\n\nexport type UserAtomsConnectFieldInput = {\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<AtomConnectWhere>\n}\n\nexport type UserAtomsConnectOrCreateFieldInput = {\n  onCreate: UserAtomsConnectOrCreateFieldInputOnCreate\n  where: AtomConnectOrCreateWhere\n}\n\nexport type UserAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type UserAtomsConnection = {\n  __typename?: 'UserAtomsConnection'\n  edges: Array<UserAtomsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type UserAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<UserAtomsConnectionWhere>>\n  NOT?: InputMaybe<UserAtomsConnectionWhere>\n  OR?: InputMaybe<Array<UserAtomsConnectionWhere>>\n  node?: InputMaybe<AtomWhere>\n}\n\nexport type UserAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type UserAtomsDeleteFieldInput = {\n  delete?: InputMaybe<AtomDeleteInput>\n  where?: InputMaybe<UserAtomsConnectionWhere>\n}\n\nexport type UserAtomsDisconnectFieldInput = {\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  where?: InputMaybe<UserAtomsConnectionWhere>\n}\n\nexport type UserAtomsFieldInput = {\n  connect?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAtomsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserAtomsCreateFieldInput>>\n}\n\nexport type UserAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserAtomsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserAtomsNodeAggregationWhereInput>>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserAtomsRelationship = {\n  __typename?: 'UserAtomsRelationship'\n  cursor: Scalars['String']['output']\n  node: Atom\n}\n\nexport type UserAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type UserAtomsUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAtomsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserAtomsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserAtomsDisconnectFieldInput>>\n  update?: InputMaybe<UserAtomsUpdateConnectionInput>\n  where?: InputMaybe<UserAtomsConnectionWhere>\n}\n\nexport type UserBaseTypeTypesAggregationSelection = {\n  __typename?: 'UserBaseTypeTypesAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserBaseTypeTypesNodeAggregateSelection>\n}\n\nexport type UserBaseTypeTypesNodeAggregateSelection = {\n  __typename?: 'UserBaseTypeTypesNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserComponentComponentsAggregationSelection = {\n  __typename?: 'UserComponentComponentsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserComponentComponentsNodeAggregateSelection>\n}\n\nexport type UserComponentComponentsNodeAggregateSelection = {\n  __typename?: 'UserComponentComponentsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserComponentsAggregateInput = {\n  AND?: InputMaybe<Array<UserComponentsAggregateInput>>\n  NOT?: InputMaybe<UserComponentsAggregateInput>\n  OR?: InputMaybe<Array<UserComponentsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserComponentsNodeAggregationWhereInput>\n}\n\nexport type UserComponentsConnectFieldInput = {\n  connect?: InputMaybe<Array<ComponentConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ComponentConnectWhere>\n}\n\nexport type UserComponentsConnectOrCreateFieldInput = {\n  onCreate: UserComponentsConnectOrCreateFieldInputOnCreate\n  where: ComponentConnectOrCreateWhere\n}\n\nexport type UserComponentsConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type UserComponentsConnection = {\n  __typename?: 'UserComponentsConnection'\n  edges: Array<UserComponentsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserComponentsConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type UserComponentsConnectionWhere = {\n  AND?: InputMaybe<Array<UserComponentsConnectionWhere>>\n  NOT?: InputMaybe<UserComponentsConnectionWhere>\n  OR?: InputMaybe<Array<UserComponentsConnectionWhere>>\n  node?: InputMaybe<ComponentWhere>\n}\n\nexport type UserComponentsCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type UserComponentsDeleteFieldInput = {\n  delete?: InputMaybe<ComponentDeleteInput>\n  where?: InputMaybe<UserComponentsConnectionWhere>\n}\n\nexport type UserComponentsDisconnectFieldInput = {\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  where?: InputMaybe<UserComponentsConnectionWhere>\n}\n\nexport type UserComponentsFieldInput = {\n  connect?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserComponentsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserComponentsCreateFieldInput>>\n}\n\nexport type UserComponentsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserComponentsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserComponentsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserComponentsNodeAggregationWhereInput>>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserComponentsRelationship = {\n  __typename?: 'UserComponentsRelationship'\n  cursor: Scalars['String']['output']\n  node: Component\n}\n\nexport type UserComponentsUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type UserComponentsUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserComponentsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserComponentsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserComponentsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserComponentsDisconnectFieldInput>>\n  update?: InputMaybe<UserComponentsUpdateConnectionInput>\n  where?: InputMaybe<UserComponentsConnectionWhere>\n}\n\nexport type UserConnectInput = {\n  apps?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  components?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  elements?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  tags?: InputMaybe<Array<UserTagsConnectFieldInput>>\n  types?: InputMaybe<Array<UserTypesConnectFieldInput>>\n}\n\nexport type UserConnectOrCreateWhere = {\n  node: UserUniqueWhere\n}\n\nexport type UserConnectWhere = {\n  node: UserWhere\n}\n\nexport type UserCreateInput = {\n  apps?: InputMaybe<UserAppsFieldInput>\n  atoms?: InputMaybe<UserAtomsFieldInput>\n  auth0Id: Scalars['String']['input']\n  components?: InputMaybe<UserComponentsFieldInput>\n  elements?: InputMaybe<UserElementsFieldInput>\n  email: Scalars['String']['input']\n  id: Scalars['ID']['input']\n  roles?: InputMaybe<Array<Role>>\n  tags?: InputMaybe<UserTagsFieldInput>\n  types?: InputMaybe<UserTypesFieldInput>\n  username: Scalars['String']['input']\n}\n\nexport type UserDeleteInput = {\n  apps?: InputMaybe<Array<UserAppsDeleteFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsDeleteFieldInput>>\n  components?: InputMaybe<Array<UserComponentsDeleteFieldInput>>\n  elements?: InputMaybe<Array<UserElementsDeleteFieldInput>>\n  tags?: InputMaybe<Array<UserTagsDeleteFieldInput>>\n  types?: InputMaybe<Array<UserTypesDeleteFieldInput>>\n}\n\nexport type UserDisconnectInput = {\n  apps?: InputMaybe<Array<UserAppsDisconnectFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsDisconnectFieldInput>>\n  components?: InputMaybe<Array<UserComponentsDisconnectFieldInput>>\n  elements?: InputMaybe<Array<UserElementsDisconnectFieldInput>>\n  tags?: InputMaybe<Array<UserTagsDisconnectFieldInput>>\n  types?: InputMaybe<Array<UserTypesDisconnectFieldInput>>\n}\n\nexport type UserEdge = {\n  __typename?: 'UserEdge'\n  cursor: Scalars['String']['output']\n  node: User\n}\n\nexport type UserElementElementsAggregationSelection = {\n  __typename?: 'UserElementElementsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserElementElementsNodeAggregateSelection>\n}\n\nexport type UserElementElementsNodeAggregateSelection = {\n  __typename?: 'UserElementElementsNodeAggregateSelection'\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type UserElementsAggregateInput = {\n  AND?: InputMaybe<Array<UserElementsAggregateInput>>\n  NOT?: InputMaybe<UserElementsAggregateInput>\n  OR?: InputMaybe<Array<UserElementsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserElementsNodeAggregationWhereInput>\n}\n\nexport type UserElementsConnectFieldInput = {\n  connect?: InputMaybe<Array<ElementConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<ElementConnectWhere>\n}\n\nexport type UserElementsConnectOrCreateFieldInput = {\n  onCreate: UserElementsConnectOrCreateFieldInputOnCreate\n  where: ElementConnectOrCreateWhere\n}\n\nexport type UserElementsConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type UserElementsConnection = {\n  __typename?: 'UserElementsConnection'\n  edges: Array<UserElementsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserElementsConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type UserElementsConnectionWhere = {\n  AND?: InputMaybe<Array<UserElementsConnectionWhere>>\n  NOT?: InputMaybe<UserElementsConnectionWhere>\n  OR?: InputMaybe<Array<UserElementsConnectionWhere>>\n  node?: InputMaybe<ElementWhere>\n}\n\nexport type UserElementsCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type UserElementsDeleteFieldInput = {\n  delete?: InputMaybe<ElementDeleteInput>\n  where?: InputMaybe<UserElementsConnectionWhere>\n}\n\nexport type UserElementsDisconnectFieldInput = {\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  where?: InputMaybe<UserElementsConnectionWhere>\n}\n\nexport type UserElementsFieldInput = {\n  connect?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserElementsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserElementsCreateFieldInput>>\n}\n\nexport type UserElementsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserElementsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserElementsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserElementsNodeAggregationWhereInput>>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Int']['input']\n  >\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<\n    Scalars['Float']['input']\n  >\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserElementsRelationship = {\n  __typename?: 'UserElementsRelationship'\n  cursor: Scalars['String']['output']\n  node: Element\n}\n\nexport type UserElementsUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type UserElementsUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserElementsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserElementsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserElementsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserElementsDisconnectFieldInput>>\n  update?: InputMaybe<UserElementsUpdateConnectionInput>\n  where?: InputMaybe<UserElementsConnectionWhere>\n}\n\nexport type UserOnCreateInput = {\n  auth0Id: Scalars['String']['input']\n  email: Scalars['String']['input']\n  id: Scalars['ID']['input']\n  roles?: InputMaybe<Array<Role>>\n  username: Scalars['String']['input']\n}\n\nexport type UserOptions = {\n  limit?: InputMaybe<Scalars['Int']['input']>\n  offset?: InputMaybe<Scalars['Int']['input']>\n  /** Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<UserSort>>\n}\n\n/** Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object. */\nexport type UserSort = {\n  auth0Id?: InputMaybe<SortDirection>\n  email?: InputMaybe<SortDirection>\n  id?: InputMaybe<SortDirection>\n  username?: InputMaybe<SortDirection>\n}\n\nexport type UserTagTagsAggregationSelection = {\n  __typename?: 'UserTagTagsAggregationSelection'\n  count: Scalars['Int']['output']\n  node?: Maybe<UserTagTagsNodeAggregateSelection>\n}\n\nexport type UserTagTagsNodeAggregateSelection = {\n  __typename?: 'UserTagTagsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserTagsAggregateInput = {\n  AND?: InputMaybe<Array<UserTagsAggregateInput>>\n  NOT?: InputMaybe<UserTagsAggregateInput>\n  OR?: InputMaybe<Array<UserTagsAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserTagsNodeAggregationWhereInput>\n}\n\nexport type UserTagsConnectFieldInput = {\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<TagConnectWhere>\n}\n\nexport type UserTagsConnectOrCreateFieldInput = {\n  onCreate: UserTagsConnectOrCreateFieldInputOnCreate\n  where: TagConnectOrCreateWhere\n}\n\nexport type UserTagsConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type UserTagsConnection = {\n  __typename?: 'UserTagsConnection'\n  edges: Array<UserTagsRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserTagsConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type UserTagsConnectionWhere = {\n  AND?: InputMaybe<Array<UserTagsConnectionWhere>>\n  NOT?: InputMaybe<UserTagsConnectionWhere>\n  OR?: InputMaybe<Array<UserTagsConnectionWhere>>\n  node?: InputMaybe<TagWhere>\n}\n\nexport type UserTagsCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type UserTagsDeleteFieldInput = {\n  delete?: InputMaybe<TagDeleteInput>\n  where?: InputMaybe<UserTagsConnectionWhere>\n}\n\nexport type UserTagsDisconnectFieldInput = {\n  disconnect?: InputMaybe<TagDisconnectInput>\n  where?: InputMaybe<UserTagsConnectionWhere>\n}\n\nexport type UserTagsFieldInput = {\n  connect?: InputMaybe<Array<UserTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTagsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserTagsCreateFieldInput>>\n}\n\nexport type UserTagsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserTagsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserTagsNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserTagsNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserTagsRelationship = {\n  __typename?: 'UserTagsRelationship'\n  cursor: Scalars['String']['output']\n  node: Tag\n}\n\nexport type UserTagsUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type UserTagsUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTagsConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserTagsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserTagsDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserTagsDisconnectFieldInput>>\n  update?: InputMaybe<UserTagsUpdateConnectionInput>\n  where?: InputMaybe<UserTagsConnectionWhere>\n}\n\nexport type UserTypesAggregateInput = {\n  AND?: InputMaybe<Array<UserTypesAggregateInput>>\n  NOT?: InputMaybe<UserTypesAggregateInput>\n  OR?: InputMaybe<Array<UserTypesAggregateInput>>\n  count?: InputMaybe<Scalars['Int']['input']>\n  count_GT?: InputMaybe<Scalars['Int']['input']>\n  count_GTE?: InputMaybe<Scalars['Int']['input']>\n  count_LT?: InputMaybe<Scalars['Int']['input']>\n  count_LTE?: InputMaybe<Scalars['Int']['input']>\n  node?: InputMaybe<UserTypesNodeAggregationWhereInput>\n}\n\nexport type UserTypesConnectFieldInput = {\n  connect?: InputMaybe<Array<BaseTypeConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<BaseTypeConnectWhere>\n}\n\nexport type UserTypesConnectOrCreateFieldInput = {\n  onCreate: UserTypesConnectOrCreateFieldInputOnCreate\n  where: BaseTypeConnectOrCreateWhere\n}\n\nexport type UserTypesConnectOrCreateFieldInputOnCreate = {\n  node: BaseTypeOnCreateInput\n}\n\nexport type UserTypesConnection = {\n  __typename?: 'UserTypesConnection'\n  edges: Array<UserTypesRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type UserTypesConnectionSort = {\n  node?: InputMaybe<BaseTypeSort>\n}\n\nexport type UserTypesConnectionWhere = {\n  AND?: InputMaybe<Array<UserTypesConnectionWhere>>\n  NOT?: InputMaybe<UserTypesConnectionWhere>\n  OR?: InputMaybe<Array<UserTypesConnectionWhere>>\n  node?: InputMaybe<BaseTypeWhere>\n}\n\nexport type UserTypesCreateFieldInput = {\n  node: BaseTypeCreateInput\n}\n\nexport type UserTypesDeleteFieldInput = {\n  delete?: InputMaybe<BaseTypeDeleteInput>\n  where?: InputMaybe<UserTypesConnectionWhere>\n}\n\nexport type UserTypesDisconnectFieldInput = {\n  disconnect?: InputMaybe<BaseTypeDisconnectInput>\n  where?: InputMaybe<UserTypesConnectionWhere>\n}\n\nexport type UserTypesFieldInput = {\n  connect?: InputMaybe<Array<UserTypesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTypesConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserTypesCreateFieldInput>>\n}\n\nexport type UserTypesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserTypesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserTypesNodeAggregationWhereInput>\n  OR?: InputMaybe<Array<UserTypesNodeAggregationWhereInput>>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']['input']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']['input']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']['input']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']['input']>\n}\n\nexport type UserTypesRelationship = {\n  __typename?: 'UserTypesRelationship'\n  cursor: Scalars['String']['output']\n  node: BaseType\n}\n\nexport type UserTypesUpdateConnectionInput = {\n  node?: InputMaybe<BaseTypeUpdateInput>\n}\n\nexport type UserTypesUpdateFieldInput = {\n  connect?: InputMaybe<Array<UserTypesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTypesConnectOrCreateFieldInput>>\n  create?: InputMaybe<Array<UserTypesCreateFieldInput>>\n  delete?: InputMaybe<Array<UserTypesDeleteFieldInput>>\n  disconnect?: InputMaybe<Array<UserTypesDisconnectFieldInput>>\n  update?: InputMaybe<UserTypesUpdateConnectionInput>\n  where?: InputMaybe<UserTypesConnectionWhere>\n}\n\nexport type UserUniqueWhere = {\n  auth0Id?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  username?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type UserUpdateInput = {\n  apps?: InputMaybe<Array<UserAppsUpdateFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsUpdateFieldInput>>\n  auth0Id?: InputMaybe<Scalars['String']['input']>\n  components?: InputMaybe<Array<UserComponentsUpdateFieldInput>>\n  elements?: InputMaybe<Array<UserElementsUpdateFieldInput>>\n  email?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  roles?: InputMaybe<Array<Role>>\n  tags?: InputMaybe<Array<UserTagsUpdateFieldInput>>\n  types?: InputMaybe<Array<UserTypesUpdateFieldInput>>\n  username?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type UserWhere = {\n  AND?: InputMaybe<Array<UserWhere>>\n  NOT?: InputMaybe<UserWhere>\n  OR?: InputMaybe<Array<UserWhere>>\n  appsAggregate?: InputMaybe<UserAppsAggregateInput>\n  /** Return Users where all of the related UserAppsConnections match this filter */\n  appsConnection_ALL?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where none of the related UserAppsConnections match this filter */\n  appsConnection_NONE?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where one of the related UserAppsConnections match this filter */\n  appsConnection_SINGLE?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where some of the related UserAppsConnections match this filter */\n  appsConnection_SOME?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where all of the related Apps match this filter */\n  apps_ALL?: InputMaybe<AppWhere>\n  /** Return Users where none of the related Apps match this filter */\n  apps_NONE?: InputMaybe<AppWhere>\n  /** Return Users where one of the related Apps match this filter */\n  apps_SINGLE?: InputMaybe<AppWhere>\n  /** Return Users where some of the related Apps match this filter */\n  apps_SOME?: InputMaybe<AppWhere>\n  atomsAggregate?: InputMaybe<UserAtomsAggregateInput>\n  /** Return Users where all of the related UserAtomsConnections match this filter */\n  atomsConnection_ALL?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where none of the related UserAtomsConnections match this filter */\n  atomsConnection_NONE?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where one of the related UserAtomsConnections match this filter */\n  atomsConnection_SINGLE?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where some of the related UserAtomsConnections match this filter */\n  atomsConnection_SOME?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where all of the related Atoms match this filter */\n  atoms_ALL?: InputMaybe<AtomWhere>\n  /** Return Users where none of the related Atoms match this filter */\n  atoms_NONE?: InputMaybe<AtomWhere>\n  /** Return Users where one of the related Atoms match this filter */\n  atoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Users where some of the related Atoms match this filter */\n  atoms_SOME?: InputMaybe<AtomWhere>\n  auth0Id?: InputMaybe<Scalars['String']['input']>\n  auth0Id_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  auth0Id_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  auth0Id_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  auth0Id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  auth0Id_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  componentsAggregate?: InputMaybe<UserComponentsAggregateInput>\n  /** Return Users where all of the related UserComponentsConnections match this filter */\n  componentsConnection_ALL?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where none of the related UserComponentsConnections match this filter */\n  componentsConnection_NONE?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where one of the related UserComponentsConnections match this filter */\n  componentsConnection_SINGLE?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where some of the related UserComponentsConnections match this filter */\n  componentsConnection_SOME?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where all of the related Components match this filter */\n  components_ALL?: InputMaybe<ComponentWhere>\n  /** Return Users where none of the related Components match this filter */\n  components_NONE?: InputMaybe<ComponentWhere>\n  /** Return Users where one of the related Components match this filter */\n  components_SINGLE?: InputMaybe<ComponentWhere>\n  /** Return Users where some of the related Components match this filter */\n  components_SOME?: InputMaybe<ComponentWhere>\n  elementsAggregate?: InputMaybe<UserElementsAggregateInput>\n  /** Return Users where all of the related UserElementsConnections match this filter */\n  elementsConnection_ALL?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where none of the related UserElementsConnections match this filter */\n  elementsConnection_NONE?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where one of the related UserElementsConnections match this filter */\n  elementsConnection_SINGLE?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where some of the related UserElementsConnections match this filter */\n  elementsConnection_SOME?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where all of the related Elements match this filter */\n  elements_ALL?: InputMaybe<ElementWhere>\n  /** Return Users where none of the related Elements match this filter */\n  elements_NONE?: InputMaybe<ElementWhere>\n  /** Return Users where one of the related Elements match this filter */\n  elements_SINGLE?: InputMaybe<ElementWhere>\n  /** Return Users where some of the related Elements match this filter */\n  elements_SOME?: InputMaybe<ElementWhere>\n  email?: InputMaybe<Scalars['String']['input']>\n  email_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  email_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  email_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  email_MATCHES?: InputMaybe<Scalars['String']['input']>\n  email_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n  id?: InputMaybe<Scalars['ID']['input']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']['input']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']['input']>\n  id_IN?: InputMaybe<Array<Scalars['ID']['input']>>\n  id_MATCHES?: InputMaybe<Scalars['String']['input']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']['input']>\n  roles?: InputMaybe<Array<Role>>\n  roles_INCLUDES?: InputMaybe<Role>\n  tagsAggregate?: InputMaybe<UserTagsAggregateInput>\n  /** Return Users where all of the related UserTagsConnections match this filter */\n  tagsConnection_ALL?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where none of the related UserTagsConnections match this filter */\n  tagsConnection_NONE?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where one of the related UserTagsConnections match this filter */\n  tagsConnection_SINGLE?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where some of the related UserTagsConnections match this filter */\n  tagsConnection_SOME?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where all of the related Tags match this filter */\n  tags_ALL?: InputMaybe<TagWhere>\n  /** Return Users where none of the related Tags match this filter */\n  tags_NONE?: InputMaybe<TagWhere>\n  /** Return Users where one of the related Tags match this filter */\n  tags_SINGLE?: InputMaybe<TagWhere>\n  /** Return Users where some of the related Tags match this filter */\n  tags_SOME?: InputMaybe<TagWhere>\n  typesAggregate?: InputMaybe<UserTypesAggregateInput>\n  /** Return Users where all of the related UserTypesConnections match this filter */\n  typesConnection_ALL?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where none of the related UserTypesConnections match this filter */\n  typesConnection_NONE?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where one of the related UserTypesConnections match this filter */\n  typesConnection_SINGLE?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where some of the related UserTypesConnections match this filter */\n  typesConnection_SOME?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where all of the related BaseTypes match this filter */\n  types_ALL?: InputMaybe<BaseTypeWhere>\n  /** Return Users where none of the related BaseTypes match this filter */\n  types_NONE?: InputMaybe<BaseTypeWhere>\n  /** Return Users where one of the related BaseTypes match this filter */\n  types_SINGLE?: InputMaybe<BaseTypeWhere>\n  /** Return Users where some of the related BaseTypes match this filter */\n  types_SOME?: InputMaybe<BaseTypeWhere>\n  username?: InputMaybe<Scalars['String']['input']>\n  username_CONTAINS?: InputMaybe<Scalars['String']['input']>\n  username_ENDS_WITH?: InputMaybe<Scalars['String']['input']>\n  username_IN?: InputMaybe<Array<Scalars['String']['input']>>\n  username_MATCHES?: InputMaybe<Scalars['String']['input']>\n  username_STARTS_WITH?: InputMaybe<Scalars['String']['input']>\n}\n\nexport type UsersConnection = {\n  __typename?: 'UsersConnection'\n  edges: Array<UserEdge>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type VercelDomainConfig = {\n  __typename?: 'VercelDomainConfig'\n  misconfigured: Scalars['Boolean']['output']\n}\n\nexport type VercelProjectDomain = {\n  __typename?: 'VercelProjectDomain'\n  verified: Scalars['Boolean']['output']\n}\n\nexport type WithDescendants = {\n  descendantTypesIds: Array<Scalars['ID']['output']>\n}\n\nexport type WithOwner = {\n  owner: User\n  ownerConnection: WithOwnerOwnerConnection\n}\n\nexport type WithOwnerOwnerConnectFieldInput = {\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']['input']\n  where?: InputMaybe<UserConnectWhere>\n}\n\nexport type WithOwnerOwnerConnectOrCreateFieldInput = {\n  onCreate: WithOwnerOwnerConnectOrCreateFieldInputOnCreate\n  where: UserConnectOrCreateWhere\n}\n\nexport type WithOwnerOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type WithOwnerOwnerConnection = {\n  __typename?: 'WithOwnerOwnerConnection'\n  edges: Array<WithOwnerOwnerRelationship>\n  pageInfo: PageInfo\n  totalCount: Scalars['Int']['output']\n}\n\nexport type WithOwnerOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type WithOwnerOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<WithOwnerOwnerConnectionWhere>>\n  NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  OR?: InputMaybe<Array<WithOwnerOwnerConnectionWhere>>\n  node?: InputMaybe<UserWhere>\n}\n\nexport type WithOwnerOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type WithOwnerOwnerDeleteFieldInput = {\n  delete?: InputMaybe<UserDeleteInput>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type WithOwnerOwnerDisconnectFieldInput = {\n  disconnect?: InputMaybe<UserDisconnectInput>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type WithOwnerOwnerFieldInput = {\n  connect?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n}\n\nexport type WithOwnerOwnerRelationship = {\n  __typename?: 'WithOwnerOwnerRelationship'\n  cursor: Scalars['String']['output']\n  node: User\n}\n\nexport type WithOwnerOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type WithOwnerOwnerUpdateFieldInput = {\n  connect?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  create?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  delete?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  disconnect?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  update?: InputMaybe<WithOwnerOwnerUpdateConnectionInput>\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\ntype BaseAction_ApiAction_Fragment = {\n  __typename: 'ApiAction'\n  id: string\n  name: string\n  type: ActionKind\n  store: { __typename?: 'Store'; id: string; name: string }\n}\n\ntype BaseAction_CodeAction_Fragment = {\n  __typename: 'CodeAction'\n  id: string\n  name: string\n  type: ActionKind\n  store: { __typename?: 'Store'; id: string; name: string }\n}\n\nexport type BaseActionFragment =\n  | BaseAction_ApiAction_Fragment\n  | BaseAction_CodeAction_Fragment\n\ntype Action_ApiAction_Fragment = {\n  __typename?: 'ApiAction'\n} & ApiActionFragment &\n  BaseAction_ApiAction_Fragment\n\ntype Action_CodeAction_Fragment = {\n  __typename?: 'CodeAction'\n} & CodeActionFragment &\n  BaseAction_CodeAction_Fragment\n\nexport type ActionFragment =\n  | Action_ApiAction_Fragment\n  | Action_CodeAction_Fragment\n\nexport type ApiActionFragment = {\n  __typename?: 'ApiAction'\n  successAction?:\n    | ({ __typename?: 'ApiAction' } & BaseAction_ApiAction_Fragment)\n    | ({ __typename?: 'CodeAction' } & BaseAction_CodeAction_Fragment)\n    | null\n  errorAction?:\n    | ({ __typename?: 'ApiAction' } & BaseAction_ApiAction_Fragment)\n    | ({ __typename?: 'CodeAction' } & BaseAction_CodeAction_Fragment)\n    | null\n  resource: { __typename?: 'Resource' } & ResourceFragment\n  config: { __typename?: 'Prop'; id: string; data: string }\n} & BaseAction_ApiAction_Fragment\n\nexport type CodeActionFragment = {\n  __typename?: 'CodeAction'\n  code: string\n} & BaseAction_CodeAction_Fragment\n\nexport type AppPreviewFragment = {\n  __typename?: 'App'\n  id: string\n  name: string\n  slug: string\n  owner: { __typename?: 'User' } & OwnerFragment\n  pages: Array<{ __typename?: 'Page'; id: string }>\n}\n\nexport type AppFragment = {\n  __typename?: 'App'\n  id: string\n  name: string\n  slug: string\n  owner: { __typename?: 'User' } & OwnerFragment\n  pages: Array<{ __typename?: 'Page' } & PageFragment>\n  domains: Array<{ __typename?: 'Domain' } & DomainFragment>\n}\n\nexport type PageBuilderAppFragment = {\n  __typename?: 'App'\n  id: string\n  name: string\n  slug: string\n  owner: { __typename?: 'User' } & OwnerFragment\n  pages: Array<{ __typename?: 'Page' } & BuilderPageFragment>\n}\n\nexport type AtomFragment = {\n  __typename?: 'Atom'\n  icon?: string | null\n  id: string\n  name: string\n  type: AtomType\n  externalCssSource?: string | null\n  externalJsSource?: string | null\n  externalSourceType?: string | null\n  owner: { __typename?: 'User' } & OwnerFragment\n  tags: Array<{ __typename?: 'Tag' } & TagFragment>\n  api: { __typename?: 'InterfaceType' } & InterfaceTypeFragment\n  suggestedChildren: Array<{\n    __typename?: 'Atom'\n    id: string\n    name: string\n    type: AtomType\n  }>\n  requiredParents: Array<{\n    __typename?: 'Atom'\n    id: string\n    name: string\n    type: AtomType\n  }>\n}\n\nexport type RenderAtomFragment = {\n  __typename?: 'Atom'\n  icon?: string | null\n  id: string\n  name: string\n  type: AtomType\n}\n\nexport type RenderedComponentFragment = {\n  __typename?: 'Component'\n  rootElement: {\n    __typename?: 'Element'\n    descendantElements: Array<{ __typename?: 'Element' } & ElementFragment>\n  } & ElementFragment\n} & ComponentFragment\n\nexport type ComponentFragment = {\n  __typename?: 'Component'\n  id: string\n  name: string\n  keyGenerator?: string | null\n  rootElement: { __typename?: 'Element'; id: string; name: string }\n  owner: { __typename?: 'User' } & OwnerFragment\n  api: { __typename?: 'InterfaceType' } & InterfaceTypeFragment\n  props: { __typename?: 'Prop' } & PropFragment\n  childrenContainerElement: { __typename?: 'Element'; id: string }\n  store: { __typename?: 'Store' } & StoreFragment\n}\n\nexport type DomainFragment = {\n  __typename?: 'Domain'\n  id: string\n  name: string\n  app: { __typename?: 'App'; id: string }\n  domainConfig: { __typename?: 'VercelDomainConfig'; misconfigured: boolean }\n  projectDomain: { __typename?: 'VercelProjectDomain'; verified: boolean }\n}\n\nexport type ElementFragment = {\n  __typename: 'Element'\n  id: string\n  name: string\n  customCss?: string | null\n  guiCss?: string | null\n  renderForEachPropKey?: string | null\n  renderIfExpression?: string | null\n  propTransformationJs?: string | null\n  page?: { __typename?: 'Page'; id: string } | null\n  renderComponentType?: { __typename?: 'Component'; id: string } | null\n  renderAtomType?: ({ __typename?: 'Atom' } & AtomFragment) | null\n  renderType?: {\n    __typename?: 'RenderType'\n    id: string\n    kind: RenderTypeKind\n  } | null\n  prevSibling?: { __typename?: 'Element'; id: string } | null\n  nextSibling?: { __typename?: 'Element'; id: string } | null\n  parentComponent?: { __typename?: 'Component'; id: string } | null\n  parent?: { __typename?: 'Element'; id: string } | null\n  firstChild?: { __typename?: 'Element'; id: string } | null\n  props: { __typename?: 'Prop' } & PropFragment\n  preRenderAction?:\n    | { __typename?: 'ApiAction'; id: string }\n    | { __typename?: 'CodeAction'; id: string }\n    | null\n  postRenderAction?:\n    | { __typename?: 'ApiAction'; id: string }\n    | { __typename?: 'CodeAction'; id: string }\n    | null\n}\n\nexport type HookPropFragment = { __typename?: 'Prop'; id: string; data: string }\n\nexport type HookFragment = {\n  __typename?: 'Hook'\n  id: string\n  type: AtomType\n  config: { __typename?: 'Prop' } & HookPropFragment\n  element: { __typename?: 'Element'; id: string; name: string }\n}\n\nexport type PageFragment = {\n  __typename?: 'Page'\n  id: string\n  name: string\n  slug: string\n  kind: PageKind\n  url: string\n  app: { __typename?: 'App'; id: string }\n  rootElement: {\n    __typename?: 'Element'\n    descendantElements: Array<{ __typename?: 'Element' } & ElementFragment>\n  } & ElementFragment\n  pageContentContainer?: { __typename?: 'Element'; id: string } | null\n  store: { __typename?: 'Store' } & StoreFragment\n}\n\nexport type BuilderPageFragment = {\n  __typename?: 'Page'\n  id: string\n  name: string\n  slug: string\n  kind: PageKind\n  url: string\n  rootElement: {\n    __typename?: 'Element'\n    descendantElements: Array<{ __typename?: 'Element' } & ElementFragment>\n  } & ElementFragment\n  app: { __typename?: 'App'; id: string }\n  store: { __typename?: 'Store' } & StoreFragment\n  pageContentContainer?: { __typename?: 'Element'; id: string } | null\n}\n\nexport type PropFragment = { __typename?: 'Prop'; id: string; data: string }\n\nexport type ResourceFragment = {\n  __typename?: 'Resource'\n  id: string\n  name: string\n  type: ResourceType\n  config: { __typename?: 'Prop' } & PropFragment\n  owner: { __typename?: 'User'; id: string; auth0Id: string }\n}\n\nexport type StoreFragment = {\n  __typename?: 'Store'\n  id: string\n  name: string\n  api: { __typename?: 'InterfaceType' } & InterfaceTypeFragment\n  component?: { __typename?: 'Component'; id: string } | null\n  page?: { __typename?: 'Page'; id: string } | null\n  actions: Array<\n    | ({ __typename?: 'ApiAction' } & Action_ApiAction_Fragment)\n    | ({ __typename?: 'CodeAction' } & Action_CodeAction_Fragment)\n  >\n}\n\nexport type TagFragment = {\n  __typename?: 'Tag'\n  id: string\n  name: string\n  isRoot?: boolean | null\n  parent?: { __typename?: 'Tag'; id: string } | null\n  children: Array<{ __typename?: 'Tag'; id: string }>\n  descendants: Array<{ __typename?: 'Tag'; id: string }>\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\nexport type TagPreviewFragment = {\n  __typename?: 'Tag'\n  id: string\n  name: string\n}\n\nexport type ActionTypeFragment = {\n  __typename?: 'ActionType'\n} & BaseType_ActionType_Fragment\n\nexport type AppTypeFragment = {\n  __typename?: 'AppType'\n} & BaseType_AppType_Fragment\n\nexport type ArrayTypeFragment = {\n  __typename?: 'ArrayType'\n  itemType:\n    | { __typename?: 'ActionType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'AppType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'ArrayType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'BaseType'; id: string; name: string; kind: TypeKind }\n    | {\n        __typename?: 'CodeMirrorType'\n        id: string\n        name: string\n        kind: TypeKind\n      }\n    | { __typename?: 'ElementType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'EnumType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'InterfaceType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'LambdaType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'PageType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'PrimitiveType'; id: string; name: string; kind: TypeKind }\n    | { __typename?: 'ReactNodeType'; id: string; name: string; kind: TypeKind }\n    | {\n        __typename?: 'RenderPropType'\n        id: string\n        name: string\n        kind: TypeKind\n      }\n    | { __typename?: 'UnionType'; id: string; name: string; kind: TypeKind }\n} & BaseType_ArrayType_Fragment\n\ntype BaseType_ActionType_Fragment = {\n  __typename: 'ActionType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_AppType_Fragment = {\n  __typename: 'AppType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_ArrayType_Fragment = {\n  __typename: 'ArrayType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_BaseType_Fragment = {\n  __typename: 'BaseType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_CodeMirrorType_Fragment = {\n  __typename: 'CodeMirrorType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_ElementType_Fragment = {\n  __typename: 'ElementType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_EnumType_Fragment = {\n  __typename: 'EnumType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_InterfaceType_Fragment = {\n  __typename: 'InterfaceType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_LambdaType_Fragment = {\n  __typename: 'LambdaType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_PageType_Fragment = {\n  __typename: 'PageType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_PrimitiveType_Fragment = {\n  __typename: 'PrimitiveType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_ReactNodeType_Fragment = {\n  __typename: 'ReactNodeType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_RenderPropType_Fragment = {\n  __typename: 'RenderPropType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\ntype BaseType_UnionType_Fragment = {\n  __typename: 'UnionType'\n  kind: TypeKind\n  id: string\n  name: string\n  owner: { __typename?: 'User' } & OwnerFragment\n}\n\nexport type BaseTypeFragment =\n  | BaseType_ActionType_Fragment\n  | BaseType_AppType_Fragment\n  | BaseType_ArrayType_Fragment\n  | BaseType_BaseType_Fragment\n  | BaseType_CodeMirrorType_Fragment\n  | BaseType_ElementType_Fragment\n  | BaseType_EnumType_Fragment\n  | BaseType_InterfaceType_Fragment\n  | BaseType_LambdaType_Fragment\n  | BaseType_PageType_Fragment\n  | BaseType_PrimitiveType_Fragment\n  | BaseType_ReactNodeType_Fragment\n  | BaseType_RenderPropType_Fragment\n  | BaseType_UnionType_Fragment\n\nexport type CodeMirrorTypeFragment = {\n  __typename?: 'CodeMirrorType'\n  language: CodeMirrorLanguage\n} & BaseType_CodeMirrorType_Fragment\n\nexport type ElementTypeFragment = {\n  __typename?: 'ElementType'\n  elementKind: ElementTypeKind\n} & BaseType_ElementType_Fragment\n\nexport type EnumTypeValueFragment = {\n  __typename?: 'EnumTypeValue'\n  id: string\n  key: string\n  value: string\n}\n\nexport type EnumTypeFragment = {\n  __typename?: 'EnumType'\n  allowedValues: Array<{ __typename?: 'EnumTypeValue' } & EnumTypeValueFragment>\n} & BaseType_EnumType_Fragment\n\nexport type FieldFragment = {\n  __typename?: 'Field'\n  id: string\n  key: string\n  name?: string | null\n  description?: string | null\n  validationRules?: string | null\n  defaultValues?: string | null\n  prevSibling?: { __typename?: 'Field'; id: string } | null\n  nextSibling?: { __typename?: 'Field'; id: string } | null\n  fieldType:\n    | { __typename: 'ActionType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'AppType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'ArrayType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'BaseType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'CodeMirrorType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'ElementType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'EnumType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'InterfaceType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'LambdaType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'PageType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'PrimitiveType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'ReactNodeType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'RenderPropType'; id: string; kind: TypeKind; name: string }\n    | { __typename: 'UnionType'; id: string; kind: TypeKind; name: string }\n  api: { __typename?: 'InterfaceType'; id: string }\n}\n\nexport type InterfaceTypeFragment = {\n  __typename?: 'InterfaceType'\n  fields: Array<{ __typename?: 'Field' } & FieldFragment>\n} & BaseType_InterfaceType_Fragment\n\nexport type LambdaTypeFragment = {\n  __typename?: 'LambdaType'\n} & BaseType_LambdaType_Fragment\n\nexport type PageTypeFragment = {\n  __typename?: 'PageType'\n} & BaseType_PageType_Fragment\n\nexport type PrimitiveTypeFragment = {\n  __typename?: 'PrimitiveType'\n  primitiveKind: PrimitiveTypeKind\n} & BaseType_PrimitiveType_Fragment\n\nexport type ReactNodeTypeFragment = {\n  __typename?: 'ReactNodeType'\n} & BaseType_ReactNodeType_Fragment\n\nexport type RenderPropTypeFragment = {\n  __typename?: 'RenderPropType'\n} & BaseType_RenderPropType_Fragment\n\ntype Type_ActionType_Fragment = {\n  __typename?: 'ActionType'\n} & ActionTypeFragment\n\ntype Type_AppType_Fragment = { __typename?: 'AppType' } & AppTypeFragment\n\ntype Type_ArrayType_Fragment = { __typename?: 'ArrayType' } & ArrayTypeFragment\n\ntype Type_BaseType_Fragment = { __typename?: 'BaseType' }\n\ntype Type_CodeMirrorType_Fragment = {\n  __typename?: 'CodeMirrorType'\n} & CodeMirrorTypeFragment\n\ntype Type_ElementType_Fragment = {\n  __typename?: 'ElementType'\n} & ElementTypeFragment\n\ntype Type_EnumType_Fragment = { __typename?: 'EnumType' } & EnumTypeFragment\n\ntype Type_InterfaceType_Fragment = {\n  __typename?: 'InterfaceType'\n} & InterfaceTypeFragment\n\ntype Type_LambdaType_Fragment = {\n  __typename?: 'LambdaType'\n} & LambdaTypeFragment\n\ntype Type_PageType_Fragment = { __typename?: 'PageType' } & PageTypeFragment\n\ntype Type_PrimitiveType_Fragment = {\n  __typename?: 'PrimitiveType'\n} & PrimitiveTypeFragment\n\ntype Type_ReactNodeType_Fragment = {\n  __typename?: 'ReactNodeType'\n} & ReactNodeTypeFragment\n\ntype Type_RenderPropType_Fragment = {\n  __typename?: 'RenderPropType'\n} & RenderPropTypeFragment\n\ntype Type_UnionType_Fragment = { __typename?: 'UnionType' } & UnionTypeFragment\n\nexport type TypeFragment =\n  | Type_ActionType_Fragment\n  | Type_AppType_Fragment\n  | Type_ArrayType_Fragment\n  | Type_BaseType_Fragment\n  | Type_CodeMirrorType_Fragment\n  | Type_ElementType_Fragment\n  | Type_EnumType_Fragment\n  | Type_InterfaceType_Fragment\n  | Type_LambdaType_Fragment\n  | Type_PageType_Fragment\n  | Type_PrimitiveType_Fragment\n  | Type_ReactNodeType_Fragment\n  | Type_RenderPropType_Fragment\n  | Type_UnionType_Fragment\n\nexport type UnionTypeFragment = {\n  __typename?: 'UnionType'\n  typesOfUnionType: Array<\n    | { __typename?: 'ActionType'; id: string; name: string }\n    | { __typename?: 'AppType'; id: string; name: string }\n    | { __typename?: 'ArrayType'; id: string; name: string }\n    | { __typename?: 'CodeMirrorType'; id: string; name: string }\n    | { __typename?: 'ElementType'; id: string; name: string }\n    | { __typename?: 'EnumType'; id: string; name: string }\n    | { __typename?: 'InterfaceType'; id: string; name: string }\n    | { __typename?: 'LambdaType'; id: string; name: string }\n    | { __typename?: 'PageType'; id: string; name: string }\n    | { __typename?: 'PrimitiveType'; id: string; name: string }\n    | { __typename?: 'ReactNodeType'; id: string; name: string }\n    | { __typename?: 'RenderPropType'; id: string; name: string }\n    | { __typename?: 'UnionType'; id: string; name: string }\n  >\n} & BaseType_UnionType_Fragment\n\nexport type OwnerFragment = { __typename?: 'User'; auth0Id: string }\n\nexport type UserFragment = {\n  __typename?: 'User'\n  id: string\n  username: string\n  email: string\n  auth0Id: string\n  roles?: Array<Role> | null\n  apps: Array<{ __typename?: 'App' } & AppFragment>\n}\n\nexport type ResetDatabaseMutationVariables = Exact<{ [key: string]: never }>\n\nexport type ResetDatabaseMutation = {\n  __typename?: 'Mutation'\n  resetDatabase?: {\n    __typename?: 'ResetDatabaseMutationResponse'\n    success?: boolean | null\n  } | null\n}\n\nexport type CreateAppsMutationVariables = Exact<{\n  input: Array<AppCreateInput> | AppCreateInput\n}>\n\nexport type CreateAppsMutation = {\n  __typename?: 'Mutation'\n  createApps: {\n    __typename?: 'CreateAppsMutationResponse'\n    apps: Array<{ __typename?: 'App'; id: string }>\n  }\n}\n\nexport type UpdateAppsMutationVariables = Exact<{\n  where: AppWhere\n  update: AppUpdateInput\n}>\n\nexport type UpdateAppsMutation = {\n  __typename?: 'Mutation'\n  updateApps: {\n    __typename?: 'UpdateAppsMutationResponse'\n    apps: Array<{ __typename?: 'App'; id: string }>\n  }\n}\n\nexport type DeleteAppsMutationVariables = Exact<{\n  where: AppWhere\n  delete?: InputMaybe<AppDeleteInput>\n}>\n\nexport type DeleteAppsMutation = {\n  __typename?: 'Mutation'\n  deleteApps: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type GetAppsQueryVariables = Exact<{\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}>\n\nexport type GetAppsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'AppAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'App' } & AppFragment>\n}\n\nexport type CreateAtomsMutationVariables = Exact<{\n  input: Array<AtomCreateInput> | AtomCreateInput\n}>\n\nexport type CreateAtomsMutation = {\n  __typename?: 'Mutation'\n  createAtoms: {\n    __typename?: 'CreateAtomsMutationResponse'\n    info: {\n      __typename?: 'CreateInfo'\n      nodesCreated: number\n      relationshipsCreated: number\n    }\n    atoms: Array<{ __typename?: 'Atom'; id: string }>\n  }\n}\n\nexport type DeleteAtomsMutationVariables = Exact<{\n  where: AtomWhere\n}>\n\nexport type DeleteAtomsMutation = {\n  __typename?: 'Mutation'\n  deleteAtoms: {\n    __typename?: 'DeleteInfo'\n    nodesDeleted: number\n    relationshipsDeleted: number\n  }\n}\n\nexport type GetAtomsQueryVariables = Exact<{\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n}>\n\nexport type GetAtomsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'AtomAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Atom' } & AtomFragment>\n}\n\nexport type GetAtomOptionsQueryVariables = Exact<{ [key: string]: never }>\n\nexport type GetAtomOptionsQuery = {\n  __typename?: 'Query'\n  atoms: Array<{\n    __typename?: 'Atom'\n    id: string\n    name: string\n    type: AtomType\n  }>\n}\n\nexport type UpdateAtomsMutationVariables = Exact<{\n  where?: InputMaybe<AtomWhere>\n  update?: InputMaybe<AtomUpdateInput>\n}>\n\nexport type UpdateAtomsMutation = {\n  __typename?: 'Mutation'\n  updateAtoms: {\n    __typename?: 'UpdateAtomsMutationResponse'\n    atoms: Array<{ __typename?: 'Atom'; id: string }>\n  }\n}\n\nexport type CreateComponentsMutationVariables = Exact<{\n  input: Array<ComponentCreateInput> | ComponentCreateInput\n}>\n\nexport type CreateComponentsMutation = {\n  __typename?: 'Mutation'\n  createComponents: {\n    __typename?: 'CreateComponentsMutationResponse'\n    components: Array<{ __typename?: 'Component'; id: string }>\n  }\n}\n\nexport type DeleteComponentsMutationVariables = Exact<{\n  where?: InputMaybe<ComponentWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}>\n\nexport type DeleteComponentsMutation = {\n  __typename?: 'Mutation'\n  deleteComponents: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type UpdateComponentsMutationVariables = Exact<{\n  where?: InputMaybe<ComponentWhere>\n  update?: InputMaybe<ComponentUpdateInput>\n}>\n\nexport type UpdateComponentsMutation = {\n  __typename?: 'Mutation'\n  updateComponents: {\n    __typename?: 'UpdateComponentsMutationResponse'\n    components: Array<{ __typename?: 'Component'; id: string }>\n  }\n}\n\nexport type GetComponentsQueryVariables = Exact<{\n  options?: InputMaybe<ComponentOptions>\n  where?: InputMaybe<ComponentWhere>\n}>\n\nexport type GetComponentsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'ComponentAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Component' } & RenderedComponentFragment>\n}\n\nexport type GetDomainsQueryVariables = Exact<{\n  options?: InputMaybe<DomainOptions>\n  where?: InputMaybe<DomainWhere>\n}>\n\nexport type GetDomainsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'DomainAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Domain' } & DomainFragment>\n}\n\nexport type CreateDomainsMutationVariables = Exact<{\n  input: Array<DomainCreateInput> | DomainCreateInput\n}>\n\nexport type CreateDomainsMutation = {\n  __typename?: 'Mutation'\n  createDomains: {\n    __typename?: 'CreateDomainsMutationResponse'\n    domains: Array<{ __typename?: 'Domain'; id: string }>\n  }\n}\n\nexport type UpdateDomainsMutationVariables = Exact<{\n  where: DomainWhere\n  update: DomainUpdateInput\n}>\n\nexport type UpdateDomainsMutation = {\n  __typename?: 'Mutation'\n  updateDomains: {\n    __typename?: 'UpdateDomainsMutationResponse'\n    domains: Array<{ __typename?: 'Domain'; id: string }>\n  }\n}\n\nexport type DeleteDomainsMutationVariables = Exact<{\n  where: DomainWhere\n}>\n\nexport type DeleteDomainsMutation = {\n  __typename?: 'Mutation'\n  deleteDomains: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type CreateElementsMutationVariables = Exact<{\n  input: Array<ElementCreateInput> | ElementCreateInput\n}>\n\nexport type CreateElementsMutation = {\n  __typename?: 'Mutation'\n  createElements: {\n    __typename?: 'CreateElementsMutationResponse'\n    elements: Array<{ __typename?: 'Element'; id: string }>\n  }\n}\n\nexport type DeleteElementsMutationVariables = Exact<{\n  where: ElementWhere\n  delete?: InputMaybe<ElementDeleteInput>\n}>\n\nexport type DeleteElementsMutation = {\n  __typename?: 'Mutation'\n  deleteElements: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type UpdateElementsMutationVariables = Exact<{\n  where?: InputMaybe<ElementWhere>\n  update?: InputMaybe<ElementUpdateInput>\n}>\n\nexport type UpdateElementsMutation = {\n  __typename?: 'Mutation'\n  updateElements: {\n    __typename?: 'UpdateElementsMutationResponse'\n    elements: Array<{ __typename?: 'Element'; id: string }>\n  }\n}\n\nexport type GetElementsQueryVariables = Exact<{\n  options?: InputMaybe<ElementOptions>\n  where?: InputMaybe<ElementWhere>\n}>\n\nexport type GetElementsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'ElementAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Element' } & ElementFragment>\n}\n\nexport type CreateHooksMutationVariables = Exact<{\n  input: Array<HookCreateInput> | HookCreateInput\n}>\n\nexport type CreateHooksMutation = {\n  __typename?: 'Mutation'\n  createHooks: {\n    __typename?: 'CreateHooksMutationResponse'\n    hooks: Array<{ __typename?: 'Hook' } & HookFragment>\n  }\n}\n\nexport type DeleteHooksMutationVariables = Exact<{\n  where: HookWhere\n}>\n\nexport type DeleteHooksMutation = {\n  __typename?: 'Mutation'\n  deleteHooks: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type CreatePagesMutationVariables = Exact<{\n  input: Array<PageCreateInput> | PageCreateInput\n}>\n\nexport type CreatePagesMutation = {\n  __typename?: 'Mutation'\n  createPages: {\n    __typename?: 'CreatePagesMutationResponse'\n    pages: Array<{ __typename?: 'Page'; id: string }>\n  }\n}\n\nexport type DeletePagesMutationVariables = Exact<{\n  where?: InputMaybe<PageWhere>\n  delete?: InputMaybe<PageDeleteInput>\n}>\n\nexport type DeletePagesMutation = {\n  __typename?: 'Mutation'\n  deletePages: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type UpdatePagesMutationVariables = Exact<{\n  where?: InputMaybe<PageWhere>\n  update?: InputMaybe<PageUpdateInput>\n}>\n\nexport type UpdatePagesMutation = {\n  __typename?: 'Mutation'\n  updatePages: {\n    __typename?: 'UpdatePagesMutationResponse'\n    pages: Array<{ __typename?: 'Page'; id: string }>\n  }\n}\n\nexport type GetPagesQueryVariables = Exact<{\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}>\n\nexport type GetPagesQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'PageAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Page' } & PageFragment>\n}\n\nexport type GetRenderedPageAndCommonAppDataQueryVariables = Exact<{\n  appId: Scalars['ID']['input']\n  pageId: Scalars['ID']['input']\n}>\n\nexport type GetRenderedPageAndCommonAppDataQuery = {\n  __typename?: 'Query'\n  apps: Array<{ __typename?: 'App' } & PageBuilderAppFragment>\n  resources: Array<{ __typename?: 'Resource' } & ResourceFragment>\n}\n\nexport type GetRenderedPageQueryVariables = Exact<{\n  pageId: Scalars['ID']['input']\n}>\n\nexport type GetRenderedPageQuery = {\n  __typename?: 'Query'\n  pages: Array<{ __typename?: 'Page' } & BuilderPageFragment>\n}\n\nexport type CreatePropsMutationVariables = Exact<{\n  input: Array<PropCreateInput> | PropCreateInput\n}>\n\nexport type CreatePropsMutation = {\n  __typename?: 'Mutation'\n  createProps: {\n    __typename?: 'CreatePropsMutationResponse'\n    props: Array<{ __typename?: 'Prop'; id: string }>\n  }\n}\n\nexport type UpdatePropsMutationVariables = Exact<{\n  where?: InputMaybe<PropWhere>\n  update?: InputMaybe<PropUpdateInput>\n}>\n\nexport type UpdatePropsMutation = {\n  __typename?: 'Mutation'\n  updateProps: {\n    __typename?: 'UpdatePropsMutationResponse'\n    props: Array<{ __typename?: 'Prop'; id: string }>\n  }\n}\n\nexport type DeletePropsMutationVariables = Exact<{\n  where: PropWhere\n}>\n\nexport type DeletePropsMutation = {\n  __typename?: 'Mutation'\n  deleteProps: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type GetPropsQueryVariables = Exact<{\n  options?: InputMaybe<PropOptions>\n  where?: InputMaybe<PropWhere>\n}>\n\nexport type GetPropsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'PropAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Prop' } & PropFragment>\n}\n\nexport type GetResourcesQueryVariables = Exact<{\n  options?: InputMaybe<ResourceOptions>\n  where?: InputMaybe<ResourceWhere>\n}>\n\nexport type GetResourcesQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'ResourceAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Resource' } & ResourceFragment>\n}\n\nexport type CreateResourcesMutationVariables = Exact<{\n  input: Array<ResourceCreateInput> | ResourceCreateInput\n}>\n\nexport type CreateResourcesMutation = {\n  __typename?: 'Mutation'\n  createResources: {\n    __typename?: 'CreateResourcesMutationResponse'\n    resources: Array<{ __typename?: 'Resource'; id: string }>\n  }\n}\n\nexport type UpdateResourceMutationVariables = Exact<{\n  where?: InputMaybe<ResourceWhere>\n  update?: InputMaybe<ResourceUpdateInput>\n}>\n\nexport type UpdateResourceMutation = {\n  __typename?: 'Mutation'\n  updateResources: {\n    __typename?: 'UpdateResourcesMutationResponse'\n    resources: Array<{ __typename?: 'Resource'; id: string }>\n  }\n}\n\nexport type DeleteResourcesMutationVariables = Exact<{\n  where?: InputMaybe<ResourceWhere>\n}>\n\nexport type DeleteResourcesMutation = {\n  __typename?: 'Mutation'\n  deleteResources: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type CreateCodeActionsMutationVariables = Exact<{\n  input: Array<CodeActionCreateInput> | CodeActionCreateInput\n}>\n\nexport type CreateCodeActionsMutation = {\n  __typename?: 'Mutation'\n  createCodeActions: {\n    __typename?: 'CreateCodeActionsMutationResponse'\n    codeActions: Array<{ __typename?: 'CodeAction'; id: string }>\n  }\n}\n\nexport type CreateApiActionsMutationVariables = Exact<{\n  input: Array<ApiActionCreateInput> | ApiActionCreateInput\n}>\n\nexport type CreateApiActionsMutation = {\n  __typename?: 'Mutation'\n  createApiActions: {\n    __typename?: 'CreateApiActionsMutationResponse'\n    apiActions: Array<{ __typename?: 'ApiAction'; id: string }>\n  }\n}\n\nexport type DeleteCodeActionsMutationVariables = Exact<{\n  where: CodeActionWhere\n  delete?: InputMaybe<CodeActionDeleteInput>\n}>\n\nexport type DeleteCodeActionsMutation = {\n  __typename?: 'Mutation'\n  deleteCodeActions: {\n    __typename?: 'DeleteInfo'\n    nodesDeleted: number\n    relationshipsDeleted: number\n  }\n}\n\nexport type DeleteApiActionsMutationVariables = Exact<{\n  where: ApiActionWhere\n  delete?: InputMaybe<ApiActionDeleteInput>\n}>\n\nexport type DeleteApiActionsMutation = {\n  __typename?: 'Mutation'\n  deleteApiActions: {\n    __typename?: 'DeleteInfo'\n    nodesDeleted: number\n    relationshipsDeleted: number\n  }\n}\n\nexport type GetActionsQueryVariables = Exact<{\n  codeActionWhere?: InputMaybe<CodeActionWhere>\n  apiActionWhere?: InputMaybe<ApiActionWhere>\n}>\n\nexport type GetActionsQuery = {\n  __typename?: 'Query'\n  codeActions: Array<{ __typename?: 'CodeAction' } & Action_CodeAction_Fragment>\n  apiActions: Array<{ __typename?: 'ApiAction' } & Action_ApiAction_Fragment>\n}\n\nexport type CreateStoresMutationVariables = Exact<{\n  input: Array<StoreCreateInput> | StoreCreateInput\n}>\n\nexport type CreateStoresMutation = {\n  __typename?: 'Mutation'\n  createStores: {\n    __typename?: 'CreateStoresMutationResponse'\n    info: {\n      __typename?: 'CreateInfo'\n      nodesCreated: number\n      relationshipsCreated: number\n    }\n    stores: Array<{ __typename?: 'Store'; id: string }>\n  }\n}\n\nexport type DeleteStoresMutationVariables = Exact<{\n  where?: InputMaybe<StoreWhere>\n  delete?: InputMaybe<StoreDeleteInput>\n}>\n\nexport type DeleteStoresMutation = {\n  __typename?: 'Mutation'\n  deleteStores: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type GetStoresQueryVariables = Exact<{\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n}>\n\nexport type GetStoresQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'StoreAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Store' } & StoreFragment>\n}\n\nexport type UpdateStoresMutationVariables = Exact<{\n  where?: InputMaybe<StoreWhere>\n  update?: InputMaybe<StoreUpdateInput>\n}>\n\nexport type UpdateStoresMutation = {\n  __typename?: 'Mutation'\n  updateStores: {\n    __typename?: 'UpdateStoresMutationResponse'\n    stores: Array<{ __typename?: 'Store'; id: string }>\n  }\n}\n\nexport type UpdateCodeActionsMutationVariables = Exact<{\n  connect?: InputMaybe<CodeActionConnectInput>\n  create?: InputMaybe<CodeActionRelationInput>\n  delete?: InputMaybe<CodeActionDeleteInput>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  update?: InputMaybe<CodeActionUpdateInput>\n  where?: InputMaybe<CodeActionWhere>\n}>\n\nexport type UpdateCodeActionsMutation = {\n  __typename?: 'Mutation'\n  updateCodeActions: {\n    __typename?: 'UpdateCodeActionsMutationResponse'\n    codeActions: Array<{ __typename?: 'CodeAction'; id: string }>\n  }\n}\n\nexport type UpdateApiActionsMutationVariables = Exact<{\n  connect?: InputMaybe<ApiActionConnectInput>\n  create?: InputMaybe<ApiActionRelationInput>\n  delete?: InputMaybe<ApiActionDeleteInput>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  update?: InputMaybe<ApiActionUpdateInput>\n  where?: InputMaybe<ApiActionWhere>\n}>\n\nexport type UpdateApiActionsMutation = {\n  __typename?: 'Mutation'\n  updateApiActions: {\n    __typename?: 'UpdateApiActionsMutationResponse'\n    apiActions: Array<{ __typename?: 'ApiAction'; id: string }>\n  }\n}\n\nexport type CreateTagsMutationVariables = Exact<{\n  input: Array<TagCreateInput> | TagCreateInput\n}>\n\nexport type CreateTagsMutation = {\n  __typename?: 'Mutation'\n  createTags: {\n    __typename?: 'CreateTagsMutationResponse'\n    tags: Array<{ __typename?: 'Tag'; id: string }>\n  }\n}\n\nexport type UpdateTagsMutationVariables = Exact<{\n  where: TagWhere\n  update: TagUpdateInput\n}>\n\nexport type UpdateTagsMutation = {\n  __typename?: 'Mutation'\n  updateTags: {\n    __typename?: 'UpdateTagsMutationResponse'\n    tags: Array<{ __typename?: 'Tag'; id: string }>\n  }\n}\n\nexport type DeleteTagsMutationVariables = Exact<{\n  where: TagWhere\n}>\n\nexport type DeleteTagsMutation = {\n  __typename?: 'Mutation'\n  deleteTags: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type GetTagsQueryVariables = Exact<{\n  options?: InputMaybe<TagOptions>\n  where?: InputMaybe<TagWhere>\n}>\n\nexport type GetTagsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'TagAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Tag' } & TagFragment>\n}\n\nexport type CreatePrimitiveTypesMutationVariables = Exact<{\n  input: Array<PrimitiveTypeCreateInput> | PrimitiveTypeCreateInput\n}>\n\nexport type CreatePrimitiveTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreatePrimitiveTypesMutationResponse'\n    types: Array<{ __typename?: 'PrimitiveType'; id: string }>\n  }\n}\n\nexport type CreateArrayTypesMutationVariables = Exact<{\n  input: Array<ArrayTypeCreateInput> | ArrayTypeCreateInput\n}>\n\nexport type CreateArrayTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateArrayTypesMutationResponse'\n    types: Array<{ __typename?: 'ArrayType'; id: string }>\n  }\n}\n\nexport type CreateUnionTypesMutationVariables = Exact<{\n  input: Array<UnionTypeCreateInput> | UnionTypeCreateInput\n}>\n\nexport type CreateUnionTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateUnionTypesMutationResponse'\n    types: Array<{ __typename?: 'UnionType'; id: string }>\n  }\n}\n\nexport type CreateInterfaceTypesMutationVariables = Exact<{\n  input: Array<InterfaceTypeCreateInput> | InterfaceTypeCreateInput\n}>\n\nexport type CreateInterfaceTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateInterfaceTypesMutationResponse'\n    types: Array<{ __typename?: 'InterfaceType'; id: string }>\n  }\n}\n\nexport type CreateElementTypesMutationVariables = Exact<{\n  input: Array<ElementTypeCreateInput> | ElementTypeCreateInput\n}>\n\nexport type CreateElementTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateElementTypesMutationResponse'\n    types: Array<{ __typename?: 'ElementType'; id: string }>\n  }\n}\n\nexport type CreateRenderPropTypesMutationVariables = Exact<{\n  input: Array<RenderPropTypeCreateInput> | RenderPropTypeCreateInput\n}>\n\nexport type CreateRenderPropTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateRenderPropTypesMutationResponse'\n    types: Array<{ __typename?: 'RenderPropType'; id: string }>\n  }\n}\n\nexport type CreateReactNodeTypesMutationVariables = Exact<{\n  input: Array<ReactNodeTypeCreateInput> | ReactNodeTypeCreateInput\n}>\n\nexport type CreateReactNodeTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateReactNodeTypesMutationResponse'\n    types: Array<{ __typename?: 'ReactNodeType'; id: string }>\n  }\n}\n\nexport type CreateEnumTypesMutationVariables = Exact<{\n  input: Array<EnumTypeCreateInput> | EnumTypeCreateInput\n}>\n\nexport type CreateEnumTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateEnumTypesMutationResponse'\n    types: Array<{ __typename?: 'EnumType'; id: string }>\n  }\n}\n\nexport type CreateLambdaTypesMutationVariables = Exact<{\n  input: Array<LambdaTypeCreateInput> | LambdaTypeCreateInput\n}>\n\nexport type CreateLambdaTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateLambdaTypesMutationResponse'\n    types: Array<{ __typename?: 'LambdaType'; id: string }>\n  }\n}\n\nexport type CreatePageTypesMutationVariables = Exact<{\n  input: Array<PageTypeCreateInput> | PageTypeCreateInput\n}>\n\nexport type CreatePageTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreatePageTypesMutationResponse'\n    types: Array<{ __typename?: 'PageType'; id: string }>\n  }\n}\n\nexport type CreateAppTypesMutationVariables = Exact<{\n  input: Array<AppTypeCreateInput> | AppTypeCreateInput\n}>\n\nexport type CreateAppTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateAppTypesMutationResponse'\n    types: Array<{ __typename?: 'AppType'; id: string }>\n  }\n}\n\nexport type CreateActionTypesMutationVariables = Exact<{\n  input: Array<ActionTypeCreateInput> | ActionTypeCreateInput\n}>\n\nexport type CreateActionTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateActionTypesMutationResponse'\n    types: Array<{ __typename?: 'ActionType'; id: string }>\n  }\n}\n\nexport type CreateCodeMirrorTypesMutationVariables = Exact<{\n  input: Array<CodeMirrorTypeCreateInput> | CodeMirrorTypeCreateInput\n}>\n\nexport type CreateCodeMirrorTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'CreateCodeMirrorTypesMutationResponse'\n    types: Array<{ __typename?: 'CodeMirrorType'; id: string }>\n  }\n}\n\nexport type DeletePrimitiveTypesMutationVariables = Exact<{\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}>\n\nexport type DeletePrimitiveTypesMutation = {\n  __typename?: 'Mutation'\n  deletePrimitiveTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteArrayTypesMutationVariables = Exact<{\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  where?: InputMaybe<ArrayTypeWhere>\n}>\n\nexport type DeleteArrayTypesMutation = {\n  __typename?: 'Mutation'\n  deleteArrayTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteReactNodeTypesMutationVariables = Exact<{\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}>\n\nexport type DeleteReactNodeTypesMutation = {\n  __typename?: 'Mutation'\n  deleteReactNodeTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteUnionTypesMutationVariables = Exact<{\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  where?: InputMaybe<UnionTypeWhere>\n}>\n\nexport type DeleteUnionTypesMutation = {\n  __typename?: 'Mutation'\n  deleteUnionTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteInterfaceTypesMutationVariables = Exact<{\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  where?: InputMaybe<InterfaceTypeWhere>\n}>\n\nexport type DeleteInterfaceTypesMutation = {\n  __typename?: 'Mutation'\n  deleteInterfaceTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteElementTypesMutationVariables = Exact<{\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  where?: InputMaybe<ElementTypeWhere>\n}>\n\nexport type DeleteElementTypesMutation = {\n  __typename?: 'Mutation'\n  deleteElementTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteRenderPropTypesMutationVariables = Exact<{\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  where?: InputMaybe<RenderPropTypeWhere>\n}>\n\nexport type DeleteRenderPropTypesMutation = {\n  __typename?: 'Mutation'\n  deleteRenderPropTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteEnumTypesMutationVariables = Exact<{\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  where?: InputMaybe<EnumTypeWhere>\n}>\n\nexport type DeleteEnumTypesMutation = {\n  __typename?: 'Mutation'\n  deleteEnumTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n  deleteEnumTypeValues: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type DeleteLambdaTypesMutationVariables = Exact<{\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  where?: InputMaybe<LambdaTypeWhere>\n}>\n\nexport type DeleteLambdaTypesMutation = {\n  __typename?: 'Mutation'\n  deleteLambdaTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeletePageTypesMutationVariables = Exact<{\n  delete?: InputMaybe<PageTypeDeleteInput>\n  where?: InputMaybe<PageTypeWhere>\n}>\n\nexport type DeletePageTypesMutation = {\n  __typename?: 'Mutation'\n  deletePageTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteAppTypesMutationVariables = Exact<{\n  delete?: InputMaybe<AppTypeDeleteInput>\n  where?: InputMaybe<AppTypeWhere>\n}>\n\nexport type DeleteAppTypesMutation = {\n  __typename?: 'Mutation'\n  deleteAppTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteActionTypesMutationVariables = Exact<{\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  where?: InputMaybe<ActionTypeWhere>\n}>\n\nexport type DeleteActionTypesMutation = {\n  __typename?: 'Mutation'\n  deleteActionTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type DeleteCodeMirrorTypesMutationVariables = Exact<{\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}>\n\nexport type DeleteCodeMirrorTypesMutation = {\n  __typename?: 'Mutation'\n  deleteCodeMirrorTypes: {\n    __typename?: 'DeleteInfo'\n    relationshipsDeleted: number\n    nodesDeleted: number\n  }\n}\n\nexport type CreateFieldsMutationVariables = Exact<{\n  input: Array<FieldCreateInput> | FieldCreateInput\n}>\n\nexport type CreateFieldsMutation = {\n  __typename?: 'Mutation'\n  createFields: {\n    __typename?: 'CreateFieldsMutationResponse'\n    fields: Array<{ __typename?: 'Field'; id: string }>\n  }\n}\n\nexport type UpdateFieldsMutationVariables = Exact<{\n  where: FieldWhere\n  update: FieldUpdateInput\n}>\n\nexport type UpdateFieldsMutation = {\n  __typename?: 'Mutation'\n  updateFields: {\n    __typename?: 'UpdateFieldsMutationResponse'\n    fields: Array<{ __typename?: 'Field'; id: string }>\n  }\n}\n\nexport type DeleteFieldsMutationVariables = Exact<{\n  where: FieldWhere\n}>\n\nexport type DeleteFieldsMutation = {\n  __typename?: 'Mutation'\n  deleteFields: { __typename?: 'DeleteInfo'; nodesDeleted: number }\n}\n\nexport type GetFieldsQueryVariables = Exact<{\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n}>\n\nexport type GetFieldsQuery = {\n  __typename?: 'Query'\n  aggregate: { __typename?: 'FieldAggregateSelection'; count: number }\n  items: Array<{ __typename?: 'Field' } & FieldFragment>\n}\n\nexport type GetBaseTypesQueryVariables = Exact<{\n  options?: InputMaybe<GetBaseTypesOptions>\n}>\n\nexport type GetBaseTypesQuery = {\n  __typename?: 'Query'\n  baseTypes: {\n    __typename?: 'GetBaseTypesReturn'\n    totalCount: number\n    items: Array<{ __typename?: 'BaseType' } & BaseType_BaseType_Fragment>\n  }\n}\n\nexport type GetTypesQueryVariables = Exact<{\n  ids?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>\n}>\n\nexport type GetTypesQuery = {\n  __typename?: 'Query'\n  primitiveTypes: Array<\n    { __typename?: 'PrimitiveType' } & Type_PrimitiveType_Fragment\n  >\n  arrayTypes: Array<{ __typename?: 'ArrayType' } & Type_ArrayType_Fragment>\n  unionTypes: Array<{ __typename?: 'UnionType' } & Type_UnionType_Fragment>\n  interfaceTypes: Array<\n    { __typename?: 'InterfaceType' } & Type_InterfaceType_Fragment\n  >\n  elementTypes: Array<\n    { __typename?: 'ElementType' } & Type_ElementType_Fragment\n  >\n  renderPropTypes: Array<\n    { __typename?: 'RenderPropType' } & Type_RenderPropType_Fragment\n  >\n  reactNodeTypes: Array<\n    { __typename?: 'ReactNodeType' } & Type_ReactNodeType_Fragment\n  >\n  enumTypes: Array<{ __typename?: 'EnumType' } & Type_EnumType_Fragment>\n  lambdaTypes: Array<{ __typename?: 'LambdaType' } & Type_LambdaType_Fragment>\n  pageTypes: Array<{ __typename?: 'PageType' } & Type_PageType_Fragment>\n  appTypes: Array<{ __typename?: 'AppType' } & Type_AppType_Fragment>\n  actionTypes: Array<{ __typename?: 'ActionType' } & Type_ActionType_Fragment>\n  codeMirrorTypes: Array<\n    { __typename?: 'CodeMirrorType' } & Type_CodeMirrorType_Fragment\n  >\n}\n\nexport type GetDescendantsQueryVariables = Exact<{\n  ids?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>\n}>\n\nexport type GetDescendantsQuery = {\n  __typename?: 'Query'\n  arrayTypes: Array<{\n    __typename?: 'ArrayType'\n    descendantTypesIds: Array<string>\n  }>\n  unionTypes: Array<{\n    __typename?: 'UnionType'\n    descendantTypesIds: Array<string>\n  }>\n  interfaceTypes: Array<{\n    __typename?: 'InterfaceType'\n    descendantTypesIds: Array<string>\n  }>\n}\n\nexport type GetPrimitiveTypesQueryVariables = Exact<{\n  options?: InputMaybe<PrimitiveTypeOptions>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}>\n\nexport type GetPrimitiveTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'PrimitiveType' } & Type_PrimitiveType_Fragment>\n}\n\nexport type GetArrayTypesQueryVariables = Exact<{\n  options?: InputMaybe<ArrayTypeOptions>\n  where?: InputMaybe<ArrayTypeWhere>\n}>\n\nexport type GetArrayTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'ArrayType' } & Type_ArrayType_Fragment>\n}\n\nexport type GetUnionTypesQueryVariables = Exact<{\n  options?: InputMaybe<UnionTypeOptions>\n  where?: InputMaybe<UnionTypeWhere>\n}>\n\nexport type GetUnionTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'UnionType' } & Type_UnionType_Fragment>\n}\n\nexport type GetInterfaceTypesQueryVariables = Exact<{\n  options?: InputMaybe<InterfaceTypeOptions>\n  where?: InputMaybe<InterfaceTypeWhere>\n}>\n\nexport type GetInterfaceTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'InterfaceType' } & Type_InterfaceType_Fragment>\n}\n\nexport type GetElementTypesQueryVariables = Exact<{\n  options?: InputMaybe<ElementTypeOptions>\n  where?: InputMaybe<ElementTypeWhere>\n}>\n\nexport type GetElementTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'ElementType' } & Type_ElementType_Fragment>\n}\n\nexport type GetRenderPropTypesQueryVariables = Exact<{\n  options?: InputMaybe<RenderPropTypeOptions>\n  where?: InputMaybe<RenderPropTypeWhere>\n}>\n\nexport type GetRenderPropTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'RenderPropType' } & Type_RenderPropType_Fragment>\n}\n\nexport type GetReactNodeTypesQueryVariables = Exact<{\n  options?: InputMaybe<ReactNodeTypeOptions>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}>\n\nexport type GetReactNodeTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'ReactNodeType' } & ReactNodeTypeFragment>\n}\n\nexport type GetEnumTypesQueryVariables = Exact<{\n  options?: InputMaybe<EnumTypeOptions>\n  where?: InputMaybe<EnumTypeWhere>\n}>\n\nexport type GetEnumTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'EnumType' } & Type_EnumType_Fragment>\n}\n\nexport type GetLambdaTypesQueryVariables = Exact<{\n  options?: InputMaybe<LambdaTypeOptions>\n  where?: InputMaybe<LambdaTypeWhere>\n}>\n\nexport type GetLambdaTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'LambdaType' } & Type_LambdaType_Fragment>\n}\n\nexport type GetPageTypesQueryVariables = Exact<{\n  options?: InputMaybe<PageTypeOptions>\n  where?: InputMaybe<PageTypeWhere>\n}>\n\nexport type GetPageTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'PageType' } & Type_PageType_Fragment>\n}\n\nexport type GetAppTypesQueryVariables = Exact<{\n  options?: InputMaybe<AppTypeOptions>\n  where?: InputMaybe<AppTypeWhere>\n}>\n\nexport type GetAppTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'AppType' } & Type_AppType_Fragment>\n}\n\nexport type GetActionTypesQueryVariables = Exact<{\n  options?: InputMaybe<ActionTypeOptions>\n  where?: InputMaybe<ActionTypeWhere>\n}>\n\nexport type GetActionTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'ActionType' } & Type_ActionType_Fragment>\n}\n\nexport type GetCodeMirrorTypesQueryVariables = Exact<{\n  options?: InputMaybe<CodeMirrorTypeOptions>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}>\n\nexport type GetCodeMirrorTypesQuery = {\n  __typename?: 'Query'\n  types: Array<{ __typename?: 'CodeMirrorType' } & Type_CodeMirrorType_Fragment>\n}\n\nexport type GetTypeOptionsQueryVariables = Exact<{ [key: string]: never }>\n\nexport type GetTypeOptionsQuery = {\n  __typename?: 'Query'\n  baseTypes: {\n    __typename?: 'GetBaseTypesReturn'\n    items: Array<{\n      __typename?: 'BaseType'\n      id: string\n      name: string\n      kind: TypeKind\n    }>\n  }\n}\n\nexport type InterfaceForm_GetAppsQueryVariables = Exact<{\n  options?: InputMaybe<AppOptions>\n  where?: InputMaybe<AppWhere>\n}>\n\nexport type InterfaceForm_GetAppsQuery = {\n  __typename?: 'Query'\n  apps: Array<{ __typename?: 'App'; id: string; name: string }>\n}\n\nexport type InterfaceForm_GetAtomsQueryVariables = Exact<{\n  options?: InputMaybe<AtomOptions>\n  where?: InputMaybe<AtomWhere>\n}>\n\nexport type InterfaceForm_GetAtomsQuery = {\n  __typename?: 'Query'\n  atoms: Array<{\n    __typename?: 'Atom'\n    id: string\n    name: string\n    type: AtomType\n  }>\n}\n\nexport type InterfaceForm_GetActionsQueryVariables = Exact<{\n  appId?: InputMaybe<Scalars['ID']['input']>\n}>\n\nexport type InterfaceForm_GetActionsQuery = {\n  __typename?: 'Query'\n  codeActions: Array<{ __typename?: 'CodeAction'; id: string; name: string }>\n  apiActions: Array<{ __typename?: 'ApiAction'; id: string; name: string }>\n}\n\nexport type InterfaceForm_GetStoresQueryVariables = Exact<{\n  options?: InputMaybe<StoreOptions>\n  where?: InputMaybe<StoreWhere>\n}>\n\nexport type InterfaceForm_GetStoresQuery = {\n  __typename?: 'Query'\n  stores: Array<{ __typename?: 'Store'; id: string; name: string }>\n}\n\nexport type InterfaceForm_GetResourceQueryVariables = Exact<{\n  options?: InputMaybe<ResourceOptions>\n  where?: InputMaybe<ResourceWhere>\n}>\n\nexport type InterfaceForm_GetResourceQuery = {\n  __typename?: 'Query'\n  resources: Array<{ __typename?: 'Resource'; id: string; name: string }>\n}\n\nexport type InterfaceForm_GetPagesQueryVariables = Exact<{\n  options?: InputMaybe<PageOptions>\n  where?: InputMaybe<PageWhere>\n}>\n\nexport type InterfaceForm_GetPagesQuery = {\n  __typename?: 'Query'\n  pages: Array<{ __typename?: 'Page'; id: string; name: string }>\n}\n\nexport type IsTypeDescendantOfQueryVariables = Exact<{\n  descendantTypeId: Scalars['ID']['input']\n  parentTypeId: Scalars['ID']['input']\n}>\n\nexport type IsTypeDescendantOfQuery = {\n  __typename?: 'Query'\n  isTypeDescendantOf?: boolean | null\n}\n\nexport type GetTypeReferencesQueryVariables = Exact<{\n  typeId: Scalars['ID']['input']\n}>\n\nexport type GetTypeReferencesQuery = {\n  __typename?: 'Query'\n  getTypeReferences?: Array<{\n    __typename?: 'TypeReference'\n    name: string\n    label: string\n  }> | null\n}\n\nexport type UpdatePrimitiveTypesMutationVariables = Exact<{\n  connect?: InputMaybe<PrimitiveTypeConnectInput>\n  create?: InputMaybe<PrimitiveTypeRelationInput>\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  disconnect?: InputMaybe<PrimitiveTypeDisconnectInput>\n  update?: InputMaybe<PrimitiveTypeUpdateInput>\n  where?: InputMaybe<PrimitiveTypeWhere>\n}>\n\nexport type UpdatePrimitiveTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdatePrimitiveTypesMutationResponse'\n    types: Array<{ __typename?: 'PrimitiveType'; id: string }>\n  }\n}\n\nexport type UpdateArrayTypesMutationVariables = Exact<{\n  connect?: InputMaybe<ArrayTypeConnectInput>\n  create?: InputMaybe<ArrayTypeRelationInput>\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  disconnect?: InputMaybe<ArrayTypeDisconnectInput>\n  update?: InputMaybe<ArrayTypeUpdateInput>\n  where?: InputMaybe<ArrayTypeWhere>\n}>\n\nexport type UpdateArrayTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateArrayTypesMutationResponse'\n    types: Array<{ __typename?: 'ArrayType'; id: string }>\n  }\n}\n\nexport type UpdateUnionTypesMutationVariables = Exact<{\n  connect?: InputMaybe<UnionTypeConnectInput>\n  create?: InputMaybe<UnionTypeRelationInput>\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  disconnect?: InputMaybe<UnionTypeDisconnectInput>\n  update?: InputMaybe<UnionTypeUpdateInput>\n  where?: InputMaybe<UnionTypeWhere>\n}>\n\nexport type UpdateUnionTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateUnionTypesMutationResponse'\n    types: Array<{ __typename?: 'UnionType'; id: string }>\n  }\n}\n\nexport type UpdateInterfaceTypesMutationVariables = Exact<{\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  create?: InputMaybe<InterfaceTypeRelationInput>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  update?: InputMaybe<InterfaceTypeUpdateInput>\n  where?: InputMaybe<InterfaceTypeWhere>\n}>\n\nexport type UpdateInterfaceTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateInterfaceTypesMutationResponse'\n    types: Array<{ __typename?: 'InterfaceType'; id: string }>\n  }\n}\n\nexport type UpdateReactNodeTypesMutationVariables = Exact<{\n  connect?: InputMaybe<ReactNodeTypeConnectInput>\n  create?: InputMaybe<ReactNodeTypeRelationInput>\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  disconnect?: InputMaybe<ReactNodeTypeDisconnectInput>\n  update?: InputMaybe<ReactNodeTypeUpdateInput>\n  where?: InputMaybe<ReactNodeTypeWhere>\n}>\n\nexport type UpdateReactNodeTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateReactNodeTypesMutationResponse'\n    types: Array<{ __typename?: 'ReactNodeType'; id: string }>\n  }\n}\n\nexport type UpdateElementTypesMutationVariables = Exact<{\n  connect?: InputMaybe<ElementTypeConnectInput>\n  create?: InputMaybe<ElementTypeRelationInput>\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  disconnect?: InputMaybe<ElementTypeDisconnectInput>\n  update?: InputMaybe<ElementTypeUpdateInput>\n  where?: InputMaybe<ElementTypeWhere>\n}>\n\nexport type UpdateElementTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateElementTypesMutationResponse'\n    types: Array<{ __typename?: 'ElementType'; id: string }>\n  }\n}\n\nexport type UpdateRenderPropTypesMutationVariables = Exact<{\n  connect?: InputMaybe<RenderPropTypeConnectInput>\n  create?: InputMaybe<RenderPropTypeRelationInput>\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  disconnect?: InputMaybe<RenderPropTypeDisconnectInput>\n  update?: InputMaybe<RenderPropTypeUpdateInput>\n  where?: InputMaybe<RenderPropTypeWhere>\n}>\n\nexport type UpdateRenderPropTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateRenderPropTypesMutationResponse'\n    types: Array<{ __typename?: 'RenderPropType'; id: string }>\n  }\n}\n\nexport type UpdateEnumTypesMutationVariables = Exact<{\n  connect?: InputMaybe<EnumTypeConnectInput>\n  create?: InputMaybe<EnumTypeRelationInput>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n  update?: InputMaybe<EnumTypeUpdateInput>\n  where?: InputMaybe<EnumTypeWhere>\n}>\n\nexport type UpdateEnumTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateEnumTypesMutationResponse'\n    types: Array<{ __typename?: 'EnumType'; id: string }>\n  }\n}\n\nexport type UpdateLambdaTypesMutationVariables = Exact<{\n  connect?: InputMaybe<LambdaTypeConnectInput>\n  create?: InputMaybe<LambdaTypeRelationInput>\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  disconnect?: InputMaybe<LambdaTypeDisconnectInput>\n  update?: InputMaybe<LambdaTypeUpdateInput>\n  where?: InputMaybe<LambdaTypeWhere>\n}>\n\nexport type UpdateLambdaTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateLambdaTypesMutationResponse'\n    types: Array<{ __typename?: 'LambdaType'; id: string }>\n  }\n}\n\nexport type UpdatePageTypesMutationVariables = Exact<{\n  connect?: InputMaybe<PageTypeConnectInput>\n  create?: InputMaybe<PageTypeRelationInput>\n  delete?: InputMaybe<PageTypeDeleteInput>\n  disconnect?: InputMaybe<PageTypeDisconnectInput>\n  update?: InputMaybe<PageTypeUpdateInput>\n  where?: InputMaybe<PageTypeWhere>\n}>\n\nexport type UpdatePageTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdatePageTypesMutationResponse'\n    types: Array<{ __typename?: 'PageType'; id: string }>\n  }\n}\n\nexport type UpdateAppTypesMutationVariables = Exact<{\n  connect?: InputMaybe<AppTypeConnectInput>\n  create?: InputMaybe<AppTypeRelationInput>\n  delete?: InputMaybe<AppTypeDeleteInput>\n  disconnect?: InputMaybe<AppTypeDisconnectInput>\n  update?: InputMaybe<AppTypeUpdateInput>\n  where?: InputMaybe<AppTypeWhere>\n}>\n\nexport type UpdateAppTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateAppTypesMutationResponse'\n    types: Array<{ __typename?: 'AppType'; id: string }>\n  }\n}\n\nexport type UpdateActionTypesMutationVariables = Exact<{\n  connect?: InputMaybe<ActionTypeConnectInput>\n  create?: InputMaybe<ActionTypeRelationInput>\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  disconnect?: InputMaybe<ActionTypeDisconnectInput>\n  update?: InputMaybe<ActionTypeUpdateInput>\n  where?: InputMaybe<ActionTypeWhere>\n}>\n\nexport type UpdateActionTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateActionTypesMutationResponse'\n    types: Array<{ __typename?: 'ActionType'; id: string }>\n  }\n}\n\nexport type UpdateCodeMirrorTypesMutationVariables = Exact<{\n  connect?: InputMaybe<CodeMirrorTypeConnectInput>\n  create?: InputMaybe<CodeMirrorTypeRelationInput>\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  disconnect?: InputMaybe<CodeMirrorTypeDisconnectInput>\n  update?: InputMaybe<CodeMirrorTypeUpdateInput>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}>\n\nexport type UpdateCodeMirrorTypesMutation = {\n  __typename?: 'Mutation'\n  types: {\n    __typename?: 'UpdateCodeMirrorTypesMutationResponse'\n    types: Array<{ __typename?: 'CodeMirrorType'; id: string }>\n  }\n}\n\nexport type GetUsersQueryVariables = Exact<{\n  where?: InputMaybe<UserWhere>\n}>\n\nexport type GetUsersQuery = {\n  __typename?: 'Query'\n  users: Array<{ __typename?: 'User' } & UserFragment>\n}\n\nexport type CreateUserMutationVariables = Exact<{\n  input: Array<UserCreateInput> | UserCreateInput\n}>\n\nexport type CreateUserMutation = {\n  __typename?: 'Mutation'\n  createUsers: {\n    __typename?: 'CreateUsersMutationResponse'\n    users: Array<{ __typename?: 'User'; id: string; email: string }>\n  }\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IOwner } from './user.interface'\n\nexport interface IAppDTO extends IOwner {\n  domains?: Array<IEntity>\n  id: string\n  name: string\n  pages?: Array<IEntity>\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IAtomType } from './atom-type.enum'\nimport type { IOwner } from './user.interface'\n\nexport interface IAtomDTO extends IOwner {\n  api: IEntity\n  externalCssSource?: string | null\n  externalJsSource?: string | null\n  externalSourceType?: string | null\n  icon?: string | null\n  id: string\n  name: string\n  requiredParents?: Array<IEntity>\n  suggestedChildren?: Array<IEntity>\n  tags?: Array<IEntity>\n  type: IAtomType\n}\n","import type { FilterRecordKeys } from '@codelab/shared/abstract/types'\nimport type { IAtomType } from './atom-type.enum'\n\n/**\n * This is the record we still extend\n *\n * We provide a prefix to get the subset of records\n */\nexport type IAtomBaseRecords<\n  AtomData = unknown,\n  Prefix extends string = '',\n> = FilterRecordKeys<Record<IAtomType, AtomData>, Prefix>\n","import { AtomType } from '@codelab/shared/abstract/codegen'\n\n/**\n * We create the enum here then import into Neo4j graphql schema so we can get linting\n *\n *  @deprecated We have to use the copy from codegen, otherwise they don't match up\n */\nexport enum __AtomType {\n  // Ant Design\n  AntDesignAffix = 'AntDesignAffix',\n  AntDesignAlert = 'AntDesignAlert',\n  AntDesignAnchor = 'AntDesignAnchor',\n  AntDesignAnchorLink = 'AntDesignAnchorLink',\n  AntDesignAutoComplete = 'AntDesignAutoComplete',\n  AntDesignAvatar = 'AntDesignAvatar',\n  AntDesignBackTop = 'AntDesignBackTop',\n  AntDesignBadge = 'AntDesignBadge',\n  AntDesignBreadcrumb = 'AntDesignBreadcrumb',\n  AntDesignBreadcrumbItem = 'AntDesignBreadcrumbItem',\n  AntDesignCard = 'AntDesignCard',\n  AntDesignCardGrid = 'AntDesignCardGrid',\n  AntDesignBreadcrumbSeparator = 'AntDesignBreadcrumbSeparator',\n  AntDesignButton = 'AntDesignButton',\n  AntDesignCalendar = 'AntDesignCalendar',\n  AntDesignCollapsePanel = 'AntDesignCollapsePanel',\n  AntDesignComment = 'AntDesignComment',\n  AntDesignConfigProvider = 'AntDesignConfigProvider',\n  AntDesignDatePicker = 'AntDesignDatePicker',\n  AntDesignDescriptions = 'AntDesignDescriptions',\n  AntDesignCheckbox = 'AntDesignCheckbox',\n  AntDesignCheckboxGroup = 'AntDesignCheckboxGroup',\n  AntDesignCollapse = 'AntDesignCollapse',\n  AntDesignDropdown = 'AntDesignDropdown',\n  AntDesignCardMeta = 'AntDesignCardMeta',\n  AntDesignForm = 'AntDesignForm',\n  AntDesignFormErrorList = 'AntDesignFormErrorList',\n  AntDesignFormItem = 'AntDesignFormItem',\n  AntDesignDivider = 'AntDesignDivider',\n  AntDesignDrawer = 'AntDesignDrawer',\n  AntDesignFormProvider = 'AntDesignFormProvider',\n  AntDesignDropdownButton = 'AntDesignDropdownButton',\n  AntDesignEmpty = 'AntDesignEmpty',\n  AntDesignImage = 'AntDesignImage',\n  AntDesignDescriptionsItem = 'AntDesignDescriptionsItem',\n  AntDesignFormList = 'AntDesignFormList',\n  AntDesignCascader = 'AntDesignCascader',\n  AntDesignLayoutFooter = 'AntDesignLayoutFooter',\n  AntDesignLayoutHeader = 'AntDesignLayoutHeader',\n  AntDesignLayoutSider = 'AntDesignLayoutSider',\n  AntDesignIcon = 'AntDesignIcon',\n  AntDesignInput = 'AntDesignInput',\n  AntDesignInputNumber = 'AntDesignInputNumber',\n  AntDesignLayout = 'AntDesignLayout',\n  AntDesignLayoutContent = 'AntDesignLayoutContent',\n  AntDesignMentionsOption = 'AntDesignMentionsOption',\n  AntDesignMenu = 'AntDesignMenu',\n  AntDesignGridRow = 'AntDesignGridRow',\n  AntDesignList = 'AntDesignList',\n  AntDesignListItem = 'AntDesignListItem',\n  AntDesignMessage = 'AntDesignMessage',\n  AntDesignMentions = 'AntDesignMentions',\n  AntDesignGridCol = 'AntDesignGridCol',\n  AntDesignProgress = 'AntDesignProgress',\n  AntDesignNotification = 'AntDesignNotification',\n  AntDesignRadio = 'AntDesignRadio',\n  AntDesignListItemMeta = 'AntDesignListItemMeta',\n  AntDesignPagination = 'AntDesignPagination',\n  AntDesignPopconfirm = 'AntDesignPopconfirm',\n  AntDesignPopover = 'AntDesignPopover',\n  AntDesignResult = 'AntDesignResult',\n  AntDesignModal = 'AntDesignModal',\n  AntDesignSegmented = 'AntDesignSegmented',\n  AntDesignRadioGroup = 'AntDesignRadioGroup',\n  AntDesignRate = 'AntDesignRate',\n  AntDesignStatistic = 'AntDesignStatistic',\n  AntDesignSteps = 'AntDesignSteps',\n  AntDesignSelectOption = 'AntDesignSelectOption',\n  AntDesignSkeleton = 'AntDesignSkeleton',\n  AntDesignSlider = 'AntDesignSlider',\n  AntDesignSpace = 'AntDesignSpace',\n  AntDesignSpin = 'AntDesignSpin',\n  AntDesignTag = 'AntDesignTag',\n  AntDesignSelect = 'AntDesignSelect',\n  AntDesignStepsStep = 'AntDesignStepsStep',\n  AntDesignSwitch = 'AntDesignSwitch',\n  AntDesignTable = 'AntDesignTable',\n  AntDesignTabs = 'AntDesignTabs',\n  AntDesignTabsTabPane = 'AntDesignTabsTabPane',\n  AntDesignTreeSelect = 'AntDesignTreeSelect',\n  AntDesignTimeline = 'AntDesignTimeline',\n  AntDesignTimelineItem = 'AntDesignTimelineItem',\n  AntDesignTooltip = 'AntDesignTooltip',\n  AntDesignTransfer = 'AntDesignTransfer',\n  AntDesignTree = 'AntDesignTree',\n  AntDesignTimePicker = 'AntDesignTimePicker',\n  AntDesignTypographyParagraph = 'AntDesignTypographyParagraph',\n  AntDesignTypographyText = 'AntDesignTypographyText',\n  AntDesignTypographyTitle = 'AntDesignTypographyTitle',\n  AntDesignUpload = 'AntDesignUpload',\n  AntDesignCarousel = 'AntDesignCarousel',\n\n  //\n  // MUI\n  //\n  MuiAccordion = 'MuiAccordion',\n  MuiAccordionActions = 'MuiAccordionActions',\n  MuiAccordionDetails = 'MuiAccordionDetails',\n  MuiAccordionSummary = 'MuiAccordionSummary',\n  MuiAlert = 'MuiAlert',\n  MuiAlertTitle = 'MuiAlertTitle',\n  MuiAppBar = 'MuiAppBar',\n  MuiAutocomplete = 'MuiAutocomplete',\n  MuiAvatar = 'MuiAvatar',\n  MuiAvatarGroup = 'MuiAvatarGroup',\n  MuiBackdrop = 'MuiBackdrop',\n  MuiBadge = 'MuiBadge',\n  MuiBadgeUnstyled = 'MuiBadgeUnstyled',\n  MuiBottomNavigation = 'MuiBottomNavigation',\n  MuiBottomNavigationAction = 'MuiBottomNavigationAction',\n  MuiBox = 'MuiBox',\n  MuiBreadcrumbs = 'MuiBreadcrumbs',\n  MuiButton = 'MuiButton',\n  MuiButtonBase = 'MuiButtonBase',\n  MuiButtonGroup = 'MuiButtonGroup',\n  MuiButtonUnstyled = 'MuiButtonUnstyled',\n  MuiCalendarPicker = 'MuiCalendarPicker',\n  MuiCalendarPickerSkeleton = 'MuiCalendarPickerSkeleton',\n  MuiCard = 'MuiCard',\n  MuiCardActionArea = 'MuiCardActionArea',\n  MuiCardActions = 'MuiCardActions',\n  MuiCardContent = 'MuiCardContent',\n  MuiCardHeader = 'MuiCardHeader',\n  MuiCardMedia = 'MuiCardMedia',\n  MuiCheckbox = 'MuiCheckbox',\n  MuiChip = 'MuiChip',\n  MuiCircularProgress = 'MuiCircularProgress',\n  MuiClickAwayListener = 'MuiClickAwayListener',\n  MuiClockPicker = 'MuiClockPicker',\n  MuiCollapse = 'MuiCollapse',\n  MuiContainer = 'MuiContainer',\n  MuiCssBaseline = 'MuiCssBaseline',\n  MuiDataGrid = 'MuiDataGrid',\n  MuiGridColDef = 'MuiGridColDef',\n  MuiDatePicker = 'MuiDatePicker',\n  MuiDateRangePicker = 'MuiDateRangePicker',\n  MuiDateRangePickerDay = 'MuiDateRangePickerDay',\n  MuiDateTimePicker = 'MuiDateTimePicker',\n  MuiDesktopDatePicker = 'MuiDesktopDatePicker',\n  MuiDesktopDateRangePicker = 'MuiDesktopDateRangePicker',\n  MuiDesktopDateTimePicker = 'MuiDesktopDateTimePicker',\n  MuiDesktopTimePicker = 'MuiDesktopTimePicker',\n  MuiDialog = 'MuiDialog',\n  MuiDialogActions = 'MuiDialogActions',\n  MuiDialogContent = 'MuiDialogContent',\n  MuiDialogContentText = 'MuiDialogContentText',\n  MuiDialogTitle = 'MuiDialogTitle',\n  MuiDivider = 'MuiDivider',\n  MuiDrawer = 'MuiDrawer',\n  MuiFab = 'MuiFab',\n  MuiFade = 'MuiFade',\n  MuiFilledInput = 'MuiFilledInput',\n  MuiFormControl = 'MuiFormControl',\n  MuiFormControlLabel = 'MuiFormControlLabel',\n  MuiFormControlUnstyled = 'MuiFormControlUnstyled',\n  MuiFormGroup = 'MuiFormGroup',\n  MuiFormHelperText = 'MuiFormHelperText',\n  MuiFormLabel = 'MuiFormLabel',\n  MuiGlobalStyles = 'MuiGlobalStyles',\n  MuiGrid = 'MuiGrid',\n  MuiGrow = 'MuiGrow',\n  MuiHidden = 'MuiHidden',\n  MuiIcon = 'MuiIcon',\n  MuiIconButton = 'MuiIconButton',\n  MuiImageList = 'MuiImageList',\n  MuiImageListItem = 'MuiImageListItem',\n  MuiImageListItemBar = 'MuiImageListItemBar',\n  MuiInput = 'MuiInput',\n  MuiInputAdornment = 'MuiInputAdornment',\n  MuiInputBase = 'MuiInputBase',\n  MuiInputLabel = 'MuiInputLabel',\n  MuiLinearProgress = 'MuiLinearProgress',\n  MuiLink = 'MuiLink',\n  MuiList = 'MuiList',\n  MuiListItem = 'MuiListItem',\n  MuiListItemAvatar = 'MuiListItemAvatar',\n  MuiListItemButton = 'MuiListItemButton',\n  MuiListItemIcon = 'MuiListItemIcon',\n  MuiListItemSecondaryAction = 'MuiListItemSecondaryAction',\n  MuiListItemText = 'MuiListItemText',\n  MuiListSubheader = 'MuiListSubheader',\n  MuiLoadingButton = 'MuiLoadingButton',\n  MuiMasonry = 'MuiMasonry',\n  MuiMasonryItem = 'MuiMasonryItem',\n  MuiMenu = 'MuiMenu',\n  MuiMenuItem = 'MuiMenuItem',\n  MuiMenuList = 'MuiMenuList',\n  MuiMobileDatePicker = 'MuiMobileDatePicker',\n  MuiMobileDateRangePicker = 'MuiMobileDateRangePicker',\n  MuiMobileDateTimePicker = 'MuiMobileDateTimePicker',\n  MuiMobileStepper = 'MuiMobileStepper',\n  MuiMobileTimePicker = 'MuiMobileTimePicker',\n  MuiModal = 'MuiModal',\n  MuiModalUnstyled = 'MuiModalUnstyled',\n  MuiMonthPicker = 'MuiMonthPicker',\n  MuiNativeSelect = 'MuiNativeSelect',\n  MuiNoSsr = 'MuiNoSsr',\n  MuiOutlinedInput = 'MuiOutlinedInput',\n  MuiPagination = 'MuiPagination',\n  MuiPaginationItem = 'MuiPaginationItem',\n  MuiPaper = 'MuiPaper',\n  MuiPickersDay = 'MuiPickersDay',\n  MuiPopover = 'MuiPopover',\n  MuiPopper = 'MuiPopper',\n  MuiPortal = 'MuiPortal',\n  MuiRadio = 'MuiRadio',\n  MuiRadioGroup = 'MuiRadioGroup',\n  MuiRating = 'MuiRating',\n  MuiScopedCssBaseline = 'MuiScopedCssBaseline',\n  MuiSelect = 'MuiSelect',\n  MuiSkeleton = 'MuiSkeleton',\n  MuiSlide = 'MuiSlide',\n  MuiSlider = 'MuiSlider',\n  MuiSliderUnstyled = 'MuiSliderUnstyled',\n  MuiSnackbar = 'MuiSnackbar',\n  MuiSnackbarContent = 'MuiSnackbarContent',\n  MuiSpeedDial = 'MuiSpeedDial',\n  MuiSpeedDialAction = 'MuiSpeedDialAction',\n  MuiSpeedDialIcon = 'MuiSpeedDialIcon',\n  MuiStack = 'MuiStack',\n  MuiStaticDatePicker = 'MuiStaticDatePicker',\n  MuiStaticDateRangePicker = 'MuiStaticDateRangePicker',\n  MuiStaticDateTimePicker = 'MuiStaticDateTimePicker',\n  MuiStaticTimePicker = 'MuiStaticTimePicker',\n  MuiStep = 'MuiStep',\n  MuiStepButton = 'MuiStepButton',\n  MuiStepConnector = 'MuiStepConnector',\n  MuiStepContent = 'MuiStepContent',\n  MuiStepIcon = 'MuiStepIcon',\n  MuiStepLabel = 'MuiStepLabel',\n  MuiStepper = 'MuiStepper',\n  MuiSvgIcon = 'MuiSvgIcon',\n  MuiSwipeableDrawer = 'MuiSwipeableDrawer',\n  MuiSwitch = 'MuiSwitch',\n  MuiSwitchUnstyled = 'MuiSwitchUnstyled',\n  MuiTab = 'MuiTab',\n  MuiTabContext = 'MuiTabContext',\n  MuiTabList = 'MuiTabList',\n  MuiTabPanel = 'MuiTabPanel',\n  MuiTabScrollButton = 'MuiTabScrollButton',\n  MuiTable = 'MuiTable',\n  MuiTableBody = 'MuiTableBody',\n  MuiTableCell = 'MuiTableCell',\n  MuiTableContainer = 'MuiTableContainer',\n  MuiTableFooter = 'MuiTableFooter',\n  MuiTableHead = 'MuiTableHead',\n  MuiTablePagination = 'MuiTablePagination',\n  MuiTableRow = 'MuiTableRow',\n  MuiTableSortLabel = 'MuiTableSortLabel',\n  MuiTabs = 'MuiTabs',\n  MuiTextField = 'MuiTextField',\n  MuiTextareaAutosize = 'MuiTextareaAutosize',\n  MuiTimePicker = 'MuiTimePicker',\n  MuiTimeline = 'MuiTimeline',\n  MuiTimelineConnector = 'MuiTimelineConnector',\n  MuiTimelineContent = 'MuiTimelineContent',\n  MuiTimelineDot = 'MuiTimelineDot',\n  MuiTimelineItem = 'MuiTimelineItem',\n  MuiTimelineOppositeContent = 'MuiTimelineOppositeContent',\n  MuiTimelineSeparator = 'MuiTimelineSeparator',\n  MuiToggleButton = 'MuiToggleButton',\n  MuiToggleButtonGroup = 'MuiToggleButtonGroup',\n  MuiToolbar = 'MuiToolbar',\n  MuiTooltip = 'MuiTooltip',\n  MuiTreeItem = 'MuiTreeItem',\n  MuiTreeView = 'MuiTreeView',\n  MuiTypography = 'MuiTypography',\n  MuiUnstableTrapFocus = 'MuiUnstableTrapFocus',\n  MuiYearPicker = 'MuiYearPicker',\n  MuiZoom = 'MuiZoom',\n\n  //\n  // Custom:\n  //\n  // TODO: need to remove\n  Query = 'Query',\n  TextList = 'TextList',\n  Text = 'Text',\n  Script = 'Script',\n  State = 'State',\n  GridLayout = 'GridLayout',\n\n  // Hook\n  HookGraphqlQuery = 'HookGraphqlQuery',\n  HookGraphqlMutation = 'HookGraphqlMutation',\n  HookRecoilState = 'HookRecoilState',\n  HookRouter = 'HookRouter',\n  HookQueryLambda = 'HookQueryLambda',\n  HookQueryConfig = 'HookQueryConfig',\n  HookQueryPages = 'HookQueryPages',\n  HookQueryPage = 'HookQueryPage',\n\n  // React\n  ReactFragment = 'ReactFragment',\n\n  HtmlA = 'HtmlA',\n  HtmlAbbr = 'HtmlAbbr',\n  HtmlArea = 'HtmlArea',\n  HtmlArticle = 'HtmlArticle',\n  HtmlAside = 'HtmlAside',\n  HtmlAudio = 'HtmlAudio',\n  HtmlB = 'HtmlB',\n  HtmlBase = 'HtmlBase',\n  HtmlBdo = 'HtmlBdo',\n  HtmlBlockquote = 'HtmlBlockquote',\n  HtmlBr = 'HtmlBr',\n  HtmlButton = 'HtmlButton',\n  HtmlCanvas = 'HtmlCanvas',\n  HtmlCite = 'HtmlCite',\n  HtmlCode = 'HtmlCode',\n  HtmlCol = 'HtmlCol',\n  HtmlDl = 'HtmlDl',\n  HtmlData = 'HtmlData',\n  HtmlDatalist = 'HtmlDatalist',\n  HtmlDetails = 'HtmlDetails',\n  HtmlDfn = 'HtmlDfn',\n  HtmlDialog = 'HtmlDialog',\n  HtmlDiv = 'HtmlDiv',\n  HtmlEm = 'HtmlEm',\n  HtmlEmbed = 'HtmlEmbed',\n  HtmlFieldset = 'HtmlFieldset',\n  HtmlFooter = 'HtmlFooter',\n  HtmlForm = 'HtmlForm',\n  HtmlH1 = 'HtmlH1',\n  HtmlH2 = 'HtmlH2',\n  HtmlH3 = 'HtmlH3',\n  HtmlH4 = 'HtmlH4',\n  HtmlH5 = 'HtmlH5',\n  HtmlH6 = 'HtmlH6',\n  HtmlHead = 'HtmlHead',\n  HtmlHeader = 'HtmlHeader',\n  HtmlHr = 'HtmlHr',\n  HtmlI = 'HtmlI',\n  HtmlIframe = 'HtmlIframe',\n  HtmlImg = 'HtmlImg',\n  HtmlInput = 'HtmlInput',\n  HtmlKbd = 'HtmlKbd',\n  HtmlLabel = 'HtmlLabel',\n  HtmlLegend = 'HtmlLegend',\n  HtmlLi = 'HtmlLi',\n  HtmlLink = 'HtmlLink',\n  HtmlMain = 'HtmlMain',\n  HtmlMath = 'HtmlMath',\n  HtmlMark = 'HtmlMark',\n  HtmlMap = 'HtmlMap',\n  HtmlMeta = 'HtmlMeta',\n  HtmlMeter = 'HtmlMeter',\n  HtmlNav = 'HtmlNav',\n  HtmlNoscript = 'HtmlNoscript',\n  HtmlOl = 'HtmlOl',\n  HtmlObject = 'HtmlObject',\n  HtmlOptgroup = 'HtmlOptgroup',\n  HtmlOption = 'HtmlOption',\n  HtmlOutput = 'HtmlOutput',\n  HtmlP = 'HtmlP',\n  HtmlParam = 'HtmlParam',\n  HtmlPicture = 'HtmlPicture',\n  HtmlPre = 'HtmlPre',\n  HtmlProgress = 'HtmlProgress',\n  HtmlQ = 'HtmlQ',\n  HtmlRuby = 'HtmlRuby',\n  HtmlS = 'HtmlS',\n  HtmlSamp = 'HtmlSamp',\n  HtmlScript = 'HtmlScript',\n  HtmlSection = 'HtmlSection',\n  HtmlSelect = 'HtmlSelect',\n  HtmlSmall = 'HtmlSmall',\n  HtmlSource = 'HtmlSource',\n  HtmlSpan = 'HtmlSpan',\n  HtmlStrong = 'HtmlStrong',\n  HtmlStyle = 'HtmlStyle',\n  HtmlSub = 'HtmlSub',\n  HtmlSup = 'HtmlSup',\n  HtmlSvg = 'HtmlSvg',\n  HtmlTable = 'HtmlTable',\n  HtmlCaption = 'HtmlCaption',\n  HtmlTd = 'HtmlTd',\n  HtmlTh = 'HtmlTh',\n  HtmlTr = 'HtmlTr',\n  HtmlTemplate = 'HtmlTemplate',\n  HtmlTextarea = 'HtmlTextarea',\n  HtmlTime = 'HtmlTime',\n  HtmlTitle = 'HtmlTitle',\n  HtmlTrack = 'HtmlTrack',\n  HtmlU = 'HtmlU',\n  HtmlUl = 'HtmlUl',\n  HtmlVar = 'HtmlVar',\n  HtmlVideo = 'HtmlVideo',\n  HtmlWbr = 'HtmlWbr',\n\n  // External dynamic component\n  ExternalComponent = 'ExternalComponent',\n}\n\nexport { AtomType as IAtomType }\n","import { CodeMirrorLanguage } from '@codelab/shared/abstract/codegen'\n\nexport { CodeMirrorLanguage as ICodeMirrorLanguage }\n","import type { IEntity, Nullable } from '@codelab/shared/abstract/types'\nimport type { RenderType } from './render-type'\n\n/**\n * This is the graphql fragment equivalent, used for hydrating object\n */\nexport interface IElementDTO {\n  // slug: string\n  customCss?: Nullable<string>\n  firstChild?: IEntity | null\n  guiCss?: Nullable<string>\n  id: string\n  name: string\n  nextSibling?: IEntity | null\n  page?: IEntity | null\n  parent?: IEntity | null\n  parentComponent?: IEntity | null\n  postRenderAction?: IEntity | null\n  preRenderAction?: IEntity | null\n  // renderComponentType?: IComponentDTO | null\n  // renderAtomType?: IAtomDTO | null\n  prevSibling?: IEntity | null\n  propTransformationJs?: Nullable<string>\n  props: IEntity\n  renderForEachPropKey?: Nullable<string>\n  renderIfExpression?: Nullable<string>\n  renderType?: Nullable<RenderType>\n}\n","import { ElementTypeKind } from '@codelab/shared/abstract/codegen'\n\n/**\n * Used to import to schema, we create in ts context so we can get type checking\n *\n * @deprecated\n */\nexport enum __ElementTypeKind {\n  /**\n   * Pick any element in the current tree\n   */\n  AllElements = 'AllElements',\n  /**\n   * Pick any element from the children of the current element\n   */\n  ChildrenOnly = 'ChildrenOnly',\n  /**\n   * Pick any element from the descendants of the current element\n   */\n  DescendantsOnly = 'DescendantsOnly',\n  /**\n   * Pick parents and siblings of parents of elements (used to move element)\n   */\n  ExcludeDescendantsElements = 'ExcludeDescendantsElements',\n}\n\nexport { ElementTypeKind as IElementTypeKind }\n\nexport const elementTypeMap = (elementType: string): ElementTypeKind =>\n  ElementTypeKind[elementType as keyof typeof ElementTypeKind]\n","export const DOMAIN_GRAPHQL_ERROR_CODES = {\n  DOMAIN_EXIST: 'DOMAIN_EXIST',\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\n\n/**\n * Props imply as input for something, in this case a model\n */\nexport interface IFieldDTO {\n  api: IEntity\n  defaultValues?: string | null\n  description?: string | null\n  fieldType: IEntity\n  id: string\n  key: string\n  name?: string | null\n  nextSibling?: IEntity | null\n  prevSibling?: IEntity | null\n  validationRules?: string | null\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport type { Claims } from '@auth0/nextjs-auth0'\nimport type { IRole } from './role.enum'\n\nexport interface CodelabApiClaims extends Claims {\n  /**\n   * When it comes from the Auth0 endpoint, the session data is encoded as string, not enum\n   */\n  roles: Array<keyof typeof IRole>\n}\n\nexport const JWT_CLAIMS = `https://api.codelab.app/jwt/claims`\n\n/**\n * Access tokens are what the OAuth client uses to make requests to an API\n *\n * Not intended to carry user info, used for authorization\n */\nexport interface AccessTokenPayload {\n  /**\n   * These are set programmatically inside Auth0 rules\n   */\n  [JWT_CLAIMS]: CodelabApiClaims\n  /** Audience (who or what the token is intended for) */\n  aud: Array<string>\n  /** Authorization party (the party to which this token was issued) */\n  azp?: string\n  /** Expiration time (seconds since Unix epoch) */\n  exp: number\n  /** Grand type */\n  gty?: string\n  /** Issued at (seconds since Unix epoch) */\n  iat: number\n  /** Issuer (who created and signed this token) */\n  iss: string\n  /** Token scope (what the token has access to) */\n  scope?: string\n  /** Subject (whom the token refers to) */\n  sub: string\n}\n\n/**\n * Confirm that the user is authenticated and carries user info\n *\n * An ID token contains information about what happened when a user authenticated, and is intended to be read by the OAuth client\n */\nexport interface IDTokenPayload {\n  [JWT_CLAIMS]: CodelabApiClaims\n  aud: string\n  email: string\n  email_verified: false\n  exp: number\n  iat: number\n  iss: string\n  name: string\n  nickname: string\n  picture: string\n  sub: string\n  updated_at: string\n}\n\nexport interface Auth0SessionUser {\n  [JWT_CLAIMS]: CodelabApiClaims\n  email: string\n  email_verified: false\n  family_name: string\n  given_name: string\n  locale: string\n  name: string\n  nickname: string\n  picture: string\n  sub: string\n  updated_at: string\n}\n","import type { IEntity, Nullish } from '@codelab/shared/abstract/types'\nimport type { IPageKind } from './page-kind.enum'\n\nexport interface IPageDTO {\n  app: IEntity\n  id: string\n  kind: IPageKind\n  name: string\n  // The container element of the page\n  pageContentContainer?: Nullish<IEntity>\n  rootElement: IEntity\n  store: IEntity\n  url: string\n}\n","import { PageKind } from '@codelab/shared/abstract/codegen'\n\n/**\n * We create the enum here then import into Neo4j graphql schema so we can get linting\n *\n *  @deprecated We have to use the copy from codegen, otherwise they don't match up\n */\nexport enum __PageKind {\n  Provider = 'Provider',\n  InternalServerError = 'InternalServerError',\n  NotFound = 'NotFound',\n  Regular = 'Regular',\n}\n\nexport { PageKind as IPageKind }\n\nexport enum IPageKindName {\n  Provider = '_app',\n  InternalServerError = '500',\n  NotFound = '404',\n}\n","import { PrimitiveTypeKind } from '@codelab/shared/abstract/codegen'\n\nexport { PrimitiveTypeKind as IPrimitiveTypeKind }\n","import type { IEntity, Nullable } from '@codelab/shared/abstract/types'\n\nexport interface IPropDTO {\n  api?: Nullable<IEntity>\n  data?: string\n  id: string\n}\n","import { RenderTypeKind } from '@codelab/shared/abstract/codegen'\nimport type { IRenderTypeKind } from '.'\n\n/**\n *  @deprecated We have to use the copy from codegen, otherwise they don't match up\n */\nexport enum __RenderTypeKind {\n  Atom = 'Atom',\n  Component = 'Component',\n}\n\nexport { RenderTypeKind as IRenderTypeKind }\n\nexport type IComponentID = string\n\nexport type IAtomID = string\n\nexport interface RenderType {\n  // This is the ID of either `atom` or `component`\n  id: IAtomID | IComponentID\n  kind: IRenderTypeKind\n}\n","import { ResourceType } from '@codelab/shared/abstract/codegen'\n\nexport { ResourceType as IResourceType }\n","/**\n * Auth0 post registration hook only works for database, social login can't assign a role.\n *\n * We don't set a role for regular users\n */\nimport { Role } from '@codelab/shared/abstract/codegen'\n\nexport { Role as IRole }\n","export * from './atom.interface'\n","// import type { IComponentType } from '@codelab/frontend/abstract/core'\nimport type { Nullable } from '@codelab/shared/abstract/types'\n\n// TODO: Can't import due to circular dep, so we copy it here\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type IComponentType = Nullable<string> | React.ComponentType<any>\n","export * from './repository.interface'\n","import type { BaseUniqueWhere, IEntity } from '@codelab/shared/abstract/types'\n\nexport interface IRepository<Model extends IEntity> {\n  add(data: Array<Model>): Promise<Array<Model>>\n  //\n  delete(ids: Array<string>): Promise<number>\n  exists(data: Model, where?: BaseUniqueWhere): Promise<boolean>\n  find(where: BaseUniqueWhere): Promise<Model | undefined>\n  save(data: Model, where?: BaseUniqueWhere): Promise<Model | undefined>\n  update(\n    data: Omit<Model, 'id'>,\n    where: BaseUniqueWhere,\n  ): Promise<Model | undefined>\n}\n","import type { IEntity, Nullable } from '@codelab/shared/abstract/types'\n\nexport interface IStoreDTO {\n  actions?: Array<IEntity>\n  api: IEntity\n  component?: IEntity | null\n  id: string\n  name: string\n  page?: IEntity | null\n  source?: Nullable<IEntity>\n}\n","import type { IEntity, Nullable } from '@codelab/shared/abstract/types'\nimport type { IOwner } from './user.interface'\n\nexport interface ITagDTO extends IOwner {\n  children: Array<IEntity>\n  // This is computed property\n  descendants?: Array<IEntity>\n  id: string\n  isRoot?: boolean | null\n  name: string\n  parent?: Nullable<IEntity>\n}\n","export * from './action-type.dto.interface'\nexport * from './app-type.dto.interface'\nexport * from './array-type.dto.interface'\nexport * from './base-type.dto.interface'\nexport * from './code-mirror-type.dto.interface'\nexport * from './element-type.dto.interface'\nexport * from './enum-type.dto.interface'\nexport * from './interface-type.dto.interface'\nexport * from './lambda-type.dto.interface'\nexport * from './page-type.dto.interface'\nexport * from './primitive-type.dto.interface'\nexport * from './react-node-type.dto.interface'\nexport * from './render-prop-type.dto.interface'\nexport * from './union-type.dto.interface'\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IActionTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.ActionType}`\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IAppTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.AppType}`\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IArrayTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.ArrayType}`\n  itemType?: IEntity\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IOwner } from '../user.interface'\nimport type { IActionTypeDTO } from './action-type.dto.interface'\nimport type { IAppTypeDTO } from './app-type.dto.interface'\nimport type { IArrayTypeDTO } from './array-type.dto.interface'\nimport type { ICodeMirrorTypeDTO } from './code-mirror-type.dto.interface'\nimport type { IElementTypeDTO } from './element-type.dto.interface'\nimport type { IEnumTypeDTO } from './enum-type.dto.interface'\nimport type { IInterfaceTypeDTO } from './interface-type.dto.interface'\nimport type { ILambdaTypeDTO } from './lambda-type.dto.interface'\nimport type { IPageTypeDTO } from './page-type.dto.interface'\nimport type { IPrimitiveTypeDTO } from './primitive-type.dto.interface'\nimport type { IReactNodeTypeDTO } from './react-node-type.dto.interface'\nimport type { IRenderPropTypeDTO } from './render-prop-type.dto.interface'\nimport type { IUnionTypeDTO } from './union-type.dto.interface'\n\nexport interface IBaseTypeDTO extends IOwner {\n  id: string\n  kind: ITypeKind\n  name: string\n}\n\nexport type ITypeDTO =\n  | IActionTypeDTO\n  | IAppTypeDTO\n  | IArrayTypeDTO\n  | ICodeMirrorTypeDTO\n  | IElementTypeDTO\n  | IEnumTypeDTO\n  | IInterfaceTypeDTO\n  | ILambdaTypeDTO\n  | IPageTypeDTO\n  | IPrimitiveTypeDTO\n  | IReactNodeTypeDTO\n  | IRenderPropTypeDTO\n  | IUnionTypeDTO\n","import type { CodeMirrorLanguage } from '@codelab/shared/abstract/codegen'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface ICodeMirrorTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.CodeMirrorType}`\n  language: CodeMirrorLanguage\n}\n","import type { ElementTypeKind } from '@codelab/shared/abstract/codegen'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IElementTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.ElementType}`\n  elementKind: ElementTypeKind\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IEnumTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.EnumType}`\n  allowedValues: Array<IEnumTypeValueDTO>\n}\n\nexport interface IEnumTypeValueDTO {\n  id: string\n  key: string\n  value: string\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IInterfaceTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.InterfaceType}`\n  fields: Array<IEntity>\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface ILambdaTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.LambdaType}`\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IPageTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.PageType}`\n}\n","import type { PrimitiveTypeKind } from '@codelab/shared/abstract/codegen'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IPrimitiveTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.PrimitiveType}`\n  primitiveKind: PrimitiveTypeKind\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IReactNodeTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.ReactNodeType}`\n}\n","import type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IRenderPropTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.RenderPropType}`\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { ITypeKind } from '../type-kind.enum'\nimport type { IBaseTypeDTO } from './base-type.dto.interface'\n\nexport interface IUnionTypeDTO extends IBaseTypeDTO {\n  __typename?: `${ITypeKind.UnionType}`\n  typesOfUnionType: Array<IEntity>\n}\n","import { TypeKind } from '@codelab/shared/abstract/codegen'\n\nexport { TypeKind as ITypeKind }\n\ninterface AssertIsTypeKind {\n  <T extends TypeKind>(actual: TypeKind, expected: T): asserts actual is T\n}\n\nexport const assertIsTypeKind: AssertIsTypeKind = (actual, expected) => {\n  if (actual !== expected) {\n    throw new Error('TypeKind does not match')\n  }\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IRole } from './role.enum'\n\nexport interface IUserDTO {\n  apps?: Array<IEntity>\n  auth0Id: string\n  email: string\n  id: string\n  roles: Array<IRole>\n  username: string\n}\n\nexport interface IOwner {\n  owner: IAuth0Owner\n}\n\nexport type IAuth0Owner = Pick<IUserDTO, 'auth0Id'>\n","module.exports = require(\"uuid\");","export * from './ant-design-primitive-map'\n","import type { AntDesignField } from '@codelab/backend/abstract/core'\nimport type { ITypeDTO } from '@codelab/shared/abstract/core'\nimport { IPrimitiveTypeKind, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { DistributivePick } from '@codelab/shared/abstract/types'\nimport {\n  isActionType,\n  isEnumType,\n  isInterfaceType,\n  isPrimitiveType,\n  isReactNodeType,\n  isRenderPropType,\n  isUnionType,\n} from '../parser'\n\nexport class AntDesignTypeMapper {\n  static mapPrimitiveType = (value: string) => {\n    switch (value) {\n      case 'boolean':\n        return IPrimitiveTypeKind.Boolean\n      case 'string':\n        return IPrimitiveTypeKind.String\n      case 'number':\n        return IPrimitiveTypeKind.Number\n      case 'integer':\n        return IPrimitiveTypeKind.Integer\n      default:\n        throw new Error('Invalid value')\n    }\n  }\n\n  static mapType = (\n    field: Pick<AntDesignField, 'property' | 'type'>,\n  ): DistributivePick<ITypeDTO, 'kind'> | null => {\n    if (isEnumType(field.type)) {\n      return { kind: ITypeKind.EnumType }\n    }\n\n    if (isReactNodeType(field.type)) {\n      return { kind: ITypeKind.ReactNodeType }\n    }\n\n    if (isRenderPropType(field.type)) {\n      return { kind: ITypeKind.RenderPropType }\n    }\n\n    if (isUnionType(field.type)) {\n      return { kind: ITypeKind.UnionType }\n    }\n\n    if (isPrimitiveType(field.type)) {\n      return { kind: ITypeKind.PrimitiveType }\n    }\n\n    if (isActionType(field.type)) {\n      return { kind: ITypeKind.ActionType }\n    }\n\n    if (isInterfaceType(field.type)) {\n      return { kind: ITypeKind.InterfaceType }\n    }\n\n    console.log('Cannot map Ant Design type', field)\n\n    return null\n  }\n}\n","export * from './matchers'\nexport * from './parser'\nexport * from './type-predicates'\n","export const arrowFnReturnReactNode = /^\\(.+\\).+=>.+ReactNode$/\nexport const es5FnReturnReactNode = /^function(.+): ReactNode$/\n\n/**\n * These are used to match for types we want to ignore for union types\n */\nconst arrayTypeRegex = /(\\[.+\\]|<.+>)/\n\n/**\n * Use non greedy for () matching\n *\n * (^function\\(.*?\\)) - function()\n * ((\\(.*?\\)) => [any|boolean]) - () => any\n */\n\nexport const functionTypeRegex =\n  // /(^function\\(.*?\\))|((\\(.*?\\)) => [any|boolean|void])/\n  /(^function\\(.*?\\))|((\\(.*?\\)) => \\w)/\n\n// export const unionTypeRegex = /(function|=>|<|[?.;]|[[]])/\nexport const unionTypeRegex = /\\|/\n\n// export const skippedTypeRegex = new RegExp(\n//   `/${arrayTypeRegex}|${functionTypeRegex}/`,\n// )\n\nexport const primitiveTypesRegex = /^(boolean|number|string|integer)$/\n\nexport const containsInterfaceTypeRegex = /\\{.+\\}/\n\n/**\n * {left?: ReactNode, right?: ReactNode}\n * ->\n * left?: ReactNode, right?: ReactNode\n *\n * (?:\\{) - Non-capturing {\n * (.*)   - Match everything\n * (?:\\}) - Non-capturing }\n */\nexport const stripBracketsRegex = /(?:\\{)(.*)(?:\\})/\n\n/* *\n * Used for single items\n */\nexport const interfaceTypeRegex = /^\\{.+}$/\n\n/**\n * : ReactNode|HTMLElement\n * => ReactNode|HTMLElement\n * ReactNode\n */\nexport const reactNodeTypeRegex = /(([:|=>] (ReactNode|HTMLElement))|ReactNode)/\n\nexport const renderPropRegexes = [arrowFnReturnReactNode, es5FnReturnReactNode]\n","import type { AntDesignField } from '@codelab/backend/abstract/core'\nimport { stripQuotes } from '@codelab/shared/utils'\nimport merge from 'lodash/merge'\nimport { stripBracketsRegex } from './matchers'\n\n/**\n * {left?: ReactNode, right?: ReactNode}\n * ->\n * left: ReactNode, right: ReactNode\n * @param object\n */\nexport const extractObjectFromString = (object: string): object => {\n  const objectWithoutBraces = object.match(stripBracketsRegex)?.[1]\n\n  return (\n    objectWithoutBraces\n      ?.split(',')\n      .map((keyValueStrings) => {\n        const keyValueData = keyValueStrings\n          // Split by key value colon\n          .split(':')\n          // Trim and replace optional types\n          .map((val) => val.trim().replace('?', ''))\n\n        const key = keyValueData[0]\n        const value = keyValueData[1]\n\n        return { [`${key}`]: value }\n      })\n      .reduce(merge) ?? {}\n  )\n}\n\n/**\n * Convert type string to array of types\n *\n * \"'error' | 'warning'\" -> ['error', 'warning']\n */\nexport const parseSeparators = (field: Pick<AntDesignField, 'type'>) => {\n  const processedField = stripQuotes(field.type)\n\n  return processedField.split('|').map((value) => value.trim())\n}\n","module.exports = require(\"lodash/merge\");","import type { AntDesignField, TypeRef } from '@codelab/backend/abstract/core'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport {\n  containsInterfaceTypeRegex,\n  functionTypeRegex,\n  interfaceTypeRegex,\n  primitiveTypesRegex,\n  reactNodeTypeRegex,\n  renderPropRegexes,\n  unionTypeRegex,\n} from './matchers'\n\ninterface UnionTypeArgs {\n  atom: IAtomDTO\n  field: Pick<AntDesignField, 'property' | 'type'>\n  userId: string\n}\n\nexport type FieldTypeRef = (args: UnionTypeArgs) => Promise<TypeRef>\n\n/**\n * We must check on parsed values as opposed to field.type\n *\n * We reduce each predicate by multiplying all elements in an array\n */\nexport type IsTypePredicates = (fieldType: string) => boolean\n\nexport const isPrimitiveType: IsTypePredicates = (fieldType) => {\n  return primitiveTypesRegex.test(fieldType)\n}\n\n/**\n * Some enum fields in Ant Design docs don't have CODE block, but uses `'` instead, so we can't rely on `isEnum` anymore\n *\n * Input.status = 'error' | 'warning'\n *\n * Make sure it isn't an interface first, then check for `|`. Some interfaces have `|` in them\n *\n * @param field\n */\nexport const isEnumType: IsTypePredicates = (fieldType) => {\n  if (interfaceTypeRegex.test(fieldType)) {\n    return false\n  }\n\n  return unionTypeRegex.test(fieldType)\n}\n\nexport const isUnionType: IsTypePredicates = (fieldType) => {\n  return unionTypeRegex.test(fieldType) && !interfaceTypeRegex.test(fieldType)\n}\n\nexport const isReactNodeType: IsTypePredicates = (fieldType) => {\n  return reactNodeTypeRegex.test(fieldType)\n}\n\nexport const isActionType: IsTypePredicates = (fieldType) => {\n  return functionTypeRegex.test(fieldType)\n}\n\n// ReactNode is also render props\nexport const isRenderPropType: IsTypePredicates = (fieldType) => {\n  return renderPropRegexes.some((regex) => regex.test(fieldType))\n}\n\nexport const isInterfaceType: IsTypePredicates = (fieldType) => {\n  return interfaceTypeRegex.test(fieldType)\n}\n\n/**\n * See if `boolean | { loading: true }` contains a nested interface\n */\nexport const unionContainsInterfaceType: IsTypePredicates = (fieldType) => {\n  // We use `||` since we only need 1 to have a nested interface\n  return (\n    containsInterfaceTypeRegex.test(fieldType) ||\n    // We don't want to parse edge cases yet\n    !functionTypeRegex.test(fieldType)\n  )\n}\n","export * from './type-seeder.service'\n","import { FieldRepository, TypeFactory } from '@codelab/backend/domain/type'\nimport type {\n  IAuth0Owner,\n  IFieldDTO,\n  ITypeDTO,\n} from '@codelab/shared/abstract/core'\n\nexport class TypeSeederService {\n  fieldRepository = new FieldRepository()\n\n  async seedFields(fields: Array<IFieldDTO>) {\n    for await (const field of fields) {\n      await this.fieldRepository.save(field, {\n        // Save by composite key\n        api: {\n          id: field.api.id,\n        },\n        key: field.key,\n      })\n    }\n  }\n\n  /**\n   * This way let's us\n   */\n  async seedTypes(types: Array<ITypeDTO>, owner: IAuth0Owner) {\n    await Promise.all(\n      Object.values(types).map(\n        async (type) =>\n          await TypeFactory.save({ ...type, owner }, { name: type.name }),\n      ),\n    )\n  }\n}\n","export * from './factory'\nexport * from './model'\nexport * from './repository'\n","export * from './type.factory'\n","import type {\n  ActionTypeWhere,\n  ArrayTypeWhere,\n  EnumTypeWhere,\n  InterfaceTypeWhere,\n  PrimitiveTypeWhere,\n  ReactNodeTypeWhere,\n  RenderPropTypeWhere,\n  UnionTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport type { IType, ITypeWhere } from '@codelab/backend/abstract/core'\nimport type { ITypeDTO } from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { Processor } from '@nestjs/bull'\nimport { Injectable } from '@nestjs/common'\nimport {\n  ActionType,\n  EnumType,\n  InterfaceType,\n  PrimitiveType,\n  ReactNodeType,\n  RenderPropType,\n  UnionType,\n} from '../model'\nimport { ArrayType } from '../model/array-type.model'\nimport {\n  ActionTypeRepository,\n  ArrayTypeRepository,\n  EnumTypeRepository,\n  InterfaceTypeRepository,\n  PrimitiveTypeRepository,\n  ReactNodeTypeRepository,\n  RenderPropTypeRepository,\n  UnionTypeRepository,\n} from '../repository'\n\n/**\n * Used for dynamic data when we don't know what type we are creating\n */\nexport class TypeFactory {\n  static async save<T extends IType>(\n    type: ITypeDTO,\n    where?: ITypeWhere,\n  ): Promise<T> {\n    if (!type.__typename) {\n      throw new Error('__typename must be provided')\n    }\n\n    /**\n     * Type narrow using discriminated union\n     */\n    switch (type.__typename) {\n      case ITypeKind.PrimitiveType: {\n        const primitiveType = new PrimitiveType(type)\n\n        return (await new PrimitiveTypeRepository().save(\n          primitiveType,\n          where as PrimitiveTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.EnumType: {\n        const enumType = new EnumType(type)\n\n        return (await new EnumTypeRepository().save(\n          enumType,\n          where as EnumTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.InterfaceType: {\n        const interfaceType = new InterfaceType(type)\n\n        return (await new InterfaceTypeRepository().save(\n          interfaceType,\n          where as InterfaceTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.ReactNodeType: {\n        const reactNodeType = new ReactNodeType(type)\n\n        return (await new ReactNodeTypeRepository().save(\n          reactNodeType,\n          where as ReactNodeTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.RenderPropType: {\n        const renderPropType = new RenderPropType(type)\n\n        return (await new RenderPropTypeRepository().save(\n          renderPropType,\n          where as RenderPropTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.ActionType: {\n        const actionType = new ActionType(type)\n\n        return (await new ActionTypeRepository().save(\n          actionType,\n          where as ActionTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.UnionType: {\n        const unionType = new UnionType(type)\n\n        return (await new UnionTypeRepository().save(\n          unionType,\n          where as UnionTypeWhere,\n        )) as T\n      }\n\n      case ITypeKind.ArrayType: {\n        const arrayType = new ArrayType(type)\n\n        return (await new ArrayTypeRepository().save(\n          arrayType,\n          where as ArrayTypeWhere,\n        )) as T\n      }\n\n      default: {\n        console.log('Data:', type)\n        throw new Error('No type factory found')\n      }\n    }\n  }\n}\n","export * from './action-type.model'\nexport * from './array-type.model'\nexport * from './enum-type.model'\nexport * from './field.model'\nexport * from './interface-type.model'\nexport * from './primitive-type.model'\nexport * from './react-node-type.model'\nexport * from './render-prop-type.model'\nexport * from './union-type.model'\n","import type { IActionTypeDTO, IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { BaseType } from './base-type.model'\n\nexport class ActionType extends BaseType implements IActionTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.ActionType\n\n  declare __typename: `${ITypeKind.ActionType}`\n\n  declare owner: IAuth0Owner\n\n  constructor({ id, owner }: IActionTypeDTO) {\n    super({ id, kind: ITypeKind.ActionType, name: ITypeKind.ActionType, owner })\n  }\n}\n","import type {\n  IAuth0Owner,\n  IBaseTypeDTO,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\n\nexport abstract class BaseType implements IBaseTypeDTO {\n  id: string\n\n  name: string\n\n  kind: ITypeKind\n\n  owner: IAuth0Owner\n\n  constructor({ id, kind, name, owner }: IBaseTypeDTO) {\n    this.id = id\n    this.name = name\n    this.kind = kind\n    this.owner = owner\n  }\n\n  assertCreateFailed<Model>(data: Array<Model>) {\n    if (!data[0]) {\n      throw new Error('Create failed')\n    }\n\n    return data[0]\n  }\n}\n","import type { IArrayTypeDTO, IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { BaseType } from './base-type.model'\n\nexport class ArrayType extends BaseType implements IArrayTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.ArrayType\n\n  declare __typename: `${ITypeKind.ArrayType}`\n\n  declare owner: IAuth0Owner\n\n  declare itemType?: IEntity\n\n  constructor({ id, itemType, name, owner }: IArrayTypeDTO) {\n    super({ id, kind: ITypeKind.ArrayType, name, owner })\n\n    this.itemType = itemType\n  }\n}\n","import type {\n  IAtomDTO,\n  IAuth0Owner,\n  IEnumTypeDTO,\n  IEnumTypeValueDTO,\n  IFieldDTO,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\nimport { BaseType } from './base-type.model'\n\nexport class EnumType extends BaseType implements IEnumTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.EnumType\n\n  declare __typename: `${ITypeKind.EnumType}`\n\n  declare owner: IAuth0Owner\n\n  allowedValues: Array<IEnumTypeValueDTO>\n\n  constructor({ allowedValues, id, name, owner }: IEnumTypeDTO) {\n    super({ id, kind: ITypeKind.EnumType, name, owner })\n\n    this.allowedValues = allowedValues\n  }\n\n  static compositeName(\n    atom: Pick<IAtomDTO, 'name'>,\n    field: Pick<IFieldDTO, 'key'>,\n  ) {\n    return `${atom.name} ${compoundCaseToTitleCase(field.key)} Enum`\n  }\n}\n","import type { IFieldDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\n\nexport class Field implements IFieldDTO {\n  readonly api: { id: string }\n\n  readonly defaultValues: string | null\n\n  readonly description: string | null\n\n  readonly fieldType: IEntity\n\n  readonly id: string\n\n  readonly key: string\n\n  readonly name: string | null\n\n  readonly validationRules: string | null\n\n  nextSibling?: IEntity | null | undefined\n\n  prevSibling?: IEntity | null | undefined\n\n  constructor({\n    api,\n    defaultValues = null,\n    description = null,\n    fieldType,\n    id,\n    key,\n    name = null,\n    nextSibling = null,\n    prevSibling = null,\n    validationRules = null,\n  }: IFieldDTO) {\n    this.api = { id: api.id }\n    this.defaultValues = defaultValues\n    this.description = description\n    this.fieldType = { id: fieldType.id }\n    this.id = id\n    this.key = key\n    this.name = name\n    this.validationRules = validationRules\n    this.nextSibling = nextSibling\n    this.prevSibling = prevSibling\n  }\n\n  /**\n   * Used to get composite key, fieldKey is\n   */\n  static compositeKey(apiName: string, fieldKey: string) {\n    return `${apiName}-${fieldKey}`\n  }\n\n  static create({ api, fieldType, id, key }: IFieldDTO) {\n    return new Field({\n      api,\n      fieldType,\n      id,\n      key,\n      name: compoundCaseToTitleCase(key),\n    })\n  }\n}\n","import type {\n  IAtomDTO,\n  IAuth0Owner,\n  IFieldDTO,\n  IInterfaceTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { v4 } from 'uuid'\nimport { capitalize } from 'voca'\nimport { BaseType } from './base-type.model'\n\nexport class InterfaceType extends BaseType implements IInterfaceTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.InterfaceType\n\n  declare __typename: `${ITypeKind.InterfaceType}`\n\n  declare owner: IAuth0Owner\n\n  fields: Array<IEntity>\n\n  constructor({ fields, id, name, owner }: IInterfaceTypeDTO) {\n    super({ id, kind: ITypeKind.InterfaceType, name, owner })\n\n    this.fields = fields\n  }\n\n  static getApiName(\n    { name }: Pick<IAtomDTO, 'name'>,\n    field?: Pick<IFieldDTO, 'key'>,\n  ) {\n    return field?.key ? `${name} ${capitalize(field.key)} API` : `${name} API`\n  }\n\n  /**\n   * Make create data from atom name\n   */\n  static createFromAtomName(name: string, owner: IAuth0Owner) {\n    return new InterfaceType({\n      fields: [],\n      id: v4(),\n      kind: ITypeKind.InterfaceType,\n      name: InterfaceType.getApiName({ name }),\n      owner,\n    })\n  }\n}\n","module.exports = require(\"voca\");","import type {\n  IAuth0Owner,\n  IPrimitiveTypeDTO,\n  IPrimitiveTypeKind,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { BaseType } from './base-type.model'\n\nexport class PrimitiveType extends BaseType implements IPrimitiveTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.PrimitiveType\n\n  __typename: `${ITypeKind.PrimitiveType}` = ITypeKind.PrimitiveType\n\n  declare owner: IAuth0Owner\n\n  primitiveKind: IPrimitiveTypeKind\n\n  constructor({ id, name, owner, primitiveKind }: IPrimitiveTypeDTO) {\n    super({\n      id,\n      kind: ITypeKind.PrimitiveType,\n      name,\n      owner,\n    })\n\n    this.primitiveKind = primitiveKind\n  }\n}\n","import type {\n  IAuth0Owner,\n  IReactNodeTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { BaseType } from './base-type.model'\n\nexport class ReactNodeType extends BaseType implements IReactNodeTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.ReactNodeType\n\n  declare __typename: `${ITypeKind.ReactNodeType}`\n\n  declare owner: IAuth0Owner\n\n  constructor({ id, owner }: IReactNodeTypeDTO) {\n    super({\n      id,\n      kind: ITypeKind.ReactNodeType,\n      name: ITypeKind.ReactNodeType,\n      owner,\n    })\n  }\n}\n","import type {\n  IAuth0Owner,\n  IRenderPropTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { BaseType } from './base-type.model'\n\nexport class RenderPropType extends BaseType implements IRenderPropTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.RenderPropType\n\n  declare __typename: `${ITypeKind.RenderPropType}`\n\n  declare owner: IAuth0Owner\n\n  constructor({ id, owner }: IRenderPropTypeDTO) {\n    super({\n      id,\n      kind: ITypeKind.RenderPropType,\n      name: ITypeKind.RenderPropType,\n      owner,\n    })\n  }\n}\n","import type {\n  IAtomDTO,\n  IAuth0Owner,\n  IFieldDTO,\n  IUnionTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\nimport { BaseType } from './base-type.model'\n\nexport class UnionType extends BaseType implements IUnionTypeDTO {\n  declare id: string\n\n  declare name: string\n\n  declare kind: ITypeKind.UnionType\n\n  declare __typename: `${ITypeKind.UnionType}`\n\n  declare owner: IAuth0Owner\n\n  typesOfUnionType: Array<IEntity>\n\n  constructor({ id, name, owner, typesOfUnionType }: IUnionTypeDTO) {\n    super({ id, kind: ITypeKind.UnionType, name, owner })\n\n    this.typesOfUnionType = typesOfUnionType\n  }\n\n  static compositeName(\n    atom: Pick<IAtomDTO, 'name'>,\n    field: Pick<IFieldDTO, 'key'>,\n  ) {\n    return `${atom.name} ${compoundCaseToTitleCase(field.key)} Union API`\n  }\n}\n","export * from './action-type.repo'\nexport * from './array-type.repo'\nexport * from './enum-type.repo'\nexport * from './field.repo'\nexport * from './interface-type.repo'\nexport * from './primitive-type.repo'\nexport * from './react-node-type.repo'\nexport * from './render-prop-type.repo'\nexport * from './union-type.repo'\n","import type {\n  ActionType,\n  ActionTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportActionTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IActionTypeDTO } from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner } from '@codelab/shared/domain/mapper'\n\nexport class ActionTypeRepository extends AbstractRepository<\n  IActionTypeDTO,\n  ActionType,\n  ActionTypeWhere\n> {\n  private ActionType = Repository.instance.ActionType\n\n  async _find(where: ActionTypeWhere) {\n    return await (\n      await this.ActionType\n    ).find({\n      selectionSet: exportActionTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(actionTypes: Array<IActionTypeDTO>) {\n    return (\n      await (\n        await this.ActionType\n      ).create({\n        input: actionTypes.map(({ __typename, owner, ...actionType }) => ({\n          ...actionType,\n          owner: connectAuth0Owner(owner),\n        })),\n        selectionSet: `{ actionTypes ${exportActionTypeSelectionSet} }`,\n      })\n    ).actionTypes\n  }\n\n  protected async _update(\n    { __typename, id, name, owner, ...actionType }: IActionTypeDTO,\n    where: ActionTypeWhere,\n  ) {\n    return (\n      await (\n        await this.ActionType\n      ).update({\n        selectionSet: `{ actionTypes ${exportActionTypeSelectionSet} }`,\n        update: { name },\n        where,\n      })\n    ).actionTypes[0]\n  }\n}\n","export * from './cypher'\nexport * from './directive'\nexport * from './infra'\nexport * from './resolver'\nexport * from './schema'\nexport * from './selectionSet'\n","export * from './component'\nexport * from './element'\nexport * from './tag'\nexport * from './type'\n","import getDescendantComponentIds from './getDescendantComponentIds.cypher'\n\nexport { getDescendantComponentIds }\n","import duplicateElement from './duplicateElement.cypher'\nimport getDescendantsCypher from './getDescendants.cypher'\n\nexport { duplicateElement, getDescendantsCypher }\n","import getTagGraphs from './getTagGraphs.cypher'\nimport tagDescendants from './tagDescendants.cypher'\nimport tagIsRoot from './tagIsRoot.cypher'\n\nexport { getTagGraphs, tagDescendants, tagIsRoot }\n","import getBaseTypes from './getBaseTypes.cypher'\nimport getTypeDescendants from './getTypeDescendants.cypher'\nimport getTypeDescendantsOGM from './getTypeDescendantsOGM.cypher'\nimport getTypeReferences from './getTypeReferences.cypher'\nimport isTypeDescendantOf from './isTypeDescendantOf.cypher'\n\nexport {\n  getBaseTypes,\n  getTypeDescendants,\n  getTypeDescendantsOGM,\n  getTypeReferences,\n  isTypeDescendantOf,\n}\n","export * from './default-directives'\n","// Directives taken from the neo4j docs and the generated sdql schema\nimport { gql } from '@apollo/client'\n\n// Adding them here helps ide autocompletion and error checking for gql segments\nexport const defaultDirectives = gql`\n  \"\"\"\n  Informs @neo4j/graphql of node metadata\n  \"\"\"\n  directive @node(\n    \"\"\"\n    Map the GraphQL type to a custom Neo4j node label\n    \"\"\"\n    label: String\n    \"\"\"\n    Map the GraphQL type to match additional Neo4j node labels\n    \"\"\"\n    labels: [String]\n  ) on OBJECT\n\n  \"\"\"\n  Instructs @neo4j/graphql to invoke the specified callback function when updating or creating the properties on a node or relationship.\n  \"\"\"\n  enum CallbackOperation {\n    CREATE\n    UPDATE\n  }\n\n  directive @callback(\n    \"\"\"\n    Which events to invoke the callback on.\n    \"\"\"\n    operations: [CallbackOperation!]! = [CREATE, UPDATE]\n    \"\"\"\n    The name of the callback function.\n    \"\"\"\n    name: String!\n  ) on FIELD_DEFINITION\n\n  \"\"\"\n  Indicates that the field is an identifier for the object type. By default; autogenerated, and has a unique node property constraint in the database.\n  \"\"\"\n  directive @id(\n    autogenerate: Boolean! = true\n    unique: Boolean! = true\n  ) on FIELD_DEFINITION\n\n  enum TimestampOperation {\n    CREATE\n    UPDATE\n  }\n\n  \"\"\"\n  Instructs @neo4j/graphql to generate timestamps on particular events, which will be available as the value of the specified field.\n  \"\"\"\n  directive @timestamp(\n    \"\"\"\n    Which events to generate timestamps on. Defaults to both create and update.\n    \"\"\"\n    operations: [TimestampOperation!]! = [CREATE, UPDATE]\n  ) on FIELD_DEFINITION\n\n  \"\"\"\n  Instructs @neo4j/graphql to run the specified Cypher statement in order to resolve the value of the field to which the directive is applied.\n  \"\"\"\n  directive @cypher(\n    \"\"\"\n    The Cypher statement to run which returns a value of the same type composition as the field definition on which the directive is applied.\n    \"\"\"\n    statement: String!\n  ) on FIELD_DEFINITION\n\n  \"\"\"\n  Instructs @neo4j/graphql to only include a field in generated input type for creating, and in the object type within which the directive is applied.\n  \"\"\"\n  directive @readonly on FIELD_DEFINITION\n\n  enum ExcludeOperation {\n    CREATE\n    READ\n    UPDATE\n    DELETE\n  }\n\n  \"\"\"\n  Instructs @neo4j/graphql to exclude the specified operations from query and mutation generation. If used without an argument, no queries or mutations will be generated for this type.\n  \"\"\"\n  directive @exclude(\n    operations: [ExcludeOperation!]! = [CREATE, READ, UPDATE, DELETE]\n  ) on OBJECT\n\n  \"\"\"\n  Int | Float | String | Boolean | ID | DateTime\n  \"\"\"\n  scalar Scalar\n\n  \"\"\"\n  Instructs @neo4j/graphql to set the specified value as the default value in the CreateInput type for the object type in which this directive is used.\n  \"\"\"\n  directive @default(\n    \"\"\"\n    The default value to use. Must be a scalar type and must match the type of the field with which this directive decorates.\n    \"\"\"\n    value: Scalar!\n  ) on FIELD_DEFINITION\n\n  \"\"\"\n  Informs @neo4j/graphql that there should be a uniqueness constraint in the database for the decorated field.\n  \"\"\"\n  directive @unique(\n    \"\"\"\n    The name which should be used for this constraint. By default; type name, followed by an underscore, followed by the field name.\n    \"\"\"\n    constraintName: String\n  ) on FIELD_DEFINITION\n\n  enum DIRECTION {\n    IN\n    OUT\n  }\n\n  directive @relationship(\n    type: String\n    properties: String\n    direction: DIRECTION\n  ) on FIELD_DEFINITION\n`\n","module.exports = require(\"@apollo/client\");","export * from './driver'\nexport * from './generate-ogm-types'\nexport * from './ogm'\nexport * from './repository'\nexport * from './with-transaction'\n","import { getEnv } from '@codelab/shared/config'\nimport type { Driver } from 'neo4j-driver'\nimport neo4j from 'neo4j-driver'\n\nconst defaultOptions = () => ({\n  password: getEnv().neo4j.password,\n  uri: getEnv().neo4j.uri,\n  username: getEnv().neo4j.user,\n})\n\n// Keep a single driver instance if possible\nlet driver: Driver | undefined\n\nexport const getDriver = () => {\n  const { password, uri, username } = defaultOptions()\n\n  return (driver ??= neo4j.driver(uri, neo4j.auth.basic(username, password)))\n}\n","export * from './atom'\nexport * from './env'\n","export * from './atoms'\n","import { IAtomType } from '@codelab/shared/abstract/core'\nimport { ObjectTyped } from 'object-typed'\n\nconst getAtomTypes = (prefix: string) =>\n  ObjectTyped.entries(IAtomType)\n    .filter(([keys, values]) => keys.includes(prefix))\n    .map(([keys, values]) => values)\n\nexport const antdAtoms = getAtomTypes('AntDesign')\n\nexport const htmlAtoms = getAtomTypes('Html')\n\nexport const codelabAtoms = getAtomTypes('Codelab')\n\nexport const reactAtoms = getAtomTypes('React')\n","module.exports = require(\"object-typed\");","export * from './env'\nexport * from './vars'\n","import type { IAuth0EnvVars } from './services/auth0'\nimport { Auth0EnvVars } from './services/auth0'\nimport type { ICircleCIEnvVars } from './services/circleci'\nimport { CircleCIEnvVars } from './services/circleci'\nimport type { IGoogleAnalyticsEnvVars } from './services/google-analytics'\nimport { GoogleAnalyticsEnvVars } from './services/google-analytics'\nimport type { IGraphQLEnvVars } from './services/graphql'\nimport { GraphQLEnvVars } from './services/graphql'\nimport type { IHotjarEnvVars } from './services/hotjar'\nimport { HotjarEnvVars } from './services/hotjar'\nimport type { IIntercomEnvVars } from './services/intercom'\nimport { IntercomEnvVars } from './services/intercom'\nimport type { IMailchimpEnvVars } from './services/mailchimp'\nimport { MailchimpEnvVars } from './services/mailchimp'\nimport type { INeo4jEnvVars } from './services/neo4j'\nimport { Neo4jEnvVars } from './services/neo4j'\nimport type { INodeEnvVars } from './services/node'\nimport { NodeEnvVars } from './services/node'\nimport type { ISupabaseEnvVars } from './services/supabase'\nimport { SupabaseEnvVars } from './services/supabase'\nimport type { IVercelEnvVars } from './services/vercel'\nimport { VercelEnvVars } from './services/vercel'\n\nexport interface IEnvironmentVariables {\n  auth0: IAuth0EnvVars\n  circleci: ICircleCIEnvVars\n  googleAnalytics: IGoogleAnalyticsEnvVars\n  graphql: IGraphQLEnvVars\n  hotjar: IHotjarEnvVars\n  intercom: IIntercomEnvVars\n  mailchimp: IMailchimpEnvVars\n  neo4j: INeo4jEnvVars\n  node: INodeEnvVars\n  supabase: ISupabaseEnvVars\n  vercel: IVercelEnvVars\n}\n\nclass EnvironmentVariables implements IEnvironmentVariables {\n  private _mailchimp?: IMailchimpEnvVars\n\n  private _auth0?: IAuth0EnvVars\n\n  private _circleci?: ICircleCIEnvVars\n\n  private _googleAnalytics?: IGoogleAnalyticsEnvVars\n\n  private _hotjar?: IHotjarEnvVars\n\n  private _intercom?: IIntercomEnvVars\n\n  private _neo4j?: INeo4jEnvVars\n\n  private _supabase?: ISupabaseEnvVars\n\n  private _vercel?: IVercelEnvVars\n\n  private _node?: INodeEnvVars\n\n  private _graphql?: IGraphQLEnvVars\n\n  private static instance?: EnvironmentVariables\n\n  public static getInstance(): EnvironmentVariables {\n    if (!EnvironmentVariables.instance) {\n      EnvironmentVariables.instance = new EnvironmentVariables()\n    }\n\n    return EnvironmentVariables.instance\n  }\n\n  public get mailchimp() {\n    return (this._mailchimp ??= new MailchimpEnvVars())\n  }\n\n  public get auth0() {\n    return (this._auth0 ??= new Auth0EnvVars(this.graphql))\n  }\n\n  public get circleci() {\n    return (this._circleci ??= new CircleCIEnvVars())\n  }\n\n  public get googleAnalytics() {\n    return (this._googleAnalytics ??= new GoogleAnalyticsEnvVars())\n  }\n\n  public get hotjar() {\n    return (this._hotjar ??= new HotjarEnvVars())\n  }\n\n  public get intercom() {\n    return (this._intercom ??= new IntercomEnvVars())\n  }\n\n  public get neo4j() {\n    return (this._neo4j ??= new Neo4jEnvVars())\n  }\n\n  public get supabase() {\n    return (this._supabase ??= new SupabaseEnvVars())\n  }\n\n  public get vercel() {\n    return (this._vercel ??= new VercelEnvVars())\n  }\n\n  public get node() {\n    return (this._node ??= new NodeEnvVars())\n  }\n\n  public get graphql() {\n    return (this._graphql ??= new GraphQLEnvVars(this.vercel))\n  }\n}\n\nexport const getEnv = () => EnvironmentVariables.getInstance()\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport * as env from 'env-var'\nimport type { IGraphQLEnvVars } from './graphql'\n\nexport interface IAuth0EnvVars {\n  baseUrl: string\n  clientId: string\n  clientSecret: string\n  cypressUsername: string\n  cypressPassword: string\n  issuerBaseUrl: string\n  audience: string\n  secret: string\n}\n/* *\n * https://github.com/auth0/nextjs-auth0/issues/383\n *\n * `isVercel` is runtime\n * `isVercelPreview` is build-time\n */\nexport class Auth0EnvVars implements IAuth0EnvVars {\n  private _clientId?: string\n\n  private _clientSecret?: string\n\n  private _cypressUsername?: string\n\n  private _cypressPassword?: string\n\n  private _issuerBaseUrl?: string\n\n  private _secret?: string\n\n  private _audience?: string\n\n  constructor(private readonly graphql: IGraphQLEnvVars) {}\n\n  get clientId(): string {\n    return (this._clientId ??= env.get('AUTH0_CLIENT_ID').required().asString())\n  }\n\n  get clientSecret(): string {\n    return (this._clientSecret ??= env\n      .get('AUTH0_CLIENT_SECRET')\n      .required()\n      .asString())\n  }\n\n  get cypressUsername(): string {\n    return (this._cypressUsername ??= env\n      .get('AUTH0_CYPRESS_USERNAME')\n      .required()\n      .asString())\n  }\n\n  get cypressPassword(): string {\n    return (this._cypressPassword ??= env\n      .get('AUTH0_CYPRESS_PASSWORD')\n      .required()\n      .asString())\n  }\n\n  get issuerBaseUrl(): string {\n    return (this._issuerBaseUrl ??= env\n      .get('AUTH0_ISSUER_BASE_URL')\n      .required()\n      .asString())\n  }\n\n  get secret(): string {\n    return (this._secret ??= env.get('AUTH0_SECRET').required().asString())\n  }\n\n  get audience(): string {\n    return (this._audience ??= env.get('AUTH0_AUDIENCE').required().asString())\n  }\n\n  get baseUrl() {\n    const auth0baseUrl = this.graphql.nextPublicPlatformHost\n    const protocol = this.graphql.isLocal ? 'http' : 'https'\n    const baseUrl = `${protocol}://${auth0baseUrl}`\n\n    return baseUrl\n  }\n}\n","module.exports = require(\"env-var\");","import * as env from 'env-var'\n\nexport interface ICircleCIEnvVars {\n  ci: boolean\n  circleCi: boolean\n}\n\nexport class CircleCIEnvVars implements ICircleCIEnvVars {\n  // Vercel uses '1'\n  // Others may use 'true'\n  private _ci?: boolean\n\n  private _circleCi?: boolean\n\n  get ci() {\n    return (this._ci ??= env.get('CI').default('false').asBool())\n  }\n\n  get circleCi() {\n    return (this._circleCi ??= env.get('CIRCLE').default('false').asBool())\n  }\n}\n","import * as env from 'env-var'\n\nexport interface IGoogleAnalyticsEnvVars {\n  id: string\n}\n\nexport class GoogleAnalyticsEnvVars implements IGoogleAnalyticsEnvVars {\n  readonly id: string\n\n  constructor() {\n    this.id = env.get('NEXT_PUBLIC_GOOGLE_ANALYTICS').default('').asString()\n  }\n}\n","import type { IVercelEnvVars } from './vercel'\n\nexport interface IGraphQLEnvVars {\n  graphqlApiHost: string\n  graphqlApiOrigin: string\n  isLocal: boolean\n  nextPublicPlatformHost: string\n  protocol: string\n}\n\nexport class GraphQLEnvVars implements IGraphQLEnvVars {\n  private _nextPublicPlatformHost?: string\n\n  constructor(private readonly vercel: IVercelEnvVars) {}\n\n  get isLocal() {\n    return this.nextPublicPlatformHost.includes('127.0.0.1')\n  }\n\n  /**\n   * This is used before module is initialized, so we must access process.env\n   */\n  get nextPublicPlatformHost(): string {\n    const nextPublicPlatformHost = process.env['NEXT_PUBLIC_PLATFORM_HOST']\n\n    if (!nextPublicPlatformHost) {\n      throw new Error('Missing \"NEXT_PUBLIC_PLATFORM_HOST\"')\n    }\n\n    return nextPublicPlatformHost\n\n    // return (this._nextPublicPlatformHost ??= env\n    //   .get('NEXT_PUBLIC_PLATFORM_HOST')\n    //   .required()\n    //   .asString())\n  }\n\n  get graphqlApiHost() {\n    if (this.vercel.isVercelPreview) {\n      const url = this.vercel.nextPublicVercelUrl\n\n      if (!url) {\n        throw new Error('Invalid Vercel url')\n      }\n\n      return url\n    }\n\n    return this.nextPublicPlatformHost\n  }\n\n  get graphqlApiOrigin() {\n    return `${this.protocol}://${this.graphqlApiHost}/api/graphql`\n  }\n\n  get protocol() {\n    return this.isLocal ? 'http' : 'https'\n  }\n}\n","import * as env from 'env-var'\n\nexport interface IHotjarEnvVars {\n  id: number\n  version: number\n}\n\nexport class HotjarEnvVars implements IHotjarEnvVars {\n  readonly id: number\n\n  readonly version: number\n\n  constructor() {\n    this.id = env.get('NEXT_PUBLIC_HOTJAR_ID').default('0').asInt()\n    this.version = env.get('NEXT_PUBLIC_HOTJAR_VERSION').default('0').asInt()\n  }\n}\n","import * as env from 'env-var'\n\nexport interface IIntercomEnvVars {\n  appId: string\n}\n\nexport class IntercomEnvVars implements IIntercomEnvVars {\n  readonly appId: string\n\n  constructor() {\n    this.appId = env.get('NEXT_PUBLIC_INTERCOM_APP_ID').default('').asString()\n  }\n}\n","import * as env from 'env-var'\n\nexport interface IMailchimpEnvVars {\n  apiKey: string\n  listId: string\n  serverPrefix: string\n}\n\nexport class MailchimpEnvVars implements IMailchimpEnvVars {\n  apiKey: string\n\n  listId: string\n\n  serverPrefix: string\n\n  constructor() {\n    console.log(process.env['MAILCHIMP_API_KEY'])\n    this.apiKey = env.get('MAILCHIMP_API_KEY').required().asString()\n    this.listId = env.get('MAILCHIMP_LIST_ID').required().asString()\n    this.serverPrefix = env.get('MAILCHIMP_SERVER_PREFIX').required().asString()\n  }\n}\n","import * as env from 'env-var'\n\nexport interface INeo4jEnvVars {\n  password: string\n  uri: string\n  user: string\n}\n\nexport class Neo4jEnvVars implements INeo4jEnvVars {\n  readonly password: string\n\n  readonly uri: string\n\n  readonly user: string\n\n  constructor() {\n    this.password = env.get('NEO4J_PASSWORD').required().asString()\n    this.uri = env.get('NEO4J_URI').required().asUrlString()\n    this.user = env.get('NEO4J_USER').required().asString()\n  }\n}\n","export type NodeEnv = 'development' | 'production' | 'test'\n\nexport interface INodeEnvVars {\n  isDevelopment: boolean\n  isProduction: boolean\n  isTest: boolean\n  nodeEnv: NodeEnv\n}\n\nexport class NodeEnvVars implements INodeEnvVars {\n  private _nodeEnv?: NodeEnv\n\n  get nodeEnv() {\n    return (this._nodeEnv ??= process.env['NODE_ENV'] as NodeEnv)\n\n    // return (this._nodeEnv ??= env\n    //   .get('NODE_ENV')\n    //   .default('development')\n    //   .asEnum(['development', 'production', 'test']))\n  }\n\n  get isDevelopment() {\n    return this.nodeEnv === 'development'\n  }\n\n  get isProduction() {\n    return this.nodeEnv === 'production'\n  }\n\n  get isTest() {\n    return this.nodeEnv === 'test'\n  }\n}\n","export interface ISupabaseEnvVars {\n  key: string\n  url: string\n}\n\nexport class SupabaseEnvVars implements ISupabaseEnvVars {\n  readonly key: string\n\n  readonly url: string\n\n  constructor() {\n    this.key = process.env['NEXT_PUBLIC_SUPABASE_KEY'] || ''\n    this.url = process.env['NEXT_PUBLIC_SUPABASE_URL'] || ''\n  }\n}\n","import * as env from 'env-var'\n\ntype VercelStage = 'development' | 'preview' | 'production'\n\nexport interface IVercelEnvVars {\n  isVercel: boolean\n  isVercelPreview: boolean\n  nextPublicVercelEnv?: VercelStage\n  nextPublicVercelUrl?: string\n  teamIdParam: string\n  vercel: boolean\n  vercelAccessToken: string\n  vercelEnv?: VercelStage\n  vercelProjectId: string\n  vercelTeamId: string\n\n  domainApiUrl(apiVersion?: string): string\n  getBaseHeaders(): HeadersInit\n  projectApiUrl(apiVersion?: string): string\n}\n\nexport class VercelEnvVars implements IVercelEnvVars {\n  private _vercelAccessToken?: string\n\n  private _vercelProjectId?: string\n\n  private _vercelTeamId?: string\n\n  private _vercelEnv?: VercelStage\n\n  private _nextPublicVercelEnv?: VercelStage\n\n  private _nextPublicVercelUrl?: string\n\n  private _vercel?: boolean\n\n  readonly apiUrl = 'https://api.vercel.com'\n\n  get vercelAccessToken() {\n    return (this._vercelAccessToken ??= env\n      .get('VERCEL_ACCESS_TOKEN')\n      .required()\n      .asString())\n  }\n\n  get vercelProjectId() {\n    return (this._vercelProjectId ??= env\n      .get('VERCEL_PROJECT_ID')\n      .required()\n      .asString())\n  }\n\n  get vercelTeamId() {\n    return (this._vercelTeamId ??= env\n      .get('VERCEL_TEAM_ID')\n      .required()\n      .asString())\n  }\n\n  get vercelEnv() {\n    return (this._vercelEnv ??= env\n      .get('VERCEL_ENV')\n      .asEnum(['development', 'preview', 'production']))\n  }\n\n  get nextPublicVercelEnv() {\n    return (this._nextPublicVercelEnv ??= env\n      .get('NEXT_PUBLIC_VERCEL_ENV')\n      .asEnum(['development', 'preview', 'production']))\n  }\n\n  get nextPublicVercelUrl() {\n    return (this._nextPublicVercelUrl ??= env\n      .get('NEXT_PUBLIC_VERCEL_URL')\n      .asString())\n  }\n\n  get vercel() {\n    return (this._vercel ??= env.get('VERCEL').default('false').asBool())\n  }\n\n  projectApiUrl(apiVer = '9') {\n    return `${this.apiUrl}/v${apiVer}/projects/${this.vercelProjectId}`\n  }\n\n  getBaseHeaders() {\n    return {\n      Authorization: `Bearer ${this.vercelAccessToken}`,\n      'Content-Type': 'application/json',\n    }\n  }\n\n  get teamIdParam() {\n    return `teamId=${this.vercelTeamId}`\n  }\n\n  domainApiUrl(apiVer = '6') {\n    return `${this.apiUrl}/v${apiVer}/domains`\n  }\n\n  get isVercel() {\n    return this.vercel || Boolean(this.nextPublicVercelEnv)\n  }\n\n  /**\n   * Should be true only for preview environment, not for production\n   */\n  get isVercelPreview() {\n    return (\n      this.vercelEnv === 'preview' || this.nextPublicVercelEnv === 'preview'\n    )\n  }\n\n  get isProduction() {\n    return (\n      this.vercelEnv === 'production' ||\n      this.nextPublicVercelEnv === 'production'\n    )\n  }\n}\n","/* eslint-disable canonical/sort-keys */\n\nexport const ENV_VARS = {\n  VERCEL_ENV: 'VERCEL_ENV',\n  NEXT_PUBLIC_VERCEL_ENV: 'NEXT_PUBLIC_VERCEL_ENV',\n  NEXT_PUBLIC_PLATFORM_HOST: 'NEXT_PUBLIC_PLATFORM_HOST',\n\n  // Auth0\n  AUTH0_AUDIENCE: 'AUTH0_AUDIENCE',\n  AUTH0_ISSUER_BASE_URL: 'AUTH0_ISSUER_BASE_URL',\n  AUTH0_CLIENT_ID: 'AUTH0_CLIENT_ID',\n  AUTH0_CLIENT_SECRET: 'AUTH0_CLIENT_SECRET',\n  AUTH0_SECRET: 'AUTH0_SECRET',\n\n  // Auth0 user\n  AUTH0_CYPRESS_USERNAME: 'AUTH0_CYPRESS_USERNAME',\n  AUTH0_CYPRESS_PASSWORD: 'AUTH0_CYPRESS_PASSWORD',\n\n  // CI\n  CI: 'CI',\n\n  // System\n  NODE_ENV: 'NODE_ENV',\n}\n","module.exports = require(\"neo4j-driver\");","import { generate } from '@neo4j/graphql-ogm'\nimport * as fs from 'fs'\nimport * as path from 'path'\nimport * as prettier from 'prettier'\nimport { getOgm } from './ogm'\n\nexport const generateOgmTypes = async () => {\n  const outFile = path.resolve(\n    process.cwd(),\n    'libs/backend/abstract/codegen',\n    'src/ogm-types.gen.ts',\n  )\n\n  const output = await generate({\n    noWrite: true,\n    ogm: await getOgm(),\n    outFile,\n  })\n    .then((data) => {\n      console.info('OGM type generated!')\n\n      return data\n    })\n    .catch((error) =>\n      console.error(`[generateOgmTypes] ${JSON.stringify(error, null, 2)}`),\n    )\n\n  // Get prettier config\n  const options = await prettier.resolveConfig(outFile)\n\n  // Format\n  const formatted = prettier.format(`${output}`, {\n    ...options,\n    filepath: outFile,\n  })\n\n  /**\n   * Save to abstract folder as well for exporting just the interfaces\n   */\n  fs.writeFileSync(outFile, formatted)\n}\n","module.exports = require(\"@neo4j/graphql-ogm\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"prettier\");","import type { ModelMap } from '@codelab/backend/abstract/codegen'\nimport { OGM } from '@neo4j/graphql-ogm'\nimport { pureResolvers } from '../resolver'\nimport { typeDefs } from '../schema'\nimport { getDriver } from './driver'\n\n// Keep a single OGM instance\nlet ogm: OGM<ModelMap> | undefined\n\nexport const getOgm = async () => {\n  if (!ogm) {\n    ogm = new OGM({\n      config: {\n        enableRegex: true,\n      },\n      driver: getDriver(),\n      resolvers: pureResolvers,\n      typeDefs,\n    })\n  }\n\n  await ogm.init()\n\n  return ogm\n}\n","export * from './pure-resolver'\nexport * from './resolvers'\n","export * from './pure-resolvers'\n","import { mergeResolvers } from '@graphql-tools/merge'\nimport type { IResolvers } from '@graphql-tools/utils'\nimport { appResolver } from './app'\nimport { domainResolver } from './domain'\nimport { elementResolver } from './element'\nimport { pageResolver } from './page'\nimport { typeResolver } from './type'\n\nexport const pureResolvers: IResolvers = mergeResolvers([\n  appResolver,\n  domainResolver,\n  elementResolver,\n  pageResolver,\n  typeResolver,\n])\n","module.exports = require(\"@graphql-tools/merge\");","export * from './app.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { name } from './field/app-name'\nimport { slug } from './field/app-slug'\n\nexport const appResolver: IResolvers = {\n  App: {\n    name,\n    slug,\n  },\n}\n","import type { App } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\n\n/**\n * `_compoundName` contains format `userId-name`, which allows page name to be unique across users.\n *\n * We can compute name by replacing the ID\n */\nexport const name: IFieldResolver<App, unknown> = (app) => {\n  return app._compoundName.replace(`${app.owner.auth0Id}-`, '')\n}\n","import type { App } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\nimport slugify from 'voca/slugify'\nimport { name } from './app-name'\n\n/**\n * Takes the name and slugify it\n */\nexport const slug: IFieldResolver<App, unknown> = (\n  app,\n  args,\n  context,\n  info,\n) => {\n  // Only need source, but pass rest in to satisfy resolver interface\n  return slugify(name(app, args, context, info))\n}\n","module.exports = require(\"voca/slugify\");","export * from './domain.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { domainConfig } from './field/domain-config'\nimport { projectDomain } from './field/project-domain'\n\nexport const domainResolver: IResolvers = {\n  Domain: {\n    domainConfig,\n    projectDomain,\n  },\n}\n","import type { Domain } from '@codelab/backend/abstract/codegen'\nimport { vercelApis } from '@codelab/backend/infra/adapter/vercel'\nimport type { IFieldResolver } from '@graphql-tools/utils'\n\nexport const domainConfig: IFieldResolver<Domain, unknown, unknown> = async ({\n  name,\n}) => {\n  const res = await vercelApis.domain.getDomainConfig(name)\n\n  // await handleAPIError(res, 'getConfig - vercel')\n  if (!res.ok) {\n    return { misconfigured: false }\n  }\n\n  return await res.json()\n}\n","export * from './domain'\nexport * from './vercel'\n","import { addDomain } from './add-domain'\nimport { getDomainConfig } from './get-domain-config'\nimport { getProjectDomain, PROJECT_NOT_FOUND } from './get-project-domain'\n\nexport const domainApis = {\n  //  addDomain is still needed because it is used when importing domains and apps\n  addDomain,\n  getDomainConfig,\n  getProjectDomain,\n}\n\nexport { PROJECT_NOT_FOUND }\n","import { getEnv } from '@codelab/shared/config'\n\nexport const addDomain = (name: string) => {\n  const { getBaseHeaders, projectApiUrl, teamIdParam } = getEnv().vercel\n  const url = `${projectApiUrl()}/domains?${teamIdParam}`\n\n  return fetch(url, {\n    body: JSON.stringify({\n      method: 'add',\n      name,\n    }),\n    headers: getBaseHeaders(),\n    method: 'POST',\n  })\n}\n","import { getEnv } from '@codelab/shared/config'\n\n/**\n * https://vercel.com/docs/rest-api#endpoints/domains/get-a-domain-s-configuration\n *\n * @param name\n */\nexport const getDomainConfig = (name: string) => {\n  const { domainApiUrl, getBaseHeaders, teamIdParam } = getEnv().vercel\n  const url = `${domainApiUrl()}/${name}/config?${teamIdParam}`\n\n  return fetch(url, {\n    headers: getBaseHeaders(),\n    method: 'GET',\n  })\n}\n","import { getEnv } from '@codelab/shared/config'\nimport fetch from 'cross-fetch'\n\nexport const PROJECT_NOT_FOUND = 404\n\n/**\n * https://vercel.com/docs/rest-api#endpoints/projects/get-a-project-domain\n *\n * 400 - One of the provided values in the request query is invalid.\n * 404 - Project not found\n */\nexport const getProjectDomain = (name: string) => {\n  const { getBaseHeaders, projectApiUrl, teamIdParam } = getEnv().vercel\n  const url = `${projectApiUrl()}/domains/${name}?${teamIdParam}`\n\n  return fetch(url, {\n    headers: getBaseHeaders(),\n    method: 'GET',\n  })\n}\n","module.exports = require(\"cross-fetch\");","import { domainApis } from './domain'\n\nexport const vercelApis = {\n  domain: domainApis,\n}\n","import type { Domain } from '@codelab/backend/abstract/codegen'\nimport { vercelApis } from '@codelab/backend/infra/adapter/vercel'\n\nexport const projectDomain = async ({ name }: Domain) => {\n  const res = await vercelApis.domain.getProjectDomain(name)\n\n  // await handleAPIError(res, 'getProjectDomain - vercel')\n  if (!res.ok) {\n    return { verified: false }\n  }\n\n  return await res.json()\n}\n","export * from './element.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { renderType } from './field/render-type'\n\nexport const elementResolver: IResolvers = {\n  Element: {\n    renderType,\n  },\n  Mutation: {},\n  Query: {},\n}\n","import type { Element } from '@codelab/shared/abstract/codegen'\nimport { IRenderTypeKind } from '@codelab/shared/abstract/core'\n\nexport const renderType = (element: Element) => {\n  const { renderAtomType, renderComponentType } = element\n\n  if (renderAtomType?.id) {\n    return {\n      id: renderAtomType.id,\n      kind: IRenderTypeKind.Atom,\n    }\n  }\n\n  if (renderComponentType?.id) {\n    return {\n      id: renderComponentType.id,\n      kind: IRenderTypeKind.Component,\n    }\n  }\n\n  return null\n}\n","export * from './page.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { name } from './field/page-name'\nimport { slug } from './field/page-slug'\n\nexport const pageResolver: IResolvers = {\n  Mutation: {},\n  Page: {\n    name,\n    slug,\n  },\n  Query: {},\n}\n","import type { Page } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\n\n/**\n * `_compoundName` contains format `appId-name`, which allows page name to be unique across users.\n *\n * We can compute name by replacing the ID\n */\nexport const name: IFieldResolver<Page, unknown> = (page) => {\n  return page._compoundName.replace(`${page.app.id}-`, '')\n}\n","import type { Page } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\nimport slugify from 'voca/slugify'\nimport { name } from './page-name'\n\n/**\n * Takes the name and slugify it\n */\nexport const slug: IFieldResolver<Page, unknown> = (\n  page,\n  args,\n  context,\n  info,\n) => {\n  // Only need source, but pass rest in to satisfy resolver interface\n  return slugify(name(page, args, context, info))\n}\n","export * from './type.resolver'\n","import type { IBaseType } from '@codelab/shared/abstract/codegen'\nimport type { IResolvers } from '@graphql-tools/utils'\nimport { baseTypes } from './query'\n\nexport const typeResolver: IResolvers = {\n  IBaseType: {\n    __resolveType: (type: IBaseType) => type.kind,\n  },\n  Mutation: {},\n  Query: {\n    baseTypes: baseTypes,\n  },\n}\n","export * from './base-types'\n","import type { QueryBaseTypesArgs } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\nimport type { GraphQLRequestContext } from 'graphql-request/build/cjs/types'\nimport { int } from 'neo4j-driver'\nimport { getBaseTypes } from '../../../../cypher'\nimport { withReadTransaction } from '../../../../infra'\n\nexport const baseTypes: IFieldResolver<\n  GraphQLRequestContext,\n  unknown,\n  QueryBaseTypesArgs\n> = (_, params) =>\n  withReadTransaction(async (txn) => {\n    const { options } = params\n    const limit = options?.limit ?? 99999\n    const skip = options?.offset ?? 0\n    const name = options?.where?.name ?? ''\n\n    const { records: getTypesRecords } = await txn.run(getBaseTypes, {\n      limit: int(limit),\n      name,\n      skip: int(skip),\n    })\n\n    const totalCountRecord = getTypesRecords[0]?.get('totalCount')\n    const totalCount = totalCountRecord ? int(totalCountRecord).toNumber() : 0\n\n    const items = getTypesRecords.map((record) => {\n      const type = record.get('type').properties\n      const owner = record.get('owner').properties\n\n      return {\n        ...type,\n        __typename: 'BaseType',\n        owner,\n      }\n    })\n\n    return {\n      items,\n      totalCount,\n    }\n  })\n","import { mergeResolvers } from '@graphql-tools/merge'\nimport type { IResolvers } from '@graphql-tools/utils'\nimport { ogmResolvers } from './ogm-resolver/ogm-resolvers'\nimport { pureResolvers } from './pure-resolver/pure-resolvers'\n\nexport const resolvers: IResolvers = mergeResolvers([\n  pureResolvers,\n  ogmResolvers,\n])\n","import { mergeResolvers } from '@graphql-tools/merge'\nimport type { IResolvers } from '@graphql-tools/utils'\nimport { elementResolver } from './element'\nimport { tagResolver } from './tag'\n\n/**\n * These can't be used by OGM itself, since they can cause circular dependencies.\n */\nexport const ogmResolvers: IResolvers = mergeResolvers([\n  elementResolver,\n  tagResolver,\n])\n","export * from './element.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { descendantElementsFieldResolver } from './field/descedant-elements'\n\nexport const elementResolver: IResolvers = {\n  Element: {\n    descendantElements: descendantElementsFieldResolver,\n  },\n  Mutation: {},\n  Query: {},\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IFieldResolver } from '@graphql-tools/utils'\nimport type { Node } from 'neo4j-driver'\nimport { getDescendantsCypher } from '../../../../cypher'\nimport { Repository, withReadTransaction } from '../../../../infra'\nimport { elementSelectionSet } from '../../../../selectionSet'\n\nexport const descendantElementsFieldResolver: IFieldResolver<\n  IEntity,\n  unknown\n> = (parent) =>\n  withReadTransaction(async (txn) => {\n    const Element = await Repository.instance.Element\n\n    /**\n     * We can still use the same query, but we get ID from context instead\n     */\n    const { records } = await txn.run(getDescendantsCypher, {\n      rootId: parent.id,\n    })\n\n    const descendants = (\n      await Promise.all(\n        records[0]?.get(0).map((descendant: Node) => {\n          const id = descendant.properties.id\n\n          const element = Element.find({\n            selectionSet: elementSelectionSet,\n            where: { id },\n          })\n\n          return element\n        }),\n      )\n    ).flat()\n\n    return descendants\n  })\n","export * from './action-selection-set'\nexport * from './app-selection-set'\nexport * from './atom-selection-set'\nexport * from './component-selection-set'\nexport * from './domain-selection-set'\nexport * from './element-selection-set'\nexport * from './field-selection-set'\nexport * from './page-selection-set'\nexport * from './prop-selection-set'\nexport * from './resource-selection-set'\nexport * from './store-selection-set'\nexport * from './tag-selection-set'\nexport * from './type-selection-set'\nexport * from './user-selection-set'\n","const baseActionSelectionSet = `\n  __typename\n  id\n  name\n  type\n`\n\nconst edgeSelectionProperties = `\n  ... on CodeAction {\n    id\n    name\n  }\n  ... on ApiAction {\n    id\n    name\n  }\n`\n\nexport const apiActionSelectionSet = `\n  ${baseActionSelectionSet}\n  successAction {\n    ${edgeSelectionProperties}\n  }\n  errorAction {\n    ${edgeSelectionProperties}\n  }\n  resource {\n    id\n  }\n  config {\n    data\n    id\n  }\n`\n\nexport const codeActionSelectionSet = `\n  ${baseActionSelectionSet}\n  code\n`\n\nexport const actionSelectionSet = `\n  {\n    ... on CodeAction {\n        ${codeActionSelectionSet}\n    }\n    ... on ApiAction {\n        ${apiActionSelectionSet}\n    }\n  }\n`\n\nexport const exportCodeActionSelectionSet = `{\n  ${baseActionSelectionSet}\n  code\n}`\n\nexport const exportApiActionSelectionSet = `{\n  ${baseActionSelectionSet}\n  successAction {\n    ${edgeSelectionProperties}\n  }\n  errorAction {\n    ${edgeSelectionProperties}\n  }\n  resource {\n    id\n  }\n  config {\n    data\n    id\n  }\n}`\n","import { ownerFieldSelectionSet } from './user-selection-set'\n\nexport const baseAppSelectionSet = `\n  __typename\n  id\n  name\n  slug\n  domains {\n    id\n    name\n    app {\n      id\n    }\n  }\n`\n\nexport const appSelectionSet = `{\n  ${baseAppSelectionSet}\n  ${ownerFieldSelectionSet}\n}`\n\nexport const exportAppSelectionSet = `{\n  ${baseAppSelectionSet}\n\n}`\n","export const userSelectionSet = `{\n  id\n  auth0Id\n  username\n  email\n  roles\n}`\n\nexport const ownerFieldSelectionSet = `\n  owner {\n    auth0Id\n  }\n`\n","import { exportTagSelectionSet, tagSelectionSet } from './tag-selection-set'\nimport { interfaceTypeSelectionSet } from './type-selection-set'\nimport { ownerFieldSelectionSet } from './user-selection-set'\n\nexport const atomSelectionSet = `{\n  id\n  name\n  type\n  api\n    ${interfaceTypeSelectionSet}\n  icon\n  ${ownerFieldSelectionSet}\n  tags\n    ${tagSelectionSet}\n  suggestedChildren {\n    id\n    name\n    type\n  }\n  requiredParents {\n    id\n    name\n    type\n  }\n  externalCssSource\n  externalJsSource\n  externalSourceType\n}`\n\nexport const exportAtomSelectionSet = `{\n  id\n  name\n  type\n  api {\n    id\n  }\n  icon\n  tags\n    ${exportTagSelectionSet}\n  suggestedChildren {\n    id\n    name\n    type\n  }\n  requiredParents {\n    id\n    name\n    type\n  }\n  externalCssSource\n  externalJsSource\n  externalSourceType\n}`\n","import { ownerFieldSelectionSet } from './user-selection-set'\n\n/**\n * Need `name` for `parent` & `children` as lookup key, since id can change during import/export\n */\nexport const tagSelectionSet = `{\n  id\n  name\n  parent {\n    id\n    name\n  }\n  children {\n    id\n    name\n  }\n  ${ownerFieldSelectionSet}\n}`\n\nexport const exportTagSelectionSet = `{\n  id\n  name\n  parent {\n    id\n    name\n  }\n  children {\n    id\n    name\n  }\n}`\n","import { fieldSelectionSet } from './field-selection-set'\nimport { ownerFieldSelectionSet } from './user-selection-set'\n\n/**\n * We omit user during export, since this creates a non-reproducible file if exported from different accounts\n */\nconst exportBaseTypeSelection = `\n  __typename\n  id\n  kind\n  name\n`\n\nexport const baseTypeSelection = `\n  __typename\n  id\n  kind\n  name\n  ${ownerFieldSelectionSet}\n`\n\nexport const exportPrimitiveTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n  primitiveKind\n}`\n\nexport const exportReactNodeTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n}`\n\nexport const exportRenderPropTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n}`\n\nexport const exportActionTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n}`\n\nexport const exportArrayTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n  itemType {\n    id\n    kind\n  }\n}`\n\nexport const exportEnumTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n  allowedValues {\n    id\n    key\n    value\n  }\n}`\n\nexport const exportInterfaceTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n  fields {\n    id\n  }\n}`\n\nexport const exportUnionTypeSelectionSet = `{\n  ${exportBaseTypeSelection}\n  descendantTypesIds\n  typesOfUnionType {\n    ... on IBaseType {\n      ${exportBaseTypeSelection}\n    }\n  }\n}`\n\nexport const interfaceTypeSelectionSet = `{\n  ${baseTypeSelection}\n  fields\n    ${fieldSelectionSet}\n}`\n\nexport const exportInterfaceTypeWithFieldsSelectionSet = `{\n  ${exportBaseTypeSelection}\n  fields\n    ${fieldSelectionSet}\n}`\n","export const fieldSelectionSet = `{\n  id\n  key\n  name\n  description\n  validationRules\n  defaultValues\n  prevSibling {\n    id\n  }\n  nextSibling {\n    id\n  }\n  fieldType {\n    __typename\n    id\n    kind\n    name\n  }\n  api {\n    id\n  }\n}`\n\nexport const exportFieldSelectionSet = `{\n  id\n  key\n  name\n  description\n  validationRules\n  defaultValues\n  fieldType {\n    __typename\n    id\n    kind\n    name\n  }\n  api {\n    id\n  }\n}`\n","import {\n  elementSelectionSet,\n  exportElementSelectionSet,\n} from './element-selection-set'\nimport { propSelectionSet } from './prop-selection-set'\nimport {\n  exportStoreSelectionSet,\n  storeSelectionSet,\n} from './store-selection-set'\nimport {\n  exportInterfaceTypeWithFieldsSelectionSet,\n  interfaceTypeSelectionSet,\n} from './type-selection-set'\nimport { ownerFieldSelectionSet } from './user-selection-set'\n\nexport const componentSelectionSet = `{\n  id\n  name\n  rootElement\n    ${elementSelectionSet}\n  ${ownerFieldSelectionSet}\n  props\n    ${propSelectionSet}\n  store {\n    ${storeSelectionSet}\n  }\n  api\n    ${interfaceTypeSelectionSet}\n  childrenContainerElement {\n    id\n  }\n  keyGenerator\n}`\n\nexport const exportComponentSelectionSet = `{\n  id\n  name\n  rootElement\n    ${exportElementSelectionSet}\n  props\n    ${propSelectionSet}\n  store {\n    ${exportStoreSelectionSet}\n  }\n  api\n    ${exportInterfaceTypeWithFieldsSelectionSet}\n  childrenContainerElement {\n    id\n  }\n  keyGenerator\n}`\n","import { atomSelectionSet } from './atom-selection-set'\nimport { propSelectionSet } from './prop-selection-set'\n\nconst baseElementSelectionSet = `\n  id\n  name\n  customCss\n  guiCss\n  parentComponent {\n    id\n    name\n  }\n  renderComponentType {\n    id\n    name\n  }\n  renderType {\n    id\n    kind\n  }\n  parent {\n    id\n  }\n  prevSibling {\n    id\n  }\n  nextSibling {\n    id\n  }\n  firstChild {\n    id\n  }\n  props\n    ${propSelectionSet}\n  renderForEachPropKey\n  renderIfExpression\n  propTransformationJs\n  preRenderAction {\n    id\n  }\n  postRenderAction {\n    id\n  }\n`\n\nexport const elementSelectionSet = `{\n  ${baseElementSelectionSet}\n  renderAtomType\n    ${atomSelectionSet}\n}`\n\nexport const exportElementSelectionSet = `{\n  ${baseElementSelectionSet}\n  renderAtomType {\n    id\n    name\n  }\n}`\n","export const propSelectionSet = `{\n  id\n  data\n}`\n","import { actionSelectionSet } from './action-selection-set'\nimport {\n  exportInterfaceTypeWithFieldsSelectionSet,\n  interfaceTypeSelectionSet,\n} from './type-selection-set'\n\nexport const storeSelectionSet = `\n  id\n  name\n  api\n    ${interfaceTypeSelectionSet}\n  actions\n    ${actionSelectionSet}\n`\n\nexport const exportStoreSelectionSet = `\n  id\n  name\n  api\n    ${exportInterfaceTypeWithFieldsSelectionSet}\n  actions\n    ${actionSelectionSet}\n`\n","export const domainSelection = `\n  id\n  name\n  app {\n    id\n  }\n`\n","import {\n  exportStoreSelectionSet,\n  storeSelectionSet,\n} from './store-selection-set'\n\nexport const basePageSelectionSet = `\n  app {\n    id\n  }\n  id\n  name\n  slug\n  kind\n  rootElement {\n    id\n    name\n  }\n  pageContentContainer {\n    id\n    name\n  }\n  url\n`\n\nexport const pageSelectionSet = `{\n  ${basePageSelectionSet}\n  store {\n    ${storeSelectionSet}\n  }\n}`\n\nexport const exportPageSelectionSet = `{\n  ${basePageSelectionSet}\n  store {\n     ${exportStoreSelectionSet}\n  }\n}`\n","export const resourceSelectionSet = `{ \n  id\n  type\n  name\n  config {\n    id\n    data\n  }\n}\n`\n","export * from './tag.resolver'\n","import type { IResolvers } from '@graphql-tools/utils'\nimport { descendants } from './field/tag-descendants'\n\nexport const tagResolver: IResolvers = {\n  Mutation: {},\n  Query: {},\n  Tag: {\n    descendants,\n  },\n}\n","import type { Tag } from '@codelab/shared/abstract/codegen'\nimport type { IFieldResolver } from '@graphql-tools/utils'\nimport type { Node } from 'neo4j-driver'\nimport { tagDescendants } from '../../../../cypher'\nimport { Repository, withReadTransaction } from '../../../../infra'\nimport { tagSelectionSet } from '../../../../selectionSet'\n\nexport const descendants: IFieldResolver<Tag, unknown> = (parent) =>\n  withReadTransaction(async (txn) => {\n    const Tag = await Repository.instance.Tag\n    /**\n     * We can still use the same query, but we get ID from context instead\n     */\n    const { records } = await txn.run(tagDescendants, { rootId: parent.id })\n\n    return (\n      await Promise.all(\n        records[0]?.get(0).map(async (descendant: Node) => {\n          const id = descendant.properties.id\n\n          const tag = await Tag.find({\n            selectionSet: tagSelectionSet,\n            where: { id },\n          })\n\n          return tag\n        }),\n      )\n    ).flat()\n  })\n","export * from './schema'\nexport * from './type-defs'\n","import { JWT_CLAIMS } from '@codelab/shared/abstract/core'\nimport { getEnv } from '@codelab/shared/config'\nimport type { IResolvers } from '@graphql-tools/utils'\nimport { Neo4jGraphQL } from '@neo4j/graphql'\nimport { Neo4jGraphQLAuthJWKSPlugin } from '@neo4j/graphql-plugin-auth'\nimport type { Driver } from 'neo4j-driver'\nimport { typeDefs } from './type-defs'\n\n/**\n * `.` -> `\\\\.`\n */\nconst escapeDotPathKeys = (key: string) => {\n  return key.replace(/\\./g, '\\\\.')\n}\n\n/**\n * Your web app has a session (that’s the cookie) used to verify the user.\n *\n * Your M2M app is using a M2M cookie, since there is no session or user.\n *\n * This is kind of a fuzzy case: the “backend” serves as both a backend to your web app AND an API for your M2M app.\n *\n * You can configure your middleware to respect both the session and the token\n *\n * https://community.auth0.com/t/authenticating-users-and-m2m-with-same-middleware/77369/5\n */\nexport const getSchema = (driver: Driver, resolvers: IResolvers) =>\n  new Neo4jGraphQL({\n    config: {\n      enableRegex: true,\n    },\n    driver,\n    plugins: {\n      /**\n       * JWK (JSON Web Key) - allows applications to retrieve public keys programmatically\n       *\n       * PEM (Privacy Enhanced Mail ) - Certificate of Base 64 encoded public key certificate\n       *\n       * - The JWK contains the public certificate in addition to other claims about the key.\n       *\n       * https://community.auth0.com/t/jwk-vs-pem-what-is-the-difference/61927\n       */\n      auth: new Neo4jGraphQLAuthJWKSPlugin({\n        jwksEndpoint: new URL(\n          '.well-known/jwks.json',\n          getEnv().auth0.issuerBaseUrl,\n        ).href,\n        /**\n         * Use \"dot path\" since our roles path is nested\n         *\n         * https://githubmemory.com/repo/neo4j/graphql/issues/241\n         *\n         * Found out that we need to `Use \\\\. if you have a . in the key.`\n         */\n        rolesPath: `${escapeDotPathKeys(JWT_CLAIMS)}.roles`,\n      }),\n    },\n    resolvers,\n    typeDefs,\n  })\n","module.exports = require(\"@neo4j/graphql\");","module.exports = require(\"@neo4j/graphql-plugin-auth\");","import { gql } from '@apollo/client'\nimport { print } from 'graphql'\nimport { commonSchema } from './common.schema'\nimport { actionSchema } from './model/action.schema'\nimport { adminSchema } from './model/admin.schema'\nimport { appSchema } from './model/app.schema'\nimport { atomSchema } from './model/atom.schema'\nimport { componentSchema } from './model/component.schema'\nimport { domainSchema } from './model/domain.schema'\nimport { elementSchema } from './model/element.schema'\nimport { hookSchema } from './model/hook.schema'\nimport { pageSchema } from './model/page.schema'\nimport { propSchema } from './model/prop.schema'\nimport { resourceSchema } from './model/resource.schema'\nimport { storeSchema } from './model/store.schema'\nimport { tagSchema } from './model/tag.schema'\nimport { userSchema } from './model/user.schema'\nimport { fieldSchema, typeSchema } from './type'\n\nexport const typeDefs = print(gql`\n  ${adminSchema}\n  ${commonSchema}\n  ${adminSchema}\n  ${userSchema}\n  ${appSchema}\n  ${fieldSchema}\n  ${atomSchema}\n  ${pageSchema}\n  ${typeSchema}\n  ${tagSchema}\n  ${elementSchema}\n  ${propSchema}\n  ${hookSchema}\n  ${componentSchema}\n  ${adminSchema}\n  ${storeSchema}\n  ${actionSchema}\n  ${resourceSchema}\n  ${domainSchema}\n`)\n","module.exports = require(\"graphql\");","import { gql } from '@apollo/client'\n\nexport const commonSchema = gql`\n  scalar JSON\n  scalar JSONObject\n`\n","import { gql } from 'graphql-request'\n\nexport const actionSchema = gql`\n  enum ActionKind {\n    \"\"\"\n    Action with custom code\n    \"\"\"\n    CodeAction\n\n    \"\"\"\n    Action responsible for fetching data from a resource\n    \"\"\"\n    ApiAction\n  }\n\n  interface BaseAction {\n    id: ID! @id(autogenerate: false)\n    name: String!\n    type: ActionKind! @readonly\n    store: Store! @relationship(type: \"STORE_ACTION\", direction: IN)\n    element: Element @relationship(type: \"ELEMENT_ACTION\", direction: OUT)\n  }\n\n  type CodeAction implements BaseAction {\n    id: ID!\n    name: String!\n    type: ActionKind! @default(value: CodeAction)\n    store: Store!\n    element: Element\n\n    \"\"\"\n    Code to run when action is triggered\n    \"\"\"\n    code: String!\n  }\n\n  type ApiAction implements BaseAction {\n    id: ID!\n    name: String!\n    type: ActionKind! @default(value: ApiAction)\n    store: Store!\n    element: Element\n\n    \"\"\"\n    Response handlers\n    \"\"\"\n    successAction: AnyAction\n      @relationship(type: \"SUCCESS_ACTION\", direction: OUT)\n    errorAction: AnyAction @relationship(type: \"ERROR_ACTION\", direction: OUT)\n\n    \"\"\"\n    Resource to fetch data from\n    \"\"\"\n    resource: Resource! @relationship(type: \"RESOURCE_ACTION\", direction: OUT)\n    config: Prop! @relationship(type: \"ACTION_CONFIG\", direction: OUT)\n  }\n\n  union AnyAction = ApiAction | CodeAction\n`\n","module.exports = require(\"graphql-request\");","import { gql } from '@apollo/client'\n\nexport const adminSchema = gql`\n  type ResetDatabaseMutationResponse @exclude {\n    success: Boolean\n  }\n\n  type Mutation {\n    # Delete all nodes except for the user\n    resetDatabase: ResetDatabaseMutationResponse\n      @cypher(\n        statement: \"\"\"\n        MATCH (n)\n        WHERE NOT n:User\n        DETACH DELETE n\n        RETURN { success:true }\n        \"\"\"\n      )\n  }\n`\n","import { gql } from '@apollo/client'\n\nexport const appSchema = gql`\n  type App implements WithOwner {\n    id: ID! @id(autogenerate: false)\n    owner: User!\n    # auth0Id-name format to make it unique across user\n    _compoundName: String! @unique\n    name: String! @customResolver(requires: [\"id\", \"_compoundName\"])\n    slug: String! @customResolver(requires: [\"id\", \"_compoundName\"])\n    pages: [Page!]! @relationship(type: \"PAGES\", direction: OUT)\n    domains: [Domain!]! @relationship(type: \"APP_DOMAIN\", direction: IN)\n  }\n\n  extend type App\n    @auth(\n      rules: [\n        {\n          operations: [CREATE, UPDATE, DELETE]\n          roles: [\"User\"]\n          where: { owner: { auth0Id: \"$jwt.sub\" } }\n          allow: { owner: { auth0Id: \"$jwt.sub\" } }\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n        {\n          operations: [CREATE, UPDATE, DELETE]\n          roles: [\"Admin\"]\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n      ]\n    )\n`\n","import { gql } from '@apollo/client'\nimport { __AtomType } from '@codelab/shared/abstract/core'\n\nconst atomTypeSchema = `enum AtomType {\n  ${Object.values(__AtomType).join('\\n')}\n}`\n\nexport const atomSchema = gql`\n  ${atomTypeSchema}\n\n  type Atom implements WithOwner {\n    id: ID! @id(autogenerate: false)\n    owner: User!\n    type: AtomType!\n    name: String! @unique\n    tags: [Tag!]! @relationship(type: \"TAGS_WITH\", direction: OUT)\n    api: InterfaceType! @relationship(type: \"ATOM_API\", direction: OUT)\n    icon: String\n    externalJsSource: String\n    externalCssSource: String\n    externalSourceType: String @unique\n    requiredParents: [Atom!]!\n      @relationship(type: \"REQUIRED_PARRENTS\", direction: OUT)\n    suggestedChildren: [Atom!]!\n      @relationship(type: \"ALLOWED_CHILDREN\", direction: OUT)\n  }\n\n  extend type Atom\n    @auth(\n      rules: [\n        {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"User\"]\n          where: { owner: { auth0Id: \"$jwt.sub\" } }\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n        {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"Admin\"]\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n      ]\n    )\n`\n","import { gql } from '@apollo/client'\n\nexport const componentSchema = gql`\n  type Component implements WithOwner {\n    id: ID! @id(autogenerate: false)\n    name: String!\n    rootElement: Element! @relationship(type: \"COMPONENT_ROOT\", direction: OUT)\n    api: InterfaceType! @relationship(type: \"COMPONENT_API\", direction: OUT)\n    owner: User!\n    store: Store! @relationship(type: \"STORE_OF_COMPONENT\", direction: IN)\n    props: Prop! @relationship(type: \"PROPS_OF_COMPONENT\", direction: OUT)\n\n    # Function to extract a unique key from component input\n    keyGenerator: String\n\n    # This is the slot where prop children is rendered in the component instance\n    # We may want multiple slots in the future\n    childrenContainerElement: Element!\n      @relationship(type: \"CHILDREN_CONTAINER_ELEMENT\", direction: OUT)\n  }\n\n  extend type Component\n    @auth(\n      rules: [\n        { operations: [CONNECT, DISCONNECT], roles: [\"Admin\", \"User\"] }\n        {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"User\"]\n          where: { owner: { auth0Id: \"$jwt.sub\" } }\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n        {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"Admin\"]\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n      ]\n    )\n`\n","import { gql } from '@apollo/client'\n\nexport const domainSchema = gql`\n  # Copied from generated schema\n  type DeleteInfo @exclude {\n    bookmark: String\n    nodesDeleted: Int!\n    relationshipsDeleted: Int!\n  }\n\n  type VercelDomainConfig @exclude {\n    misconfigured: Boolean!\n  }\n\n  type VercelProjectDomain @exclude {\n    verified: Boolean!\n  }\n\n  type Domain {\n    id: ID! @id(autogenerate: false)\n    name: String!\n    app: App! @relationship(type: \"APP_DOMAIN\", direction: OUT)\n    domainConfig: VercelDomainConfig!\n    projectDomain: VercelProjectDomain!\n  }\n\n  # We need custom resolvers to interact with Vercel API, @callback doesn't work for delete\n  type Mutation {\n    createDomains(input: [DomainCreateInput!]!): CreateDomainsMutationResponse!\n    updateDomains(\n      where: DomainWhere!\n      update: DomainUpdateInput!\n    ): UpdateDomainsMutationResponse!\n    deleteDomains(id: String!): DeleteInfo!\n  }\n`\n","import { gql } from '@apollo/client'\nimport { __RenderTypeKind } from '@codelab/shared/abstract/core'\n\nconst renderTypeKindSchema = `enum RenderTypeKind {\n  ${Object.values(__RenderTypeKind).join('\\n')}\n}`\n\nexport const elementSchema = gql`\n  ${renderTypeKindSchema}\n\n  # Create this to match frontend\n  type RenderType @exclude {\n    id: ID!\n    kind: RenderTypeKind!\n  }\n\n  type Element {\n    id: ID! @id(autogenerate: false)\n    name: String!\n    nextSibling: Element @relationship(type: \"NODE_SIBLING\", direction: IN)\n    prevSibling: Element @relationship(type: \"NODE_SIBLING\", direction: OUT)\n    firstChild: Element @relationship(type: \"TREE_FIRST_CHILD\", direction: IN)\n    parent: Element @relationship(type: \"TREE_FIRST_CHILD\", direction: OUT)\n    # Used for reverse lookup to see whether element is detached\n    page: Page @relationship(type: \"ROOT_PAGE_ELEMENT\", direction: IN)\n    props: Prop! @relationship(type: \"PROPS_OF_ELEMENT\", direction: OUT)\n\n    # element is the rootElement for this component\n    parentComponent: Component\n      @relationship(type: \"COMPONENT_ROOT\", direction: IN)\n    # Used for the css the user types it manually using the integrated code editor. This is\n    # a pure css string.\n    customCss: String\n    # Used for the css set by the styling UI. This is a stringified json object of the form:\n    # {[prop: string]: string}, where the prop is a css property and the value is its value.\n    guiCss: String\n    propTransformationJs: String\n    renderForEachPropKey: String\n    renderIfExpression: String\n\n    preRenderAction: BaseAction\n      @relationship(type: \"ELEMENT_ACTION\", direction: OUT)\n    postRenderAction: BaseAction\n      @relationship(type: \"ELEMENT_ACTION\", direction: OUT)\n\n    # Type of element to render, could be either a component or atom\n    renderComponentType: Component\n      @relationship(type: \"RENDER_COMPONENT_TYPE\", direction: OUT)\n    renderAtomType: Atom @relationship(type: \"RENDER_ATOM_TYPE\", direction: OUT)\n    renderType: RenderType\n\n    # This is a custom field resolver\n    descendantElements: [Element!]!\n  }\n`\n","import { gql } from '@apollo/client'\n\nexport const hookSchema = gql`\n  type Hook {\n    id: ID! @id\n    type: AtomType!\n    config: Prop! @relationship(type: \"CONFIG_OF_HOOK\", direction: OUT)\n    element: Element! @relationship(type: \"HOOKS_OF_ELEMENT\", direction: IN)\n  }\n`\n","import { gql } from '@apollo/client'\nimport { __PageKind } from '@codelab/shared/abstract/core'\n\nconst pageKindSchema = `enum PageKind {\n  ${Object.values(__PageKind).join('\\n')}\n}`\n\nexport const pageSchema = gql`\n  ${pageKindSchema}\n\n  type Page {\n    id: ID! @id(autogenerate: false)\n    # appId-name format to make it unique across apps\n    _compoundName: String! @unique\n    name: String! @customResolver(requires: [\"id\", \"_compoundName\"])\n    slug: String! @customResolver(requires: [\"id\", \"_compoundName\"])\n    # The root of the elementTree\n    rootElement: Element!\n      @relationship(type: \"ROOT_PAGE_ELEMENT\", direction: OUT)\n    app: App! @relationship(type: \"PAGES\", direction: IN)\n\n    store: Store! @relationship(type: \"STORE_OF_PAGE\", direction: IN)\n    #getServerSideProps: String\n    # this is an element on _app page tree inside of which child pages content is rendered\n    # default is root \"Body\" element, but can be changed using dropdown on Page Inspector tab\n    pageContentContainer: Element\n      @relationship(type: \"CHILD_PAGE_CONTAINER_ELEMENT\", direction: OUT)\n    kind: PageKind!\n    # when the app will be deployed - the page will be available on this URL\n    url: String!\n  }\n\n  extend type Page\n    @auth(\n      rules: [\n        {\n          operations: [CREATE, UPDATE, DELETE]\n          roles: [\"User\"]\n          where: { app: { owner: { auth0Id: \"$jwt.sub\" } } }\n          allow: { app: { owner: { auth0Id: \"$jwt.sub\" } } }\n        }\n        { operations: [CREATE, UPDATE, DELETE], roles: [\"Admin\"] }\n      ]\n    )\n`\n","import { gql } from '@apollo/client'\n\nexport const propSchema = gql`\n  type Prop {\n    id: ID! @id(autogenerate: false)\n    data: String!\n  }\n`\n","import { gql } from '@apollo/client'\nimport values from 'lodash/values'\n\nenum ResourceType {\n  GraphQL = 'GraphQL',\n  Rest = 'Rest',\n}\n\nexport const resourceSchema = gql`\n  enum ResourceType {${values(ResourceType).join('\\n')}}\n\n  type Resource implements WithOwner {\n    id: ID! @id(autogenerate: false)\n    type: ResourceType!\n    name: String!\n    config: Prop! @relationship(type: \"RESOURCE_CONFIG\", direction: OUT)\n    owner: User!\n  }\n\n  extend type Resource\n  @auth(\n    rules: [\n      { operations: [CONNECT, DISCONNECT], roles: [\"Admin\", \"User\"] }\n      {\n        operations: [UPDATE, CREATE, DELETE]\n        roles: [\"User\"]\n        where: { owner: { auth0Id: \"$jwt.sub\" } }\n        bind: { owner: { auth0Id: \"$jwt.sub\" } }\n      }\n      {\n        operations: [UPDATE, CREATE, DELETE]\n        roles: [\"Admin\"]\n        bind: { owner: { auth0Id: \"$jwt.sub\" } }\n      }\n    ]\n  )\n`\n","module.exports = require(\"lodash/values\");","import { gql } from '@apollo/client'\n\nexport const storeSchema = gql`\n  type Store {\n    id: ID! @id(autogenerate: false)\n    name: String!\n    api: InterfaceType! @relationship(type: \"STORE_STATE_API\", direction: OUT)\n    actions: [AnyAction!]! @relationship(type: \"STORE_ACTION\", direction: OUT)\n    component: Component\n      @relationship(type: \"STORE_OF_COMPONENT\", direction: OUT)\n    page: Page @relationship(type: \"STORE_OF_PAGE\", direction: OUT)\n  }\n`\n","import { gql } from '@apollo/client'\nimport { tagIsRoot } from '../../cypher'\n\nexport const tagSchema = gql`\n  type Tag {\n    id: ID! @id(autogenerate: false)\n    name: String! @unique\n    # Could have multiple roots, just all different trees\n    isRoot: Boolean\n      @cypher(statement: \"\"\"${tagIsRoot}\"\"\")\n    parent: Tag @relationship(type: \"CHILDREN\", direction: IN)\n    children: [Tag!]! @relationship(type: \"CHILDREN\", direction: OUT)\n    owner: User! @relationship(type: \"OWNED_BY\", direction: OUT)\n    atoms: [Atom!]! @relationship(type: \"TAGS_WITH\", direction: IN)\n\n    # This is a custom resolver\n    descendants: [Tag!]!\n  }\n\n  extend type Tag\n    @auth(\n      rules: [\n        {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"Admin\"]\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n        {\n          roles: [\"User\"]\n          operations: [UPDATE, CREATE, DELETE]\n          where: { owner: { auth0Id: \"$jwt.sub\" } }\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n        }\n      ]\n    )\n`\n","import { gql } from '@apollo/client'\n\nexport const userSchema = gql`\n  enum Role {\n    User\n    Admin\n  }\n\n  interface WithOwner {\n    owner: User! @relationship(type: \"OWNED_BY\", direction: OUT)\n  }\n\n  type User @exclude(operations: [UPDATE]) {\n    id: ID! @id(autogenerate: false)\n    auth0Id: String! @unique\n    email: String!\n    username: String! @unique\n    types: [BaseType!]! @relationship(type: \"OWNED_BY\", direction: IN)\n    apps: [App!]! @relationship(type: \"OWNED_BY\", direction: IN)\n    elements: [Element!]! @relationship(type: \"OWNED_BY\", direction: IN)\n    components: [Component!]! @relationship(type: \"OWNED_BY\", direction: IN)\n    atoms: [Atom!]! @relationship(type: \"OWNED_BY\", direction: IN)\n    # Some issue using required array of enum, can't add using []! signature\n    # roles: [Role!] @default(value: User)\n    roles: [Role!]\n    tags: [Tag!]! @relationship(type: \"OWNED_BY\", direction: IN)\n  }\n\n  #  extend type User\n  #    @auth(\n  #      rules: [\n  #        {\n  #          operations: [CREATE, UPDATE]\n  #          roles: [\"User\"]\n  #          where: { auth0Id: \"$jwt.sub\" }\n  #          bind: { auth0Id: \"$jwt.sub\" }\n  #        }\n  #        {\n  #          operations: [UPDATE, CREATE, DELETE]\n  #          roles: [\"Admin\"]\n  #          #          where: { auth0Id: \"$jwt.sub\" }\n  #          #          bind: { auth0Id: \"$jwt.sub\" }\n  #        }\n  #      ]\n  #    )\n`\n","export * from './field.schema'\nexport * from './type.schema'\n","import { gql } from '@apollo/client'\n\nexport const fieldSchema = gql`\n  type Field {\n    id: ID!\n    key: String!\n    name: String\n    nextSibling: Field @relationship(type: \"FIELD_NEXT_SIBLING\", direction: IN)\n    prevSibling: Field @relationship(type: \"FIELD_PREV_SIBLING\", direction: OUT)\n    description: String\n    validationRules: String\n    defaultValues: String\n    fieldType: IBaseType! @relationship(type: \"FIELD_TYPE\", direction: OUT)\n    # API the field belongs to\n    api: InterfaceType! @relationship(type: \"INTERFACE_FIELD\", direction: IN)\n  }\n`\n","import { gql } from '@apollo/client'\nimport { __ElementTypeKind } from '@codelab/shared/abstract/core'\nimport {\n  getTypeDescendants,\n  getTypeReferences,\n  isTypeDescendantOf,\n} from '../../cypher/type'\n\nconst elementTypeTypeKindSchema = `enum ElementTypeKind {\n  ${Object.values(__ElementTypeKind).join('\\n')}\n}`\n\nexport const typeSchema = gql`\n  enum TypeKind {\n    PrimitiveType\n    EnumType\n    ArrayType\n    InterfaceType\n    LambdaType\n    ElementType\n    RenderPropType\n    ReactNodeType\n    UnionType\n    CodeMirrorType\n    PageType\n    AppType\n    ActionType\n  }\n\n  type TypeReference {\n    \"\"\"\n    The name of the resource referencing the type\n    \"\"\"\n    name: String!\n    \"\"\"\n    The type of resource - Atom, InterfaceType, etc.\n    \"\"\"\n    label: String!\n  }\n\n  input BaseTypesWhere {\n    name: String\n  }\n\n  input GetBaseTypesOptions {\n    limit: Int\n    offset: Int\n    where: BaseTypesWhere\n  }\n\n  type GetBaseTypesReturn {\n    items: [BaseType!]!\n    totalCount: Int!\n  }\n\n  type Query {\n    \"\"\"\n    Does a recursive check to see if the parent type (parentTypeId) contains the descendant type (descendantTypeId) at any level of nesting. Useful for checking for recursion\n    \"\"\"\n    isTypeDescendantOf(parentTypeId: ID!, descendantTypeId: ID!): Boolean\n      @cypher(statement: \"\"\"${isTypeDescendantOf}\"\"\")\n\n    \"\"\"\n    Returns a list of all Type and Atom entities that reference the type with the given id\n    This could be different types of relationships like Atom-Api, ArrayType-itemType, InterfaceType-field, UnionType-unionTypeChild\n    \"\"\"\n    getTypeReferences(typeId: ID!): [TypeReference!]\n      @cypher(statement: \"\"\"${getTypeReferences}\"\"\")\n\n    baseTypes(\n      options: GetBaseTypesOptions\n    ): GetBaseTypesReturn!\n  }\n\n  interface IBaseType {\n    id: ID! @id(autogenerate: false)\n    kind: TypeKind! @readonly\n    name: String!\n    # fields: [Field!]! @relationship(type: \"FIELD_TYPE\", direction: OUT)\n    # we don't need an @auth here, because the User's @auth already declares rules for connect/disconnect\n    owner: User!\n      @relationship(\n        type: \"OWNED_BY\",\n        direction: OUT\n      )\n  }\n\n  # for defining returning data only\n  type BaseType implements IBaseType @exclude(operations: [CREATE, READ, UPDATE, DELETE]) {\n    id: ID!\n    kind: TypeKind!\n    name: String! @unique\n    owner: User!\n  }\n\n  # https://github.com/neo4j/graphql/issues/1105\n  extend interface IBaseType\n  @auth(\n    rules: [\n      {\n        operations: [UPDATE, CREATE, DELETE]\n        roles: [\"User\"]\n        where: { owner: { auth0Id: \"$jwt.sub\" } }\n        bind: { owner: { auth0Id: \"$jwt.sub\" } }\n      }\n      {\n          operations: [UPDATE, CREATE, DELETE]\n          roles: [\"Admin\"]\n          # Admin can access all types, so no need for where\n          # where: { owner: { auth0Id: \"$jwt.sub\" } }\n          bind: { owner: { auth0Id: \"$jwt.sub\" } }\n      }\n    ]\n  )\n\n  interface WithDescendants {\n    descendantTypesIds: [ID!]!\n        @cypher(statement: \"\"\"${getTypeDescendants}\"\"\")\n  }\n\n  \"\"\"\n  Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean\n  \"\"\"\n  type PrimitiveType implements IBaseType @node(labels: [\"Type\", \"PrimitiveType\"])  {\n    id: ID!\n    kind: TypeKind! @default(value: PrimitiveType)\n    name: String! @unique\n    owner: User!\n    # There seems to be an issue with the unique constrain right now https://github.com/neo4j/graphql/issues/915\n    primitiveKind: PrimitiveTypeKind! @unique\n  }\n\n  enum PrimitiveTypeKind {\n    String\n    Integer\n    Boolean\n    Number\n  }\n\n  \"\"\"\n  ArrayType Allows defining a variable number of items of a given type.\n  Contains a reference to another type which is the array item type.\n  \"\"\"\n  type ArrayType implements IBaseType & WithDescendants @node(labels: [\"Type\", \"ArrayType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: ArrayType)\n    name: String!\n    owner: User!\n    # ArrayTypes can be shared between components/atoms\n    fieldRefs: [Field!]! @relationship(type: \"FIELD_TYPE\", direction: IN)\n    descendantTypesIds: [ID!]!\n    itemType: IBaseType!\n      @relationship(\n        type: \"ARRAY_ITEM_TYPE\",\n        direction: OUT,\n      )\n  }\n\n  \"\"\"\n  Allows picking one of a set of types\n  \"\"\"\n  type UnionType implements IBaseType & WithDescendants @node(labels: [\"Type\", \"UnionType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: UnionType)\n    name: String! @unique\n    owner: User!\n    descendantTypesIds: [ID!]!\n    typesOfUnionType: [AnyType!]!\n      @relationship(\n        type: \"UNION_TYPE_CHILD\",\n        direction: OUT,\n      )\n  }\n\n\n\n  \"\"\"\n  Represents an object type with multiple fields\n  \"\"\"\n  type InterfaceType implements IBaseType & WithDescendants @node(labels: [\"Type\", \"InterfaceType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: InterfaceType)\n    name: String!\n    owner: User!\n    # InterfaceTypes can be shared between components/atoms\n    fieldRefs: [Field!]! @relationship(type: \"FIELD_TYPE\", direction: IN)\n    descendantTypesIds: [ID!]!\n    # List of atoms that have this interface as their api type\n    apiOfAtoms: [Atom!]!\n      @relationship(\n        type: \"ATOM_API\",\n        direction: IN\n      )\n    # Fields are defined as a set of list to other types\n    fields: [Field!]!\n      @relationship(\n        type: \"INTERFACE_FIELD\",\n        direction: OUT\n      )  }\n\n  \"\"\"\n  Allows picking an element from the current tree\n  Is passed to the rendered element as a React node\n  Prop values for this type have the shape of TypedProp in order to\n  be distinguished from other element types.\n  Comparison between different element types:\n  - RenderPropType: Component select box, results it '(props) => ReactNode' value\n  - ReactNodeType: Component select box, results it 'ReactNode' value\n  - ElementType: Current tree element select box, results it 'ReactNode' value\n  \"\"\"\n  type ElementType implements IBaseType @node(labels: [\"Type\", \"ElementType\"])  {\n    id: ID!\n    kind: TypeKind! @default(value: ElementType)\n    name: String!\n    owner: User!\n    \"\"\"\n    Allows scoping the type of element to only descendants, children or all elements\n    \"\"\"\n    elementKind: ElementTypeKind!\n  }\n\n  \"\"\"\n  Allows picking a Component from the list of components.\n  It is passed to the rendered element as a function that takes props as input\n  and returns a React element: '(props) => ReactNode'\n  Prop values for this type have the shape of TypedProp in order to\n  be distinguished from other element types.\n  Comparison between different element types:\n  - RenderPropType: Component select box, results it '(props) => ReactNode' value\n  - ReactNodeType: Component select box, results it 'ReactNode' value\n  - ElementType: Current tree element select box, results it 'ReactNode' value\n  \"\"\"\n  type RenderPropType implements IBaseType @node(labels: [\"Type\", \"RenderPropType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: RenderPropType)\n    name: String! @unique\n    owner: User!\n  }\n\n  \"\"\"\n  Allows picking a Component from the list of components.\n  It is passed to the rendered element as a React node: \\`ReactNode\\`\n  Prop values for this type have the shape of TypedProp in order to\n  be distinguished from other element types.\n  Comparison between different element types:\n  - RenderPropType: Component select box, results it '(props) => ReactNode' value\n  - ReactNodeType: Component select box, results it 'ReactNode' value\n  - ElementType: Current tree element select box, results it 'ReactNode' value\n  \"\"\"\n  type ReactNodeType implements IBaseType @node(labels: [\"Type\", \"ReactNodeType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: ReactNodeType)\n    name: String! @unique\n    owner: User!\n  }\n\n  ${elementTypeTypeKindSchema}\n\n  \"\"\"\n  Allows choosing one of a set of allowed values.\n  The value gets passed to the render pipe as a Enum Type Value id.\n  The actual value must be de-referenced by the id.\n  \"\"\"\n  type EnumType implements IBaseType @node(labels: [\"Type\", \"EnumType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: EnumType)\n    name: String!\n    owner: User!\n    # Allows reverse lookup and get all api's enums\n    # EnumTypes can be shared between components/atoms\n    fieldRefs: [Field!]! @relationship(type: \"FIELD_TYPE\", direction: IN)\n    allowedValues: [EnumTypeValue!]!\n      @relationship(\n        type: \"ALLOWED_VALUE\",\n        direction: OUT,\n      )\n  }\n\n  type EnumTypeValue {\n    enumType: EnumType @relationship(type: \"ALLOWED_VALUE\", direction: IN)\n    id: ID!\n    key: String!\n    value: String!\n  }\n\n  \"\"\"\n  Allows picking a lambda\n  \"\"\"\n  type LambdaType implements IBaseType @node(labels: [\"Type\", \"LambdaType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: LambdaType)\n    name: String!\n    owner: User!\n  }\n\n  \"\"\"\n  Allows picking a page from the list of pages\n  \"\"\"\n  type PageType implements IBaseType @node(labels: [\"Type\", \"PageType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: PageType)\n    name: String!\n    owner: User!\n  }\n\n  \"\"\"\n  Allows picking a app from the list of apps\n  \"\"\"\n  type AppType implements IBaseType @node(labels: [\"Type\", \"AppType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: AppType)\n    name: String!\n    owner: User!\n  }\n\n  \"\"\"\n  Allows picking a action from the list of actions\n  \"\"\"\n  type ActionType implements IBaseType @node(labels: [\"Type\", \"ActionType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: ActionType)\n    name: String! @unique\n    owner: User!\n  }\n\n  \"\"\"\n  Allows editing the value using a code mirror editor\n  \"\"\"\n  type CodeMirrorType implements IBaseType @node(labels: [\"Type\", \"CodeMirrorType\"]) {\n    id: ID!\n    kind: TypeKind! @default(value: CodeMirrorType)\n    name: String!\n    owner: User!\n    language: CodeMirrorLanguage!\n  }\n\n  enum CodeMirrorLanguage {\n    Typescript\n    Javascript\n    Css\n    Json\n    Graphql\n    CssInJs\n  }\n\n  union AnyType =\n    PrimitiveType |\n    ArrayType |\n    UnionType |\n    InterfaceType |\n    ElementType |\n    RenderPropType |\n    ReactNodeType |\n    EnumType |\n    LambdaType |\n    PageType |\n    AppType |\n    ActionType |\n    CodeMirrorType\n`\n","import type {\n  ActionTypeModel,\n  ApiActionModel,\n  AppModel,\n  AppTypeModel,\n  ArrayTypeModel,\n  AtomModel,\n  CodeActionModel,\n  CodeMirrorTypeModel,\n  ComponentModel,\n  DomainModel,\n  ElementModel,\n  ElementTypeModel,\n  EnumTypeModel,\n  EnumTypeValueModel,\n  FieldModel,\n  InterfaceTypeModel,\n  LambdaTypeModel,\n  ModelMap,\n  PageModel,\n  PageTypeModel,\n  PrimitiveTypeModel,\n  PropModel,\n  ReactNodeTypeModel,\n  RenderPropTypeModel,\n  ResourceModel,\n  StoreModel,\n  TagModel,\n  UnionTypeModel,\n  UserModel,\n} from '@codelab/backend/abstract/codegen'\nimport type { INeo4jRepository } from '@codelab/backend/abstract/types'\nimport { getOgm } from './ogm'\n\nexport class Repository implements INeo4jRepository {\n  private user: UserModel | undefined\n\n  //\n  // App\n  //\n  private app: AppModel | undefined\n\n  private domain: DomainModel | undefined\n\n  private page: PageModel | undefined\n\n  //\n  // Store\n  //\n  private store: StoreModel | undefined\n\n  private apiAction: ApiActionModel | undefined\n\n  private codeAction: CodeActionModel | undefined\n\n  private resource: ResourceModel | undefined\n\n  //\n  // Component\n  //\n  private atom: AtomModel | undefined\n\n  private element: ElementModel | undefined\n\n  private prop: PropModel | undefined\n\n  private component: ComponentModel | undefined\n\n  private tag: TagModel | undefined\n\n  //\n  // Types\n  //\n  private field: FieldModel | undefined\n\n  private interfaceType: InterfaceTypeModel | undefined\n\n  private primitiveType: PrimitiveTypeModel | undefined\n\n  private unionType: UnionTypeModel | undefined\n\n  private arrayType: ArrayTypeModel | undefined\n\n  private enumType: EnumTypeModel | undefined\n\n  private enumTypeValue: EnumTypeValueModel | undefined\n\n  private lambdaType: LambdaTypeModel | undefined\n\n  private appType: AppTypeModel | undefined\n\n  private actionType: ActionTypeModel | undefined\n\n  private renderPropType: RenderPropTypeModel | undefined\n\n  private reactNodeType: ReactNodeTypeModel | undefined\n\n  private pageType: PageTypeModel | undefined\n\n  private codeMirrorType: CodeMirrorTypeModel | undefined\n\n  private elementType: ElementTypeModel | undefined\n\n  private static _instance?: Repository\n\n  private constructor() {\n    if (Repository._instance) {\n      throw new Error('Use Repository.instance instead of new.')\n    }\n\n    Repository._instance = this\n  }\n\n  static get instance() {\n    return (Repository._instance ??= new Repository())\n  }\n\n  get User() {\n    return (async () =>\n      (this.user ??= await this.getOgmInstance<'User'>(this.user, 'User')))()\n  }\n\n  //\n  // App\n  //\n\n  get App() {\n    return (async () =>\n      (this.app ??= await this.getOgmInstance<'App'>(this.app, 'App')))()\n  }\n\n  get Domain() {\n    return (async () =>\n      (this.domain ??= await this.getOgmInstance<'Domain'>(\n        this.domain,\n        'Domain',\n      )))()\n  }\n\n  get Page() {\n    return (async () =>\n      (this.page ??= await this.getOgmInstance<'Page'>(this.page, 'Page')))()\n  }\n\n  //\n  // Store\n  //\n\n  get Store() {\n    return (async () =>\n      (this.store ??= await this.getOgmInstance<'Store'>(\n        this.store,\n        'Store',\n      )))()\n  }\n\n  get ApiAction() {\n    return (async () =>\n      (this.apiAction ??= await this.getOgmInstance<'ApiAction'>(\n        this.apiAction,\n        'ApiAction',\n      )))()\n  }\n\n  get CodeAction() {\n    return (async () =>\n      (this.codeAction ??= await this.getOgmInstance<'CodeAction'>(\n        this.codeAction,\n        'CodeAction',\n      )))()\n  }\n\n  get Resource() {\n    return (async () =>\n      (this.resource ??= await this.getOgmInstance<'Resource'>(\n        this.resource,\n        'Resource',\n      )))()\n  }\n\n  //\n  // Component\n  //\n\n  get Atom() {\n    return (async () =>\n      (this.atom ??= await this.getOgmInstance<'Atom'>(this.atom, 'Atom')))()\n  }\n\n  get Element() {\n    return (async () =>\n      (this.element ??= await this.getOgmInstance<'Element'>(\n        this.element,\n        'Element',\n      )))()\n  }\n\n  get Prop() {\n    return (async () =>\n      (this.prop ??= await this.getOgmInstance<'Prop'>(this.prop, 'Prop')))()\n  }\n\n  get Component() {\n    return (async () =>\n      (this.component ??= await this.getOgmInstance<'Component'>(\n        this.component,\n        'Component',\n      )))()\n  }\n\n  get Tag() {\n    return (async () =>\n      (this.tag ??= await this.getOgmInstance<'Tag'>(this.tag, 'Tag')))()\n  }\n\n  //\n  // Types\n  //\n\n  get Field() {\n    return (async () =>\n      (this.field ??= await this.getOgmInstance<'Field'>(\n        this.field,\n        'Field',\n      )))()\n  }\n\n  get InterfaceType() {\n    return (async () =>\n      (this.interfaceType ??= await this.getOgmInstance<'InterfaceType'>(\n        this.interfaceType,\n        'InterfaceType',\n      )))()\n  }\n\n  get PrimitiveType() {\n    return (async () =>\n      (this.primitiveType ??= await this.getOgmInstance<'PrimitiveType'>(\n        this.primitiveType,\n        'PrimitiveType',\n      )))()\n  }\n\n  get UnionType() {\n    return (async () =>\n      (this.unionType ??= await this.getOgmInstance<'UnionType'>(\n        this.unionType,\n        'UnionType',\n      )))()\n  }\n\n  get ArrayType() {\n    return (async () =>\n      (this.arrayType ??= await this.getOgmInstance<'ArrayType'>(\n        this.arrayType,\n        'ArrayType',\n      )))()\n  }\n\n  get EnumType() {\n    return (async () =>\n      (this.enumType ??= await this.getOgmInstance<'EnumType'>(\n        this.enumType,\n        'EnumType',\n      )))()\n  }\n\n  get EnumTypeValue() {\n    return (async () =>\n      (this.enumTypeValue ??= await this.getOgmInstance<'EnumTypeValue'>(\n        this.enumTypeValue,\n        'EnumTypeValue',\n      )))()\n  }\n\n  get LambdaType() {\n    return (async () =>\n      (this.lambdaType ??= await this.getOgmInstance<'LambdaType'>(\n        this.lambdaType,\n        'LambdaType',\n      )))()\n  }\n\n  get AppType() {\n    return (async () =>\n      (this.appType ??= await this.getOgmInstance<'AppType'>(\n        this.appType,\n        'AppType',\n      )))()\n  }\n\n  get ActionType() {\n    return (async () =>\n      (this.actionType ??= await this.getOgmInstance<'ActionType'>(\n        this.actionType,\n        'ActionType',\n      )))()\n  }\n\n  get RenderPropType() {\n    return (async () =>\n      (this.renderPropType ??= await this.getOgmInstance<'RenderPropType'>(\n        this.renderPropType,\n        'RenderPropType',\n      )))()\n  }\n\n  get ReactNodeType() {\n    return (async () =>\n      (this.reactNodeType ??= await this.getOgmInstance<'ReactNodeType'>(\n        this.reactNodeType,\n        'ReactNodeType',\n      )))()\n  }\n\n  get PageType() {\n    return (async () =>\n      (this.pageType ??= await this.getOgmInstance<'PageType'>(\n        this.pageType,\n        'PageType',\n      )))()\n  }\n\n  get CodeMirrorType() {\n    return (async () =>\n      (this.codeMirrorType ??= await this.getOgmInstance<'CodeMirrorType'>(\n        this.codeMirrorType,\n        'CodeMirrorType',\n      )))()\n  }\n\n  get ElementType() {\n    return (async () =>\n      (this.elementType ??= await this.getOgmInstance<'ElementType'>(\n        this.elementType,\n        'ElementType',\n      )))()\n  }\n\n  private getOgmInstance = async <ModelKey extends keyof ModelMap>(\n    inst: ModelMap[ModelKey] | undefined,\n    name: keyof ModelMap,\n  ) => {\n    const ogm = await getOgm()\n\n    if (!inst) {\n      return ogm.model(name) as ModelMap[ModelKey]\n    }\n\n    return inst\n  }\n}\n","import type { Transaction } from 'neo4j-driver'\nimport { getDriver } from './driver'\n\ntype TransactionWork<T> = (txn: Transaction) => Promise<T> | T\n\nexport const withReadTransaction = async <T>(\n  readTransaction: TransactionWork<T>,\n) => {\n  const driver = getDriver()\n  const session = driver.session()\n\n  return session\n    .readTransaction((txn) => readTransaction(txn))\n    .catch((error) => {\n      console.error(error)\n      throw error\n    })\n    .finally(() => session.close())\n}\n\nexport const withWriteTransaction = async <T>(\n  writeTransaction: TransactionWork<T>,\n) => {\n  const driver = getDriver()\n  const session = driver.session()\n\n  return session\n    .writeTransaction((txn) => writeTransaction(txn))\n    .catch((error) => {\n      console.error(error)\n      throw error\n    })\n    .finally(() => session.close())\n}\n","export * from './repository'\n","import type { IRepository } from '@codelab/backend/abstract/types'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { withTracing } from '@codelab/shared/infra/otel'\nimport { TTLCache } from '@codelab/shared/utils'\n\nexport abstract class AbstractRepository<\n  Model extends IEntity,\n  ModelData,\n  Where extends { id?: string | null },\n> implements IRepository<Model, ModelData, Where>\n{\n  private findOneCache: TTLCache<string, ModelData | undefined>\n\n  private findCache: TTLCache<string, Array<ModelData>>\n\n  // Set default TTL to 60 seconds\n  constructor(ttl = 60000) {\n    this.findOneCache = new TTLCache<string, ModelData | undefined>(ttl)\n    this.findCache = new TTLCache<string, Array<ModelData>>(ttl)\n  }\n\n  async findOne(where: Where): Promise<ModelData | undefined> {\n    const cacheKey = JSON.stringify(where)\n    const cachedValue = this.findOneCache.get(cacheKey)\n\n    if (cachedValue !== undefined) {\n      return cachedValue\n    }\n\n    const result = (await this.find(where))[0]\n    this.findOneCache.set(cacheKey, result)\n\n    return result\n  }\n\n  async find(where?: Where): Promise<Array<ModelData>> {\n    const cacheKey = JSON.stringify(where)\n    const cachedValue = this.findCache.get(cacheKey)\n\n    if (cachedValue !== undefined) {\n      return cachedValue\n    }\n\n    const results = await this._find(where)\n    this.findCache.set(cacheKey, results)\n\n    return results\n  }\n\n  protected abstract _find(where?: Where): Promise<Array<ModelData>>\n\n  public async add(data: Array<Model>): Promise<Array<ModelData>> {\n    return await withTracing(\n      `${this.constructor.name}.add()`,\n      () => this._add(data),\n      (span) => {\n        const attributes = data[0] ?? {}\n        span.setAttributes(attributes)\n      },\n    )()\n  }\n\n  protected abstract _add(data: Array<Model>): Promise<Array<ModelData>>\n\n  /**\n   * We disallow updating of ID, since it disallows us from keying a where search by name, and having consistent ID.\n   *\n   * Say we created some DTO data that is keyed by name, but with a generated ID. After finding existing record and performing update, we will actually update the ID as we ll.\n   */\n  async update(data: Model, where: Where): Promise<ModelData> {\n    // console.debug(`Updating ${this.constructor.name}`, data, { where })\n\n    const model = await withTracing(\n      `${this.constructor.name}.update()`,\n      () => this._update(data, where),\n      (span) => {\n        const attributes = data\n        span.setAttributes(attributes)\n      },\n    )()\n\n    if (!model) {\n      throw new Error('Model not updated')\n    }\n\n    return model\n  }\n\n  protected abstract _update(\n    data: Model,\n    where: Where,\n  ): Promise<ModelData | undefined>\n\n  /**\n   * Upsert behavior, uses data id by default for upsert. If `where` clause is specified, then it overrides id\n   *\n   * @param where\n   */\n  async save(data: Model, where?: Where): Promise<ModelData> {\n    return withTracing(\n      `${this.constructor.name}.save()`,\n      async () => {\n        const computedWhere = this.getWhere(data, where)\n\n        if (await this.exists(data, computedWhere)) {\n          return this.update(data, computedWhere)\n        }\n\n        const results = (await this.add([data]))[0]\n\n        if (!results) {\n          throw new Error('Save failed')\n        }\n\n        return results\n      },\n      (span) => {\n        const attributes = data\n        span.setAttributes(attributes)\n      },\n    )()\n  }\n\n  async exists(data: Model, where: Where) {\n    return withTracing(`${this.constructor.name}.exists()`, async () => {\n      const results = await this.findOne(where)\n\n      return Boolean(results)\n    })()\n  }\n\n  /**\n   * Specifying a `where` clause overrides the  id\n   */\n  private getWhere(data: Model, where?: Where) {\n    return where ? where : ({ id: data.id } as Where)\n  }\n\n  // protected abstract getTracerName: string\n}\n","export * from './orm'\nexport * from './type'\n","export * from './connect'\nexport * from './disconnect'\nexport * from './node'\nexport * from './reconnect'\nexport * from './where'\n","import type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { whereNode, whereNodeId } from './where'\n\n/**\n * The default way to connect is assumed to be by id's\n */\nexport const connectNodeId = (id: string | null | undefined) =>\n  connectNode('id', id)\n\nexport const connectNodeIds = (ids: Array<string> | undefined = []) => ({\n  connect: ids.map((id) => whereNodeId(id)),\n})\n\nexport const connectNode = (key: string, value: string | null | undefined) =>\n  value\n    ? {\n        connect: whereNode(key, value),\n      }\n    : undefined\n\nexport const connectAuth0Owner = ({ auth0Id }: IAuth0Owner) =>\n  connectNode('auth0Id', auth0Id)\n","export const whereNodeId = (id: string) => whereNode('id', id)\n\nexport const whereNodeIds = (ids: Array<string>) =>\n  ids.map((id) => whereNodeId(id))\n\n/**\n * Trying this version out before combining, so we don't break others\n */\nexport const whereNullableNodeId = (id?: string | null) =>\n  id ? whereNodeId(id) : null\n\nexport const whereNullableNodeIds = (ids?: Array<string> | null) =>\n  ids ? whereNodeIds(ids) : null\n\n/**\n * Not sure if we should use `null` or `undefined`\n */\nexport const whereMaybeNodeId = (id?: string | null) =>\n  id ? whereNodeId(id) : undefined\n\nexport const whereMaybeNodeIds = (ids?: Array<string> | null) =>\n  ids ? whereNodeIds(ids) : undefined\n\n/**\n * Where node\n */\nexport const whereNode = (key: string, value: string) => ({\n  where: {\n    node: {\n      [key]: value,\n    },\n  },\n})\n\nexport const whereMaybeNode = (key: string, value: string | null | undefined) =>\n  value\n    ? {\n        where: {\n          node: {\n            [key]: value,\n          },\n        },\n      }\n    : undefined\n\n/**\n * Used for disconnecting everything\n */\nexport const whereAll = () => ({ where: {} })\n\nexport const whereManyAll = () => [{ where: {} }]\n","import { whereAll, whereManyAll, whereNode, whereNodeId } from './where'\n\n/**\n * Disconnect nodes\n */\nexport const disconnectNodeId = (id: string | null | undefined) =>\n  disconnectNode('id', id)\n\nexport const disconnectNodeIds = (ids: Array<string> | undefined = []) => ({\n  disconnect: ids.map((id) => whereNodeId(id)),\n})\n\nexport const disconnectNode = (\n  key: string,\n  value: string | null | undefined,\n) => ({\n  disconnect: value ? whereNode(key, value) : { where: {} },\n})\n\n/**\n * Disconnect all\n */\nexport const disconnectAll = () => ({\n  disconnect: whereAll(),\n})\n\nexport const disconnectManyAll = () => ({\n  disconnect: whereManyAll(),\n})\n","export const createNode = (node: object) => ({\n  create: {\n    node,\n  },\n})\n","import { connectNode, connectNodeId, connectNodeIds } from './connect'\nimport { disconnectAll, disconnectManyAll } from './disconnect'\n\n/**\n * This disconnects all edges first\n */\nexport const reconnectNodeId = (id: string | null | undefined) => ({\n  ...connectNodeId(id),\n  ...disconnectAll(),\n})\n\nexport const reconnectNode = (key: string, id: string | null | undefined) => ({\n  ...connectNode(key, id),\n  ...disconnectAll(),\n})\n\nexport const reconnectNodeIds = (ids: Array<string> | undefined) => {\n  const connects = ids?.map((id) => ({\n    ...connectNodeIds([id]),\n  }))\n\n  return [disconnectManyAll(), ...(connects ?? [])]\n}\n","export * from './type-input.factory'\n","import type { IPropData } from '@codelab/frontend/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\n\nexport const makeAllTypes = (input?: IPropData) =>\n  Object.values(ITypeKind)\n    .map((kind) => ({ [kind]: input }))\n    .reduce((all, current) => ({ ...all, ...current }), {})\n\nexport const getApiName = (name: string) => {\n  return `${name} API`\n}\n\nexport const getInterfaceName = (type: string) =>\n  `${compoundCaseToTitleCase(type)} API`\n\n// export const makeFieldsCreateInput = (type: ICreateTypeDTO) => {\n//   return {\n//     connect: type.fields.map((f) => ({\n//       where: { node: { id: f.type.id } },\n//       edge: { name: f.name, description: f.description, key: f.key },\n//     })),\n//   }\n// }\n","import type {\n  ArrayType,\n  ArrayTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportArrayTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IArrayTypeDTO } from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeId,\n  reconnectNodeId,\n} from '@codelab/shared/domain/mapper'\n\nexport class ArrayTypeRepository extends AbstractRepository<\n  IArrayTypeDTO,\n  ArrayType,\n  ArrayTypeWhere\n> {\n  private ArrayType = Repository.instance.ArrayType\n\n  async _find(where: ArrayTypeWhere) {\n    return await (\n      await this.ArrayType\n    ).find({\n      selectionSet: exportArrayTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(primitiveTypes: Array<IArrayTypeDTO>) {\n    return (\n      await (\n        await this.ArrayType\n      ).create({\n        input: primitiveTypes.map(\n          ({ __typename, itemType, owner, ...type }) => ({\n            ...type,\n            itemType: connectNodeId(itemType?.id),\n            owner: connectAuth0Owner(owner),\n          }),\n        ),\n        selectionSet: `{ arrayTypes ${exportArrayTypeSelectionSet} }`,\n      })\n    ).arrayTypes\n  }\n\n  protected async _update(\n    { __typename, id, itemType, name, owner, ...primitiveType }: IArrayTypeDTO,\n    where: ArrayTypeWhere,\n  ) {\n    return (\n      await (\n        await this.ArrayType\n      ).update({\n        selectionSet: `{ arrayTypes ${exportArrayTypeSelectionSet} }`,\n        update: {\n          itemType: reconnectNodeId(itemType?.id),\n          name,\n        },\n        where,\n      })\n    ).arrayTypes[0]\n  }\n}\n","import type {\n  EnumType,\n  EnumTypeAllowedValuesFieldInput,\n  EnumTypeAllowedValuesUpdateFieldInput,\n  EnumTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportEnumTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type {\n  IEnumTypeDTO,\n  IEnumTypeValueDTO,\n} from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner, whereNodeId } from '@codelab/shared/domain/mapper'\n\nexport class EnumTypeRepository extends AbstractRepository<\n  IEnumTypeDTO,\n  EnumType,\n  EnumTypeWhere\n> {\n  private EnumType = Repository.instance.EnumType\n\n  async _find(where: EnumTypeWhere) {\n    return await (\n      await this.EnumType\n    ).find({\n      selectionSet: exportEnumTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(enumTypes: Array<IEnumTypeDTO>) {\n    return (\n      await (\n        await this.EnumType\n      ).create({\n        input: enumTypes.map(\n          ({ __typename, allowedValues, owner, ...enumType }) => ({\n            ...enumType,\n            allowedValues: this.mapCreateEnumTypeValues(allowedValues),\n            owner: connectAuth0Owner(owner),\n          }),\n        ),\n        selectionSet: `{ enumTypes ${exportEnumTypeSelectionSet} }`,\n      })\n    ).enumTypes\n  }\n\n  protected async _update(\n    { __typename, allowedValues, id, name, owner, ...enumType }: IEnumTypeDTO,\n    where: EnumTypeWhere,\n  ) {\n    return (\n      await (\n        await this.EnumType\n      ).update({\n        selectionSet: `{ enumTypes ${exportEnumTypeSelectionSet} }`,\n        update: {\n          allowedValues: this.mapUpdateEnumTypeValues(allowedValues),\n          name,\n        },\n        where,\n      })\n    ).enumTypes[0]\n  }\n\n  private mapCreateEnumTypeValues(\n    enumTypeValues: Array<IEnumTypeValueDTO>,\n  ): EnumTypeAllowedValuesFieldInput {\n    return {\n      create: enumTypeValues.map((enumTypeValue) => ({\n        node: {\n          ...enumTypeValue,\n        },\n      })),\n    }\n  }\n\n  private mapUpdateEnumTypeValues(\n    enumTypeValues: Array<IEnumTypeValueDTO>,\n  ): Array<EnumTypeAllowedValuesUpdateFieldInput> {\n    return enumTypeValues.map(({ id, ...enumTypeValue }) => ({\n      ...whereNodeId(id),\n      update: {\n        node: enumTypeValue,\n      },\n    }))\n  }\n}\n","import type { Field, FieldWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  fieldSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IFieldDTO } from '@codelab/shared/abstract/core'\nimport { connectNodeId, reconnectNodeId } from '@codelab/shared/domain/mapper'\n\nexport class FieldRepository extends AbstractRepository<\n  IFieldDTO,\n  Field,\n  FieldWhere\n> {\n  private Field = Repository.instance.Field\n\n  async _find(where: FieldWhere = {}) {\n    return await (\n      await this.Field\n    ).find({\n      selectionSet: fieldSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(fields: Array<IFieldDTO>) {\n    return (\n      await (\n        await this.Field\n      ).create({\n        input: fields.map(({ api, fieldType, ...field }) => ({\n          ...field,\n          api: connectNodeId(api.id),\n          fieldType: connectNodeId(fieldType.id),\n          nextSibling: connectNodeId(field.nextSibling?.id),\n          prevSibling: connectNodeId(field.prevSibling?.id),\n        })),\n      })\n    ).fields\n  }\n\n  /**\n   * For update, we can't assume if fields exist or not.\n   *\n   * Scenario: Say a field was deleted, then we run a seeder, we would have to create for the deleted field\n   */\n  protected async _update(\n    { api, fieldType, id, ...field }: IFieldDTO,\n    where: FieldWhere,\n  ) {\n    return (\n      await (\n        await this.Field\n      ).update({\n        update: {\n          ...field,\n          api: reconnectNodeId(api.id),\n          fieldType: reconnectNodeId(fieldType.id),\n          nextSibling: reconnectNodeId(field.nextSibling?.id),\n          prevSibling: reconnectNodeId(field.prevSibling?.id),\n        },\n        where,\n      })\n    ).fields[0]\n  }\n}\n","import type {\n  InterfaceType,\n  InterfaceTypeFieldsFieldInput,\n  InterfaceTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  interfaceTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type {\n  IFieldDTO,\n  IInterfaceTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeId,\n  connectNodeIds,\n} from '@codelab/shared/domain/mapper'\n\nexport class InterfaceTypeRepository extends AbstractRepository<\n  IInterfaceTypeDTO,\n  InterfaceType,\n  InterfaceTypeWhere\n> {\n  private InterfaceType = Repository.instance.InterfaceType\n\n  async _find(where: InterfaceTypeWhere = {}) {\n    return await (\n      await this.InterfaceType\n    ).find({\n      selectionSet: interfaceTypeSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * If interface doesn't exist, we can safely assume that fields don't exist as well. So fields will always be created.\n   *\n   * Even if interface was deleted & fields are not, it is no harm to leave those old fields un-attached. We could run a clean up process for un-attached fields\n   */\n  protected async _add(interfaceTypes: Array<IInterfaceTypeDTO>) {\n    return (\n      await (\n        await this.InterfaceType\n      ).create({\n        input: interfaceTypes.map(\n          ({ __typename, fields, owner, ...interfaceType }) => ({\n            ...interfaceType,\n            // fields: this.mapCreateFields(fields),\n            fields: connectNodeIds(fields.map(({ id }) => id)),\n            owner: connectAuth0Owner(owner),\n          }),\n        ),\n        selectionSet: `{ interfaceTypes ${interfaceTypeSelectionSet} }`,\n      })\n    ).interfaceTypes\n  }\n\n  /**\n   * For update, we can't assume if fields exist or not.\n   *\n   * Scenario: Say a field was deleted, then we run a seeder, we would have to create for the deleted field\n   */\n  protected async _update(\n    { __typename, fields, id, name, owner, ...data }: IInterfaceTypeDTO,\n    where: InterfaceTypeWhere,\n  ) {\n    return (\n      await (\n        await this.InterfaceType\n      ).update({\n        selectionSet: `{ interfaceTypes ${interfaceTypeSelectionSet} }`,\n        update: {\n          name,\n          // fields: this.mapUpdateFields(fields),\n        },\n        where,\n      })\n    ).interfaceTypes[0]\n  }\n\n  private mapCreateFields(\n    fields: Array<IFieldDTO>,\n  ): InterfaceTypeFieldsFieldInput {\n    return {\n      create: fields.map(\n        ({ api, fieldType, nextSibling, prevSibling, ...field }) => ({\n          node: {\n            ...field,\n            fieldType: connectNodeId(fieldType.id),\n            nextSibling: connectNodeId(nextSibling?.id),\n            prevSibling: connectNodeId(prevSibling?.id),\n          },\n        }),\n      ),\n    }\n  }\n\n  /**\n   * Don't update fields in interface. If done here, would have to assume the fields exist or not.\n   *\n   * Different logic exists for field update or creation here\n   */\n  // private mapUpdateFields(\n  //   fields: Array<IField>,\n  // ): InterfaceTypeFieldsUpdateFieldInput {\n  //   return {\n  //     create: fields.map(({ api, fieldType, ...field }) => ({\n  //       node: {\n  //         ...field,\n  //         fieldType: connectNode(fieldType.id),\n  //       },\n  //     })),\n  //   }\n  // }\n}\n","import type {\n  PrimitiveType,\n  PrimitiveTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportPrimitiveTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IPrimitiveTypeDTO } from '@codelab/shared/abstract/core'\nimport type { BaseTypeUniqueWhere } from '@codelab/shared/abstract/types'\nimport { connectAuth0Owner } from '@codelab/shared/domain/mapper'\n\nexport class PrimitiveTypeRepository extends AbstractRepository<\n  IPrimitiveTypeDTO,\n  PrimitiveType,\n  PrimitiveTypeWhere\n> {\n  private PrimitiveType = Repository.instance.PrimitiveType\n\n  async _find(where: PrimitiveTypeWhere) {\n    return await (\n      await this.PrimitiveType\n    ).find({\n      selectionSet: exportPrimitiveTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(primitiveTypes: Array<IPrimitiveTypeDTO>) {\n    return (\n      await (\n        await this.PrimitiveType\n      ).create({\n        input: primitiveTypes.map(({ __typename, owner, ...type }) => ({\n          ...type,\n          owner: connectAuth0Owner(owner),\n        })),\n        selectionSet: `{ primitiveTypes ${exportPrimitiveTypeSelectionSet} }`,\n      })\n    ).primitiveTypes\n  }\n\n  protected async _update(\n    { __typename, id, name, owner, primitiveKind }: IPrimitiveTypeDTO,\n    where: BaseTypeUniqueWhere,\n  ) {\n    return (\n      await (\n        await this.PrimitiveType\n      ).update({\n        selectionSet: `{ primitiveTypes ${exportPrimitiveTypeSelectionSet} }`,\n        update: { name },\n        where,\n      })\n    ).primitiveTypes[0]\n  }\n}\n","import type {\n  ReactNodeType,\n  ReactNodeTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportReactNodeTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IReactNodeTypeDTO } from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner } from '@codelab/shared/domain/mapper'\n\nexport class ReactNodeTypeRepository extends AbstractRepository<\n  IReactNodeTypeDTO,\n  ReactNodeType,\n  ReactNodeTypeWhere\n> {\n  private ReactNodeType = Repository.instance.ReactNodeType\n\n  async _find(where: ReactNodeTypeWhere) {\n    return await (\n      await this.ReactNodeType\n    ).find({\n      selectionSet: exportReactNodeTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(reactNodeTypes: Array<IReactNodeTypeDTO>) {\n    return (\n      await (\n        await this.ReactNodeType\n      ).create({\n        input: reactNodeTypes.map(\n          ({ __typename, owner, ...reactNodeType }) => ({\n            ...reactNodeType,\n            owner: connectAuth0Owner(owner),\n          }),\n        ),\n        selectionSet: `{ reactNodeTypes ${exportReactNodeTypeSelectionSet} }`,\n      })\n    ).reactNodeTypes\n  }\n\n  protected async _update(\n    { __typename, id, name, owner }: IReactNodeTypeDTO,\n    where: ReactNodeTypeWhere,\n  ) {\n    return (\n      await (\n        await this.ReactNodeType\n      ).update({\n        selectionSet: `{ reactNodeTypes ${exportReactNodeTypeSelectionSet} }`,\n        update: { name },\n        where,\n      })\n    ).reactNodeTypes[0]\n  }\n}\n","import type {\n  RenderPropType,\n  RenderPropTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportRenderPropTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IRenderPropTypeDTO } from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner } from '@codelab/shared/domain/mapper'\n\nexport class RenderPropTypeRepository extends AbstractRepository<\n  IRenderPropTypeDTO,\n  RenderPropType,\n  RenderPropTypeWhere\n> {\n  private RenderPropType = Repository.instance.RenderPropType\n\n  async _find(where: RenderPropTypeWhere) {\n    return await (\n      await this.RenderPropType\n    ).find({\n      selectionSet: exportRenderPropTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(renderPropTypes: Array<IRenderPropTypeDTO>) {\n    return (\n      await (\n        await this.RenderPropType\n      ).create({\n        input: renderPropTypes.map(\n          ({ __typename, owner, ...renderPropType }) => ({\n            ...renderPropType,\n            owner: connectAuth0Owner(owner),\n          }),\n        ),\n        selectionSet: `{ renderPropTypes ${exportRenderPropTypeSelectionSet} }`,\n      })\n    ).renderPropTypes\n  }\n\n  protected async _update(\n    { __typename, id, name, owner }: IRenderPropTypeDTO,\n    where: RenderPropTypeWhere,\n  ) {\n    return (\n      await (\n        await this.RenderPropType\n      ).update({\n        selectionSet: `{ renderPropTypes ${exportRenderPropTypeSelectionSet} }`,\n        update: { name },\n        where,\n      })\n    ).renderPropTypes[0]\n  }\n}\n","import type {\n  UnionType,\n  UnionTypeWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  exportUnionTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IUnionTypeDTO } from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeIds,\n} from '@codelab/shared/domain/mapper'\n\nexport class UnionTypeRepository extends AbstractRepository<\n  IUnionTypeDTO,\n  UnionType,\n  UnionTypeWhere\n> {\n  private UnionType = Repository.instance.UnionType\n\n  async _find(where: UnionTypeWhere) {\n    return await (\n      await this.UnionType\n    ).find({\n      selectionSet: exportUnionTypeSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(unionTypes: Array<IUnionTypeDTO>) {\n    return (\n      await (\n        await this.UnionType\n      ).create({\n        input: unionTypes.map(\n          ({ __typename, owner, typesOfUnionType, ...type }) => {\n            const connectIds = typesOfUnionType.map(({ id }) => id)\n\n            return {\n              ...type,\n              owner: connectAuth0Owner(owner),\n              typesOfUnionType: {\n                ArrayType: connectNodeIds(connectIds),\n                EnumType: connectNodeIds(connectIds),\n                InterfaceType: connectNodeIds(connectIds),\n                PrimitiveType: connectNodeIds(connectIds),\n                ReactNodeType: connectNodeIds(connectIds),\n                RenderPropType: connectNodeIds(connectIds),\n              },\n            }\n          },\n        ),\n        selectionSet: `{ unionTypes ${exportUnionTypeSelectionSet} }`,\n      })\n    ).unionTypes\n  }\n\n  protected async _update(\n    { id, name, typesOfUnionType }: IUnionTypeDTO,\n    where: UnionTypeWhere,\n  ) {\n    const connectIds = typesOfUnionType.map(({ id: typeId }) => typeId)\n\n    return (\n      await (\n        await this.UnionType\n      ).update({\n        selectionSet: `{ unionTypes ${exportUnionTypeSelectionSet} }`,\n        update: {\n          id,\n          name,\n          typesOfUnionType: {\n            ArrayType: [connectNodeIds(connectIds)],\n            EnumType: [connectNodeIds(connectIds)],\n            InterfaceType: [connectNodeIds(connectIds)],\n            PrimitiveType: [connectNodeIds(connectIds)],\n            ReactNodeType: [connectNodeIds(connectIds)],\n            RenderPropType: [connectNodeIds(connectIds)],\n          },\n        },\n        where,\n      })\n    ).unionTypes[0]\n  }\n}\n","export * from './export'\nexport * from './extract/extract-ant-design-fields'\nexport * from './extract/extract-html-fields'\nexport * from './seed-empty-api'\n","export * from './export-admin-types'\nexport * from './export-atom-apis'\nexport * from './export-system-types'\nexport * from './export-user-types'\n","import { SortDirection } from '@codelab/backend/abstract/codegen'\nimport type { ITypesExport } from '@codelab/backend/abstract/core'\nimport {\n  exportArrayTypeSelectionSet,\n  exportEnumTypeSelectionSet,\n  exportFieldSelectionSet,\n  exportInterfaceTypeSelectionSet,\n  exportUnionTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport type { IFieldDTO } from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport { sortInterfaceTypesFields } from '../../mapper/sort'\n\n/**\n * Allows us to get only types for an api\n */\ninterface ExportAdminTypesProps {\n  apiFields?: Array<IFieldDTO>\n  apiId?: string\n}\n\n/**\n * These are types created by the admin, mostly types related to an atom.\n *\n * We export api separately since those can be it's own file\n */\nexport const exportAdminTypes = async (\n  props: ExportAdminTypesProps = {},\n): Promise<ITypesExport> => {\n  const EnumType = await Repository.instance.EnumType\n  const InterfaceType = await Repository.instance.InterfaceType\n  const Field = await Repository.instance.Field\n  const Array = await Repository.instance.ArrayType\n  const UnionType = await Repository.instance.UnionType\n\n  /**\n   * UnionTypes\n   */\n  const unionTypes = await UnionType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportUnionTypeSelectionSet,\n    where: {\n      id_IN: props.apiFields?.map((field) => field.fieldType.id),\n    },\n  })\n\n  /**\n   * Array\n   */\n  const arrayTypes = await Array.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportArrayTypeSelectionSet,\n    where: {\n      fieldRefsConnection: {\n        node: {\n          apiConnection: {\n            node: {\n              id: props.apiId,\n            },\n          },\n        },\n      },\n    },\n  })\n\n  /**\n   * Find interface types of the array types' items\n   */\n  const arrayInterfaceItemTypes = await InterfaceType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportInterfaceTypeSelectionSet,\n    where: {\n      id_IN: arrayTypes\n        .filter(\n          (arrayType) => arrayType.itemType.kind === ITypeKind.InterfaceType,\n        )\n        .map((arrayType) => arrayType.itemType.id),\n    },\n  })\n\n  /**\n   * Enum\n   */\n  const enumTypes = (\n    await EnumType.find({\n      options: {\n        sort: [{ name: SortDirection.Asc }],\n      },\n      selectionSet: exportEnumTypeSelectionSet,\n      where: props.apiId\n        ? {\n            fieldRefsConnection: {\n              node: {\n                apiConnection: {\n                  node: {\n                    id: props.apiId,\n                  },\n                },\n              },\n            },\n          }\n        : undefined,\n    })\n  ).map((type) => ({\n    ...type,\n    allowedValues: type.allowedValues.sort((a, b) =>\n      a.key.toString().localeCompare(b.key),\n    ),\n  }))\n\n  /**\n   * Get dependent types of top level atom API\n   */\n  const firstLevelInterfaceTypes = sortInterfaceTypesFields(\n    await InterfaceType.find({\n      options: {\n        sort: [{ name: SortDirection.Asc }],\n      },\n      selectionSet: exportInterfaceTypeSelectionSet,\n      where: {\n        OR: [\n          // Find api 1 level deep\n          {\n            fieldRefsConnection: {\n              node: { apiConnection: { node: { id: props.apiId } } },\n            },\n          },\n          // Find api 2 levels deep\n          // This is too slow\n          // {\n          //   fieldConnection: {\n          //     node: {\n          //       apiConnection: {\n          //         node: {\n          //           fieldConnection: {\n          //             node: { apiConnection: { node: { id: props.apiId } } },\n          //           },\n          //         },\n          //       },\n          //     },\n          //   },\n          // },\n        ],\n      },\n    }),\n  )\n\n  const secondLevelInterfaceTypes = sortInterfaceTypesFields(\n    await InterfaceType.find({\n      options: {\n        sort: [{ name: SortDirection.Asc }],\n      },\n      selectionSet: exportInterfaceTypeSelectionSet,\n      where: {\n        fieldRefsConnection: {\n          node: {\n            apiConnection: {\n              node: {\n                id_IN: firstLevelInterfaceTypes.map((api) => api.id),\n              },\n            },\n          },\n        },\n      },\n    }),\n  )\n\n  /**\n   * Get all fields related to interface type\n   */\n  const fields = await Field.find({\n    options: {\n      sort: [{ key: SortDirection.Asc }],\n    },\n    selectionSet: exportFieldSelectionSet,\n    where: {\n      api: {\n        id_IN: [\n          ...firstLevelInterfaceTypes,\n          ...secondLevelInterfaceTypes,\n          ...arrayInterfaceItemTypes,\n        ].map((api) => api.id),\n      },\n    },\n  })\n\n  const types = [\n    ...enumTypes,\n    ...firstLevelInterfaceTypes,\n    ...secondLevelInterfaceTypes,\n    ...arrayInterfaceItemTypes,\n    ...arrayTypes,\n    ...unionTypes,\n  ]\n\n  const withSubTypes = types.filter(\n    (type) =>\n      type.kind === ITypeKind.InterfaceType ||\n      type.kind === ITypeKind.ArrayType,\n  )\n\n  if (!withSubTypes.length) {\n    return {\n      fields,\n      types: types.flat(),\n    }\n  }\n\n  /**\n   * Get all subtypes of interface types and array types\n   */\n  const subTypes = await Promise.all(\n    withSubTypes.map(async (subType) => {\n      return await exportAdminTypes({\n        apiFields: fields.filter((field) => field.fieldType.id === subType.id),\n        apiId: subType.id,\n      })\n    }),\n  )\n\n  /**\n   * Here we create the interface dependency tree order\n   *\n   * Further to the front are closer to the leaf.\n   *\n   * Subtypes are included first so that they can be referenced in the parent type\n   */\n  return {\n    fields: [...subTypes.map((value) => value.fields).flat(), ...fields],\n    types: [...subTypes.map((subType) => subType.types).flat(), ...types],\n  }\n}\n","export * from './ogm-types.gen'\n","import type { SelectionSetNode, DocumentNode } from 'graphql'\nexport type Maybe<T> = T | null\nexport type InputMaybe<T> = Maybe<T>\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K]\n}\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]?: Maybe<T[SubKey]>\n}\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n  [SubKey in K]: Maybe<T[SubKey]>\n}\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID. */\n  ID: string\n  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\n  String: string\n  /** The `Boolean` scalar type represents `true` or `false`. */\n  Boolean: boolean\n  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */\n  Int: number\n  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */\n  Float: number\n}\n\nexport type Query = {\n  __typename?: 'Query'\n  baseTypes: Array<BaseType>\n  resetDatabaseMutationResponses: Array<ResetDatabaseMutationResponse>\n  resetDatabaseMutationResponsesAggregate: ResetDatabaseMutationResponseAggregateSelection\n  resetDatabaseMutationResponsesConnection: ResetDatabaseMutationResponsesConnection\n  users: Array<User>\n  usersAggregate: UserAggregateSelection\n  usersConnection: UsersConnection\n  apps: Array<App>\n  appsAggregate: AppAggregateSelection\n  appsConnection: AppsConnection\n  fields: Array<Field>\n  fieldsAggregate: FieldAggregateSelection\n  fieldsConnection: FieldsConnection\n  atoms: Array<Atom>\n  atomsAggregate: AtomAggregateSelection\n  atomsConnection: AtomsConnection\n  pages: Array<Page>\n  pagesAggregate: PageAggregateSelection\n  pagesConnection: PagesConnection\n  typeReferences: Array<TypeReference>\n  typeReferencesAggregate: TypeReferenceAggregateSelection\n  typeReferencesConnection: TypeReferencesConnection\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n  getBaseTypesReturnsAggregate: GetBaseTypesReturnAggregateSelection\n  getBaseTypesReturnsConnection: GetBaseTypesReturnsConnection\n  baseTypesAggregate: BaseTypeAggregateSelection\n  baseTypesConnection: BaseTypesConnection\n  primitiveTypes: Array<PrimitiveType>\n  primitiveTypesAggregate: PrimitiveTypeAggregateSelection\n  primitiveTypesConnection: PrimitiveTypesConnection\n  arrayTypes: Array<ArrayType>\n  arrayTypesAggregate: ArrayTypeAggregateSelection\n  arrayTypesConnection: ArrayTypesConnection\n  unionTypes: Array<UnionType>\n  unionTypesAggregate: UnionTypeAggregateSelection\n  unionTypesConnection: UnionTypesConnection\n  interfaceTypes: Array<InterfaceType>\n  interfaceTypesAggregate: InterfaceTypeAggregateSelection\n  interfaceTypesConnection: InterfaceTypesConnection\n  elementTypes: Array<ElementType>\n  elementTypesAggregate: ElementTypeAggregateSelection\n  elementTypesConnection: ElementTypesConnection\n  renderPropTypes: Array<RenderPropType>\n  renderPropTypesAggregate: RenderPropTypeAggregateSelection\n  renderPropTypesConnection: RenderPropTypesConnection\n  reactNodeTypes: Array<ReactNodeType>\n  reactNodeTypesAggregate: ReactNodeTypeAggregateSelection\n  reactNodeTypesConnection: ReactNodeTypesConnection\n  enumTypes: Array<EnumType>\n  enumTypesAggregate: EnumTypeAggregateSelection\n  enumTypesConnection: EnumTypesConnection\n  enumTypeValues: Array<EnumTypeValue>\n  enumTypeValuesAggregate: EnumTypeValueAggregateSelection\n  enumTypeValuesConnection: EnumTypeValuesConnection\n  lambdaTypes: Array<LambdaType>\n  lambdaTypesAggregate: LambdaTypeAggregateSelection\n  lambdaTypesConnection: LambdaTypesConnection\n  pageTypes: Array<PageType>\n  pageTypesAggregate: PageTypeAggregateSelection\n  pageTypesConnection: PageTypesConnection\n  appTypes: Array<AppType>\n  appTypesAggregate: AppTypeAggregateSelection\n  appTypesConnection: AppTypesConnection\n  actionTypes: Array<ActionType>\n  actionTypesAggregate: ActionTypeAggregateSelection\n  actionTypesConnection: ActionTypesConnection\n  codeMirrorTypes: Array<CodeMirrorType>\n  codeMirrorTypesAggregate: CodeMirrorTypeAggregateSelection\n  codeMirrorTypesConnection: CodeMirrorTypesConnection\n  tags: Array<Tag>\n  tagsAggregate: TagAggregateSelection\n  tagsConnection: TagsConnection\n  renderTypes: Array<RenderType>\n  renderTypesAggregate: RenderTypeAggregateSelection\n  renderTypesConnection: RenderTypesConnection\n  elements: Array<Element>\n  elementsAggregate: ElementAggregateSelection\n  elementsConnection: ElementsConnection\n  props: Array<Prop>\n  propsAggregate: PropAggregateSelection\n  propsConnection: PropsConnection\n  hooks: Array<Hook>\n  hooksAggregate: HookAggregateSelection\n  hooksConnection: HooksConnection\n  components: Array<Component>\n  componentsAggregate: ComponentAggregateSelection\n  componentsConnection: ComponentsConnection\n  stores: Array<Store>\n  storesAggregate: StoreAggregateSelection\n  storesConnection: StoresConnection\n  codeActions: Array<CodeAction>\n  codeActionsAggregate: CodeActionAggregateSelection\n  codeActionsConnection: CodeActionsConnection\n  apiActions: Array<ApiAction>\n  apiActionsAggregate: ApiActionAggregateSelection\n  apiActionsConnection: ApiActionsConnection\n  resources: Array<Resource>\n  resourcesAggregate: ResourceAggregateSelection\n  resourcesConnection: ResourcesConnection\n  deleteInfos: Array<DeleteInfo>\n  deleteInfosAggregate: DeleteInfoAggregateSelection\n  deleteInfosConnection: DeleteInfosConnection\n  vercelDomainConfigs: Array<VercelDomainConfig>\n  vercelDomainConfigsAggregate: VercelDomainConfigAggregateSelection\n  vercelDomainConfigsConnection: VercelDomainConfigsConnection\n  vercelProjectDomains: Array<VercelProjectDomain>\n  vercelProjectDomainsAggregate: VercelProjectDomainAggregateSelection\n  vercelProjectDomainsConnection: VercelProjectDomainsConnection\n  domains: Array<Domain>\n  domainsAggregate: DomainAggregateSelection\n  domainsConnection: DomainsConnection\n  /** Does a recursive check to see if the parent type (parentTypeId) contains the descendant type (descendantTypeId) at any level of nesting. Useful for checking for recursion */\n  isTypeDescendantOf?: Maybe<Scalars['Boolean']>\n  /**\n   * Returns a list of all Type and Atom entities that reference the type with the given id\n   * This could be different types of relationships like Atom-Api, ArrayType-itemType, InterfaceType-field, UnionType-unionTypeChild\n   */\n  getTypeReferences?: Maybe<Array<TypeReference>>\n}\n\nexport type QueryBaseTypesArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n  options?: InputMaybe<BaseTypeOptions>\n}\n\nexport type QueryResetDatabaseMutationResponsesArgs = {\n  where?: InputMaybe<ResetDatabaseMutationResponseWhere>\n  options?: InputMaybe<ResetDatabaseMutationResponseOptions>\n}\n\nexport type QueryResetDatabaseMutationResponsesAggregateArgs = {\n  where?: InputMaybe<ResetDatabaseMutationResponseWhere>\n}\n\nexport type QueryResetDatabaseMutationResponsesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ResetDatabaseMutationResponseWhere>\n  sort?: InputMaybe<Array<InputMaybe<ResetDatabaseMutationResponseSort>>>\n}\n\nexport type QueryUsersArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n}\n\nexport type QueryUsersAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n}\n\nexport type QueryUsersConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<UserWhere>\n  sort?: InputMaybe<Array<InputMaybe<UserSort>>>\n}\n\nexport type QueryAppsArgs = {\n  where?: InputMaybe<AppWhere>\n  options?: InputMaybe<AppOptions>\n}\n\nexport type QueryAppsAggregateArgs = {\n  where?: InputMaybe<AppWhere>\n}\n\nexport type QueryAppsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<AppWhere>\n  sort?: InputMaybe<Array<InputMaybe<AppSort>>>\n}\n\nexport type QueryFieldsArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n}\n\nexport type QueryFieldsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n}\n\nexport type QueryFieldsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<FieldWhere>\n  sort?: InputMaybe<Array<InputMaybe<FieldSort>>>\n}\n\nexport type QueryAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n}\n\nexport type QueryAtomsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n}\n\nexport type QueryAtomsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<AtomWhere>\n  sort?: InputMaybe<Array<InputMaybe<AtomSort>>>\n}\n\nexport type QueryPagesArgs = {\n  where?: InputMaybe<PageWhere>\n  options?: InputMaybe<PageOptions>\n}\n\nexport type QueryPagesAggregateArgs = {\n  where?: InputMaybe<PageWhere>\n}\n\nexport type QueryPagesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<PageWhere>\n  sort?: InputMaybe<Array<InputMaybe<PageSort>>>\n}\n\nexport type QueryTypeReferencesArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n  options?: InputMaybe<TypeReferenceOptions>\n}\n\nexport type QueryTypeReferencesAggregateArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type QueryTypeReferencesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<TypeReferenceWhere>\n  sort?: InputMaybe<Array<InputMaybe<TypeReferenceSort>>>\n}\n\nexport type QueryGetBaseTypesReturnsArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n  options?: InputMaybe<GetBaseTypesReturnOptions>\n}\n\nexport type QueryGetBaseTypesReturnsAggregateArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type QueryGetBaseTypesReturnsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n  sort?: InputMaybe<Array<InputMaybe<GetBaseTypesReturnSort>>>\n}\n\nexport type QueryBaseTypesAggregateArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n}\n\nexport type QueryBaseTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<BaseTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<BaseTypeSort>>>\n}\n\nexport type QueryPrimitiveTypesArgs = {\n  where?: InputMaybe<PrimitiveTypeWhere>\n  options?: InputMaybe<PrimitiveTypeOptions>\n}\n\nexport type QueryPrimitiveTypesAggregateArgs = {\n  where?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type QueryPrimitiveTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<PrimitiveTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<PrimitiveTypeSort>>>\n}\n\nexport type QueryArrayTypesArgs = {\n  where?: InputMaybe<ArrayTypeWhere>\n  options?: InputMaybe<ArrayTypeOptions>\n}\n\nexport type QueryArrayTypesAggregateArgs = {\n  where?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type QueryArrayTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ArrayTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<ArrayTypeSort>>>\n}\n\nexport type QueryUnionTypesArgs = {\n  where?: InputMaybe<UnionTypeWhere>\n  options?: InputMaybe<UnionTypeOptions>\n}\n\nexport type QueryUnionTypesAggregateArgs = {\n  where?: InputMaybe<UnionTypeWhere>\n}\n\nexport type QueryUnionTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<UnionTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<UnionTypeSort>>>\n}\n\nexport type QueryInterfaceTypesArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  options?: InputMaybe<InterfaceTypeOptions>\n}\n\nexport type QueryInterfaceTypesAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type QueryInterfaceTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<InterfaceTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<InterfaceTypeSort>>>\n}\n\nexport type QueryElementTypesArgs = {\n  where?: InputMaybe<ElementTypeWhere>\n  options?: InputMaybe<ElementTypeOptions>\n}\n\nexport type QueryElementTypesAggregateArgs = {\n  where?: InputMaybe<ElementTypeWhere>\n}\n\nexport type QueryElementTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ElementTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<ElementTypeSort>>>\n}\n\nexport type QueryRenderPropTypesArgs = {\n  where?: InputMaybe<RenderPropTypeWhere>\n  options?: InputMaybe<RenderPropTypeOptions>\n}\n\nexport type QueryRenderPropTypesAggregateArgs = {\n  where?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type QueryRenderPropTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<RenderPropTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<RenderPropTypeSort>>>\n}\n\nexport type QueryReactNodeTypesArgs = {\n  where?: InputMaybe<ReactNodeTypeWhere>\n  options?: InputMaybe<ReactNodeTypeOptions>\n}\n\nexport type QueryReactNodeTypesAggregateArgs = {\n  where?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type QueryReactNodeTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ReactNodeTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<ReactNodeTypeSort>>>\n}\n\nexport type QueryEnumTypesArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n  options?: InputMaybe<EnumTypeOptions>\n}\n\nexport type QueryEnumTypesAggregateArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n}\n\nexport type QueryEnumTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<EnumTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<EnumTypeSort>>>\n}\n\nexport type QueryEnumTypeValuesArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n  options?: InputMaybe<EnumTypeValueOptions>\n}\n\nexport type QueryEnumTypeValuesAggregateArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type QueryEnumTypeValuesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<EnumTypeValueWhere>\n  sort?: InputMaybe<Array<InputMaybe<EnumTypeValueSort>>>\n}\n\nexport type QueryLambdaTypesArgs = {\n  where?: InputMaybe<LambdaTypeWhere>\n  options?: InputMaybe<LambdaTypeOptions>\n}\n\nexport type QueryLambdaTypesAggregateArgs = {\n  where?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type QueryLambdaTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<LambdaTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<LambdaTypeSort>>>\n}\n\nexport type QueryPageTypesArgs = {\n  where?: InputMaybe<PageTypeWhere>\n  options?: InputMaybe<PageTypeOptions>\n}\n\nexport type QueryPageTypesAggregateArgs = {\n  where?: InputMaybe<PageTypeWhere>\n}\n\nexport type QueryPageTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<PageTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<PageTypeSort>>>\n}\n\nexport type QueryAppTypesArgs = {\n  where?: InputMaybe<AppTypeWhere>\n  options?: InputMaybe<AppTypeOptions>\n}\n\nexport type QueryAppTypesAggregateArgs = {\n  where?: InputMaybe<AppTypeWhere>\n}\n\nexport type QueryAppTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<AppTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<AppTypeSort>>>\n}\n\nexport type QueryActionTypesArgs = {\n  where?: InputMaybe<ActionTypeWhere>\n  options?: InputMaybe<ActionTypeOptions>\n}\n\nexport type QueryActionTypesAggregateArgs = {\n  where?: InputMaybe<ActionTypeWhere>\n}\n\nexport type QueryActionTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ActionTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<ActionTypeSort>>>\n}\n\nexport type QueryCodeMirrorTypesArgs = {\n  where?: InputMaybe<CodeMirrorTypeWhere>\n  options?: InputMaybe<CodeMirrorTypeOptions>\n}\n\nexport type QueryCodeMirrorTypesAggregateArgs = {\n  where?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type QueryCodeMirrorTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<CodeMirrorTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<CodeMirrorTypeSort>>>\n}\n\nexport type QueryTagsArgs = {\n  where?: InputMaybe<TagWhere>\n  options?: InputMaybe<TagOptions>\n}\n\nexport type QueryTagsAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n}\n\nexport type QueryTagsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<TagWhere>\n  sort?: InputMaybe<Array<InputMaybe<TagSort>>>\n}\n\nexport type QueryRenderTypesArgs = {\n  where?: InputMaybe<RenderTypeWhere>\n  options?: InputMaybe<RenderTypeOptions>\n}\n\nexport type QueryRenderTypesAggregateArgs = {\n  where?: InputMaybe<RenderTypeWhere>\n}\n\nexport type QueryRenderTypesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<RenderTypeWhere>\n  sort?: InputMaybe<Array<InputMaybe<RenderTypeSort>>>\n}\n\nexport type QueryElementsArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n}\n\nexport type QueryElementsAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n}\n\nexport type QueryElementsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ElementWhere>\n  sort?: InputMaybe<Array<InputMaybe<ElementSort>>>\n}\n\nexport type QueryPropsArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n}\n\nexport type QueryPropsAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n}\n\nexport type QueryPropsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<PropWhere>\n  sort?: InputMaybe<Array<InputMaybe<PropSort>>>\n}\n\nexport type QueryHooksArgs = {\n  where?: InputMaybe<HookWhere>\n  options?: InputMaybe<HookOptions>\n}\n\nexport type QueryHooksAggregateArgs = {\n  where?: InputMaybe<HookWhere>\n}\n\nexport type QueryHooksConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<HookWhere>\n  sort?: InputMaybe<Array<InputMaybe<HookSort>>>\n}\n\nexport type QueryComponentsArgs = {\n  where?: InputMaybe<ComponentWhere>\n  options?: InputMaybe<ComponentOptions>\n}\n\nexport type QueryComponentsAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n}\n\nexport type QueryComponentsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ComponentWhere>\n  sort?: InputMaybe<Array<InputMaybe<ComponentSort>>>\n}\n\nexport type QueryStoresArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n}\n\nexport type QueryStoresAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n}\n\nexport type QueryStoresConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<StoreWhere>\n  sort?: InputMaybe<Array<InputMaybe<StoreSort>>>\n}\n\nexport type QueryCodeActionsArgs = {\n  where?: InputMaybe<CodeActionWhere>\n  options?: InputMaybe<CodeActionOptions>\n}\n\nexport type QueryCodeActionsAggregateArgs = {\n  where?: InputMaybe<CodeActionWhere>\n}\n\nexport type QueryCodeActionsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<CodeActionWhere>\n  sort?: InputMaybe<Array<InputMaybe<CodeActionSort>>>\n}\n\nexport type QueryApiActionsArgs = {\n  where?: InputMaybe<ApiActionWhere>\n  options?: InputMaybe<ApiActionOptions>\n}\n\nexport type QueryApiActionsAggregateArgs = {\n  where?: InputMaybe<ApiActionWhere>\n}\n\nexport type QueryApiActionsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ApiActionWhere>\n  sort?: InputMaybe<Array<InputMaybe<ApiActionSort>>>\n}\n\nexport type QueryResourcesArgs = {\n  where?: InputMaybe<ResourceWhere>\n  options?: InputMaybe<ResourceOptions>\n}\n\nexport type QueryResourcesAggregateArgs = {\n  where?: InputMaybe<ResourceWhere>\n}\n\nexport type QueryResourcesConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<ResourceWhere>\n  sort?: InputMaybe<Array<InputMaybe<ResourceSort>>>\n}\n\nexport type QueryDeleteInfosArgs = {\n  where?: InputMaybe<DeleteInfoWhere>\n  options?: InputMaybe<DeleteInfoOptions>\n}\n\nexport type QueryDeleteInfosAggregateArgs = {\n  where?: InputMaybe<DeleteInfoWhere>\n}\n\nexport type QueryDeleteInfosConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<DeleteInfoWhere>\n  sort?: InputMaybe<Array<InputMaybe<DeleteInfoSort>>>\n}\n\nexport type QueryVercelDomainConfigsArgs = {\n  where?: InputMaybe<VercelDomainConfigWhere>\n  options?: InputMaybe<VercelDomainConfigOptions>\n}\n\nexport type QueryVercelDomainConfigsAggregateArgs = {\n  where?: InputMaybe<VercelDomainConfigWhere>\n}\n\nexport type QueryVercelDomainConfigsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<VercelDomainConfigWhere>\n  sort?: InputMaybe<Array<InputMaybe<VercelDomainConfigSort>>>\n}\n\nexport type QueryVercelProjectDomainsArgs = {\n  where?: InputMaybe<VercelProjectDomainWhere>\n  options?: InputMaybe<VercelProjectDomainOptions>\n}\n\nexport type QueryVercelProjectDomainsAggregateArgs = {\n  where?: InputMaybe<VercelProjectDomainWhere>\n}\n\nexport type QueryVercelProjectDomainsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<VercelProjectDomainWhere>\n  sort?: InputMaybe<Array<InputMaybe<VercelProjectDomainSort>>>\n}\n\nexport type QueryDomainsArgs = {\n  where?: InputMaybe<DomainWhere>\n  options?: InputMaybe<DomainOptions>\n}\n\nexport type QueryDomainsAggregateArgs = {\n  where?: InputMaybe<DomainWhere>\n}\n\nexport type QueryDomainsConnectionArgs = {\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  where?: InputMaybe<DomainWhere>\n  sort?: InputMaybe<Array<InputMaybe<DomainSort>>>\n}\n\nexport type QueryIsTypeDescendantOfArgs = {\n  parentTypeId: Scalars['ID']\n  descendantTypeId: Scalars['ID']\n}\n\nexport type QueryGetTypeReferencesArgs = {\n  typeId: Scalars['ID']\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation'\n  createDomains: CreateDomainsMutationResponse\n  updateDomains: UpdateDomainsMutationResponse\n  deleteDomains: DeleteInfo\n  createResetDatabaseMutationResponses: CreateResetDatabaseMutationResponsesMutationResponse\n  deleteResetDatabaseMutationResponses: DeleteInfo\n  updateResetDatabaseMutationResponses: UpdateResetDatabaseMutationResponsesMutationResponse\n  createUsers: CreateUsersMutationResponse\n  deleteUsers: DeleteInfo\n  updateUsers: UpdateUsersMutationResponse\n  createApps: CreateAppsMutationResponse\n  deleteApps: DeleteInfo\n  updateApps: UpdateAppsMutationResponse\n  createFields: CreateFieldsMutationResponse\n  deleteFields: DeleteInfo\n  updateFields: UpdateFieldsMutationResponse\n  createAtoms: CreateAtomsMutationResponse\n  deleteAtoms: DeleteInfo\n  updateAtoms: UpdateAtomsMutationResponse\n  createPages: CreatePagesMutationResponse\n  deletePages: DeleteInfo\n  updatePages: UpdatePagesMutationResponse\n  createTypeReferences: CreateTypeReferencesMutationResponse\n  deleteTypeReferences: DeleteInfo\n  updateTypeReferences: UpdateTypeReferencesMutationResponse\n  createGetBaseTypesReturns: CreateGetBaseTypesReturnsMutationResponse\n  deleteGetBaseTypesReturns: DeleteInfo\n  updateGetBaseTypesReturns: UpdateGetBaseTypesReturnsMutationResponse\n  createBaseTypes: CreateBaseTypesMutationResponse\n  deleteBaseTypes: DeleteInfo\n  updateBaseTypes: UpdateBaseTypesMutationResponse\n  createPrimitiveTypes: CreatePrimitiveTypesMutationResponse\n  deletePrimitiveTypes: DeleteInfo\n  updatePrimitiveTypes: UpdatePrimitiveTypesMutationResponse\n  createArrayTypes: CreateArrayTypesMutationResponse\n  deleteArrayTypes: DeleteInfo\n  updateArrayTypes: UpdateArrayTypesMutationResponse\n  createUnionTypes: CreateUnionTypesMutationResponse\n  deleteUnionTypes: DeleteInfo\n  updateUnionTypes: UpdateUnionTypesMutationResponse\n  createInterfaceTypes: CreateInterfaceTypesMutationResponse\n  deleteInterfaceTypes: DeleteInfo\n  updateInterfaceTypes: UpdateInterfaceTypesMutationResponse\n  createElementTypes: CreateElementTypesMutationResponse\n  deleteElementTypes: DeleteInfo\n  updateElementTypes: UpdateElementTypesMutationResponse\n  createRenderPropTypes: CreateRenderPropTypesMutationResponse\n  deleteRenderPropTypes: DeleteInfo\n  updateRenderPropTypes: UpdateRenderPropTypesMutationResponse\n  createReactNodeTypes: CreateReactNodeTypesMutationResponse\n  deleteReactNodeTypes: DeleteInfo\n  updateReactNodeTypes: UpdateReactNodeTypesMutationResponse\n  createEnumTypes: CreateEnumTypesMutationResponse\n  deleteEnumTypes: DeleteInfo\n  updateEnumTypes: UpdateEnumTypesMutationResponse\n  createEnumTypeValues: CreateEnumTypeValuesMutationResponse\n  deleteEnumTypeValues: DeleteInfo\n  updateEnumTypeValues: UpdateEnumTypeValuesMutationResponse\n  createLambdaTypes: CreateLambdaTypesMutationResponse\n  deleteLambdaTypes: DeleteInfo\n  updateLambdaTypes: UpdateLambdaTypesMutationResponse\n  createPageTypes: CreatePageTypesMutationResponse\n  deletePageTypes: DeleteInfo\n  updatePageTypes: UpdatePageTypesMutationResponse\n  createAppTypes: CreateAppTypesMutationResponse\n  deleteAppTypes: DeleteInfo\n  updateAppTypes: UpdateAppTypesMutationResponse\n  createActionTypes: CreateActionTypesMutationResponse\n  deleteActionTypes: DeleteInfo\n  updateActionTypes: UpdateActionTypesMutationResponse\n  createCodeMirrorTypes: CreateCodeMirrorTypesMutationResponse\n  deleteCodeMirrorTypes: DeleteInfo\n  updateCodeMirrorTypes: UpdateCodeMirrorTypesMutationResponse\n  createTags: CreateTagsMutationResponse\n  deleteTags: DeleteInfo\n  updateTags: UpdateTagsMutationResponse\n  createRenderTypes: CreateRenderTypesMutationResponse\n  deleteRenderTypes: DeleteInfo\n  updateRenderTypes: UpdateRenderTypesMutationResponse\n  createElements: CreateElementsMutationResponse\n  deleteElements: DeleteInfo\n  updateElements: UpdateElementsMutationResponse\n  createProps: CreatePropsMutationResponse\n  deleteProps: DeleteInfo\n  updateProps: UpdatePropsMutationResponse\n  createHooks: CreateHooksMutationResponse\n  deleteHooks: DeleteInfo\n  updateHooks: UpdateHooksMutationResponse\n  createComponents: CreateComponentsMutationResponse\n  deleteComponents: DeleteInfo\n  updateComponents: UpdateComponentsMutationResponse\n  createStores: CreateStoresMutationResponse\n  deleteStores: DeleteInfo\n  updateStores: UpdateStoresMutationResponse\n  createCodeActions: CreateCodeActionsMutationResponse\n  deleteCodeActions: DeleteInfo\n  updateCodeActions: UpdateCodeActionsMutationResponse\n  createApiActions: CreateApiActionsMutationResponse\n  deleteApiActions: DeleteInfo\n  updateApiActions: UpdateApiActionsMutationResponse\n  createResources: CreateResourcesMutationResponse\n  deleteResources: DeleteInfo\n  updateResources: UpdateResourcesMutationResponse\n  createDeleteInfos: CreateDeleteInfosMutationResponse\n  deleteDeleteInfos: DeleteInfo\n  updateDeleteInfos: UpdateDeleteInfosMutationResponse\n  createVercelDomainConfigs: CreateVercelDomainConfigsMutationResponse\n  deleteVercelDomainConfigs: DeleteInfo\n  updateVercelDomainConfigs: UpdateVercelDomainConfigsMutationResponse\n  createVercelProjectDomains: CreateVercelProjectDomainsMutationResponse\n  deleteVercelProjectDomains: DeleteInfo\n  updateVercelProjectDomains: UpdateVercelProjectDomainsMutationResponse\n  resetDatabase?: Maybe<ResetDatabaseMutationResponse>\n}\n\nexport type MutationCreateDomainsArgs = {\n  input: Array<DomainCreateInput>\n}\n\nexport type MutationUpdateDomainsArgs = {\n  where?: InputMaybe<DomainWhere>\n  update?: InputMaybe<DomainUpdateInput>\n  connect?: InputMaybe<DomainConnectInput>\n  disconnect?: InputMaybe<DomainDisconnectInput>\n  create?: InputMaybe<DomainRelationInput>\n  delete?: InputMaybe<DomainDeleteInput>\n  connectOrCreate?: InputMaybe<DomainConnectOrCreateInput>\n}\n\nexport type MutationDeleteDomainsArgs = {\n  where?: InputMaybe<DomainWhere>\n  delete?: InputMaybe<DomainDeleteInput>\n}\n\nexport type MutationCreateResetDatabaseMutationResponsesArgs = {\n  input: Array<ResetDatabaseMutationResponseCreateInput>\n}\n\nexport type MutationDeleteResetDatabaseMutationResponsesArgs = {\n  where?: InputMaybe<ResetDatabaseMutationResponseWhere>\n}\n\nexport type MutationUpdateResetDatabaseMutationResponsesArgs = {\n  where?: InputMaybe<ResetDatabaseMutationResponseWhere>\n  update?: InputMaybe<ResetDatabaseMutationResponseUpdateInput>\n}\n\nexport type MutationCreateUsersArgs = {\n  input: Array<UserCreateInput>\n}\n\nexport type MutationDeleteUsersArgs = {\n  where?: InputMaybe<UserWhere>\n  delete?: InputMaybe<UserDeleteInput>\n}\n\nexport type MutationUpdateUsersArgs = {\n  where?: InputMaybe<UserWhere>\n  update?: InputMaybe<UserUpdateInput>\n  connect?: InputMaybe<UserConnectInput>\n  disconnect?: InputMaybe<UserDisconnectInput>\n  create?: InputMaybe<UserRelationInput>\n  delete?: InputMaybe<UserDeleteInput>\n  connectOrCreate?: InputMaybe<UserConnectOrCreateInput>\n}\n\nexport type MutationCreateAppsArgs = {\n  input: Array<AppCreateInput>\n}\n\nexport type MutationDeleteAppsArgs = {\n  where?: InputMaybe<AppWhere>\n  delete?: InputMaybe<AppDeleteInput>\n}\n\nexport type MutationUpdateAppsArgs = {\n  where?: InputMaybe<AppWhere>\n  update?: InputMaybe<AppUpdateInput>\n  connect?: InputMaybe<AppConnectInput>\n  disconnect?: InputMaybe<AppDisconnectInput>\n  create?: InputMaybe<AppRelationInput>\n  delete?: InputMaybe<AppDeleteInput>\n  connectOrCreate?: InputMaybe<AppConnectOrCreateInput>\n}\n\nexport type MutationCreateFieldsArgs = {\n  input: Array<FieldCreateInput>\n}\n\nexport type MutationDeleteFieldsArgs = {\n  where?: InputMaybe<FieldWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type MutationUpdateFieldsArgs = {\n  where?: InputMaybe<FieldWhere>\n  update?: InputMaybe<FieldUpdateInput>\n  connect?: InputMaybe<FieldConnectInput>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n  create?: InputMaybe<FieldRelationInput>\n  delete?: InputMaybe<FieldDeleteInput>\n  connectOrCreate?: InputMaybe<FieldConnectOrCreateInput>\n}\n\nexport type MutationCreateAtomsArgs = {\n  input: Array<AtomCreateInput>\n}\n\nexport type MutationDeleteAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type MutationUpdateAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  update?: InputMaybe<AtomUpdateInput>\n  connect?: InputMaybe<AtomConnectInput>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n  create?: InputMaybe<AtomRelationInput>\n  delete?: InputMaybe<AtomDeleteInput>\n  connectOrCreate?: InputMaybe<AtomConnectOrCreateInput>\n}\n\nexport type MutationCreatePagesArgs = {\n  input: Array<PageCreateInput>\n}\n\nexport type MutationDeletePagesArgs = {\n  where?: InputMaybe<PageWhere>\n  delete?: InputMaybe<PageDeleteInput>\n}\n\nexport type MutationUpdatePagesArgs = {\n  where?: InputMaybe<PageWhere>\n  update?: InputMaybe<PageUpdateInput>\n  connect?: InputMaybe<PageConnectInput>\n  disconnect?: InputMaybe<PageDisconnectInput>\n  create?: InputMaybe<PageRelationInput>\n  delete?: InputMaybe<PageDeleteInput>\n  connectOrCreate?: InputMaybe<PageConnectOrCreateInput>\n}\n\nexport type MutationCreateTypeReferencesArgs = {\n  input: Array<TypeReferenceCreateInput>\n}\n\nexport type MutationDeleteTypeReferencesArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n}\n\nexport type MutationUpdateTypeReferencesArgs = {\n  where?: InputMaybe<TypeReferenceWhere>\n  update?: InputMaybe<TypeReferenceUpdateInput>\n}\n\nexport type MutationCreateGetBaseTypesReturnsArgs = {\n  input: Array<GetBaseTypesReturnCreateInput>\n}\n\nexport type MutationDeleteGetBaseTypesReturnsArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n}\n\nexport type MutationUpdateGetBaseTypesReturnsArgs = {\n  where?: InputMaybe<GetBaseTypesReturnWhere>\n  update?: InputMaybe<GetBaseTypesReturnUpdateInput>\n}\n\nexport type MutationCreateBaseTypesArgs = {\n  input: Array<BaseTypeCreateInput>\n}\n\nexport type MutationDeleteBaseTypesArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n  delete?: InputMaybe<BaseTypeDeleteInput>\n}\n\nexport type MutationUpdateBaseTypesArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n  update?: InputMaybe<BaseTypeUpdateInput>\n  connect?: InputMaybe<BaseTypeConnectInput>\n  disconnect?: InputMaybe<BaseTypeDisconnectInput>\n  create?: InputMaybe<BaseTypeRelationInput>\n  delete?: InputMaybe<BaseTypeDeleteInput>\n  connectOrCreate?: InputMaybe<BaseTypeConnectOrCreateInput>\n}\n\nexport type MutationCreatePrimitiveTypesArgs = {\n  input: Array<PrimitiveTypeCreateInput>\n}\n\nexport type MutationDeletePrimitiveTypesArgs = {\n  where?: InputMaybe<PrimitiveTypeWhere>\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n}\n\nexport type MutationUpdatePrimitiveTypesArgs = {\n  where?: InputMaybe<PrimitiveTypeWhere>\n  update?: InputMaybe<PrimitiveTypeUpdateInput>\n  connect?: InputMaybe<PrimitiveTypeConnectInput>\n  disconnect?: InputMaybe<PrimitiveTypeDisconnectInput>\n  create?: InputMaybe<PrimitiveTypeRelationInput>\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n  connectOrCreate?: InputMaybe<PrimitiveTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateArrayTypesArgs = {\n  input: Array<ArrayTypeCreateInput>\n}\n\nexport type MutationDeleteArrayTypesArgs = {\n  where?: InputMaybe<ArrayTypeWhere>\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n}\n\nexport type MutationUpdateArrayTypesArgs = {\n  where?: InputMaybe<ArrayTypeWhere>\n  update?: InputMaybe<ArrayTypeUpdateInput>\n  connect?: InputMaybe<ArrayTypeConnectInput>\n  disconnect?: InputMaybe<ArrayTypeDisconnectInput>\n  create?: InputMaybe<ArrayTypeRelationInput>\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n  connectOrCreate?: InputMaybe<ArrayTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateUnionTypesArgs = {\n  input: Array<UnionTypeCreateInput>\n}\n\nexport type MutationDeleteUnionTypesArgs = {\n  where?: InputMaybe<UnionTypeWhere>\n  delete?: InputMaybe<UnionTypeDeleteInput>\n}\n\nexport type MutationUpdateUnionTypesArgs = {\n  where?: InputMaybe<UnionTypeWhere>\n  update?: InputMaybe<UnionTypeUpdateInput>\n  connect?: InputMaybe<UnionTypeConnectInput>\n  disconnect?: InputMaybe<UnionTypeDisconnectInput>\n  create?: InputMaybe<UnionTypeRelationInput>\n  delete?: InputMaybe<UnionTypeDeleteInput>\n  connectOrCreate?: InputMaybe<UnionTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateInterfaceTypesArgs = {\n  input: Array<InterfaceTypeCreateInput>\n}\n\nexport type MutationDeleteInterfaceTypesArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type MutationUpdateInterfaceTypesArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  update?: InputMaybe<InterfaceTypeUpdateInput>\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n  create?: InputMaybe<InterfaceTypeRelationInput>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n  connectOrCreate?: InputMaybe<InterfaceTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateElementTypesArgs = {\n  input: Array<ElementTypeCreateInput>\n}\n\nexport type MutationDeleteElementTypesArgs = {\n  where?: InputMaybe<ElementTypeWhere>\n  delete?: InputMaybe<ElementTypeDeleteInput>\n}\n\nexport type MutationUpdateElementTypesArgs = {\n  where?: InputMaybe<ElementTypeWhere>\n  update?: InputMaybe<ElementTypeUpdateInput>\n  connect?: InputMaybe<ElementTypeConnectInput>\n  disconnect?: InputMaybe<ElementTypeDisconnectInput>\n  create?: InputMaybe<ElementTypeRelationInput>\n  delete?: InputMaybe<ElementTypeDeleteInput>\n  connectOrCreate?: InputMaybe<ElementTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateRenderPropTypesArgs = {\n  input: Array<RenderPropTypeCreateInput>\n}\n\nexport type MutationDeleteRenderPropTypesArgs = {\n  where?: InputMaybe<RenderPropTypeWhere>\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n}\n\nexport type MutationUpdateRenderPropTypesArgs = {\n  where?: InputMaybe<RenderPropTypeWhere>\n  update?: InputMaybe<RenderPropTypeUpdateInput>\n  connect?: InputMaybe<RenderPropTypeConnectInput>\n  disconnect?: InputMaybe<RenderPropTypeDisconnectInput>\n  create?: InputMaybe<RenderPropTypeRelationInput>\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n  connectOrCreate?: InputMaybe<RenderPropTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateReactNodeTypesArgs = {\n  input: Array<ReactNodeTypeCreateInput>\n}\n\nexport type MutationDeleteReactNodeTypesArgs = {\n  where?: InputMaybe<ReactNodeTypeWhere>\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n}\n\nexport type MutationUpdateReactNodeTypesArgs = {\n  where?: InputMaybe<ReactNodeTypeWhere>\n  update?: InputMaybe<ReactNodeTypeUpdateInput>\n  connect?: InputMaybe<ReactNodeTypeConnectInput>\n  disconnect?: InputMaybe<ReactNodeTypeDisconnectInput>\n  create?: InputMaybe<ReactNodeTypeRelationInput>\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n  connectOrCreate?: InputMaybe<ReactNodeTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateEnumTypesArgs = {\n  input: Array<EnumTypeCreateInput>\n}\n\nexport type MutationDeleteEnumTypesArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n}\n\nexport type MutationUpdateEnumTypesArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n  update?: InputMaybe<EnumTypeUpdateInput>\n  connect?: InputMaybe<EnumTypeConnectInput>\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n  create?: InputMaybe<EnumTypeRelationInput>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n  connectOrCreate?: InputMaybe<EnumTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateEnumTypeValuesArgs = {\n  input: Array<EnumTypeValueCreateInput>\n}\n\nexport type MutationDeleteEnumTypeValuesArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n}\n\nexport type MutationUpdateEnumTypeValuesArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n  update?: InputMaybe<EnumTypeValueUpdateInput>\n  connect?: InputMaybe<EnumTypeValueConnectInput>\n  disconnect?: InputMaybe<EnumTypeValueDisconnectInput>\n  create?: InputMaybe<EnumTypeValueRelationInput>\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueConnectOrCreateInput>\n}\n\nexport type MutationCreateLambdaTypesArgs = {\n  input: Array<LambdaTypeCreateInput>\n}\n\nexport type MutationDeleteLambdaTypesArgs = {\n  where?: InputMaybe<LambdaTypeWhere>\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n}\n\nexport type MutationUpdateLambdaTypesArgs = {\n  where?: InputMaybe<LambdaTypeWhere>\n  update?: InputMaybe<LambdaTypeUpdateInput>\n  connect?: InputMaybe<LambdaTypeConnectInput>\n  disconnect?: InputMaybe<LambdaTypeDisconnectInput>\n  create?: InputMaybe<LambdaTypeRelationInput>\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n  connectOrCreate?: InputMaybe<LambdaTypeConnectOrCreateInput>\n}\n\nexport type MutationCreatePageTypesArgs = {\n  input: Array<PageTypeCreateInput>\n}\n\nexport type MutationDeletePageTypesArgs = {\n  where?: InputMaybe<PageTypeWhere>\n  delete?: InputMaybe<PageTypeDeleteInput>\n}\n\nexport type MutationUpdatePageTypesArgs = {\n  where?: InputMaybe<PageTypeWhere>\n  update?: InputMaybe<PageTypeUpdateInput>\n  connect?: InputMaybe<PageTypeConnectInput>\n  disconnect?: InputMaybe<PageTypeDisconnectInput>\n  create?: InputMaybe<PageTypeRelationInput>\n  delete?: InputMaybe<PageTypeDeleteInput>\n  connectOrCreate?: InputMaybe<PageTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateAppTypesArgs = {\n  input: Array<AppTypeCreateInput>\n}\n\nexport type MutationDeleteAppTypesArgs = {\n  where?: InputMaybe<AppTypeWhere>\n  delete?: InputMaybe<AppTypeDeleteInput>\n}\n\nexport type MutationUpdateAppTypesArgs = {\n  where?: InputMaybe<AppTypeWhere>\n  update?: InputMaybe<AppTypeUpdateInput>\n  connect?: InputMaybe<AppTypeConnectInput>\n  disconnect?: InputMaybe<AppTypeDisconnectInput>\n  create?: InputMaybe<AppTypeRelationInput>\n  delete?: InputMaybe<AppTypeDeleteInput>\n  connectOrCreate?: InputMaybe<AppTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateActionTypesArgs = {\n  input: Array<ActionTypeCreateInput>\n}\n\nexport type MutationDeleteActionTypesArgs = {\n  where?: InputMaybe<ActionTypeWhere>\n  delete?: InputMaybe<ActionTypeDeleteInput>\n}\n\nexport type MutationUpdateActionTypesArgs = {\n  where?: InputMaybe<ActionTypeWhere>\n  update?: InputMaybe<ActionTypeUpdateInput>\n  connect?: InputMaybe<ActionTypeConnectInput>\n  disconnect?: InputMaybe<ActionTypeDisconnectInput>\n  create?: InputMaybe<ActionTypeRelationInput>\n  delete?: InputMaybe<ActionTypeDeleteInput>\n  connectOrCreate?: InputMaybe<ActionTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateCodeMirrorTypesArgs = {\n  input: Array<CodeMirrorTypeCreateInput>\n}\n\nexport type MutationDeleteCodeMirrorTypesArgs = {\n  where?: InputMaybe<CodeMirrorTypeWhere>\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n}\n\nexport type MutationUpdateCodeMirrorTypesArgs = {\n  where?: InputMaybe<CodeMirrorTypeWhere>\n  update?: InputMaybe<CodeMirrorTypeUpdateInput>\n  connect?: InputMaybe<CodeMirrorTypeConnectInput>\n  disconnect?: InputMaybe<CodeMirrorTypeDisconnectInput>\n  create?: InputMaybe<CodeMirrorTypeRelationInput>\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n  connectOrCreate?: InputMaybe<CodeMirrorTypeConnectOrCreateInput>\n}\n\nexport type MutationCreateTagsArgs = {\n  input: Array<TagCreateInput>\n}\n\nexport type MutationDeleteTagsArgs = {\n  where?: InputMaybe<TagWhere>\n  delete?: InputMaybe<TagDeleteInput>\n}\n\nexport type MutationUpdateTagsArgs = {\n  where?: InputMaybe<TagWhere>\n  update?: InputMaybe<TagUpdateInput>\n  connect?: InputMaybe<TagConnectInput>\n  disconnect?: InputMaybe<TagDisconnectInput>\n  create?: InputMaybe<TagRelationInput>\n  delete?: InputMaybe<TagDeleteInput>\n  connectOrCreate?: InputMaybe<TagConnectOrCreateInput>\n}\n\nexport type MutationCreateRenderTypesArgs = {\n  input: Array<RenderTypeCreateInput>\n}\n\nexport type MutationDeleteRenderTypesArgs = {\n  where?: InputMaybe<RenderTypeWhere>\n}\n\nexport type MutationUpdateRenderTypesArgs = {\n  where?: InputMaybe<RenderTypeWhere>\n  update?: InputMaybe<RenderTypeUpdateInput>\n}\n\nexport type MutationCreateElementsArgs = {\n  input: Array<ElementCreateInput>\n}\n\nexport type MutationDeleteElementsArgs = {\n  where?: InputMaybe<ElementWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type MutationUpdateElementsArgs = {\n  where?: InputMaybe<ElementWhere>\n  update?: InputMaybe<ElementUpdateInput>\n  connect?: InputMaybe<ElementConnectInput>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n  create?: InputMaybe<ElementRelationInput>\n  delete?: InputMaybe<ElementDeleteInput>\n  connectOrCreate?: InputMaybe<ElementConnectOrCreateInput>\n}\n\nexport type MutationCreatePropsArgs = {\n  input: Array<PropCreateInput>\n}\n\nexport type MutationDeletePropsArgs = {\n  where?: InputMaybe<PropWhere>\n}\n\nexport type MutationUpdatePropsArgs = {\n  where?: InputMaybe<PropWhere>\n  update?: InputMaybe<PropUpdateInput>\n}\n\nexport type MutationCreateHooksArgs = {\n  input: Array<HookCreateInput>\n}\n\nexport type MutationDeleteHooksArgs = {\n  where?: InputMaybe<HookWhere>\n  delete?: InputMaybe<HookDeleteInput>\n}\n\nexport type MutationUpdateHooksArgs = {\n  where?: InputMaybe<HookWhere>\n  update?: InputMaybe<HookUpdateInput>\n  connect?: InputMaybe<HookConnectInput>\n  disconnect?: InputMaybe<HookDisconnectInput>\n  create?: InputMaybe<HookRelationInput>\n  delete?: InputMaybe<HookDeleteInput>\n  connectOrCreate?: InputMaybe<HookConnectOrCreateInput>\n}\n\nexport type MutationCreateComponentsArgs = {\n  input: Array<ComponentCreateInput>\n}\n\nexport type MutationDeleteComponentsArgs = {\n  where?: InputMaybe<ComponentWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}\n\nexport type MutationUpdateComponentsArgs = {\n  where?: InputMaybe<ComponentWhere>\n  update?: InputMaybe<ComponentUpdateInput>\n  connect?: InputMaybe<ComponentConnectInput>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n  create?: InputMaybe<ComponentRelationInput>\n  delete?: InputMaybe<ComponentDeleteInput>\n  connectOrCreate?: InputMaybe<ComponentConnectOrCreateInput>\n}\n\nexport type MutationCreateStoresArgs = {\n  input: Array<StoreCreateInput>\n}\n\nexport type MutationDeleteStoresArgs = {\n  where?: InputMaybe<StoreWhere>\n  delete?: InputMaybe<StoreDeleteInput>\n}\n\nexport type MutationUpdateStoresArgs = {\n  where?: InputMaybe<StoreWhere>\n  update?: InputMaybe<StoreUpdateInput>\n  connect?: InputMaybe<StoreConnectInput>\n  disconnect?: InputMaybe<StoreDisconnectInput>\n  create?: InputMaybe<StoreRelationInput>\n  delete?: InputMaybe<StoreDeleteInput>\n  connectOrCreate?: InputMaybe<StoreConnectOrCreateInput>\n}\n\nexport type MutationCreateCodeActionsArgs = {\n  input: Array<CodeActionCreateInput>\n}\n\nexport type MutationDeleteCodeActionsArgs = {\n  where?: InputMaybe<CodeActionWhere>\n  delete?: InputMaybe<CodeActionDeleteInput>\n}\n\nexport type MutationUpdateCodeActionsArgs = {\n  where?: InputMaybe<CodeActionWhere>\n  update?: InputMaybe<CodeActionUpdateInput>\n  connect?: InputMaybe<CodeActionConnectInput>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n  create?: InputMaybe<CodeActionRelationInput>\n  delete?: InputMaybe<CodeActionDeleteInput>\n  connectOrCreate?: InputMaybe<CodeActionConnectOrCreateInput>\n}\n\nexport type MutationCreateApiActionsArgs = {\n  input: Array<ApiActionCreateInput>\n}\n\nexport type MutationDeleteApiActionsArgs = {\n  where?: InputMaybe<ApiActionWhere>\n  delete?: InputMaybe<ApiActionDeleteInput>\n}\n\nexport type MutationUpdateApiActionsArgs = {\n  where?: InputMaybe<ApiActionWhere>\n  update?: InputMaybe<ApiActionUpdateInput>\n  connect?: InputMaybe<ApiActionConnectInput>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n  create?: InputMaybe<ApiActionRelationInput>\n  delete?: InputMaybe<ApiActionDeleteInput>\n  connectOrCreate?: InputMaybe<ApiActionConnectOrCreateInput>\n}\n\nexport type MutationCreateResourcesArgs = {\n  input: Array<ResourceCreateInput>\n}\n\nexport type MutationDeleteResourcesArgs = {\n  where?: InputMaybe<ResourceWhere>\n  delete?: InputMaybe<ResourceDeleteInput>\n}\n\nexport type MutationUpdateResourcesArgs = {\n  where?: InputMaybe<ResourceWhere>\n  update?: InputMaybe<ResourceUpdateInput>\n  connect?: InputMaybe<ResourceConnectInput>\n  disconnect?: InputMaybe<ResourceDisconnectInput>\n  create?: InputMaybe<ResourceRelationInput>\n  delete?: InputMaybe<ResourceDeleteInput>\n  connectOrCreate?: InputMaybe<ResourceConnectOrCreateInput>\n}\n\nexport type MutationCreateDeleteInfosArgs = {\n  input: Array<DeleteInfoCreateInput>\n}\n\nexport type MutationDeleteDeleteInfosArgs = {\n  where?: InputMaybe<DeleteInfoWhere>\n}\n\nexport type MutationUpdateDeleteInfosArgs = {\n  where?: InputMaybe<DeleteInfoWhere>\n  update?: InputMaybe<DeleteInfoUpdateInput>\n}\n\nexport type MutationCreateVercelDomainConfigsArgs = {\n  input: Array<VercelDomainConfigCreateInput>\n}\n\nexport type MutationDeleteVercelDomainConfigsArgs = {\n  where?: InputMaybe<VercelDomainConfigWhere>\n}\n\nexport type MutationUpdateVercelDomainConfigsArgs = {\n  where?: InputMaybe<VercelDomainConfigWhere>\n  update?: InputMaybe<VercelDomainConfigUpdateInput>\n}\n\nexport type MutationCreateVercelProjectDomainsArgs = {\n  input: Array<VercelProjectDomainCreateInput>\n}\n\nexport type MutationDeleteVercelProjectDomainsArgs = {\n  where?: InputMaybe<VercelProjectDomainWhere>\n}\n\nexport type MutationUpdateVercelProjectDomainsArgs = {\n  where?: InputMaybe<VercelProjectDomainWhere>\n  update?: InputMaybe<VercelProjectDomainUpdateInput>\n}\n\nexport enum ActionKind {\n  /** Action with custom code */\n  CodeAction = 'CodeAction',\n  /** Action responsible for fetching data from a resource */\n  ApiAction = 'ApiAction',\n}\n\nexport enum AtomType {\n  AntDesignAffix = 'AntDesignAffix',\n  AntDesignAlert = 'AntDesignAlert',\n  AntDesignAnchor = 'AntDesignAnchor',\n  AntDesignAnchorLink = 'AntDesignAnchorLink',\n  AntDesignAutoComplete = 'AntDesignAutoComplete',\n  AntDesignAvatar = 'AntDesignAvatar',\n  AntDesignBackTop = 'AntDesignBackTop',\n  AntDesignBadge = 'AntDesignBadge',\n  AntDesignBreadcrumb = 'AntDesignBreadcrumb',\n  AntDesignBreadcrumbItem = 'AntDesignBreadcrumbItem',\n  AntDesignCard = 'AntDesignCard',\n  AntDesignCardGrid = 'AntDesignCardGrid',\n  AntDesignBreadcrumbSeparator = 'AntDesignBreadcrumbSeparator',\n  AntDesignButton = 'AntDesignButton',\n  AntDesignCalendar = 'AntDesignCalendar',\n  AntDesignCollapsePanel = 'AntDesignCollapsePanel',\n  AntDesignComment = 'AntDesignComment',\n  AntDesignConfigProvider = 'AntDesignConfigProvider',\n  AntDesignDatePicker = 'AntDesignDatePicker',\n  AntDesignDescriptions = 'AntDesignDescriptions',\n  AntDesignCheckbox = 'AntDesignCheckbox',\n  AntDesignCheckboxGroup = 'AntDesignCheckboxGroup',\n  AntDesignCollapse = 'AntDesignCollapse',\n  AntDesignDropdown = 'AntDesignDropdown',\n  AntDesignCardMeta = 'AntDesignCardMeta',\n  AntDesignForm = 'AntDesignForm',\n  AntDesignFormErrorList = 'AntDesignFormErrorList',\n  AntDesignFormItem = 'AntDesignFormItem',\n  AntDesignDivider = 'AntDesignDivider',\n  AntDesignDrawer = 'AntDesignDrawer',\n  AntDesignFormProvider = 'AntDesignFormProvider',\n  AntDesignDropdownButton = 'AntDesignDropdownButton',\n  AntDesignEmpty = 'AntDesignEmpty',\n  AntDesignImage = 'AntDesignImage',\n  AntDesignDescriptionsItem = 'AntDesignDescriptionsItem',\n  AntDesignFormList = 'AntDesignFormList',\n  AntDesignCascader = 'AntDesignCascader',\n  AntDesignLayoutFooter = 'AntDesignLayoutFooter',\n  AntDesignLayoutHeader = 'AntDesignLayoutHeader',\n  AntDesignLayoutSider = 'AntDesignLayoutSider',\n  AntDesignIcon = 'AntDesignIcon',\n  AntDesignInput = 'AntDesignInput',\n  AntDesignInputNumber = 'AntDesignInputNumber',\n  AntDesignLayout = 'AntDesignLayout',\n  AntDesignLayoutContent = 'AntDesignLayoutContent',\n  AntDesignMentionsOption = 'AntDesignMentionsOption',\n  AntDesignMenu = 'AntDesignMenu',\n  AntDesignGridRow = 'AntDesignGridRow',\n  AntDesignList = 'AntDesignList',\n  AntDesignListItem = 'AntDesignListItem',\n  AntDesignMessage = 'AntDesignMessage',\n  AntDesignMentions = 'AntDesignMentions',\n  AntDesignGridCol = 'AntDesignGridCol',\n  AntDesignProgress = 'AntDesignProgress',\n  AntDesignNotification = 'AntDesignNotification',\n  AntDesignRadio = 'AntDesignRadio',\n  AntDesignListItemMeta = 'AntDesignListItemMeta',\n  AntDesignPagination = 'AntDesignPagination',\n  AntDesignPopconfirm = 'AntDesignPopconfirm',\n  AntDesignPopover = 'AntDesignPopover',\n  AntDesignResult = 'AntDesignResult',\n  AntDesignModal = 'AntDesignModal',\n  AntDesignSegmented = 'AntDesignSegmented',\n  AntDesignRadioGroup = 'AntDesignRadioGroup',\n  AntDesignRate = 'AntDesignRate',\n  AntDesignStatistic = 'AntDesignStatistic',\n  AntDesignSteps = 'AntDesignSteps',\n  AntDesignSelectOption = 'AntDesignSelectOption',\n  AntDesignSkeleton = 'AntDesignSkeleton',\n  AntDesignSlider = 'AntDesignSlider',\n  AntDesignSpace = 'AntDesignSpace',\n  AntDesignSpin = 'AntDesignSpin',\n  AntDesignTag = 'AntDesignTag',\n  AntDesignSelect = 'AntDesignSelect',\n  AntDesignStepsStep = 'AntDesignStepsStep',\n  AntDesignSwitch = 'AntDesignSwitch',\n  AntDesignTable = 'AntDesignTable',\n  AntDesignTabs = 'AntDesignTabs',\n  AntDesignTabsTabPane = 'AntDesignTabsTabPane',\n  AntDesignTreeSelect = 'AntDesignTreeSelect',\n  AntDesignTimeline = 'AntDesignTimeline',\n  AntDesignTimelineItem = 'AntDesignTimelineItem',\n  AntDesignTooltip = 'AntDesignTooltip',\n  AntDesignTransfer = 'AntDesignTransfer',\n  AntDesignTree = 'AntDesignTree',\n  AntDesignTimePicker = 'AntDesignTimePicker',\n  AntDesignTypographyParagraph = 'AntDesignTypographyParagraph',\n  AntDesignTypographyText = 'AntDesignTypographyText',\n  AntDesignTypographyTitle = 'AntDesignTypographyTitle',\n  AntDesignUpload = 'AntDesignUpload',\n  AntDesignCarousel = 'AntDesignCarousel',\n  MuiAccordion = 'MuiAccordion',\n  MuiAccordionActions = 'MuiAccordionActions',\n  MuiAccordionDetails = 'MuiAccordionDetails',\n  MuiAccordionSummary = 'MuiAccordionSummary',\n  MuiAlert = 'MuiAlert',\n  MuiAlertTitle = 'MuiAlertTitle',\n  MuiAppBar = 'MuiAppBar',\n  MuiAutocomplete = 'MuiAutocomplete',\n  MuiAvatar = 'MuiAvatar',\n  MuiAvatarGroup = 'MuiAvatarGroup',\n  MuiBackdrop = 'MuiBackdrop',\n  MuiBadge = 'MuiBadge',\n  MuiBadgeUnstyled = 'MuiBadgeUnstyled',\n  MuiBottomNavigation = 'MuiBottomNavigation',\n  MuiBottomNavigationAction = 'MuiBottomNavigationAction',\n  MuiBox = 'MuiBox',\n  MuiBreadcrumbs = 'MuiBreadcrumbs',\n  MuiButton = 'MuiButton',\n  MuiButtonBase = 'MuiButtonBase',\n  MuiButtonGroup = 'MuiButtonGroup',\n  MuiButtonUnstyled = 'MuiButtonUnstyled',\n  MuiCalendarPicker = 'MuiCalendarPicker',\n  MuiCalendarPickerSkeleton = 'MuiCalendarPickerSkeleton',\n  MuiCard = 'MuiCard',\n  MuiCardActionArea = 'MuiCardActionArea',\n  MuiCardActions = 'MuiCardActions',\n  MuiCardContent = 'MuiCardContent',\n  MuiCardHeader = 'MuiCardHeader',\n  MuiCardMedia = 'MuiCardMedia',\n  MuiCheckbox = 'MuiCheckbox',\n  MuiChip = 'MuiChip',\n  MuiCircularProgress = 'MuiCircularProgress',\n  MuiClickAwayListener = 'MuiClickAwayListener',\n  MuiClockPicker = 'MuiClockPicker',\n  MuiCollapse = 'MuiCollapse',\n  MuiContainer = 'MuiContainer',\n  MuiCssBaseline = 'MuiCssBaseline',\n  MuiDataGrid = 'MuiDataGrid',\n  MuiGridColDef = 'MuiGridColDef',\n  MuiDatePicker = 'MuiDatePicker',\n  MuiDateRangePicker = 'MuiDateRangePicker',\n  MuiDateRangePickerDay = 'MuiDateRangePickerDay',\n  MuiDateTimePicker = 'MuiDateTimePicker',\n  MuiDesktopDatePicker = 'MuiDesktopDatePicker',\n  MuiDesktopDateRangePicker = 'MuiDesktopDateRangePicker',\n  MuiDesktopDateTimePicker = 'MuiDesktopDateTimePicker',\n  MuiDesktopTimePicker = 'MuiDesktopTimePicker',\n  MuiDialog = 'MuiDialog',\n  MuiDialogActions = 'MuiDialogActions',\n  MuiDialogContent = 'MuiDialogContent',\n  MuiDialogContentText = 'MuiDialogContentText',\n  MuiDialogTitle = 'MuiDialogTitle',\n  MuiDivider = 'MuiDivider',\n  MuiDrawer = 'MuiDrawer',\n  MuiFab = 'MuiFab',\n  MuiFade = 'MuiFade',\n  MuiFilledInput = 'MuiFilledInput',\n  MuiFormControl = 'MuiFormControl',\n  MuiFormControlLabel = 'MuiFormControlLabel',\n  MuiFormControlUnstyled = 'MuiFormControlUnstyled',\n  MuiFormGroup = 'MuiFormGroup',\n  MuiFormHelperText = 'MuiFormHelperText',\n  MuiFormLabel = 'MuiFormLabel',\n  MuiGlobalStyles = 'MuiGlobalStyles',\n  MuiGrid = 'MuiGrid',\n  MuiGrow = 'MuiGrow',\n  MuiHidden = 'MuiHidden',\n  MuiIcon = 'MuiIcon',\n  MuiIconButton = 'MuiIconButton',\n  MuiImageList = 'MuiImageList',\n  MuiImageListItem = 'MuiImageListItem',\n  MuiImageListItemBar = 'MuiImageListItemBar',\n  MuiInput = 'MuiInput',\n  MuiInputAdornment = 'MuiInputAdornment',\n  MuiInputBase = 'MuiInputBase',\n  MuiInputLabel = 'MuiInputLabel',\n  MuiLinearProgress = 'MuiLinearProgress',\n  MuiLink = 'MuiLink',\n  MuiList = 'MuiList',\n  MuiListItem = 'MuiListItem',\n  MuiListItemAvatar = 'MuiListItemAvatar',\n  MuiListItemButton = 'MuiListItemButton',\n  MuiListItemIcon = 'MuiListItemIcon',\n  MuiListItemSecondaryAction = 'MuiListItemSecondaryAction',\n  MuiListItemText = 'MuiListItemText',\n  MuiListSubheader = 'MuiListSubheader',\n  MuiLoadingButton = 'MuiLoadingButton',\n  MuiMasonry = 'MuiMasonry',\n  MuiMasonryItem = 'MuiMasonryItem',\n  MuiMenu = 'MuiMenu',\n  MuiMenuItem = 'MuiMenuItem',\n  MuiMenuList = 'MuiMenuList',\n  MuiMobileDatePicker = 'MuiMobileDatePicker',\n  MuiMobileDateRangePicker = 'MuiMobileDateRangePicker',\n  MuiMobileDateTimePicker = 'MuiMobileDateTimePicker',\n  MuiMobileStepper = 'MuiMobileStepper',\n  MuiMobileTimePicker = 'MuiMobileTimePicker',\n  MuiModal = 'MuiModal',\n  MuiModalUnstyled = 'MuiModalUnstyled',\n  MuiMonthPicker = 'MuiMonthPicker',\n  MuiNativeSelect = 'MuiNativeSelect',\n  MuiNoSsr = 'MuiNoSsr',\n  MuiOutlinedInput = 'MuiOutlinedInput',\n  MuiPagination = 'MuiPagination',\n  MuiPaginationItem = 'MuiPaginationItem',\n  MuiPaper = 'MuiPaper',\n  MuiPickersDay = 'MuiPickersDay',\n  MuiPopover = 'MuiPopover',\n  MuiPopper = 'MuiPopper',\n  MuiPortal = 'MuiPortal',\n  MuiRadio = 'MuiRadio',\n  MuiRadioGroup = 'MuiRadioGroup',\n  MuiRating = 'MuiRating',\n  MuiScopedCssBaseline = 'MuiScopedCssBaseline',\n  MuiSelect = 'MuiSelect',\n  MuiSkeleton = 'MuiSkeleton',\n  MuiSlide = 'MuiSlide',\n  MuiSlider = 'MuiSlider',\n  MuiSliderUnstyled = 'MuiSliderUnstyled',\n  MuiSnackbar = 'MuiSnackbar',\n  MuiSnackbarContent = 'MuiSnackbarContent',\n  MuiSpeedDial = 'MuiSpeedDial',\n  MuiSpeedDialAction = 'MuiSpeedDialAction',\n  MuiSpeedDialIcon = 'MuiSpeedDialIcon',\n  MuiStack = 'MuiStack',\n  MuiStaticDatePicker = 'MuiStaticDatePicker',\n  MuiStaticDateRangePicker = 'MuiStaticDateRangePicker',\n  MuiStaticDateTimePicker = 'MuiStaticDateTimePicker',\n  MuiStaticTimePicker = 'MuiStaticTimePicker',\n  MuiStep = 'MuiStep',\n  MuiStepButton = 'MuiStepButton',\n  MuiStepConnector = 'MuiStepConnector',\n  MuiStepContent = 'MuiStepContent',\n  MuiStepIcon = 'MuiStepIcon',\n  MuiStepLabel = 'MuiStepLabel',\n  MuiStepper = 'MuiStepper',\n  MuiSvgIcon = 'MuiSvgIcon',\n  MuiSwipeableDrawer = 'MuiSwipeableDrawer',\n  MuiSwitch = 'MuiSwitch',\n  MuiSwitchUnstyled = 'MuiSwitchUnstyled',\n  MuiTab = 'MuiTab',\n  MuiTabContext = 'MuiTabContext',\n  MuiTabList = 'MuiTabList',\n  MuiTabPanel = 'MuiTabPanel',\n  MuiTabScrollButton = 'MuiTabScrollButton',\n  MuiTable = 'MuiTable',\n  MuiTableBody = 'MuiTableBody',\n  MuiTableCell = 'MuiTableCell',\n  MuiTableContainer = 'MuiTableContainer',\n  MuiTableFooter = 'MuiTableFooter',\n  MuiTableHead = 'MuiTableHead',\n  MuiTablePagination = 'MuiTablePagination',\n  MuiTableRow = 'MuiTableRow',\n  MuiTableSortLabel = 'MuiTableSortLabel',\n  MuiTabs = 'MuiTabs',\n  MuiTextField = 'MuiTextField',\n  MuiTextareaAutosize = 'MuiTextareaAutosize',\n  MuiTimePicker = 'MuiTimePicker',\n  MuiTimeline = 'MuiTimeline',\n  MuiTimelineConnector = 'MuiTimelineConnector',\n  MuiTimelineContent = 'MuiTimelineContent',\n  MuiTimelineDot = 'MuiTimelineDot',\n  MuiTimelineItem = 'MuiTimelineItem',\n  MuiTimelineOppositeContent = 'MuiTimelineOppositeContent',\n  MuiTimelineSeparator = 'MuiTimelineSeparator',\n  MuiToggleButton = 'MuiToggleButton',\n  MuiToggleButtonGroup = 'MuiToggleButtonGroup',\n  MuiToolbar = 'MuiToolbar',\n  MuiTooltip = 'MuiTooltip',\n  MuiTreeItem = 'MuiTreeItem',\n  MuiTreeView = 'MuiTreeView',\n  MuiTypography = 'MuiTypography',\n  MuiUnstableTrapFocus = 'MuiUnstableTrapFocus',\n  MuiYearPicker = 'MuiYearPicker',\n  MuiZoom = 'MuiZoom',\n  Query = 'Query',\n  TextList = 'TextList',\n  Text = 'Text',\n  Script = 'Script',\n  State = 'State',\n  GridLayout = 'GridLayout',\n  HookGraphqlQuery = 'HookGraphqlQuery',\n  HookGraphqlMutation = 'HookGraphqlMutation',\n  HookRecoilState = 'HookRecoilState',\n  HookRouter = 'HookRouter',\n  HookQueryLambda = 'HookQueryLambda',\n  HookQueryConfig = 'HookQueryConfig',\n  HookQueryPages = 'HookQueryPages',\n  HookQueryPage = 'HookQueryPage',\n  ReactFragment = 'ReactFragment',\n  HtmlA = 'HtmlA',\n  HtmlAbbr = 'HtmlAbbr',\n  HtmlArea = 'HtmlArea',\n  HtmlArticle = 'HtmlArticle',\n  HtmlAside = 'HtmlAside',\n  HtmlAudio = 'HtmlAudio',\n  HtmlB = 'HtmlB',\n  HtmlBase = 'HtmlBase',\n  HtmlBdo = 'HtmlBdo',\n  HtmlBlockquote = 'HtmlBlockquote',\n  HtmlBr = 'HtmlBr',\n  HtmlButton = 'HtmlButton',\n  HtmlCanvas = 'HtmlCanvas',\n  HtmlCite = 'HtmlCite',\n  HtmlCode = 'HtmlCode',\n  HtmlCol = 'HtmlCol',\n  HtmlDl = 'HtmlDl',\n  HtmlData = 'HtmlData',\n  HtmlDatalist = 'HtmlDatalist',\n  HtmlDetails = 'HtmlDetails',\n  HtmlDfn = 'HtmlDfn',\n  HtmlDialog = 'HtmlDialog',\n  HtmlDiv = 'HtmlDiv',\n  HtmlEm = 'HtmlEm',\n  HtmlEmbed = 'HtmlEmbed',\n  HtmlFieldset = 'HtmlFieldset',\n  HtmlFooter = 'HtmlFooter',\n  HtmlForm = 'HtmlForm',\n  HtmlH1 = 'HtmlH1',\n  HtmlH2 = 'HtmlH2',\n  HtmlH3 = 'HtmlH3',\n  HtmlH4 = 'HtmlH4',\n  HtmlH5 = 'HtmlH5',\n  HtmlH6 = 'HtmlH6',\n  HtmlHead = 'HtmlHead',\n  HtmlHeader = 'HtmlHeader',\n  HtmlHr = 'HtmlHr',\n  HtmlI = 'HtmlI',\n  HtmlIframe = 'HtmlIframe',\n  HtmlImg = 'HtmlImg',\n  HtmlInput = 'HtmlInput',\n  HtmlKbd = 'HtmlKbd',\n  HtmlLabel = 'HtmlLabel',\n  HtmlLegend = 'HtmlLegend',\n  HtmlLi = 'HtmlLi',\n  HtmlLink = 'HtmlLink',\n  HtmlMain = 'HtmlMain',\n  HtmlMath = 'HtmlMath',\n  HtmlMark = 'HtmlMark',\n  HtmlMap = 'HtmlMap',\n  HtmlMeta = 'HtmlMeta',\n  HtmlMeter = 'HtmlMeter',\n  HtmlNav = 'HtmlNav',\n  HtmlNoscript = 'HtmlNoscript',\n  HtmlOl = 'HtmlOl',\n  HtmlObject = 'HtmlObject',\n  HtmlOptgroup = 'HtmlOptgroup',\n  HtmlOption = 'HtmlOption',\n  HtmlOutput = 'HtmlOutput',\n  HtmlP = 'HtmlP',\n  HtmlParam = 'HtmlParam',\n  HtmlPicture = 'HtmlPicture',\n  HtmlPre = 'HtmlPre',\n  HtmlProgress = 'HtmlProgress',\n  HtmlQ = 'HtmlQ',\n  HtmlRuby = 'HtmlRuby',\n  HtmlS = 'HtmlS',\n  HtmlSamp = 'HtmlSamp',\n  HtmlScript = 'HtmlScript',\n  HtmlSection = 'HtmlSection',\n  HtmlSelect = 'HtmlSelect',\n  HtmlSmall = 'HtmlSmall',\n  HtmlSource = 'HtmlSource',\n  HtmlSpan = 'HtmlSpan',\n  HtmlStrong = 'HtmlStrong',\n  HtmlStyle = 'HtmlStyle',\n  HtmlSub = 'HtmlSub',\n  HtmlSup = 'HtmlSup',\n  HtmlSvg = 'HtmlSvg',\n  HtmlTable = 'HtmlTable',\n  HtmlCaption = 'HtmlCaption',\n  HtmlTd = 'HtmlTd',\n  HtmlTh = 'HtmlTh',\n  HtmlTr = 'HtmlTr',\n  HtmlTemplate = 'HtmlTemplate',\n  HtmlTextarea = 'HtmlTextarea',\n  HtmlTime = 'HtmlTime',\n  HtmlTitle = 'HtmlTitle',\n  HtmlTrack = 'HtmlTrack',\n  HtmlU = 'HtmlU',\n  HtmlUl = 'HtmlUl',\n  HtmlVar = 'HtmlVar',\n  HtmlVideo = 'HtmlVideo',\n  HtmlWbr = 'HtmlWbr',\n  ExternalComponent = 'ExternalComponent',\n}\n\nexport enum CodeMirrorLanguage {\n  Typescript = 'Typescript',\n  Javascript = 'Javascript',\n  Css = 'Css',\n  Json = 'Json',\n  Graphql = 'Graphql',\n  CssInJs = 'CssInJs',\n}\n\nexport enum ElementTypeKind {\n  AllElements = 'AllElements',\n  ChildrenOnly = 'ChildrenOnly',\n  DescendantsOnly = 'DescendantsOnly',\n  ExcludeDescendantsElements = 'ExcludeDescendantsElements',\n}\n\nexport enum PageKind {\n  Provider = 'Provider',\n  InternalServerError = 'InternalServerError',\n  NotFound = 'NotFound',\n  Regular = 'Regular',\n}\n\nexport enum PrimitiveTypeKind {\n  String = 'String',\n  Integer = 'Integer',\n  Boolean = 'Boolean',\n  Number = 'Number',\n}\n\nexport enum RenderTypeKind {\n  Atom = 'Atom',\n  Component = 'Component',\n}\n\nexport enum ResourceType {\n  GraphQl = 'GraphQL',\n  Rest = 'Rest',\n}\n\nexport enum Role {\n  User = 'User',\n  Admin = 'Admin',\n}\n\nexport enum SortDirection {\n  /** Sort by field values in ascending order. */\n  Asc = 'ASC',\n  /** Sort by field values in descending order. */\n  Desc = 'DESC',\n}\n\nexport enum TypeKind {\n  PrimitiveType = 'PrimitiveType',\n  EnumType = 'EnumType',\n  ArrayType = 'ArrayType',\n  InterfaceType = 'InterfaceType',\n  LambdaType = 'LambdaType',\n  ElementType = 'ElementType',\n  RenderPropType = 'RenderPropType',\n  ReactNodeType = 'ReactNodeType',\n  UnionType = 'UnionType',\n  CodeMirrorType = 'CodeMirrorType',\n  PageType = 'PageType',\n  AppType = 'AppType',\n  ActionType = 'ActionType',\n}\n\nexport type AnyAction = ApiAction | CodeAction\n\nexport type AnyType =\n  | PrimitiveType\n  | ArrayType\n  | UnionType\n  | InterfaceType\n  | ElementType\n  | RenderPropType\n  | ReactNodeType\n  | EnumType\n  | LambdaType\n  | PageType\n  | AppType\n  | ActionType\n  | CodeMirrorType\n\nexport type BaseAction = {\n  store: Store\n  element?: Maybe<Element>\n  storeConnection: BaseActionStoreConnection\n  elementConnection: BaseActionElementConnection\n  id: Scalars['ID']\n  name: Scalars['String']\n  type: ActionKind\n}\n\nexport type BaseActionStoreArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type BaseActionElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type BaseActionStoreConnectionArgs = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n}\n\nexport type BaseActionElementConnectionArgs = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n}\n\nexport type IBaseType = {\n  owner: User\n  ownerConnection: IBaseTypeOwnerConnection\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n}\n\nexport type IBaseTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type IBaseTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type WithDescendants = {\n  descendantTypesIds: Array<Scalars['ID']>\n}\n\nexport type WithOwner = {\n  owner: User\n  ownerConnection: WithOwnerOwnerConnection\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionType = IBaseType & {\n  __typename?: 'ActionType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<ActionTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a action from the list of actions */\nexport type ActionTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type ActionTypeAggregateSelection = {\n  __typename?: 'ActionTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ActionTypeEdge = {\n  __typename?: 'ActionTypeEdge'\n  cursor: Scalars['String']\n  node: ActionType\n}\n\nexport type ActionTypesConnection = {\n  __typename?: 'ActionTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ActionTypeEdge>\n}\n\nexport type ActionTypeUserOwnerAggregationSelection = {\n  __typename?: 'ActionTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ActionTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ActionTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ActionTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type ApiAction = BaseAction & {\n  __typename?: 'ApiAction'\n  id: Scalars['ID']\n  name: Scalars['String']\n  type: ActionKind\n  store: Store\n  storeAggregate?: Maybe<ApiActionStoreStoreAggregationSelection>\n  element?: Maybe<Element>\n  elementAggregate?: Maybe<ApiActionElementElementAggregationSelection>\n  /** Response handlers */\n  successAction?: Maybe<AnyAction>\n  errorAction?: Maybe<AnyAction>\n  /** Resource to fetch data from */\n  resource: Resource\n  resourceAggregate?: Maybe<ApiActionResourceResourceAggregationSelection>\n  config: Prop\n  configAggregate?: Maybe<ApiActionPropConfigAggregationSelection>\n  storeConnection: BaseActionStoreConnection\n  elementConnection: BaseActionElementConnection\n  successActionConnection: ApiActionSuccessActionConnection\n  errorActionConnection: ApiActionErrorActionConnection\n  resourceConnection: ApiActionResourceConnection\n  configConnection: ApiActionConfigConnection\n}\n\nexport type ApiActionStoreArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionStoreAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionSuccessActionArgs = {\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionErrorActionArgs = {\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionResourceArgs = {\n  where?: InputMaybe<ResourceWhere>\n  options?: InputMaybe<ResourceOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionResourceAggregateArgs = {\n  where?: InputMaybe<ResourceWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionConfigArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionConfigAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionStoreConnectionArgs = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n}\n\nexport type ApiActionElementConnectionArgs = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n}\n\nexport type ApiActionSuccessActionConnectionArgs = {\n  where?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionErrorActionConnectionArgs = {\n  where?: InputMaybe<ApiActionErrorActionConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ApiActionResourceConnectionArgs = {\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ApiActionResourceConnectionSort>>\n}\n\nexport type ApiActionConfigConnectionArgs = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ApiActionConfigConnectionSort>>\n}\n\nexport type ApiActionAggregateSelection = {\n  __typename?: 'ApiActionAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionConfigConnection = {\n  __typename?: 'ApiActionConfigConnection'\n  edges: Array<ApiActionConfigRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ApiActionConfigRelationship = {\n  __typename?: 'ApiActionConfigRelationship'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type ApiActionEdge = {\n  __typename?: 'ApiActionEdge'\n  cursor: Scalars['String']\n  node: ApiAction\n}\n\nexport type ApiActionElementElementAggregationSelection = {\n  __typename?: 'ApiActionElementElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ApiActionElementElementNodeAggregateSelection>\n}\n\nexport type ApiActionElementElementNodeAggregateSelection = {\n  __typename?: 'ApiActionElementElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ApiActionErrorActionConnection = {\n  __typename?: 'ApiActionErrorActionConnection'\n  edges: Array<ApiActionErrorActionRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ApiActionErrorActionRelationship = {\n  __typename?: 'ApiActionErrorActionRelationship'\n  cursor: Scalars['String']\n  node: AnyAction\n}\n\nexport type ApiActionPropConfigAggregationSelection = {\n  __typename?: 'ApiActionPropConfigAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ApiActionPropConfigNodeAggregateSelection>\n}\n\nexport type ApiActionPropConfigNodeAggregateSelection = {\n  __typename?: 'ApiActionPropConfigNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionResourceConnection = {\n  __typename?: 'ApiActionResourceConnection'\n  edges: Array<ApiActionResourceRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ApiActionResourceRelationship = {\n  __typename?: 'ApiActionResourceRelationship'\n  cursor: Scalars['String']\n  node: Resource\n}\n\nexport type ApiActionResourceResourceAggregationSelection = {\n  __typename?: 'ApiActionResourceResourceAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ApiActionResourceResourceNodeAggregateSelection>\n}\n\nexport type ApiActionResourceResourceNodeAggregateSelection = {\n  __typename?: 'ApiActionResourceResourceNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionsConnection = {\n  __typename?: 'ApiActionsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ApiActionEdge>\n}\n\nexport type ApiActionStoreStoreAggregationSelection = {\n  __typename?: 'ApiActionStoreStoreAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ApiActionStoreStoreNodeAggregateSelection>\n}\n\nexport type ApiActionStoreStoreNodeAggregateSelection = {\n  __typename?: 'ApiActionStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ApiActionSuccessActionConnection = {\n  __typename?: 'ApiActionSuccessActionConnection'\n  edges: Array<ApiActionSuccessActionRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ApiActionSuccessActionRelationship = {\n  __typename?: 'ApiActionSuccessActionRelationship'\n  cursor: Scalars['String']\n  node: AnyAction\n}\n\nexport type App = WithOwner & {\n  __typename?: 'App'\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n  name: Scalars['String']\n  slug: Scalars['String']\n  owner: User\n  ownerAggregate?: Maybe<AppUserOwnerAggregationSelection>\n  pages: Array<Page>\n  pagesAggregate?: Maybe<AppPagePagesAggregationSelection>\n  domains: Array<Domain>\n  domainsAggregate?: Maybe<AppDomainDomainsAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  pagesConnection: AppPagesConnection\n  domainsConnection: AppDomainsConnection\n}\n\nexport type AppOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppPagesArgs = {\n  where?: InputMaybe<PageWhere>\n  options?: InputMaybe<PageOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppPagesAggregateArgs = {\n  where?: InputMaybe<PageWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppDomainsArgs = {\n  where?: InputMaybe<DomainWhere>\n  options?: InputMaybe<DomainOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppDomainsAggregateArgs = {\n  where?: InputMaybe<DomainWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AppOwnerConnectionArgs = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n}\n\nexport type AppPagesConnectionArgs = {\n  where?: InputMaybe<AppPagesConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AppPagesConnectionSort>>\n}\n\nexport type AppDomainsConnectionArgs = {\n  where?: InputMaybe<AppDomainsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AppDomainsConnectionSort>>\n}\n\nexport type AppAggregateSelection = {\n  __typename?: 'AppAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n}\n\nexport type AppDomainDomainsAggregationSelection = {\n  __typename?: 'AppDomainDomainsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AppDomainDomainsNodeAggregateSelection>\n}\n\nexport type AppDomainDomainsNodeAggregateSelection = {\n  __typename?: 'AppDomainDomainsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AppDomainsConnection = {\n  __typename?: 'AppDomainsConnection'\n  edges: Array<AppDomainsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AppDomainsRelationship = {\n  __typename?: 'AppDomainsRelationship'\n  cursor: Scalars['String']\n  node: Domain\n}\n\nexport type AppEdge = {\n  __typename?: 'AppEdge'\n  cursor: Scalars['String']\n  node: App\n}\n\nexport type AppPagePagesAggregationSelection = {\n  __typename?: 'AppPagePagesAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AppPagePagesNodeAggregateSelection>\n}\n\nexport type AppPagePagesNodeAggregateSelection = {\n  __typename?: 'AppPagePagesNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type AppPagesConnection = {\n  __typename?: 'AppPagesConnection'\n  edges: Array<AppPagesRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AppPagesRelationship = {\n  __typename?: 'AppPagesRelationship'\n  cursor: Scalars['String']\n  node: Page\n}\n\nexport type AppsConnection = {\n  __typename?: 'AppsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<AppEdge>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppType = IBaseType & {\n  __typename?: 'AppType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<AppTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a app from the list of apps */\nexport type AppTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type AppTypeAggregateSelection = {\n  __typename?: 'AppTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AppTypeEdge = {\n  __typename?: 'AppTypeEdge'\n  cursor: Scalars['String']\n  node: AppType\n}\n\nexport type AppTypesConnection = {\n  __typename?: 'AppTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<AppTypeEdge>\n}\n\nexport type AppTypeUserOwnerAggregationSelection = {\n  __typename?: 'AppTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AppTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type AppTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'AppTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type AppUserOwnerAggregationSelection = {\n  __typename?: 'AppUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AppUserOwnerNodeAggregateSelection>\n}\n\nexport type AppUserOwnerNodeAggregateSelection = {\n  __typename?: 'AppUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayType = IBaseType &\n  WithDescendants & {\n    __typename?: 'ArrayType'\n    id: Scalars['ID']\n    name: Scalars['String']\n    descendantTypesIds: Array<Scalars['ID']>\n    kind: TypeKind\n    owner: User\n    ownerAggregate?: Maybe<ArrayTypeUserOwnerAggregationSelection>\n    fieldRefs: Array<Field>\n    fieldRefsAggregate?: Maybe<ArrayTypeFieldFieldRefsAggregationSelection>\n    itemType: IBaseType\n    ownerConnection: IBaseTypeOwnerConnection\n    fieldRefsConnection: ArrayTypeFieldRefsConnection\n    itemTypeConnection: ArrayTypeItemTypeConnection\n  }\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeItemTypeArgs = {\n  options?: InputMaybe<IBaseTypeOptions>\n  where?: InputMaybe<IBaseTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeFieldRefsConnectionArgs = {\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ArrayTypeFieldRefsConnectionSort>>\n}\n\n/**\n * ArrayType Allows defining a variable number of items of a given type.\n * Contains a reference to another type which is the array item type.\n */\nexport type ArrayTypeItemTypeConnectionArgs = {\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ArrayTypeItemTypeConnectionSort>>\n}\n\nexport type ArrayTypeAggregateSelection = {\n  __typename?: 'ArrayTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ArrayTypeEdge = {\n  __typename?: 'ArrayTypeEdge'\n  cursor: Scalars['String']\n  node: ArrayType\n}\n\nexport type ArrayTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'ArrayTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ArrayTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type ArrayTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'ArrayTypeFieldFieldRefsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type ArrayTypeFieldRefsConnection = {\n  __typename?: 'ArrayTypeFieldRefsConnection'\n  edges: Array<ArrayTypeFieldRefsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ArrayTypeFieldRefsRelationship = {\n  __typename?: 'ArrayTypeFieldRefsRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type ArrayTypeItemTypeConnection = {\n  __typename?: 'ArrayTypeItemTypeConnection'\n  edges: Array<ArrayTypeItemTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ArrayTypeItemTypeRelationship = {\n  __typename?: 'ArrayTypeItemTypeRelationship'\n  cursor: Scalars['String']\n  node: IBaseType\n}\n\nexport type ArrayTypesConnection = {\n  __typename?: 'ArrayTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ArrayTypeEdge>\n}\n\nexport type ArrayTypeUserOwnerAggregationSelection = {\n  __typename?: 'ArrayTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ArrayTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ArrayTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ArrayTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type Atom = WithOwner & {\n  __typename?: 'Atom'\n  id: Scalars['ID']\n  name: Scalars['String']\n  icon?: Maybe<Scalars['String']>\n  externalJsSource?: Maybe<Scalars['String']>\n  externalCssSource?: Maybe<Scalars['String']>\n  externalSourceType?: Maybe<Scalars['String']>\n  type: AtomType\n  owner: User\n  ownerAggregate?: Maybe<AtomUserOwnerAggregationSelection>\n  tags: Array<Tag>\n  tagsAggregate?: Maybe<AtomTagTagsAggregationSelection>\n  api: InterfaceType\n  apiAggregate?: Maybe<AtomInterfaceTypeApiAggregationSelection>\n  requiredParents: Array<Atom>\n  requiredParentsAggregate?: Maybe<AtomAtomRequiredParentsAggregationSelection>\n  suggestedChildren: Array<Atom>\n  suggestedChildrenAggregate?: Maybe<AtomAtomSuggestedChildrenAggregationSelection>\n  ownerConnection: WithOwnerOwnerConnection\n  tagsConnection: AtomTagsConnection\n  apiConnection: AtomApiConnection\n  requiredParentsConnection: AtomRequiredParentsConnection\n  suggestedChildrenConnection: AtomSuggestedChildrenConnection\n}\n\nexport type AtomOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomTagsArgs = {\n  where?: InputMaybe<TagWhere>\n  options?: InputMaybe<TagOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomTagsAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomApiArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  options?: InputMaybe<InterfaceTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomApiAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomRequiredParentsArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomRequiredParentsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomSuggestedChildrenArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomSuggestedChildrenAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type AtomOwnerConnectionArgs = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n}\n\nexport type AtomTagsConnectionArgs = {\n  where?: InputMaybe<AtomTagsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AtomTagsConnectionSort>>\n}\n\nexport type AtomApiConnectionArgs = {\n  where?: InputMaybe<AtomApiConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AtomApiConnectionSort>>\n}\n\nexport type AtomRequiredParentsConnectionArgs = {\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AtomRequiredParentsConnectionSort>>\n}\n\nexport type AtomSuggestedChildrenConnectionArgs = {\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<AtomSuggestedChildrenConnectionSort>>\n}\n\nexport type AtomAggregateSelection = {\n  __typename?: 'AtomAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type AtomApiConnection = {\n  __typename?: 'AtomApiConnection'\n  edges: Array<AtomApiRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AtomApiRelationship = {\n  __typename?: 'AtomApiRelationship'\n  cursor: Scalars['String']\n  node: InterfaceType\n}\n\nexport type AtomAtomRequiredParentsAggregationSelection = {\n  __typename?: 'AtomAtomRequiredParentsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AtomAtomRequiredParentsNodeAggregateSelection>\n}\n\nexport type AtomAtomRequiredParentsNodeAggregateSelection = {\n  __typename?: 'AtomAtomRequiredParentsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type AtomAtomSuggestedChildrenAggregationSelection = {\n  __typename?: 'AtomAtomSuggestedChildrenAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AtomAtomSuggestedChildrenNodeAggregateSelection>\n}\n\nexport type AtomAtomSuggestedChildrenNodeAggregateSelection = {\n  __typename?: 'AtomAtomSuggestedChildrenNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type AtomEdge = {\n  __typename?: 'AtomEdge'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type AtomInterfaceTypeApiAggregationSelection = {\n  __typename?: 'AtomInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AtomInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type AtomInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'AtomInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomRequiredParentsConnection = {\n  __typename?: 'AtomRequiredParentsConnection'\n  edges: Array<AtomRequiredParentsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AtomRequiredParentsRelationship = {\n  __typename?: 'AtomRequiredParentsRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type AtomsConnection = {\n  __typename?: 'AtomsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<AtomEdge>\n}\n\nexport type AtomSuggestedChildrenConnection = {\n  __typename?: 'AtomSuggestedChildrenConnection'\n  edges: Array<AtomSuggestedChildrenRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AtomSuggestedChildrenRelationship = {\n  __typename?: 'AtomSuggestedChildrenRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type AtomTagsConnection = {\n  __typename?: 'AtomTagsConnection'\n  edges: Array<AtomTagsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type AtomTagsRelationship = {\n  __typename?: 'AtomTagsRelationship'\n  cursor: Scalars['String']\n  node: Tag\n}\n\nexport type AtomTagTagsAggregationSelection = {\n  __typename?: 'AtomTagTagsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AtomTagTagsNodeAggregateSelection>\n}\n\nexport type AtomTagTagsNodeAggregateSelection = {\n  __typename?: 'AtomTagTagsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type AtomUserOwnerAggregationSelection = {\n  __typename?: 'AtomUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<AtomUserOwnerNodeAggregateSelection>\n}\n\nexport type AtomUserOwnerNodeAggregateSelection = {\n  __typename?: 'AtomUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type BaseActionElementConnection = {\n  __typename?: 'BaseActionElementConnection'\n  edges: Array<BaseActionElementRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type BaseActionElementRelationship = {\n  __typename?: 'BaseActionElementRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type BaseActionStoreConnection = {\n  __typename?: 'BaseActionStoreConnection'\n  edges: Array<BaseActionStoreRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type BaseActionStoreRelationship = {\n  __typename?: 'BaseActionStoreRelationship'\n  cursor: Scalars['String']\n  node: Store\n}\n\nexport type BaseType = IBaseType & {\n  __typename?: 'BaseType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<BaseTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\nexport type BaseTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type BaseTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type BaseTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type BaseTypeAggregateSelection = {\n  __typename?: 'BaseTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type BaseTypeEdge = {\n  __typename?: 'BaseTypeEdge'\n  cursor: Scalars['String']\n  node: BaseType\n}\n\nexport type BaseTypesConnection = {\n  __typename?: 'BaseTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<BaseTypeEdge>\n}\n\nexport type BaseTypeUserOwnerAggregationSelection = {\n  __typename?: 'BaseTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<BaseTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type BaseTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'BaseTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type CodeAction = BaseAction & {\n  __typename?: 'CodeAction'\n  id: Scalars['ID']\n  name: Scalars['String']\n  /** Code to run when action is triggered */\n  code: Scalars['String']\n  type: ActionKind\n  store: Store\n  storeAggregate?: Maybe<CodeActionStoreStoreAggregationSelection>\n  element?: Maybe<Element>\n  elementAggregate?: Maybe<CodeActionElementElementAggregationSelection>\n  storeConnection: BaseActionStoreConnection\n  elementConnection: BaseActionElementConnection\n}\n\nexport type CodeActionStoreArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type CodeActionStoreAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type CodeActionElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type CodeActionElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type CodeActionStoreConnectionArgs = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionStoreConnectionSort>>\n}\n\nexport type CodeActionElementConnectionArgs = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<BaseActionElementConnectionSort>>\n}\n\nexport type CodeActionAggregateSelection = {\n  __typename?: 'CodeActionAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  code: StringAggregateSelectionNonNullable\n}\n\nexport type CodeActionEdge = {\n  __typename?: 'CodeActionEdge'\n  cursor: Scalars['String']\n  node: CodeAction\n}\n\nexport type CodeActionElementElementAggregationSelection = {\n  __typename?: 'CodeActionElementElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<CodeActionElementElementNodeAggregateSelection>\n}\n\nexport type CodeActionElementElementNodeAggregateSelection = {\n  __typename?: 'CodeActionElementElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type CodeActionsConnection = {\n  __typename?: 'CodeActionsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<CodeActionEdge>\n}\n\nexport type CodeActionStoreStoreAggregationSelection = {\n  __typename?: 'CodeActionStoreStoreAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<CodeActionStoreStoreNodeAggregateSelection>\n}\n\nexport type CodeActionStoreStoreNodeAggregateSelection = {\n  __typename?: 'CodeActionStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorType = IBaseType & {\n  __typename?: 'CodeMirrorType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  language: CodeMirrorLanguage\n  owner: User\n  ownerAggregate?: Maybe<CodeMirrorTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows editing the value using a code mirror editor */\nexport type CodeMirrorTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type CodeMirrorTypeAggregateSelection = {\n  __typename?: 'CodeMirrorTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type CodeMirrorTypeEdge = {\n  __typename?: 'CodeMirrorTypeEdge'\n  cursor: Scalars['String']\n  node: CodeMirrorType\n}\n\nexport type CodeMirrorTypesConnection = {\n  __typename?: 'CodeMirrorTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<CodeMirrorTypeEdge>\n}\n\nexport type CodeMirrorTypeUserOwnerAggregationSelection = {\n  __typename?: 'CodeMirrorTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<CodeMirrorTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type CodeMirrorTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'CodeMirrorTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type Component = WithOwner & {\n  __typename?: 'Component'\n  id: Scalars['ID']\n  name: Scalars['String']\n  keyGenerator?: Maybe<Scalars['String']>\n  rootElement: Element\n  rootElementAggregate?: Maybe<ComponentElementRootElementAggregationSelection>\n  api: InterfaceType\n  apiAggregate?: Maybe<ComponentInterfaceTypeApiAggregationSelection>\n  owner: User\n  ownerAggregate?: Maybe<ComponentUserOwnerAggregationSelection>\n  store: Store\n  storeAggregate?: Maybe<ComponentStoreStoreAggregationSelection>\n  props: Prop\n  propsAggregate?: Maybe<ComponentPropPropsAggregationSelection>\n  childrenContainerElement: Element\n  childrenContainerElementAggregate?: Maybe<ComponentElementChildrenContainerElementAggregationSelection>\n  rootElementConnection: ComponentRootElementConnection\n  apiConnection: ComponentApiConnection\n  ownerConnection: WithOwnerOwnerConnection\n  storeConnection: ComponentStoreConnection\n  propsConnection: ComponentPropsConnection\n  childrenContainerElementConnection: ComponentChildrenContainerElementConnection\n}\n\nexport type ComponentRootElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentRootElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentApiArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  options?: InputMaybe<InterfaceTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentApiAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentStoreArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentStoreAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentPropsArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentPropsAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentChildrenContainerElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentChildrenContainerElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ComponentRootElementConnectionArgs = {\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ComponentRootElementConnectionSort>>\n}\n\nexport type ComponentApiConnectionArgs = {\n  where?: InputMaybe<ComponentApiConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ComponentApiConnectionSort>>\n}\n\nexport type ComponentOwnerConnectionArgs = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n}\n\nexport type ComponentStoreConnectionArgs = {\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ComponentStoreConnectionSort>>\n}\n\nexport type ComponentPropsConnectionArgs = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ComponentPropsConnectionSort>>\n}\n\nexport type ComponentChildrenContainerElementConnectionArgs = {\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ComponentChildrenContainerElementConnectionSort>>\n}\n\nexport type ComponentAggregateSelection = {\n  __typename?: 'ComponentAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n}\n\nexport type ComponentApiConnection = {\n  __typename?: 'ComponentApiConnection'\n  edges: Array<ComponentApiRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ComponentApiRelationship = {\n  __typename?: 'ComponentApiRelationship'\n  cursor: Scalars['String']\n  node: InterfaceType\n}\n\nexport type ComponentChildrenContainerElementConnection = {\n  __typename?: 'ComponentChildrenContainerElementConnection'\n  edges: Array<ComponentChildrenContainerElementRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ComponentChildrenContainerElementRelationship = {\n  __typename?: 'ComponentChildrenContainerElementRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ComponentEdge = {\n  __typename?: 'ComponentEdge'\n  cursor: Scalars['String']\n  node: Component\n}\n\nexport type ComponentElementChildrenContainerElementAggregationSelection = {\n  __typename?: 'ComponentElementChildrenContainerElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentElementChildrenContainerElementNodeAggregateSelection>\n}\n\nexport type ComponentElementChildrenContainerElementNodeAggregateSelection = {\n  __typename?: 'ComponentElementChildrenContainerElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ComponentElementRootElementAggregationSelection = {\n  __typename?: 'ComponentElementRootElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentElementRootElementNodeAggregateSelection>\n}\n\nexport type ComponentElementRootElementNodeAggregateSelection = {\n  __typename?: 'ComponentElementRootElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ComponentInterfaceTypeApiAggregationSelection = {\n  __typename?: 'ComponentInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type ComponentInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'ComponentInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentPropPropsAggregationSelection = {\n  __typename?: 'ComponentPropPropsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentPropPropsNodeAggregateSelection>\n}\n\nexport type ComponentPropPropsNodeAggregateSelection = {\n  __typename?: 'ComponentPropPropsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentPropsConnection = {\n  __typename?: 'ComponentPropsConnection'\n  edges: Array<ComponentPropsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ComponentPropsRelationship = {\n  __typename?: 'ComponentPropsRelationship'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type ComponentRootElementConnection = {\n  __typename?: 'ComponentRootElementConnection'\n  edges: Array<ComponentRootElementRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ComponentRootElementRelationship = {\n  __typename?: 'ComponentRootElementRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ComponentsConnection = {\n  __typename?: 'ComponentsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ComponentEdge>\n}\n\nexport type ComponentStoreConnection = {\n  __typename?: 'ComponentStoreConnection'\n  edges: Array<ComponentStoreRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ComponentStoreRelationship = {\n  __typename?: 'ComponentStoreRelationship'\n  cursor: Scalars['String']\n  node: Store\n}\n\nexport type ComponentStoreStoreAggregationSelection = {\n  __typename?: 'ComponentStoreStoreAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentStoreStoreNodeAggregateSelection>\n}\n\nexport type ComponentStoreStoreNodeAggregateSelection = {\n  __typename?: 'ComponentStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ComponentUserOwnerAggregationSelection = {\n  __typename?: 'ComponentUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ComponentUserOwnerNodeAggregateSelection>\n}\n\nexport type ComponentUserOwnerNodeAggregateSelection = {\n  __typename?: 'ComponentUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type CreateActionTypesMutationResponse = {\n  __typename?: 'CreateActionTypesMutationResponse'\n  info: CreateInfo\n  actionTypes: Array<ActionType>\n}\n\nexport type CreateApiActionsMutationResponse = {\n  __typename?: 'CreateApiActionsMutationResponse'\n  info: CreateInfo\n  apiActions: Array<ApiAction>\n}\n\nexport type CreateAppsMutationResponse = {\n  __typename?: 'CreateAppsMutationResponse'\n  info: CreateInfo\n  apps: Array<App>\n}\n\nexport type CreateAppTypesMutationResponse = {\n  __typename?: 'CreateAppTypesMutationResponse'\n  info: CreateInfo\n  appTypes: Array<AppType>\n}\n\nexport type CreateArrayTypesMutationResponse = {\n  __typename?: 'CreateArrayTypesMutationResponse'\n  info: CreateInfo\n  arrayTypes: Array<ArrayType>\n}\n\nexport type CreateAtomsMutationResponse = {\n  __typename?: 'CreateAtomsMutationResponse'\n  info: CreateInfo\n  atoms: Array<Atom>\n}\n\nexport type CreateBaseTypesMutationResponse = {\n  __typename?: 'CreateBaseTypesMutationResponse'\n  info: CreateInfo\n  baseTypes: Array<BaseType>\n}\n\nexport type CreateCodeActionsMutationResponse = {\n  __typename?: 'CreateCodeActionsMutationResponse'\n  info: CreateInfo\n  codeActions: Array<CodeAction>\n}\n\nexport type CreateCodeMirrorTypesMutationResponse = {\n  __typename?: 'CreateCodeMirrorTypesMutationResponse'\n  info: CreateInfo\n  codeMirrorTypes: Array<CodeMirrorType>\n}\n\nexport type CreateComponentsMutationResponse = {\n  __typename?: 'CreateComponentsMutationResponse'\n  info: CreateInfo\n  components: Array<Component>\n}\n\nexport type CreateDeleteInfosMutationResponse = {\n  __typename?: 'CreateDeleteInfosMutationResponse'\n  info: CreateInfo\n  deleteInfos: Array<DeleteInfo>\n}\n\nexport type CreateDomainsMutationResponse = {\n  __typename?: 'CreateDomainsMutationResponse'\n  info: CreateInfo\n  domains: Array<Domain>\n}\n\nexport type CreateElementsMutationResponse = {\n  __typename?: 'CreateElementsMutationResponse'\n  info: CreateInfo\n  elements: Array<Element>\n}\n\nexport type CreateElementTypesMutationResponse = {\n  __typename?: 'CreateElementTypesMutationResponse'\n  info: CreateInfo\n  elementTypes: Array<ElementType>\n}\n\nexport type CreateEnumTypesMutationResponse = {\n  __typename?: 'CreateEnumTypesMutationResponse'\n  info: CreateInfo\n  enumTypes: Array<EnumType>\n}\n\nexport type CreateEnumTypeValuesMutationResponse = {\n  __typename?: 'CreateEnumTypeValuesMutationResponse'\n  info: CreateInfo\n  enumTypeValues: Array<EnumTypeValue>\n}\n\nexport type CreateFieldsMutationResponse = {\n  __typename?: 'CreateFieldsMutationResponse'\n  info: CreateInfo\n  fields: Array<Field>\n}\n\nexport type CreateGetBaseTypesReturnsMutationResponse = {\n  __typename?: 'CreateGetBaseTypesReturnsMutationResponse'\n  info: CreateInfo\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n}\n\nexport type CreateHooksMutationResponse = {\n  __typename?: 'CreateHooksMutationResponse'\n  info: CreateInfo\n  hooks: Array<Hook>\n}\n\nexport type CreateInfo = {\n  __typename?: 'CreateInfo'\n  bookmark?: Maybe<Scalars['String']>\n  nodesCreated: Scalars['Int']\n  relationshipsCreated: Scalars['Int']\n}\n\nexport type CreateInterfaceTypesMutationResponse = {\n  __typename?: 'CreateInterfaceTypesMutationResponse'\n  info: CreateInfo\n  interfaceTypes: Array<InterfaceType>\n}\n\nexport type CreateLambdaTypesMutationResponse = {\n  __typename?: 'CreateLambdaTypesMutationResponse'\n  info: CreateInfo\n  lambdaTypes: Array<LambdaType>\n}\n\nexport type CreatePagesMutationResponse = {\n  __typename?: 'CreatePagesMutationResponse'\n  info: CreateInfo\n  pages: Array<Page>\n}\n\nexport type CreatePageTypesMutationResponse = {\n  __typename?: 'CreatePageTypesMutationResponse'\n  info: CreateInfo\n  pageTypes: Array<PageType>\n}\n\nexport type CreatePrimitiveTypesMutationResponse = {\n  __typename?: 'CreatePrimitiveTypesMutationResponse'\n  info: CreateInfo\n  primitiveTypes: Array<PrimitiveType>\n}\n\nexport type CreatePropsMutationResponse = {\n  __typename?: 'CreatePropsMutationResponse'\n  info: CreateInfo\n  props: Array<Prop>\n}\n\nexport type CreateReactNodeTypesMutationResponse = {\n  __typename?: 'CreateReactNodeTypesMutationResponse'\n  info: CreateInfo\n  reactNodeTypes: Array<ReactNodeType>\n}\n\nexport type CreateRenderPropTypesMutationResponse = {\n  __typename?: 'CreateRenderPropTypesMutationResponse'\n  info: CreateInfo\n  renderPropTypes: Array<RenderPropType>\n}\n\nexport type CreateRenderTypesMutationResponse = {\n  __typename?: 'CreateRenderTypesMutationResponse'\n  info: CreateInfo\n  renderTypes: Array<RenderType>\n}\n\nexport type CreateResetDatabaseMutationResponsesMutationResponse = {\n  __typename?: 'CreateResetDatabaseMutationResponsesMutationResponse'\n  info: CreateInfo\n  resetDatabaseMutationResponses: Array<ResetDatabaseMutationResponse>\n}\n\nexport type CreateResourcesMutationResponse = {\n  __typename?: 'CreateResourcesMutationResponse'\n  info: CreateInfo\n  resources: Array<Resource>\n}\n\nexport type CreateStoresMutationResponse = {\n  __typename?: 'CreateStoresMutationResponse'\n  info: CreateInfo\n  stores: Array<Store>\n}\n\nexport type CreateTagsMutationResponse = {\n  __typename?: 'CreateTagsMutationResponse'\n  info: CreateInfo\n  tags: Array<Tag>\n}\n\nexport type CreateTypeReferencesMutationResponse = {\n  __typename?: 'CreateTypeReferencesMutationResponse'\n  info: CreateInfo\n  typeReferences: Array<TypeReference>\n}\n\nexport type CreateUnionTypesMutationResponse = {\n  __typename?: 'CreateUnionTypesMutationResponse'\n  info: CreateInfo\n  unionTypes: Array<UnionType>\n}\n\nexport type CreateUsersMutationResponse = {\n  __typename?: 'CreateUsersMutationResponse'\n  info: CreateInfo\n  users: Array<User>\n}\n\nexport type CreateVercelDomainConfigsMutationResponse = {\n  __typename?: 'CreateVercelDomainConfigsMutationResponse'\n  info: CreateInfo\n  vercelDomainConfigs: Array<VercelDomainConfig>\n}\n\nexport type CreateVercelProjectDomainsMutationResponse = {\n  __typename?: 'CreateVercelProjectDomainsMutationResponse'\n  info: CreateInfo\n  vercelProjectDomains: Array<VercelProjectDomain>\n}\n\nexport type DeleteInfo = {\n  __typename?: 'DeleteInfo'\n  bookmark?: Maybe<Scalars['String']>\n  nodesDeleted: Scalars['Int']\n  relationshipsDeleted: Scalars['Int']\n}\n\nexport type DeleteInfoAggregateSelection = {\n  __typename?: 'DeleteInfoAggregateSelection'\n  count: Scalars['Int']\n  bookmark: StringAggregateSelectionNullable\n  nodesDeleted: IntAggregateSelectionNonNullable\n  relationshipsDeleted: IntAggregateSelectionNonNullable\n}\n\nexport type DeleteInfoEdge = {\n  __typename?: 'DeleteInfoEdge'\n  cursor: Scalars['String']\n  node: DeleteInfo\n}\n\nexport type DeleteInfosConnection = {\n  __typename?: 'DeleteInfosConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<DeleteInfoEdge>\n}\n\nexport type Domain = {\n  __typename?: 'Domain'\n  id: Scalars['ID']\n  name: Scalars['String']\n  domainConfig: VercelDomainConfig\n  projectDomain: VercelProjectDomain\n  app: App\n  appAggregate?: Maybe<DomainAppAppAggregationSelection>\n  appConnection: DomainAppConnection\n}\n\nexport type DomainAppArgs = {\n  where?: InputMaybe<AppWhere>\n  options?: InputMaybe<AppOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type DomainAppAggregateArgs = {\n  where?: InputMaybe<AppWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type DomainAppConnectionArgs = {\n  where?: InputMaybe<DomainAppConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<DomainAppConnectionSort>>\n}\n\nexport type DomainAggregateSelection = {\n  __typename?: 'DomainAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type DomainAppAppAggregationSelection = {\n  __typename?: 'DomainAppAppAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<DomainAppAppNodeAggregateSelection>\n}\n\nexport type DomainAppAppNodeAggregateSelection = {\n  __typename?: 'DomainAppAppNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n}\n\nexport type DomainAppConnection = {\n  __typename?: 'DomainAppConnection'\n  edges: Array<DomainAppRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type DomainAppRelationship = {\n  __typename?: 'DomainAppRelationship'\n  cursor: Scalars['String']\n  node: App\n}\n\nexport type DomainEdge = {\n  __typename?: 'DomainEdge'\n  cursor: Scalars['String']\n  node: Domain\n}\n\nexport type DomainsConnection = {\n  __typename?: 'DomainsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<DomainEdge>\n}\n\nexport type Element = {\n  __typename?: 'Element'\n  id: Scalars['ID']\n  name: Scalars['String']\n  customCss?: Maybe<Scalars['String']>\n  guiCss?: Maybe<Scalars['String']>\n  propTransformationJs?: Maybe<Scalars['String']>\n  renderForEachPropKey?: Maybe<Scalars['String']>\n  renderIfExpression?: Maybe<Scalars['String']>\n  renderType?: Maybe<RenderType>\n  descendantElements: Array<Element>\n  nextSibling?: Maybe<Element>\n  nextSiblingAggregate?: Maybe<ElementElementNextSiblingAggregationSelection>\n  prevSibling?: Maybe<Element>\n  prevSiblingAggregate?: Maybe<ElementElementPrevSiblingAggregationSelection>\n  firstChild?: Maybe<Element>\n  firstChildAggregate?: Maybe<ElementElementFirstChildAggregationSelection>\n  parent?: Maybe<Element>\n  parentAggregate?: Maybe<ElementElementParentAggregationSelection>\n  page?: Maybe<Page>\n  pageAggregate?: Maybe<ElementPagePageAggregationSelection>\n  props: Prop\n  propsAggregate?: Maybe<ElementPropPropsAggregationSelection>\n  parentComponent?: Maybe<Component>\n  parentComponentAggregate?: Maybe<ElementComponentParentComponentAggregationSelection>\n  preRenderAction?: Maybe<BaseAction>\n  postRenderAction?: Maybe<BaseAction>\n  renderComponentType?: Maybe<Component>\n  renderComponentTypeAggregate?: Maybe<ElementComponentRenderComponentTypeAggregationSelection>\n  renderAtomType?: Maybe<Atom>\n  renderAtomTypeAggregate?: Maybe<ElementAtomRenderAtomTypeAggregationSelection>\n  nextSiblingConnection: ElementNextSiblingConnection\n  prevSiblingConnection: ElementPrevSiblingConnection\n  firstChildConnection: ElementFirstChildConnection\n  parentConnection: ElementParentConnection\n  pageConnection: ElementPageConnection\n  propsConnection: ElementPropsConnection\n  parentComponentConnection: ElementParentComponentConnection\n  preRenderActionConnection: ElementPreRenderActionConnection\n  postRenderActionConnection: ElementPostRenderActionConnection\n  renderComponentTypeConnection: ElementRenderComponentTypeConnection\n  renderAtomTypeConnection: ElementRenderAtomTypeConnection\n}\n\nexport type ElementNextSiblingArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementNextSiblingAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPrevSiblingArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPrevSiblingAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementFirstChildArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementFirstChildAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementParentArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementParentAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPageArgs = {\n  where?: InputMaybe<PageWhere>\n  options?: InputMaybe<PageOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPageAggregateArgs = {\n  where?: InputMaybe<PageWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPropsArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPropsAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementParentComponentArgs = {\n  where?: InputMaybe<ComponentWhere>\n  options?: InputMaybe<ComponentOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementParentComponentAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPreRenderActionArgs = {\n  options?: InputMaybe<BaseActionOptions>\n  where?: InputMaybe<BaseActionWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementPostRenderActionArgs = {\n  options?: InputMaybe<BaseActionOptions>\n  where?: InputMaybe<BaseActionWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementRenderComponentTypeArgs = {\n  where?: InputMaybe<ComponentWhere>\n  options?: InputMaybe<ComponentOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementRenderComponentTypeAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementRenderAtomTypeArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementRenderAtomTypeAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ElementNextSiblingConnectionArgs = {\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementNextSiblingConnectionSort>>\n}\n\nexport type ElementPrevSiblingConnectionArgs = {\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementPrevSiblingConnectionSort>>\n}\n\nexport type ElementFirstChildConnectionArgs = {\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementFirstChildConnectionSort>>\n}\n\nexport type ElementParentConnectionArgs = {\n  where?: InputMaybe<ElementParentConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementParentConnectionSort>>\n}\n\nexport type ElementPageConnectionArgs = {\n  where?: InputMaybe<ElementPageConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementPageConnectionSort>>\n}\n\nexport type ElementPropsConnectionArgs = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementPropsConnectionSort>>\n}\n\nexport type ElementParentComponentConnectionArgs = {\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementParentComponentConnectionSort>>\n}\n\nexport type ElementPreRenderActionConnectionArgs = {\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementPreRenderActionConnectionSort>>\n}\n\nexport type ElementPostRenderActionConnectionArgs = {\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementPostRenderActionConnectionSort>>\n}\n\nexport type ElementRenderComponentTypeConnectionArgs = {\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementRenderComponentTypeConnectionSort>>\n}\n\nexport type ElementRenderAtomTypeConnectionArgs = {\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ElementRenderAtomTypeConnectionSort>>\n}\n\nexport type ElementAggregateSelection = {\n  __typename?: 'ElementAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementAtomRenderAtomTypeAggregationSelection = {\n  __typename?: 'ElementAtomRenderAtomTypeAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementAtomRenderAtomTypeNodeAggregateSelection>\n}\n\nexport type ElementAtomRenderAtomTypeNodeAggregateSelection = {\n  __typename?: 'ElementAtomRenderAtomTypeNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type ElementComponentParentComponentAggregationSelection = {\n  __typename?: 'ElementComponentParentComponentAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementComponentParentComponentNodeAggregateSelection>\n}\n\nexport type ElementComponentParentComponentNodeAggregateSelection = {\n  __typename?: 'ElementComponentParentComponentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n}\n\nexport type ElementComponentRenderComponentTypeAggregationSelection = {\n  __typename?: 'ElementComponentRenderComponentTypeAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementComponentRenderComponentTypeNodeAggregateSelection>\n}\n\nexport type ElementComponentRenderComponentTypeNodeAggregateSelection = {\n  __typename?: 'ElementComponentRenderComponentTypeNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n}\n\nexport type ElementEdge = {\n  __typename?: 'ElementEdge'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ElementElementFirstChildAggregationSelection = {\n  __typename?: 'ElementElementFirstChildAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementElementFirstChildNodeAggregateSelection>\n}\n\nexport type ElementElementFirstChildNodeAggregateSelection = {\n  __typename?: 'ElementElementFirstChildNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementNextSiblingAggregationSelection = {\n  __typename?: 'ElementElementNextSiblingAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementElementNextSiblingNodeAggregateSelection>\n}\n\nexport type ElementElementNextSiblingNodeAggregateSelection = {\n  __typename?: 'ElementElementNextSiblingNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementParentAggregationSelection = {\n  __typename?: 'ElementElementParentAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementElementParentNodeAggregateSelection>\n}\n\nexport type ElementElementParentNodeAggregateSelection = {\n  __typename?: 'ElementElementParentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementElementPrevSiblingAggregationSelection = {\n  __typename?: 'ElementElementPrevSiblingAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementElementPrevSiblingNodeAggregateSelection>\n}\n\nexport type ElementElementPrevSiblingNodeAggregateSelection = {\n  __typename?: 'ElementElementPrevSiblingNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type ElementFirstChildConnection = {\n  __typename?: 'ElementFirstChildConnection'\n  edges: Array<ElementFirstChildRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementFirstChildRelationship = {\n  __typename?: 'ElementFirstChildRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ElementNextSiblingConnection = {\n  __typename?: 'ElementNextSiblingConnection'\n  edges: Array<ElementNextSiblingRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementNextSiblingRelationship = {\n  __typename?: 'ElementNextSiblingRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ElementPageConnection = {\n  __typename?: 'ElementPageConnection'\n  edges: Array<ElementPageRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementPagePageAggregationSelection = {\n  __typename?: 'ElementPagePageAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementPagePageNodeAggregateSelection>\n}\n\nexport type ElementPagePageNodeAggregateSelection = {\n  __typename?: 'ElementPagePageNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type ElementPageRelationship = {\n  __typename?: 'ElementPageRelationship'\n  cursor: Scalars['String']\n  node: Page\n}\n\nexport type ElementParentComponentConnection = {\n  __typename?: 'ElementParentComponentConnection'\n  edges: Array<ElementParentComponentRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementParentComponentRelationship = {\n  __typename?: 'ElementParentComponentRelationship'\n  cursor: Scalars['String']\n  node: Component\n}\n\nexport type ElementParentConnection = {\n  __typename?: 'ElementParentConnection'\n  edges: Array<ElementParentRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementParentRelationship = {\n  __typename?: 'ElementParentRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ElementPostRenderActionConnection = {\n  __typename?: 'ElementPostRenderActionConnection'\n  edges: Array<ElementPostRenderActionRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementPostRenderActionRelationship = {\n  __typename?: 'ElementPostRenderActionRelationship'\n  cursor: Scalars['String']\n  node: BaseAction\n}\n\nexport type ElementPreRenderActionConnection = {\n  __typename?: 'ElementPreRenderActionConnection'\n  edges: Array<ElementPreRenderActionRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementPreRenderActionRelationship = {\n  __typename?: 'ElementPreRenderActionRelationship'\n  cursor: Scalars['String']\n  node: BaseAction\n}\n\nexport type ElementPrevSiblingConnection = {\n  __typename?: 'ElementPrevSiblingConnection'\n  edges: Array<ElementPrevSiblingRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementPrevSiblingRelationship = {\n  __typename?: 'ElementPrevSiblingRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type ElementPropPropsAggregationSelection = {\n  __typename?: 'ElementPropPropsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementPropPropsNodeAggregateSelection>\n}\n\nexport type ElementPropPropsNodeAggregateSelection = {\n  __typename?: 'ElementPropPropsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type ElementPropsConnection = {\n  __typename?: 'ElementPropsConnection'\n  edges: Array<ElementPropsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementPropsRelationship = {\n  __typename?: 'ElementPropsRelationship'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type ElementRenderAtomTypeConnection = {\n  __typename?: 'ElementRenderAtomTypeConnection'\n  edges: Array<ElementRenderAtomTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementRenderAtomTypeRelationship = {\n  __typename?: 'ElementRenderAtomTypeRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type ElementRenderComponentTypeConnection = {\n  __typename?: 'ElementRenderComponentTypeConnection'\n  edges: Array<ElementRenderComponentTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ElementRenderComponentTypeRelationship = {\n  __typename?: 'ElementRenderComponentTypeRelationship'\n  cursor: Scalars['String']\n  node: Component\n}\n\nexport type ElementsConnection = {\n  __typename?: 'ElementsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ElementEdge>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementType = IBaseType & {\n  __typename?: 'ElementType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  /** Allows scoping the type of element to only descendants, children or all elements */\n  elementKind: ElementTypeKind\n  owner: User\n  ownerAggregate?: Maybe<ElementTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ElementTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type ElementTypeAggregateSelection = {\n  __typename?: 'ElementTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ElementTypeEdge = {\n  __typename?: 'ElementTypeEdge'\n  cursor: Scalars['String']\n  node: ElementType\n}\n\nexport type ElementTypesConnection = {\n  __typename?: 'ElementTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ElementTypeEdge>\n}\n\nexport type ElementTypeUserOwnerAggregationSelection = {\n  __typename?: 'ElementTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ElementTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ElementTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ElementTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumType = IBaseType & {\n  __typename?: 'EnumType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<EnumTypeUserOwnerAggregationSelection>\n  fieldRefs: Array<Field>\n  fieldRefsAggregate?: Maybe<EnumTypeFieldFieldRefsAggregationSelection>\n  allowedValues: Array<EnumTypeValue>\n  allowedValuesAggregate?: Maybe<EnumTypeEnumTypeValueAllowedValuesAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n  fieldRefsConnection: EnumTypeFieldRefsConnection\n  allowedValuesConnection: EnumTypeAllowedValuesConnection\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n  options?: InputMaybe<EnumTypeValueOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesAggregateArgs = {\n  where?: InputMaybe<EnumTypeValueWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeFieldRefsConnectionArgs = {\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<EnumTypeFieldRefsConnectionSort>>\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n */\nexport type EnumTypeAllowedValuesConnectionArgs = {\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<EnumTypeAllowedValuesConnectionSort>>\n}\n\nexport type EnumTypeAggregateSelection = {\n  __typename?: 'EnumTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeAllowedValuesConnection = {\n  __typename?: 'EnumTypeAllowedValuesConnection'\n  edges: Array<EnumTypeAllowedValuesRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type EnumTypeAllowedValuesRelationship = {\n  __typename?: 'EnumTypeAllowedValuesRelationship'\n  cursor: Scalars['String']\n  node: EnumTypeValue\n}\n\nexport type EnumTypeEdge = {\n  __typename?: 'EnumTypeEdge'\n  cursor: Scalars['String']\n  node: EnumType\n}\n\nexport type EnumTypeEnumTypeValueAllowedValuesAggregationSelection = {\n  __typename?: 'EnumTypeEnumTypeValueAllowedValuesAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection>\n}\n\nexport type EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection = {\n  __typename?: 'EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  value: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'EnumTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<EnumTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type EnumTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'EnumTypeFieldFieldRefsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type EnumTypeFieldRefsConnection = {\n  __typename?: 'EnumTypeFieldRefsConnection'\n  edges: Array<EnumTypeFieldRefsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type EnumTypeFieldRefsRelationship = {\n  __typename?: 'EnumTypeFieldRefsRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type EnumTypesConnection = {\n  __typename?: 'EnumTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<EnumTypeEdge>\n}\n\nexport type EnumTypeUserOwnerAggregationSelection = {\n  __typename?: 'EnumTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<EnumTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type EnumTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'EnumTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValue = {\n  __typename?: 'EnumTypeValue'\n  id: Scalars['ID']\n  key: Scalars['String']\n  value: Scalars['String']\n  enumType?: Maybe<EnumType>\n  enumTypeAggregate?: Maybe<EnumTypeValueEnumTypeEnumTypeAggregationSelection>\n  enumTypeConnection: EnumTypeValueEnumTypeConnection\n}\n\nexport type EnumTypeValueEnumTypeArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n  options?: InputMaybe<EnumTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type EnumTypeValueEnumTypeAggregateArgs = {\n  where?: InputMaybe<EnumTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type EnumTypeValueEnumTypeConnectionArgs = {\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionSort>>\n}\n\nexport type EnumTypeValueAggregateSelection = {\n  __typename?: 'EnumTypeValueAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  value: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValueEdge = {\n  __typename?: 'EnumTypeValueEdge'\n  cursor: Scalars['String']\n  node: EnumTypeValue\n}\n\nexport type EnumTypeValueEnumTypeConnection = {\n  __typename?: 'EnumTypeValueEnumTypeConnection'\n  edges: Array<EnumTypeValueEnumTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type EnumTypeValueEnumTypeEnumTypeAggregationSelection = {\n  __typename?: 'EnumTypeValueEnumTypeEnumTypeAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection>\n}\n\nexport type EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection = {\n  __typename?: 'EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type EnumTypeValueEnumTypeRelationship = {\n  __typename?: 'EnumTypeValueEnumTypeRelationship'\n  cursor: Scalars['String']\n  node: EnumType\n}\n\nexport type EnumTypeValuesConnection = {\n  __typename?: 'EnumTypeValuesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<EnumTypeValueEdge>\n}\n\nexport type Field = {\n  __typename?: 'Field'\n  id: Scalars['ID']\n  key: Scalars['String']\n  name?: Maybe<Scalars['String']>\n  description?: Maybe<Scalars['String']>\n  validationRules?: Maybe<Scalars['String']>\n  defaultValues?: Maybe<Scalars['String']>\n  nextSibling?: Maybe<Field>\n  nextSiblingAggregate?: Maybe<FieldFieldNextSiblingAggregationSelection>\n  prevSibling?: Maybe<Field>\n  prevSiblingAggregate?: Maybe<FieldFieldPrevSiblingAggregationSelection>\n  fieldType: IBaseType\n  api: InterfaceType\n  apiAggregate?: Maybe<FieldInterfaceTypeApiAggregationSelection>\n  nextSiblingConnection: FieldNextSiblingConnection\n  prevSiblingConnection: FieldPrevSiblingConnection\n  fieldTypeConnection: FieldFieldTypeConnection\n  apiConnection: FieldApiConnection\n}\n\nexport type FieldNextSiblingArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldNextSiblingAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldPrevSiblingArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldPrevSiblingAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldFieldTypeArgs = {\n  options?: InputMaybe<IBaseTypeOptions>\n  where?: InputMaybe<IBaseTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldApiArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  options?: InputMaybe<InterfaceTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldApiAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type FieldNextSiblingConnectionArgs = {\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<FieldNextSiblingConnectionSort>>\n}\n\nexport type FieldPrevSiblingConnectionArgs = {\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<FieldPrevSiblingConnectionSort>>\n}\n\nexport type FieldFieldTypeConnectionArgs = {\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<FieldFieldTypeConnectionSort>>\n}\n\nexport type FieldApiConnectionArgs = {\n  where?: InputMaybe<FieldApiConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<FieldApiConnectionSort>>\n}\n\nexport type FieldAggregateSelection = {\n  __typename?: 'FieldAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type FieldApiConnection = {\n  __typename?: 'FieldApiConnection'\n  edges: Array<FieldApiRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type FieldApiRelationship = {\n  __typename?: 'FieldApiRelationship'\n  cursor: Scalars['String']\n  node: InterfaceType\n}\n\nexport type FieldEdge = {\n  __typename?: 'FieldEdge'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type FieldFieldNextSiblingAggregationSelection = {\n  __typename?: 'FieldFieldNextSiblingAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<FieldFieldNextSiblingNodeAggregateSelection>\n}\n\nexport type FieldFieldNextSiblingNodeAggregateSelection = {\n  __typename?: 'FieldFieldNextSiblingNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type FieldFieldPrevSiblingAggregationSelection = {\n  __typename?: 'FieldFieldPrevSiblingAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<FieldFieldPrevSiblingNodeAggregateSelection>\n}\n\nexport type FieldFieldPrevSiblingNodeAggregateSelection = {\n  __typename?: 'FieldFieldPrevSiblingNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type FieldFieldTypeConnection = {\n  __typename?: 'FieldFieldTypeConnection'\n  edges: Array<FieldFieldTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type FieldFieldTypeRelationship = {\n  __typename?: 'FieldFieldTypeRelationship'\n  cursor: Scalars['String']\n  node: IBaseType\n}\n\nexport type FieldInterfaceTypeApiAggregationSelection = {\n  __typename?: 'FieldInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<FieldInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type FieldInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'FieldInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type FieldNextSiblingConnection = {\n  __typename?: 'FieldNextSiblingConnection'\n  edges: Array<FieldNextSiblingRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type FieldNextSiblingRelationship = {\n  __typename?: 'FieldNextSiblingRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type FieldPrevSiblingConnection = {\n  __typename?: 'FieldPrevSiblingConnection'\n  edges: Array<FieldPrevSiblingRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type FieldPrevSiblingRelationship = {\n  __typename?: 'FieldPrevSiblingRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type FieldsConnection = {\n  __typename?: 'FieldsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<FieldEdge>\n}\n\nexport type GetBaseTypesReturn = {\n  __typename?: 'GetBaseTypesReturn'\n  totalCount: Scalars['Int']\n  items: Array<BaseType>\n}\n\nexport type GetBaseTypesReturnAggregateSelection = {\n  __typename?: 'GetBaseTypesReturnAggregateSelection'\n  count: Scalars['Int']\n  totalCount: IntAggregateSelectionNonNullable\n}\n\nexport type GetBaseTypesReturnEdge = {\n  __typename?: 'GetBaseTypesReturnEdge'\n  cursor: Scalars['String']\n  node: GetBaseTypesReturn\n}\n\nexport type GetBaseTypesReturnsConnection = {\n  __typename?: 'GetBaseTypesReturnsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<GetBaseTypesReturnEdge>\n}\n\nexport type Hook = {\n  __typename?: 'Hook'\n  id: Scalars['ID']\n  type: AtomType\n  config: Prop\n  configAggregate?: Maybe<HookPropConfigAggregationSelection>\n  element: Element\n  elementAggregate?: Maybe<HookElementElementAggregationSelection>\n  configConnection: HookConfigConnection\n  elementConnection: HookElementConnection\n}\n\nexport type HookConfigArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type HookConfigAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type HookElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type HookElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type HookConfigConnectionArgs = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<HookConfigConnectionSort>>\n}\n\nexport type HookElementConnectionArgs = {\n  where?: InputMaybe<HookElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<HookElementConnectionSort>>\n}\n\nexport type HookAggregateSelection = {\n  __typename?: 'HookAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type HookConfigConnection = {\n  __typename?: 'HookConfigConnection'\n  edges: Array<HookConfigRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type HookConfigRelationship = {\n  __typename?: 'HookConfigRelationship'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type HookEdge = {\n  __typename?: 'HookEdge'\n  cursor: Scalars['String']\n  node: Hook\n}\n\nexport type HookElementConnection = {\n  __typename?: 'HookElementConnection'\n  edges: Array<HookElementRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type HookElementElementAggregationSelection = {\n  __typename?: 'HookElementElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<HookElementElementNodeAggregateSelection>\n}\n\nexport type HookElementElementNodeAggregateSelection = {\n  __typename?: 'HookElementElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type HookElementRelationship = {\n  __typename?: 'HookElementRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type HookPropConfigAggregationSelection = {\n  __typename?: 'HookPropConfigAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<HookPropConfigNodeAggregateSelection>\n}\n\nexport type HookPropConfigNodeAggregateSelection = {\n  __typename?: 'HookPropConfigNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type HooksConnection = {\n  __typename?: 'HooksConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<HookEdge>\n}\n\nexport type IBaseTypeOwnerConnection = {\n  __typename?: 'IBaseTypeOwnerConnection'\n  edges: Array<IBaseTypeOwnerRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type IBaseTypeOwnerRelationship = {\n  __typename?: 'IBaseTypeOwnerRelationship'\n  cursor: Scalars['String']\n  node: User\n}\n\nexport type IdAggregateSelectionNonNullable = {\n  __typename?: 'IDAggregateSelectionNonNullable'\n  shortest: Scalars['ID']\n  longest: Scalars['ID']\n}\n\nexport type IntAggregateSelectionNonNullable = {\n  __typename?: 'IntAggregateSelectionNonNullable'\n  max: Scalars['Int']\n  min: Scalars['Int']\n  average: Scalars['Float']\n  sum: Scalars['Int']\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceType = IBaseType &\n  WithDescendants & {\n    __typename?: 'InterfaceType'\n    id: Scalars['ID']\n    name: Scalars['String']\n    descendantTypesIds: Array<Scalars['ID']>\n    kind: TypeKind\n    owner: User\n    ownerAggregate?: Maybe<InterfaceTypeUserOwnerAggregationSelection>\n    fieldRefs: Array<Field>\n    fieldRefsAggregate?: Maybe<InterfaceTypeFieldFieldRefsAggregationSelection>\n    apiOfAtoms: Array<Atom>\n    apiOfAtomsAggregate?: Maybe<InterfaceTypeAtomApiOfAtomsAggregationSelection>\n    fields: Array<Field>\n    fieldsAggregate?: Maybe<InterfaceTypeFieldFieldsAggregationSelection>\n    ownerConnection: IBaseTypeOwnerConnection\n    fieldRefsConnection: InterfaceTypeFieldRefsConnection\n    apiOfAtomsConnection: InterfaceTypeApiOfAtomsConnection\n    fieldsConnection: InterfaceTypeFieldsConnection\n  }\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsArgs = {\n  where?: InputMaybe<FieldWhere>\n  options?: InputMaybe<FieldOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsAggregateArgs = {\n  where?: InputMaybe<FieldWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldRefsConnectionArgs = {\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionSort>>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeApiOfAtomsConnectionArgs = {\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionSort>>\n}\n\n/** Represents an object type with multiple fields */\nexport type InterfaceTypeFieldsConnectionArgs = {\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<InterfaceTypeFieldsConnectionSort>>\n}\n\nexport type InterfaceTypeAggregateSelection = {\n  __typename?: 'InterfaceTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type InterfaceTypeApiOfAtomsConnection = {\n  __typename?: 'InterfaceTypeApiOfAtomsConnection'\n  edges: Array<InterfaceTypeApiOfAtomsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type InterfaceTypeApiOfAtomsRelationship = {\n  __typename?: 'InterfaceTypeApiOfAtomsRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type InterfaceTypeAtomApiOfAtomsAggregationSelection = {\n  __typename?: 'InterfaceTypeAtomApiOfAtomsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<InterfaceTypeAtomApiOfAtomsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeAtomApiOfAtomsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeAtomApiOfAtomsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type InterfaceTypeEdge = {\n  __typename?: 'InterfaceTypeEdge'\n  cursor: Scalars['String']\n  node: InterfaceType\n}\n\nexport type InterfaceTypeFieldFieldRefsAggregationSelection = {\n  __typename?: 'InterfaceTypeFieldFieldRefsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<InterfaceTypeFieldFieldRefsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeFieldFieldRefsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeFieldFieldRefsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type InterfaceTypeFieldFieldsAggregationSelection = {\n  __typename?: 'InterfaceTypeFieldFieldsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<InterfaceTypeFieldFieldsNodeAggregateSelection>\n}\n\nexport type InterfaceTypeFieldFieldsNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeFieldFieldsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  key: StringAggregateSelectionNonNullable\n  name: StringAggregateSelectionNullable\n  description: StringAggregateSelectionNullable\n  validationRules: StringAggregateSelectionNullable\n  defaultValues: StringAggregateSelectionNullable\n}\n\nexport type InterfaceTypeFieldRefsConnection = {\n  __typename?: 'InterfaceTypeFieldRefsConnection'\n  edges: Array<InterfaceTypeFieldRefsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type InterfaceTypeFieldRefsRelationship = {\n  __typename?: 'InterfaceTypeFieldRefsRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type InterfaceTypeFieldsConnection = {\n  __typename?: 'InterfaceTypeFieldsConnection'\n  edges: Array<InterfaceTypeFieldsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type InterfaceTypeFieldsRelationship = {\n  __typename?: 'InterfaceTypeFieldsRelationship'\n  cursor: Scalars['String']\n  node: Field\n}\n\nexport type InterfaceTypesConnection = {\n  __typename?: 'InterfaceTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<InterfaceTypeEdge>\n}\n\nexport type InterfaceTypeUserOwnerAggregationSelection = {\n  __typename?: 'InterfaceTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<InterfaceTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type InterfaceTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'InterfaceTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\n/** Allows picking a lambda */\nexport type LambdaType = IBaseType & {\n  __typename?: 'LambdaType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<LambdaTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a lambda */\nexport type LambdaTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type LambdaTypeAggregateSelection = {\n  __typename?: 'LambdaTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type LambdaTypeEdge = {\n  __typename?: 'LambdaTypeEdge'\n  cursor: Scalars['String']\n  node: LambdaType\n}\n\nexport type LambdaTypesConnection = {\n  __typename?: 'LambdaTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<LambdaTypeEdge>\n}\n\nexport type LambdaTypeUserOwnerAggregationSelection = {\n  __typename?: 'LambdaTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<LambdaTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type LambdaTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'LambdaTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type Page = {\n  __typename?: 'Page'\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n  url: Scalars['String']\n  kind: PageKind\n  name: Scalars['String']\n  slug: Scalars['String']\n  rootElement: Element\n  rootElementAggregate?: Maybe<PageElementRootElementAggregationSelection>\n  app: App\n  appAggregate?: Maybe<PageAppAppAggregationSelection>\n  store: Store\n  storeAggregate?: Maybe<PageStoreStoreAggregationSelection>\n  pageContentContainer?: Maybe<Element>\n  pageContentContainerAggregate?: Maybe<PageElementPageContentContainerAggregationSelection>\n  rootElementConnection: PageRootElementConnection\n  appConnection: PageAppConnection\n  storeConnection: PageStoreConnection\n  pageContentContainerConnection: PagePageContentContainerConnection\n}\n\nexport type PageRootElementArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageRootElementAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageAppArgs = {\n  where?: InputMaybe<AppWhere>\n  options?: InputMaybe<AppOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageAppAggregateArgs = {\n  where?: InputMaybe<AppWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageStoreArgs = {\n  where?: InputMaybe<StoreWhere>\n  options?: InputMaybe<StoreOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageStoreAggregateArgs = {\n  where?: InputMaybe<StoreWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PagePageContentContainerArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PagePageContentContainerAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type PageRootElementConnectionArgs = {\n  where?: InputMaybe<PageRootElementConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<PageRootElementConnectionSort>>\n}\n\nexport type PageAppConnectionArgs = {\n  where?: InputMaybe<PageAppConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<PageAppConnectionSort>>\n}\n\nexport type PageStoreConnectionArgs = {\n  where?: InputMaybe<PageStoreConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<PageStoreConnectionSort>>\n}\n\nexport type PagePageContentContainerConnectionArgs = {\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<PagePageContentContainerConnectionSort>>\n}\n\nexport type PageAggregateSelection = {\n  __typename?: 'PageAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type PageAppAppAggregationSelection = {\n  __typename?: 'PageAppAppAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PageAppAppNodeAggregateSelection>\n}\n\nexport type PageAppAppNodeAggregateSelection = {\n  __typename?: 'PageAppAppNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n}\n\nexport type PageAppConnection = {\n  __typename?: 'PageAppConnection'\n  edges: Array<PageAppRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type PageAppRelationship = {\n  __typename?: 'PageAppRelationship'\n  cursor: Scalars['String']\n  node: App\n}\n\nexport type PageEdge = {\n  __typename?: 'PageEdge'\n  cursor: Scalars['String']\n  node: Page\n}\n\nexport type PageElementPageContentContainerAggregationSelection = {\n  __typename?: 'PageElementPageContentContainerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PageElementPageContentContainerNodeAggregateSelection>\n}\n\nexport type PageElementPageContentContainerNodeAggregateSelection = {\n  __typename?: 'PageElementPageContentContainerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type PageElementRootElementAggregationSelection = {\n  __typename?: 'PageElementRootElementAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PageElementRootElementNodeAggregateSelection>\n}\n\nexport type PageElementRootElementNodeAggregateSelection = {\n  __typename?: 'PageElementRootElementNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\n/** Pagination information (Relay) */\nexport type PageInfo = {\n  __typename?: 'PageInfo'\n  hasNextPage: Scalars['Boolean']\n  hasPreviousPage: Scalars['Boolean']\n  startCursor?: Maybe<Scalars['String']>\n  endCursor?: Maybe<Scalars['String']>\n}\n\nexport type PagePageContentContainerConnection = {\n  __typename?: 'PagePageContentContainerConnection'\n  edges: Array<PagePageContentContainerRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type PagePageContentContainerRelationship = {\n  __typename?: 'PagePageContentContainerRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type PageRootElementConnection = {\n  __typename?: 'PageRootElementConnection'\n  edges: Array<PageRootElementRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type PageRootElementRelationship = {\n  __typename?: 'PageRootElementRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type PagesConnection = {\n  __typename?: 'PagesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<PageEdge>\n}\n\nexport type PageStoreConnection = {\n  __typename?: 'PageStoreConnection'\n  edges: Array<PageStoreRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type PageStoreRelationship = {\n  __typename?: 'PageStoreRelationship'\n  cursor: Scalars['String']\n  node: Store\n}\n\nexport type PageStoreStoreAggregationSelection = {\n  __typename?: 'PageStoreStoreAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PageStoreStoreNodeAggregateSelection>\n}\n\nexport type PageStoreStoreNodeAggregateSelection = {\n  __typename?: 'PageStoreStoreNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageType = IBaseType & {\n  __typename?: 'PageType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<PageTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking a page from the list of pages */\nexport type PageTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type PageTypeAggregateSelection = {\n  __typename?: 'PageTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type PageTypeEdge = {\n  __typename?: 'PageTypeEdge'\n  cursor: Scalars['String']\n  node: PageType\n}\n\nexport type PageTypesConnection = {\n  __typename?: 'PageTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<PageTypeEdge>\n}\n\nexport type PageTypeUserOwnerAggregationSelection = {\n  __typename?: 'PageTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PageTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type PageTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'PageTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveType = IBaseType & {\n  __typename?: 'PrimitiveType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  primitiveKind: PrimitiveTypeKind\n  owner: User\n  ownerAggregate?: Maybe<PrimitiveTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean */\nexport type PrimitiveTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type PrimitiveTypeAggregateSelection = {\n  __typename?: 'PrimitiveTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type PrimitiveTypeEdge = {\n  __typename?: 'PrimitiveTypeEdge'\n  cursor: Scalars['String']\n  node: PrimitiveType\n}\n\nexport type PrimitiveTypesConnection = {\n  __typename?: 'PrimitiveTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<PrimitiveTypeEdge>\n}\n\nexport type PrimitiveTypeUserOwnerAggregationSelection = {\n  __typename?: 'PrimitiveTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<PrimitiveTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type PrimitiveTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'PrimitiveTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type Prop = {\n  __typename?: 'Prop'\n  id: Scalars['ID']\n  data: Scalars['String']\n}\n\nexport type PropAggregateSelection = {\n  __typename?: 'PropAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type PropEdge = {\n  __typename?: 'PropEdge'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type PropsConnection = {\n  __typename?: 'PropsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<PropEdge>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeType = IBaseType & {\n  __typename?: 'ReactNodeType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<ReactNodeTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a React node: `ReactNode`\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type ReactNodeTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type ReactNodeTypeAggregateSelection = {\n  __typename?: 'ReactNodeTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ReactNodeTypeEdge = {\n  __typename?: 'ReactNodeTypeEdge'\n  cursor: Scalars['String']\n  node: ReactNodeType\n}\n\nexport type ReactNodeTypesConnection = {\n  __typename?: 'ReactNodeTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ReactNodeTypeEdge>\n}\n\nexport type ReactNodeTypeUserOwnerAggregationSelection = {\n  __typename?: 'ReactNodeTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ReactNodeTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type ReactNodeTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'ReactNodeTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropType = IBaseType & {\n  __typename?: 'RenderPropType'\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner: User\n  ownerAggregate?: Maybe<RenderPropTypeUserOwnerAggregationSelection>\n  ownerConnection: IBaseTypeOwnerConnection\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/**\n * Allows picking a Component from the list of components.\n * It is passed to the rendered element as a function that takes props as input\n * and returns a React element: '(props) => ReactNode'\n * Prop values for this type have the shape of TypedProp in order to\n * be distinguished from other element types.\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it '(props) => ReactNode' value\n * - ReactNodeType: Component select box, results it 'ReactNode' value\n * - ElementType: Current tree element select box, results it 'ReactNode' value\n */\nexport type RenderPropTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\nexport type RenderPropTypeAggregateSelection = {\n  __typename?: 'RenderPropTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type RenderPropTypeEdge = {\n  __typename?: 'RenderPropTypeEdge'\n  cursor: Scalars['String']\n  node: RenderPropType\n}\n\nexport type RenderPropTypesConnection = {\n  __typename?: 'RenderPropTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<RenderPropTypeEdge>\n}\n\nexport type RenderPropTypeUserOwnerAggregationSelection = {\n  __typename?: 'RenderPropTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<RenderPropTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type RenderPropTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'RenderPropTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type RenderType = {\n  __typename?: 'RenderType'\n  id: Scalars['ID']\n  kind: RenderTypeKind\n}\n\nexport type RenderTypeAggregateSelection = {\n  __typename?: 'RenderTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n}\n\nexport type RenderTypeEdge = {\n  __typename?: 'RenderTypeEdge'\n  cursor: Scalars['String']\n  node: RenderType\n}\n\nexport type RenderTypesConnection = {\n  __typename?: 'RenderTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<RenderTypeEdge>\n}\n\nexport type ResetDatabaseMutationResponse = {\n  __typename?: 'ResetDatabaseMutationResponse'\n  success?: Maybe<Scalars['Boolean']>\n}\n\nexport type ResetDatabaseMutationResponseAggregateSelection = {\n  __typename?: 'ResetDatabaseMutationResponseAggregateSelection'\n  count: Scalars['Int']\n}\n\nexport type ResetDatabaseMutationResponseEdge = {\n  __typename?: 'ResetDatabaseMutationResponseEdge'\n  cursor: Scalars['String']\n  node: ResetDatabaseMutationResponse\n}\n\nexport type ResetDatabaseMutationResponsesConnection = {\n  __typename?: 'ResetDatabaseMutationResponsesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ResetDatabaseMutationResponseEdge>\n}\n\nexport type Resource = WithOwner & {\n  __typename?: 'Resource'\n  id: Scalars['ID']\n  name: Scalars['String']\n  type: ResourceType\n  config: Prop\n  configAggregate?: Maybe<ResourcePropConfigAggregationSelection>\n  owner: User\n  ownerAggregate?: Maybe<ResourceUserOwnerAggregationSelection>\n  configConnection: ResourceConfigConnection\n  ownerConnection: WithOwnerOwnerConnection\n}\n\nexport type ResourceConfigArgs = {\n  where?: InputMaybe<PropWhere>\n  options?: InputMaybe<PropOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResourceConfigAggregateArgs = {\n  where?: InputMaybe<PropWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResourceOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResourceOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResourceConfigConnectionArgs = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<ResourceConfigConnectionSort>>\n}\n\nexport type ResourceOwnerConnectionArgs = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<WithOwnerOwnerConnectionSort>>\n}\n\nexport type ResourceAggregateSelection = {\n  __typename?: 'ResourceAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type ResourceConfigConnection = {\n  __typename?: 'ResourceConfigConnection'\n  edges: Array<ResourceConfigRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type ResourceConfigRelationship = {\n  __typename?: 'ResourceConfigRelationship'\n  cursor: Scalars['String']\n  node: Prop\n}\n\nexport type ResourceEdge = {\n  __typename?: 'ResourceEdge'\n  cursor: Scalars['String']\n  node: Resource\n}\n\nexport type ResourcePropConfigAggregationSelection = {\n  __typename?: 'ResourcePropConfigAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ResourcePropConfigNodeAggregateSelection>\n}\n\nexport type ResourcePropConfigNodeAggregateSelection = {\n  __typename?: 'ResourcePropConfigNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  data: StringAggregateSelectionNonNullable\n}\n\nexport type ResourcesConnection = {\n  __typename?: 'ResourcesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<ResourceEdge>\n}\n\nexport type ResourceUserOwnerAggregationSelection = {\n  __typename?: 'ResourceUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<ResourceUserOwnerNodeAggregateSelection>\n}\n\nexport type ResourceUserOwnerNodeAggregateSelection = {\n  __typename?: 'ResourceUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type Store = {\n  __typename?: 'Store'\n  id: Scalars['ID']\n  name: Scalars['String']\n  api: InterfaceType\n  apiAggregate?: Maybe<StoreInterfaceTypeApiAggregationSelection>\n  actions: Array<AnyAction>\n  component?: Maybe<Component>\n  componentAggregate?: Maybe<StoreComponentComponentAggregationSelection>\n  page?: Maybe<Page>\n  pageAggregate?: Maybe<StorePagePageAggregationSelection>\n  apiConnection: StoreApiConnection\n  actionsConnection: StoreActionsConnection\n  componentConnection: StoreComponentConnection\n  pageConnection: StorePageConnection\n}\n\nexport type StoreApiArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  options?: InputMaybe<InterfaceTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreApiAggregateArgs = {\n  where?: InputMaybe<InterfaceTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreActionsArgs = {\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyActionWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreComponentArgs = {\n  where?: InputMaybe<ComponentWhere>\n  options?: InputMaybe<ComponentOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreComponentAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StorePageArgs = {\n  where?: InputMaybe<PageWhere>\n  options?: InputMaybe<PageOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StorePageAggregateArgs = {\n  where?: InputMaybe<PageWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreApiConnectionArgs = {\n  where?: InputMaybe<StoreApiConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<StoreApiConnectionSort>>\n}\n\nexport type StoreActionsConnectionArgs = {\n  where?: InputMaybe<StoreActionsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type StoreComponentConnectionArgs = {\n  where?: InputMaybe<StoreComponentConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<StoreComponentConnectionSort>>\n}\n\nexport type StorePageConnectionArgs = {\n  where?: InputMaybe<StorePageConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<StorePageConnectionSort>>\n}\n\nexport type StoreActionsConnection = {\n  __typename?: 'StoreActionsConnection'\n  edges: Array<StoreActionsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type StoreActionsRelationship = {\n  __typename?: 'StoreActionsRelationship'\n  cursor: Scalars['String']\n  node: AnyAction\n}\n\nexport type StoreAggregateSelection = {\n  __typename?: 'StoreAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type StoreApiConnection = {\n  __typename?: 'StoreApiConnection'\n  edges: Array<StoreApiRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type StoreApiRelationship = {\n  __typename?: 'StoreApiRelationship'\n  cursor: Scalars['String']\n  node: InterfaceType\n}\n\nexport type StoreComponentComponentAggregationSelection = {\n  __typename?: 'StoreComponentComponentAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<StoreComponentComponentNodeAggregateSelection>\n}\n\nexport type StoreComponentComponentNodeAggregateSelection = {\n  __typename?: 'StoreComponentComponentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n}\n\nexport type StoreComponentConnection = {\n  __typename?: 'StoreComponentConnection'\n  edges: Array<StoreComponentRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type StoreComponentRelationship = {\n  __typename?: 'StoreComponentRelationship'\n  cursor: Scalars['String']\n  node: Component\n}\n\nexport type StoreEdge = {\n  __typename?: 'StoreEdge'\n  cursor: Scalars['String']\n  node: Store\n}\n\nexport type StoreInterfaceTypeApiAggregationSelection = {\n  __typename?: 'StoreInterfaceTypeApiAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<StoreInterfaceTypeApiNodeAggregateSelection>\n}\n\nexport type StoreInterfaceTypeApiNodeAggregateSelection = {\n  __typename?: 'StoreInterfaceTypeApiNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type StorePageConnection = {\n  __typename?: 'StorePageConnection'\n  edges: Array<StorePageRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type StorePagePageAggregationSelection = {\n  __typename?: 'StorePagePageAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<StorePagePageNodeAggregateSelection>\n}\n\nexport type StorePagePageNodeAggregateSelection = {\n  __typename?: 'StorePagePageNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n  url: StringAggregateSelectionNonNullable\n}\n\nexport type StorePageRelationship = {\n  __typename?: 'StorePageRelationship'\n  cursor: Scalars['String']\n  node: Page\n}\n\nexport type StoresConnection = {\n  __typename?: 'StoresConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<StoreEdge>\n}\n\nexport type StringAggregateSelectionNonNullable = {\n  __typename?: 'StringAggregateSelectionNonNullable'\n  shortest: Scalars['String']\n  longest: Scalars['String']\n}\n\nexport type StringAggregateSelectionNullable = {\n  __typename?: 'StringAggregateSelectionNullable'\n  shortest?: Maybe<Scalars['String']>\n  longest?: Maybe<Scalars['String']>\n}\n\nexport type Tag = {\n  __typename?: 'Tag'\n  id: Scalars['ID']\n  name: Scalars['String']\n  isRoot?: Maybe<Scalars['Boolean']>\n  descendants: Array<Tag>\n  parent?: Maybe<Tag>\n  parentAggregate?: Maybe<TagTagParentAggregationSelection>\n  children: Array<Tag>\n  childrenAggregate?: Maybe<TagTagChildrenAggregationSelection>\n  owner: User\n  ownerAggregate?: Maybe<TagUserOwnerAggregationSelection>\n  atoms: Array<Atom>\n  atomsAggregate?: Maybe<TagAtomAtomsAggregationSelection>\n  parentConnection: TagParentConnection\n  childrenConnection: TagChildrenConnection\n  ownerConnection: TagOwnerConnection\n  atomsConnection: TagAtomsConnection\n}\n\nexport type TagParentArgs = {\n  where?: InputMaybe<TagWhere>\n  options?: InputMaybe<TagOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagParentAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagChildrenArgs = {\n  where?: InputMaybe<TagWhere>\n  options?: InputMaybe<TagOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagChildrenAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagAtomsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type TagParentConnectionArgs = {\n  where?: InputMaybe<TagParentConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<TagParentConnectionSort>>\n}\n\nexport type TagChildrenConnectionArgs = {\n  where?: InputMaybe<TagChildrenConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<TagChildrenConnectionSort>>\n}\n\nexport type TagOwnerConnectionArgs = {\n  where?: InputMaybe<TagOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<TagOwnerConnectionSort>>\n}\n\nexport type TagAtomsConnectionArgs = {\n  where?: InputMaybe<TagAtomsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<TagAtomsConnectionSort>>\n}\n\nexport type TagAggregateSelection = {\n  __typename?: 'TagAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagAtomAtomsAggregationSelection = {\n  __typename?: 'TagAtomAtomsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<TagAtomAtomsNodeAggregateSelection>\n}\n\nexport type TagAtomAtomsNodeAggregateSelection = {\n  __typename?: 'TagAtomAtomsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type TagAtomsConnection = {\n  __typename?: 'TagAtomsConnection'\n  edges: Array<TagAtomsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type TagAtomsRelationship = {\n  __typename?: 'TagAtomsRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type TagChildrenConnection = {\n  __typename?: 'TagChildrenConnection'\n  edges: Array<TagChildrenRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type TagChildrenRelationship = {\n  __typename?: 'TagChildrenRelationship'\n  cursor: Scalars['String']\n  node: Tag\n}\n\nexport type TagEdge = {\n  __typename?: 'TagEdge'\n  cursor: Scalars['String']\n  node: Tag\n}\n\nexport type TagOwnerConnection = {\n  __typename?: 'TagOwnerConnection'\n  edges: Array<TagOwnerRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type TagOwnerRelationship = {\n  __typename?: 'TagOwnerRelationship'\n  cursor: Scalars['String']\n  node: User\n}\n\nexport type TagParentConnection = {\n  __typename?: 'TagParentConnection'\n  edges: Array<TagParentRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type TagParentRelationship = {\n  __typename?: 'TagParentRelationship'\n  cursor: Scalars['String']\n  node: Tag\n}\n\nexport type TagsConnection = {\n  __typename?: 'TagsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<TagEdge>\n}\n\nexport type TagTagChildrenAggregationSelection = {\n  __typename?: 'TagTagChildrenAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<TagTagChildrenNodeAggregateSelection>\n}\n\nexport type TagTagChildrenNodeAggregateSelection = {\n  __typename?: 'TagTagChildrenNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagTagParentAggregationSelection = {\n  __typename?: 'TagTagParentAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<TagTagParentNodeAggregateSelection>\n}\n\nexport type TagTagParentNodeAggregateSelection = {\n  __typename?: 'TagTagParentNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type TagUserOwnerAggregationSelection = {\n  __typename?: 'TagUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<TagUserOwnerNodeAggregateSelection>\n}\n\nexport type TagUserOwnerNodeAggregateSelection = {\n  __typename?: 'TagUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type TypeReference = {\n  __typename?: 'TypeReference'\n  /** The name of the resource referencing the type */\n  name: Scalars['String']\n  /** The type of resource - Atom, InterfaceType, etc. */\n  label: Scalars['String']\n}\n\nexport type TypeReferenceAggregateSelection = {\n  __typename?: 'TypeReferenceAggregateSelection'\n  count: Scalars['Int']\n  name: StringAggregateSelectionNonNullable\n  label: StringAggregateSelectionNonNullable\n}\n\nexport type TypeReferenceEdge = {\n  __typename?: 'TypeReferenceEdge'\n  cursor: Scalars['String']\n  node: TypeReference\n}\n\nexport type TypeReferencesConnection = {\n  __typename?: 'TypeReferencesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<TypeReferenceEdge>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionType = IBaseType &\n  WithDescendants & {\n    __typename?: 'UnionType'\n    id: Scalars['ID']\n    name: Scalars['String']\n    descendantTypesIds: Array<Scalars['ID']>\n    kind: TypeKind\n    owner: User\n    ownerAggregate?: Maybe<UnionTypeUserOwnerAggregationSelection>\n    typesOfUnionType: Array<AnyType>\n    ownerConnection: IBaseTypeOwnerConnection\n    typesOfUnionTypeConnection: UnionTypeTypesOfUnionTypeConnection\n  }\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerArgs = {\n  where?: InputMaybe<UserWhere>\n  options?: InputMaybe<UserOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerAggregateArgs = {\n  where?: InputMaybe<UserWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeTypesOfUnionTypeArgs = {\n  options?: InputMaybe<QueryOptions>\n  where?: InputMaybe<AnyTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeOwnerConnectionArgs = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<IBaseTypeOwnerConnectionSort>>\n}\n\n/** Allows picking one of a set of types */\nexport type UnionTypeTypesOfUnionTypeConnectionArgs = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UnionTypeAggregateSelection = {\n  __typename?: 'UnionTypeAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UnionTypeEdge = {\n  __typename?: 'UnionTypeEdge'\n  cursor: Scalars['String']\n  node: UnionType\n}\n\nexport type UnionTypesConnection = {\n  __typename?: 'UnionTypesConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<UnionTypeEdge>\n}\n\nexport type UnionTypeTypesOfUnionTypeConnection = {\n  __typename?: 'UnionTypeTypesOfUnionTypeConnection'\n  edges: Array<UnionTypeTypesOfUnionTypeRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UnionTypeTypesOfUnionTypeRelationship = {\n  __typename?: 'UnionTypeTypesOfUnionTypeRelationship'\n  cursor: Scalars['String']\n  node: AnyType\n}\n\nexport type UnionTypeUserOwnerAggregationSelection = {\n  __typename?: 'UnionTypeUserOwnerAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UnionTypeUserOwnerNodeAggregateSelection>\n}\n\nexport type UnionTypeUserOwnerNodeAggregateSelection = {\n  __typename?: 'UnionTypeUserOwnerNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type UpdateActionTypesMutationResponse = {\n  __typename?: 'UpdateActionTypesMutationResponse'\n  info: UpdateInfo\n  actionTypes: Array<ActionType>\n}\n\nexport type UpdateApiActionsMutationResponse = {\n  __typename?: 'UpdateApiActionsMutationResponse'\n  info: UpdateInfo\n  apiActions: Array<ApiAction>\n}\n\nexport type UpdateAppsMutationResponse = {\n  __typename?: 'UpdateAppsMutationResponse'\n  info: UpdateInfo\n  apps: Array<App>\n}\n\nexport type UpdateAppTypesMutationResponse = {\n  __typename?: 'UpdateAppTypesMutationResponse'\n  info: UpdateInfo\n  appTypes: Array<AppType>\n}\n\nexport type UpdateArrayTypesMutationResponse = {\n  __typename?: 'UpdateArrayTypesMutationResponse'\n  info: UpdateInfo\n  arrayTypes: Array<ArrayType>\n}\n\nexport type UpdateAtomsMutationResponse = {\n  __typename?: 'UpdateAtomsMutationResponse'\n  info: UpdateInfo\n  atoms: Array<Atom>\n}\n\nexport type UpdateBaseTypesMutationResponse = {\n  __typename?: 'UpdateBaseTypesMutationResponse'\n  info: UpdateInfo\n  baseTypes: Array<BaseType>\n}\n\nexport type UpdateCodeActionsMutationResponse = {\n  __typename?: 'UpdateCodeActionsMutationResponse'\n  info: UpdateInfo\n  codeActions: Array<CodeAction>\n}\n\nexport type UpdateCodeMirrorTypesMutationResponse = {\n  __typename?: 'UpdateCodeMirrorTypesMutationResponse'\n  info: UpdateInfo\n  codeMirrorTypes: Array<CodeMirrorType>\n}\n\nexport type UpdateComponentsMutationResponse = {\n  __typename?: 'UpdateComponentsMutationResponse'\n  info: UpdateInfo\n  components: Array<Component>\n}\n\nexport type UpdateDeleteInfosMutationResponse = {\n  __typename?: 'UpdateDeleteInfosMutationResponse'\n  info: UpdateInfo\n  deleteInfos: Array<DeleteInfo>\n}\n\nexport type UpdateDomainsMutationResponse = {\n  __typename?: 'UpdateDomainsMutationResponse'\n  info: UpdateInfo\n  domains: Array<Domain>\n}\n\nexport type UpdateElementsMutationResponse = {\n  __typename?: 'UpdateElementsMutationResponse'\n  info: UpdateInfo\n  elements: Array<Element>\n}\n\nexport type UpdateElementTypesMutationResponse = {\n  __typename?: 'UpdateElementTypesMutationResponse'\n  info: UpdateInfo\n  elementTypes: Array<ElementType>\n}\n\nexport type UpdateEnumTypesMutationResponse = {\n  __typename?: 'UpdateEnumTypesMutationResponse'\n  info: UpdateInfo\n  enumTypes: Array<EnumType>\n}\n\nexport type UpdateEnumTypeValuesMutationResponse = {\n  __typename?: 'UpdateEnumTypeValuesMutationResponse'\n  info: UpdateInfo\n  enumTypeValues: Array<EnumTypeValue>\n}\n\nexport type UpdateFieldsMutationResponse = {\n  __typename?: 'UpdateFieldsMutationResponse'\n  info: UpdateInfo\n  fields: Array<Field>\n}\n\nexport type UpdateGetBaseTypesReturnsMutationResponse = {\n  __typename?: 'UpdateGetBaseTypesReturnsMutationResponse'\n  info: UpdateInfo\n  getBaseTypesReturns: Array<GetBaseTypesReturn>\n}\n\nexport type UpdateHooksMutationResponse = {\n  __typename?: 'UpdateHooksMutationResponse'\n  info: UpdateInfo\n  hooks: Array<Hook>\n}\n\nexport type UpdateInfo = {\n  __typename?: 'UpdateInfo'\n  bookmark?: Maybe<Scalars['String']>\n  nodesCreated: Scalars['Int']\n  nodesDeleted: Scalars['Int']\n  relationshipsCreated: Scalars['Int']\n  relationshipsDeleted: Scalars['Int']\n}\n\nexport type UpdateInterfaceTypesMutationResponse = {\n  __typename?: 'UpdateInterfaceTypesMutationResponse'\n  info: UpdateInfo\n  interfaceTypes: Array<InterfaceType>\n}\n\nexport type UpdateLambdaTypesMutationResponse = {\n  __typename?: 'UpdateLambdaTypesMutationResponse'\n  info: UpdateInfo\n  lambdaTypes: Array<LambdaType>\n}\n\nexport type UpdatePagesMutationResponse = {\n  __typename?: 'UpdatePagesMutationResponse'\n  info: UpdateInfo\n  pages: Array<Page>\n}\n\nexport type UpdatePageTypesMutationResponse = {\n  __typename?: 'UpdatePageTypesMutationResponse'\n  info: UpdateInfo\n  pageTypes: Array<PageType>\n}\n\nexport type UpdatePrimitiveTypesMutationResponse = {\n  __typename?: 'UpdatePrimitiveTypesMutationResponse'\n  info: UpdateInfo\n  primitiveTypes: Array<PrimitiveType>\n}\n\nexport type UpdatePropsMutationResponse = {\n  __typename?: 'UpdatePropsMutationResponse'\n  info: UpdateInfo\n  props: Array<Prop>\n}\n\nexport type UpdateReactNodeTypesMutationResponse = {\n  __typename?: 'UpdateReactNodeTypesMutationResponse'\n  info: UpdateInfo\n  reactNodeTypes: Array<ReactNodeType>\n}\n\nexport type UpdateRenderPropTypesMutationResponse = {\n  __typename?: 'UpdateRenderPropTypesMutationResponse'\n  info: UpdateInfo\n  renderPropTypes: Array<RenderPropType>\n}\n\nexport type UpdateRenderTypesMutationResponse = {\n  __typename?: 'UpdateRenderTypesMutationResponse'\n  info: UpdateInfo\n  renderTypes: Array<RenderType>\n}\n\nexport type UpdateResetDatabaseMutationResponsesMutationResponse = {\n  __typename?: 'UpdateResetDatabaseMutationResponsesMutationResponse'\n  info: UpdateInfo\n  resetDatabaseMutationResponses: Array<ResetDatabaseMutationResponse>\n}\n\nexport type UpdateResourcesMutationResponse = {\n  __typename?: 'UpdateResourcesMutationResponse'\n  info: UpdateInfo\n  resources: Array<Resource>\n}\n\nexport type UpdateStoresMutationResponse = {\n  __typename?: 'UpdateStoresMutationResponse'\n  info: UpdateInfo\n  stores: Array<Store>\n}\n\nexport type UpdateTagsMutationResponse = {\n  __typename?: 'UpdateTagsMutationResponse'\n  info: UpdateInfo\n  tags: Array<Tag>\n}\n\nexport type UpdateTypeReferencesMutationResponse = {\n  __typename?: 'UpdateTypeReferencesMutationResponse'\n  info: UpdateInfo\n  typeReferences: Array<TypeReference>\n}\n\nexport type UpdateUnionTypesMutationResponse = {\n  __typename?: 'UpdateUnionTypesMutationResponse'\n  info: UpdateInfo\n  unionTypes: Array<UnionType>\n}\n\nexport type UpdateUsersMutationResponse = {\n  __typename?: 'UpdateUsersMutationResponse'\n  info: UpdateInfo\n  users: Array<User>\n}\n\nexport type UpdateVercelDomainConfigsMutationResponse = {\n  __typename?: 'UpdateVercelDomainConfigsMutationResponse'\n  info: UpdateInfo\n  vercelDomainConfigs: Array<VercelDomainConfig>\n}\n\nexport type UpdateVercelProjectDomainsMutationResponse = {\n  __typename?: 'UpdateVercelProjectDomainsMutationResponse'\n  info: UpdateInfo\n  vercelProjectDomains: Array<VercelProjectDomain>\n}\n\nexport type User = {\n  __typename?: 'User'\n  id: Scalars['ID']\n  auth0Id: Scalars['String']\n  email: Scalars['String']\n  username: Scalars['String']\n  roles?: Maybe<Array<Role>>\n  types: Array<BaseType>\n  typesAggregate?: Maybe<UserBaseTypeTypesAggregationSelection>\n  apps: Array<App>\n  appsAggregate?: Maybe<UserAppAppsAggregationSelection>\n  elements: Array<Element>\n  elementsAggregate?: Maybe<UserElementElementsAggregationSelection>\n  components: Array<Component>\n  componentsAggregate?: Maybe<UserComponentComponentsAggregationSelection>\n  atoms: Array<Atom>\n  atomsAggregate?: Maybe<UserAtomAtomsAggregationSelection>\n  tags: Array<Tag>\n  tagsAggregate?: Maybe<UserTagTagsAggregationSelection>\n  typesConnection: UserTypesConnection\n  appsConnection: UserAppsConnection\n  elementsConnection: UserElementsConnection\n  componentsConnection: UserComponentsConnection\n  atomsConnection: UserAtomsConnection\n  tagsConnection: UserTagsConnection\n}\n\nexport type UserTypesArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n  options?: InputMaybe<BaseTypeOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserTypesAggregateArgs = {\n  where?: InputMaybe<BaseTypeWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserAppsArgs = {\n  where?: InputMaybe<AppWhere>\n  options?: InputMaybe<AppOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserAppsAggregateArgs = {\n  where?: InputMaybe<AppWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserElementsArgs = {\n  where?: InputMaybe<ElementWhere>\n  options?: InputMaybe<ElementOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserElementsAggregateArgs = {\n  where?: InputMaybe<ElementWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserComponentsArgs = {\n  where?: InputMaybe<ComponentWhere>\n  options?: InputMaybe<ComponentOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserComponentsAggregateArgs = {\n  where?: InputMaybe<ComponentWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserAtomsArgs = {\n  where?: InputMaybe<AtomWhere>\n  options?: InputMaybe<AtomOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserAtomsAggregateArgs = {\n  where?: InputMaybe<AtomWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserTagsArgs = {\n  where?: InputMaybe<TagWhere>\n  options?: InputMaybe<TagOptions>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserTagsAggregateArgs = {\n  where?: InputMaybe<TagWhere>\n  directed?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type UserTypesConnectionArgs = {\n  where?: InputMaybe<UserTypesConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserTypesConnectionSort>>\n}\n\nexport type UserAppsConnectionArgs = {\n  where?: InputMaybe<UserAppsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserAppsConnectionSort>>\n}\n\nexport type UserElementsConnectionArgs = {\n  where?: InputMaybe<UserElementsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserElementsConnectionSort>>\n}\n\nexport type UserComponentsConnectionArgs = {\n  where?: InputMaybe<UserComponentsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserComponentsConnectionSort>>\n}\n\nexport type UserAtomsConnectionArgs = {\n  where?: InputMaybe<UserAtomsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserAtomsConnectionSort>>\n}\n\nexport type UserTagsConnectionArgs = {\n  where?: InputMaybe<UserTagsConnectionWhere>\n  first?: InputMaybe<Scalars['Int']>\n  after?: InputMaybe<Scalars['String']>\n  directed?: InputMaybe<Scalars['Boolean']>\n  sort?: InputMaybe<Array<UserTagsConnectionSort>>\n}\n\nexport type UserAggregateSelection = {\n  __typename?: 'UserAggregateSelection'\n  count: Scalars['Int']\n  id: IdAggregateSelectionNonNullable\n  auth0Id: StringAggregateSelectionNonNullable\n  email: StringAggregateSelectionNonNullable\n  username: StringAggregateSelectionNonNullable\n}\n\nexport type UserAppAppsAggregationSelection = {\n  __typename?: 'UserAppAppsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserAppAppsNodeAggregateSelection>\n}\n\nexport type UserAppAppsNodeAggregateSelection = {\n  __typename?: 'UserAppAppsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  _compoundName: StringAggregateSelectionNonNullable\n}\n\nexport type UserAppsConnection = {\n  __typename?: 'UserAppsConnection'\n  edges: Array<UserAppsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserAppsRelationship = {\n  __typename?: 'UserAppsRelationship'\n  cursor: Scalars['String']\n  node: App\n}\n\nexport type UserAtomAtomsAggregationSelection = {\n  __typename?: 'UserAtomAtomsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserAtomAtomsNodeAggregateSelection>\n}\n\nexport type UserAtomAtomsNodeAggregateSelection = {\n  __typename?: 'UserAtomAtomsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  icon: StringAggregateSelectionNullable\n  externalJsSource: StringAggregateSelectionNullable\n  externalCssSource: StringAggregateSelectionNullable\n  externalSourceType: StringAggregateSelectionNullable\n}\n\nexport type UserAtomsConnection = {\n  __typename?: 'UserAtomsConnection'\n  edges: Array<UserAtomsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserAtomsRelationship = {\n  __typename?: 'UserAtomsRelationship'\n  cursor: Scalars['String']\n  node: Atom\n}\n\nexport type UserBaseTypeTypesAggregationSelection = {\n  __typename?: 'UserBaseTypeTypesAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserBaseTypeTypesNodeAggregateSelection>\n}\n\nexport type UserBaseTypeTypesNodeAggregateSelection = {\n  __typename?: 'UserBaseTypeTypesNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserComponentComponentsAggregationSelection = {\n  __typename?: 'UserComponentComponentsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserComponentComponentsNodeAggregateSelection>\n}\n\nexport type UserComponentComponentsNodeAggregateSelection = {\n  __typename?: 'UserComponentComponentsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  keyGenerator: StringAggregateSelectionNullable\n}\n\nexport type UserComponentsConnection = {\n  __typename?: 'UserComponentsConnection'\n  edges: Array<UserComponentsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserComponentsRelationship = {\n  __typename?: 'UserComponentsRelationship'\n  cursor: Scalars['String']\n  node: Component\n}\n\nexport type UserEdge = {\n  __typename?: 'UserEdge'\n  cursor: Scalars['String']\n  node: User\n}\n\nexport type UserElementElementsAggregationSelection = {\n  __typename?: 'UserElementElementsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserElementElementsNodeAggregateSelection>\n}\n\nexport type UserElementElementsNodeAggregateSelection = {\n  __typename?: 'UserElementElementsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n  customCss: StringAggregateSelectionNullable\n  guiCss: StringAggregateSelectionNullable\n  propTransformationJs: StringAggregateSelectionNullable\n  renderForEachPropKey: StringAggregateSelectionNullable\n  renderIfExpression: StringAggregateSelectionNullable\n}\n\nexport type UserElementsConnection = {\n  __typename?: 'UserElementsConnection'\n  edges: Array<UserElementsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserElementsRelationship = {\n  __typename?: 'UserElementsRelationship'\n  cursor: Scalars['String']\n  node: Element\n}\n\nexport type UsersConnection = {\n  __typename?: 'UsersConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<UserEdge>\n}\n\nexport type UserTagsConnection = {\n  __typename?: 'UserTagsConnection'\n  edges: Array<UserTagsRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserTagsRelationship = {\n  __typename?: 'UserTagsRelationship'\n  cursor: Scalars['String']\n  node: Tag\n}\n\nexport type UserTagTagsAggregationSelection = {\n  __typename?: 'UserTagTagsAggregationSelection'\n  count: Scalars['Int']\n  node?: Maybe<UserTagTagsNodeAggregateSelection>\n}\n\nexport type UserTagTagsNodeAggregateSelection = {\n  __typename?: 'UserTagTagsNodeAggregateSelection'\n  id: IdAggregateSelectionNonNullable\n  name: StringAggregateSelectionNonNullable\n}\n\nexport type UserTypesConnection = {\n  __typename?: 'UserTypesConnection'\n  edges: Array<UserTypesRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type UserTypesRelationship = {\n  __typename?: 'UserTypesRelationship'\n  cursor: Scalars['String']\n  node: BaseType\n}\n\nexport type VercelDomainConfig = {\n  __typename?: 'VercelDomainConfig'\n  misconfigured: Scalars['Boolean']\n}\n\nexport type VercelDomainConfigAggregateSelection = {\n  __typename?: 'VercelDomainConfigAggregateSelection'\n  count: Scalars['Int']\n}\n\nexport type VercelDomainConfigEdge = {\n  __typename?: 'VercelDomainConfigEdge'\n  cursor: Scalars['String']\n  node: VercelDomainConfig\n}\n\nexport type VercelDomainConfigsConnection = {\n  __typename?: 'VercelDomainConfigsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<VercelDomainConfigEdge>\n}\n\nexport type VercelProjectDomain = {\n  __typename?: 'VercelProjectDomain'\n  verified: Scalars['Boolean']\n}\n\nexport type VercelProjectDomainAggregateSelection = {\n  __typename?: 'VercelProjectDomainAggregateSelection'\n  count: Scalars['Int']\n}\n\nexport type VercelProjectDomainEdge = {\n  __typename?: 'VercelProjectDomainEdge'\n  cursor: Scalars['String']\n  node: VercelProjectDomain\n}\n\nexport type VercelProjectDomainsConnection = {\n  __typename?: 'VercelProjectDomainsConnection'\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n  edges: Array<VercelProjectDomainEdge>\n}\n\nexport type WithOwnerOwnerConnection = {\n  __typename?: 'WithOwnerOwnerConnection'\n  edges: Array<WithOwnerOwnerRelationship>\n  totalCount: Scalars['Int']\n  pageInfo: PageInfo\n}\n\nexport type WithOwnerOwnerRelationship = {\n  __typename?: 'WithOwnerOwnerRelationship'\n  cursor: Scalars['String']\n  node: User\n}\n\nexport type ActionTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ActionTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ActionTypeConnectOrCreateWhere = {\n  node: ActionTypeUniqueWhere\n}\n\nexport type ActionTypeConnectWhere = {\n  node: ActionTypeWhere\n}\n\nexport type ActionTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ActionTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ActionTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ActionTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type ActionTypeOptions = {\n  /** Specify one or more ActionTypeSort objects to sort ActionTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ActionTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ActionTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ActionTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ActionTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ActionTypeOwnerAggregateInput>\n  node?: InputMaybe<ActionTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ActionTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ActionTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ActionTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ActionTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ActionTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ActionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ActionTypeSort object. */\nexport type ActionTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type ActionTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type ActionTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ActionTypeWhere = {\n  OR?: InputMaybe<Array<ActionTypeWhere>>\n  AND?: InputMaybe<Array<ActionTypeWhere>>\n  NOT?: InputMaybe<ActionTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ActionTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type AnyActionWhere = {\n  ApiAction?: InputMaybe<ApiActionWhere>\n  CodeAction?: InputMaybe<CodeActionWhere>\n}\n\nexport type AnyTypeWhere = {\n  PrimitiveType?: InputMaybe<PrimitiveTypeWhere>\n  ArrayType?: InputMaybe<ArrayTypeWhere>\n  UnionType?: InputMaybe<UnionTypeWhere>\n  InterfaceType?: InputMaybe<InterfaceTypeWhere>\n  ElementType?: InputMaybe<ElementTypeWhere>\n  RenderPropType?: InputMaybe<RenderPropTypeWhere>\n  ReactNodeType?: InputMaybe<ReactNodeTypeWhere>\n  EnumType?: InputMaybe<EnumTypeWhere>\n  LambdaType?: InputMaybe<LambdaTypeWhere>\n  PageType?: InputMaybe<PageTypeWhere>\n  AppType?: InputMaybe<AppTypeWhere>\n  ActionType?: InputMaybe<ActionTypeWhere>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type ApiActionConfigAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ApiActionConfigAggregateInput>>\n  OR?: InputMaybe<Array<ApiActionConfigAggregateInput>>\n  NOT?: InputMaybe<ApiActionConfigAggregateInput>\n  node?: InputMaybe<ApiActionConfigNodeAggregationWhereInput>\n}\n\nexport type ApiActionConfigConnectFieldInput = {\n  where?: InputMaybe<PropConnectWhere>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ApiActionConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ApiActionConfigConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionConfigConnectionWhere>>\n  OR?: InputMaybe<Array<ApiActionConfigConnectionWhere>>\n  NOT?: InputMaybe<ApiActionConfigConnectionWhere>\n  node?: InputMaybe<PropWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PropWhere>\n}\n\nexport type ApiActionConfigConnectOrCreateFieldInput = {\n  where: PropConnectOrCreateWhere\n  onCreate: ApiActionConfigConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ApiActionConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ApiActionConfigDeleteFieldInput = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionConfigDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type ApiActionConfigFieldInput = {\n  create?: InputMaybe<ApiActionConfigCreateFieldInput>\n  connect?: InputMaybe<ApiActionConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n}\n\nexport type ApiActionConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionConfigNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ApiActionConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionConfigNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ApiActionConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ApiActionConfigUpdateFieldInput = {\n  where?: InputMaybe<ApiActionConfigConnectionWhere>\n  update?: InputMaybe<ApiActionConfigUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionConfigConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionConfigDisconnectFieldInput>\n  create?: InputMaybe<ApiActionConfigCreateFieldInput>\n  delete?: InputMaybe<ApiActionConfigDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n}\n\nexport type ApiActionConnectInput = {\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionConnectInput>\n  errorAction?: InputMaybe<ApiActionErrorActionConnectInput>\n  resource?: InputMaybe<ApiActionResourceConnectFieldInput>\n  config?: InputMaybe<ApiActionConfigConnectFieldInput>\n}\n\nexport type ApiActionConnectOrCreateInput = {\n  store?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n  element?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionConnectOrCreateInput>\n  errorAction?: InputMaybe<ApiActionErrorActionConnectOrCreateInput>\n  resource?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n  config?: InputMaybe<ApiActionConfigConnectOrCreateFieldInput>\n}\n\nexport type ApiActionConnectOrCreateWhere = {\n  node: ApiActionUniqueWhere\n}\n\nexport type ApiActionConnectWhere = {\n  node: ApiActionWhere\n}\n\nexport type ApiActionCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  type?: ActionKind\n  store?: InputMaybe<BaseActionStoreFieldInput>\n  element?: InputMaybe<BaseActionElementFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionCreateInput>\n  errorAction?: InputMaybe<ApiActionErrorActionCreateInput>\n  resource?: InputMaybe<ApiActionResourceFieldInput>\n  config?: InputMaybe<ApiActionConfigFieldInput>\n}\n\nexport type ApiActionDeleteInput = {\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionDeleteInput>\n  errorAction?: InputMaybe<ApiActionErrorActionDeleteInput>\n  resource?: InputMaybe<ApiActionResourceDeleteFieldInput>\n  config?: InputMaybe<ApiActionConfigDeleteFieldInput>\n}\n\nexport type ApiActionDisconnectInput = {\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionDisconnectInput>\n  errorAction?: InputMaybe<ApiActionErrorActionDisconnectInput>\n  resource?: InputMaybe<ApiActionResourceDisconnectFieldInput>\n  config?: InputMaybe<ApiActionConfigDisconnectFieldInput>\n}\n\nexport type ApiActionElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ApiActionElementAggregateInput>>\n  OR?: InputMaybe<Array<ApiActionElementAggregateInput>>\n  NOT?: InputMaybe<ApiActionElementAggregateInput>\n  node?: InputMaybe<ApiActionElementNodeAggregationWhereInput>\n}\n\nexport type ApiActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ApiActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ApiActionErrorActionApiActionConnectFieldInput = {\n  where?: InputMaybe<ApiActionConnectWhere>\n  connect?: InputMaybe<ApiActionConnectInput>\n}\n\nexport type ApiActionErrorActionApiActionConnectionWhere = {\n  OR?: InputMaybe<Array<ApiActionErrorActionApiActionConnectionWhere>>\n  AND?: InputMaybe<Array<ApiActionErrorActionApiActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  node?: InputMaybe<ApiActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ApiActionWhere>\n}\n\nexport type ApiActionErrorActionApiActionConnectOrCreateFieldInput = {\n  where: ApiActionConnectOrCreateWhere\n  onCreate: ApiActionErrorActionApiActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionErrorActionApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type ApiActionErrorActionApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type ApiActionErrorActionApiActionDeleteFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  delete?: InputMaybe<ApiActionDeleteInput>\n}\n\nexport type ApiActionErrorActionApiActionDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n}\n\nexport type ApiActionErrorActionApiActionFieldInput = {\n  create?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n  connect?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type ApiActionErrorActionApiActionUpdateFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n  update?: InputMaybe<ApiActionErrorActionApiActionUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionErrorActionApiActionDisconnectFieldInput>\n  create?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionErrorActionApiActionDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCodeActionConnectFieldInput = {\n  where?: InputMaybe<CodeActionConnectWhere>\n  connect?: InputMaybe<CodeActionConnectInput>\n}\n\nexport type ApiActionErrorActionCodeActionConnectionWhere = {\n  OR?: InputMaybe<Array<ApiActionErrorActionCodeActionConnectionWhere>>\n  AND?: InputMaybe<Array<ApiActionErrorActionCodeActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  node?: InputMaybe<CodeActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<CodeActionWhere>\n}\n\nexport type ApiActionErrorActionCodeActionConnectOrCreateFieldInput = {\n  where: CodeActionConnectOrCreateWhere\n  onCreate: ApiActionErrorActionCodeActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionErrorActionCodeActionConnectOrCreateFieldInputOnCreate = {\n  node: CodeActionOnCreateInput\n}\n\nexport type ApiActionErrorActionCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type ApiActionErrorActionCodeActionDeleteFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  delete?: InputMaybe<CodeActionDeleteInput>\n}\n\nexport type ApiActionErrorActionCodeActionDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n}\n\nexport type ApiActionErrorActionCodeActionFieldInput = {\n  create?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n  connect?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type ApiActionErrorActionCodeActionUpdateFieldInput = {\n  where?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  update?: InputMaybe<ApiActionErrorActionCodeActionUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionErrorActionCodeActionDisconnectFieldInput>\n  create?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionErrorActionCodeActionDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionConnectInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectFieldInput>\n}\n\nexport type ApiActionErrorActionConnectionWhere = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectionWhere>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectionWhere>\n}\n\nexport type ApiActionErrorActionConnectOrCreateInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionConnectOrCreateFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCreateFieldInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionCreateFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionCreateFieldInput>\n}\n\nexport type ApiActionErrorActionCreateInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionFieldInput>\n}\n\nexport type ApiActionErrorActionDeleteInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionDeleteFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionDeleteFieldInput>\n}\n\nexport type ApiActionErrorActionDisconnectInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionDisconnectFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionDisconnectFieldInput>\n}\n\nexport type ApiActionErrorActionUpdateInput = {\n  CodeAction?: InputMaybe<ApiActionErrorActionCodeActionUpdateFieldInput>\n  ApiAction?: InputMaybe<ApiActionErrorActionApiActionUpdateFieldInput>\n}\n\nexport type ApiActionOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  type?: ActionKind\n}\n\nexport type ApiActionOptions = {\n  /** Specify one or more ApiActionSort objects to sort ApiActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ApiActionSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ApiActionRelationInput = {\n  store?: InputMaybe<BaseActionStoreCreateFieldInput>\n  element?: InputMaybe<BaseActionElementCreateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionCreateFieldInput>\n  errorAction?: InputMaybe<ApiActionErrorActionCreateFieldInput>\n  resource?: InputMaybe<ApiActionResourceCreateFieldInput>\n  config?: InputMaybe<ApiActionConfigCreateFieldInput>\n}\n\nexport type ApiActionResourceAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ApiActionResourceAggregateInput>>\n  OR?: InputMaybe<Array<ApiActionResourceAggregateInput>>\n  NOT?: InputMaybe<ApiActionResourceAggregateInput>\n  node?: InputMaybe<ApiActionResourceNodeAggregationWhereInput>\n}\n\nexport type ApiActionResourceConnectFieldInput = {\n  where?: InputMaybe<ResourceConnectWhere>\n  connect?: InputMaybe<ResourceConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ApiActionResourceConnectionSort = {\n  node?: InputMaybe<ResourceSort>\n}\n\nexport type ApiActionResourceConnectionWhere = {\n  AND?: InputMaybe<Array<ApiActionResourceConnectionWhere>>\n  OR?: InputMaybe<Array<ApiActionResourceConnectionWhere>>\n  NOT?: InputMaybe<ApiActionResourceConnectionWhere>\n  node?: InputMaybe<ResourceWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ResourceWhere>\n}\n\nexport type ApiActionResourceConnectOrCreateFieldInput = {\n  where: ResourceConnectOrCreateWhere\n  onCreate: ApiActionResourceConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionResourceConnectOrCreateFieldInputOnCreate = {\n  node: ResourceOnCreateInput\n}\n\nexport type ApiActionResourceCreateFieldInput = {\n  node: ResourceCreateInput\n}\n\nexport type ApiActionResourceDeleteFieldInput = {\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n  delete?: InputMaybe<ResourceDeleteInput>\n}\n\nexport type ApiActionResourceDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n  disconnect?: InputMaybe<ResourceDisconnectInput>\n}\n\nexport type ApiActionResourceFieldInput = {\n  create?: InputMaybe<ApiActionResourceCreateFieldInput>\n  connect?: InputMaybe<ApiActionResourceConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n}\n\nexport type ApiActionResourceNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionResourceNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ApiActionResourceNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionResourceNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ApiActionResourceUpdateConnectionInput = {\n  node?: InputMaybe<ResourceUpdateInput>\n}\n\nexport type ApiActionResourceUpdateFieldInput = {\n  where?: InputMaybe<ApiActionResourceConnectionWhere>\n  update?: InputMaybe<ApiActionResourceUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionResourceConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionResourceDisconnectFieldInput>\n  create?: InputMaybe<ApiActionResourceCreateFieldInput>\n  delete?: InputMaybe<ApiActionResourceDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionResourceConnectOrCreateFieldInput>\n}\n\n/** Fields to sort ApiActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one ApiActionSort object. */\nexport type ApiActionSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type ApiActionStoreAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ApiActionStoreAggregateInput>>\n  OR?: InputMaybe<Array<ApiActionStoreAggregateInput>>\n  NOT?: InputMaybe<ApiActionStoreAggregateInput>\n  node?: InputMaybe<ApiActionStoreNodeAggregationWhereInput>\n}\n\nexport type ApiActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ApiActionStoreNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ApiActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ApiActionStoreNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ApiActionSuccessActionApiActionConnectFieldInput = {\n  where?: InputMaybe<ApiActionConnectWhere>\n  connect?: InputMaybe<ApiActionConnectInput>\n}\n\nexport type ApiActionSuccessActionApiActionConnectionWhere = {\n  OR?: InputMaybe<Array<ApiActionSuccessActionApiActionConnectionWhere>>\n  AND?: InputMaybe<Array<ApiActionSuccessActionApiActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  node?: InputMaybe<ApiActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ApiActionWhere>\n}\n\nexport type ApiActionSuccessActionApiActionConnectOrCreateFieldInput = {\n  where: ApiActionConnectOrCreateWhere\n  onCreate: ApiActionSuccessActionApiActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionSuccessActionApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type ApiActionSuccessActionApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type ApiActionSuccessActionApiActionDeleteFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  delete?: InputMaybe<ApiActionDeleteInput>\n}\n\nexport type ApiActionSuccessActionApiActionDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n}\n\nexport type ApiActionSuccessActionApiActionFieldInput = {\n  create?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n  connect?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type ApiActionSuccessActionApiActionUpdateFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n  update?: InputMaybe<ApiActionSuccessActionApiActionUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionSuccessActionApiActionDisconnectFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionSuccessActionApiActionDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCodeActionConnectFieldInput = {\n  where?: InputMaybe<CodeActionConnectWhere>\n  connect?: InputMaybe<CodeActionConnectInput>\n}\n\nexport type ApiActionSuccessActionCodeActionConnectionWhere = {\n  OR?: InputMaybe<Array<ApiActionSuccessActionCodeActionConnectionWhere>>\n  AND?: InputMaybe<Array<ApiActionSuccessActionCodeActionConnectionWhere>>\n  NOT?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  node?: InputMaybe<CodeActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<CodeActionWhere>\n}\n\nexport type ApiActionSuccessActionCodeActionConnectOrCreateFieldInput = {\n  where: CodeActionConnectOrCreateWhere\n  onCreate: ApiActionSuccessActionCodeActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type ApiActionSuccessActionCodeActionConnectOrCreateFieldInputOnCreate =\n  {\n    node: CodeActionOnCreateInput\n  }\n\nexport type ApiActionSuccessActionCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type ApiActionSuccessActionCodeActionDeleteFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  delete?: InputMaybe<CodeActionDeleteInput>\n}\n\nexport type ApiActionSuccessActionCodeActionDisconnectFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n}\n\nexport type ApiActionSuccessActionCodeActionFieldInput = {\n  create?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n  connect?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type ApiActionSuccessActionCodeActionUpdateFieldInput = {\n  where?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  update?: InputMaybe<ApiActionSuccessActionCodeActionUpdateConnectionInput>\n  connect?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n  disconnect?: InputMaybe<ApiActionSuccessActionCodeActionDisconnectFieldInput>\n  create?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n  delete?: InputMaybe<ApiActionSuccessActionCodeActionDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionConnectInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectFieldInput>\n}\n\nexport type ApiActionSuccessActionConnectionWhere = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectionWhere>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectionWhere>\n}\n\nexport type ApiActionSuccessActionConnectOrCreateInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionConnectOrCreateFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionConnectOrCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCreateFieldInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionCreateFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionCreateFieldInput>\n}\n\nexport type ApiActionSuccessActionCreateInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionFieldInput>\n}\n\nexport type ApiActionSuccessActionDeleteInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionDeleteFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionDeleteFieldInput>\n}\n\nexport type ApiActionSuccessActionDisconnectInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionDisconnectFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionDisconnectFieldInput>\n}\n\nexport type ApiActionSuccessActionUpdateInput = {\n  CodeAction?: InputMaybe<ApiActionSuccessActionCodeActionUpdateFieldInput>\n  ApiAction?: InputMaybe<ApiActionSuccessActionApiActionUpdateFieldInput>\n}\n\nexport type ApiActionUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ApiActionUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n  successAction?: InputMaybe<ApiActionSuccessActionUpdateInput>\n  errorAction?: InputMaybe<ApiActionErrorActionUpdateInput>\n  resource?: InputMaybe<ApiActionResourceUpdateFieldInput>\n  config?: InputMaybe<ApiActionConfigUpdateFieldInput>\n}\n\nexport type ApiActionWhere = {\n  OR?: InputMaybe<Array<ApiActionWhere>>\n  AND?: InputMaybe<Array<ApiActionWhere>>\n  NOT?: InputMaybe<ApiActionWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<ActionKind>>\n  store?: InputMaybe<StoreWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<ApiActionStoreAggregateInput>\n  element?: InputMaybe<ElementWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<ApiActionElementAggregateInput>\n  resource?: InputMaybe<ResourceWhere>\n  resource_NOT?: InputMaybe<ResourceWhere>\n  resourceAggregate?: InputMaybe<ApiActionResourceAggregateInput>\n  config?: InputMaybe<PropWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<ApiActionConfigAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  successActionConnection?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n  successActionConnection_NOT?: InputMaybe<ApiActionSuccessActionConnectionWhere>\n  errorActionConnection?: InputMaybe<ApiActionErrorActionConnectionWhere>\n  errorActionConnection_NOT?: InputMaybe<ApiActionErrorActionConnectionWhere>\n  resourceConnection?: InputMaybe<ApiActionResourceConnectionWhere>\n  resourceConnection_NOT?: InputMaybe<ApiActionResourceConnectionWhere>\n  configConnection?: InputMaybe<ApiActionConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<ApiActionConfigConnectionWhere>\n}\n\nexport type AppConnectInput = {\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  pages?: InputMaybe<Array<AppPagesConnectFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n}\n\nexport type AppConnectOrCreateInput = {\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  pages?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n}\n\nexport type AppConnectOrCreateWhere = {\n  node: AppUniqueWhere\n}\n\nexport type AppConnectWhere = {\n  node: AppWhere\n}\n\nexport type AppCreateInput = {\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  pages?: InputMaybe<AppPagesFieldInput>\n  domains?: InputMaybe<AppDomainsFieldInput>\n}\n\nexport type AppDeleteInput = {\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  pages?: InputMaybe<Array<AppPagesDeleteFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsDeleteFieldInput>>\n}\n\nexport type AppDisconnectInput = {\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  pages?: InputMaybe<Array<AppPagesDisconnectFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsDisconnectFieldInput>>\n}\n\nexport type AppDomainsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AppDomainsAggregateInput>>\n  OR?: InputMaybe<Array<AppDomainsAggregateInput>>\n  NOT?: InputMaybe<AppDomainsAggregateInput>\n  node?: InputMaybe<AppDomainsNodeAggregationWhereInput>\n}\n\nexport type AppDomainsConnectFieldInput = {\n  where?: InputMaybe<DomainConnectWhere>\n  connect?: InputMaybe<Array<DomainConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AppDomainsConnectionSort = {\n  node?: InputMaybe<DomainSort>\n}\n\nexport type AppDomainsConnectionWhere = {\n  AND?: InputMaybe<Array<AppDomainsConnectionWhere>>\n  OR?: InputMaybe<Array<AppDomainsConnectionWhere>>\n  NOT?: InputMaybe<AppDomainsConnectionWhere>\n  node?: InputMaybe<DomainWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<DomainWhere>\n}\n\nexport type AppDomainsConnectOrCreateFieldInput = {\n  where: DomainConnectOrCreateWhere\n  onCreate: AppDomainsConnectOrCreateFieldInputOnCreate\n}\n\nexport type AppDomainsConnectOrCreateFieldInputOnCreate = {\n  node: DomainOnCreateInput\n}\n\nexport type AppDomainsCreateFieldInput = {\n  node: DomainCreateInput\n}\n\nexport type AppDomainsDeleteFieldInput = {\n  where?: InputMaybe<AppDomainsConnectionWhere>\n  delete?: InputMaybe<DomainDeleteInput>\n}\n\nexport type AppDomainsDisconnectFieldInput = {\n  where?: InputMaybe<AppDomainsConnectionWhere>\n  disconnect?: InputMaybe<DomainDisconnectInput>\n}\n\nexport type AppDomainsFieldInput = {\n  create?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n  connect?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n}\n\nexport type AppDomainsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppDomainsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AppDomainsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppDomainsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppDomainsUpdateConnectionInput = {\n  node?: InputMaybe<DomainUpdateInput>\n}\n\nexport type AppDomainsUpdateFieldInput = {\n  where?: InputMaybe<AppDomainsConnectionWhere>\n  update?: InputMaybe<AppDomainsUpdateConnectionInput>\n  connect?: InputMaybe<Array<AppDomainsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<AppDomainsDisconnectFieldInput>>\n  create?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n  delete?: InputMaybe<Array<AppDomainsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppDomainsConnectOrCreateFieldInput>>\n}\n\nexport type AppOnCreateInput = {\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n}\n\nexport type AppOptions = {\n  /** Specify one or more AppSort objects to sort Apps by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AppSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AppOwnerAggregateInput>>\n  OR?: InputMaybe<Array<AppOwnerAggregateInput>>\n  NOT?: InputMaybe<AppOwnerAggregateInput>\n  node?: InputMaybe<AppOwnerNodeAggregationWhereInput>\n}\n\nexport type AppOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AppOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppPagesAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AppPagesAggregateInput>>\n  OR?: InputMaybe<Array<AppPagesAggregateInput>>\n  NOT?: InputMaybe<AppPagesAggregateInput>\n  node?: InputMaybe<AppPagesNodeAggregationWhereInput>\n}\n\nexport type AppPagesConnectFieldInput = {\n  where?: InputMaybe<PageConnectWhere>\n  connect?: InputMaybe<Array<PageConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AppPagesConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type AppPagesConnectionWhere = {\n  AND?: InputMaybe<Array<AppPagesConnectionWhere>>\n  OR?: InputMaybe<Array<AppPagesConnectionWhere>>\n  NOT?: InputMaybe<AppPagesConnectionWhere>\n  node?: InputMaybe<PageWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PageWhere>\n}\n\nexport type AppPagesConnectOrCreateFieldInput = {\n  where: PageConnectOrCreateWhere\n  onCreate: AppPagesConnectOrCreateFieldInputOnCreate\n}\n\nexport type AppPagesConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type AppPagesCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type AppPagesDeleteFieldInput = {\n  where?: InputMaybe<AppPagesConnectionWhere>\n  delete?: InputMaybe<PageDeleteInput>\n}\n\nexport type AppPagesDisconnectFieldInput = {\n  where?: InputMaybe<AppPagesConnectionWhere>\n  disconnect?: InputMaybe<PageDisconnectInput>\n}\n\nexport type AppPagesFieldInput = {\n  create?: InputMaybe<Array<AppPagesCreateFieldInput>>\n  connect?: InputMaybe<Array<AppPagesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n}\n\nexport type AppPagesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppPagesNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AppPagesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppPagesNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppPagesUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type AppPagesUpdateFieldInput = {\n  where?: InputMaybe<AppPagesConnectionWhere>\n  update?: InputMaybe<AppPagesUpdateConnectionInput>\n  connect?: InputMaybe<Array<AppPagesConnectFieldInput>>\n  disconnect?: InputMaybe<Array<AppPagesDisconnectFieldInput>>\n  create?: InputMaybe<Array<AppPagesCreateFieldInput>>\n  delete?: InputMaybe<Array<AppPagesDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AppPagesConnectOrCreateFieldInput>>\n}\n\nexport type AppRelationInput = {\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  pages?: InputMaybe<Array<AppPagesCreateFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsCreateFieldInput>>\n}\n\n/** Fields to sort Apps by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppSort object. */\nexport type AppSort = {\n  id?: InputMaybe<SortDirection>\n  _compoundName?: InputMaybe<SortDirection>\n}\n\nexport type AppTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type AppTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type AppTypeConnectOrCreateWhere = {\n  node: AppTypeUniqueWhere\n}\n\nexport type AppTypeConnectWhere = {\n  node: AppTypeWhere\n}\n\nexport type AppTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type AppTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type AppTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type AppTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type AppTypeOptions = {\n  /** Specify one or more AppTypeSort objects to sort AppTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AppTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AppTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<AppTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<AppTypeOwnerAggregateInput>\n  node?: InputMaybe<AppTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type AppTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AppTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AppTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AppTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AppTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort AppTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppTypeSort object. */\nexport type AppTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type AppTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type AppTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type AppTypeWhere = {\n  OR?: InputMaybe<Array<AppTypeWhere>>\n  AND?: InputMaybe<Array<AppTypeWhere>>\n  NOT?: InputMaybe<AppTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AppTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type AppUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n}\n\nexport type AppUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  pages?: InputMaybe<Array<AppPagesUpdateFieldInput>>\n  domains?: InputMaybe<Array<AppDomainsUpdateFieldInput>>\n}\n\nexport type AppWhere = {\n  OR?: InputMaybe<Array<AppWhere>>\n  AND?: InputMaybe<Array<AppWhere>>\n  NOT?: InputMaybe<AppWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT?: InputMaybe<Scalars['String']>\n  _compoundName_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  _compoundName_MATCHES?: InputMaybe<Scalars['String']>\n  _compoundName_CONTAINS?: InputMaybe<Scalars['String']>\n  _compoundName_STARTS_WITH?: InputMaybe<Scalars['String']>\n  _compoundName_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AppOwnerAggregateInput>\n  /** @deprecated Use `pages_SOME` instead. */\n  pages?: InputMaybe<PageWhere>\n  /** @deprecated Use `pages_NONE` instead. */\n  pages_NOT?: InputMaybe<PageWhere>\n  pagesAggregate?: InputMaybe<AppPagesAggregateInput>\n  /** Return Apps where all of the related Pages match this filter */\n  pages_ALL?: InputMaybe<PageWhere>\n  /** Return Apps where none of the related Pages match this filter */\n  pages_NONE?: InputMaybe<PageWhere>\n  /** Return Apps where one of the related Pages match this filter */\n  pages_SINGLE?: InputMaybe<PageWhere>\n  /** Return Apps where some of the related Pages match this filter */\n  pages_SOME?: InputMaybe<PageWhere>\n  /** @deprecated Use `domains_SOME` instead. */\n  domains?: InputMaybe<DomainWhere>\n  /** @deprecated Use `domains_NONE` instead. */\n  domains_NOT?: InputMaybe<DomainWhere>\n  domainsAggregate?: InputMaybe<AppDomainsAggregateInput>\n  /** Return Apps where all of the related Domains match this filter */\n  domains_ALL?: InputMaybe<DomainWhere>\n  /** Return Apps where none of the related Domains match this filter */\n  domains_NONE?: InputMaybe<DomainWhere>\n  /** Return Apps where one of the related Domains match this filter */\n  domains_SINGLE?: InputMaybe<DomainWhere>\n  /** Return Apps where some of the related Domains match this filter */\n  domains_SOME?: InputMaybe<DomainWhere>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  /** @deprecated Use `pagesConnection_SOME` instead. */\n  pagesConnection?: InputMaybe<AppPagesConnectionWhere>\n  /** @deprecated Use `pagesConnection_NONE` instead. */\n  pagesConnection_NOT?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where all of the related AppPagesConnections match this filter */\n  pagesConnection_ALL?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where none of the related AppPagesConnections match this filter */\n  pagesConnection_NONE?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where one of the related AppPagesConnections match this filter */\n  pagesConnection_SINGLE?: InputMaybe<AppPagesConnectionWhere>\n  /** Return Apps where some of the related AppPagesConnections match this filter */\n  pagesConnection_SOME?: InputMaybe<AppPagesConnectionWhere>\n  /** @deprecated Use `domainsConnection_SOME` instead. */\n  domainsConnection?: InputMaybe<AppDomainsConnectionWhere>\n  /** @deprecated Use `domainsConnection_NONE` instead. */\n  domainsConnection_NOT?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where all of the related AppDomainsConnections match this filter */\n  domainsConnection_ALL?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where none of the related AppDomainsConnections match this filter */\n  domainsConnection_NONE?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where one of the related AppDomainsConnections match this filter */\n  domainsConnection_SINGLE?: InputMaybe<AppDomainsConnectionWhere>\n  /** Return Apps where some of the related AppDomainsConnections match this filter */\n  domainsConnection_SOME?: InputMaybe<AppDomainsConnectionWhere>\n}\n\nexport type ArrayTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n}\n\nexport type ArrayTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ArrayTypeConnectOrCreateWhere = {\n  node: ArrayTypeUniqueWhere\n}\n\nexport type ArrayTypeConnectWhere = {\n  node: ArrayTypeWhere\n}\n\nexport type ArrayTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  fieldRefs?: InputMaybe<ArrayTypeFieldRefsFieldInput>\n  itemType?: InputMaybe<ArrayTypeItemTypeFieldInput>\n}\n\nexport type ArrayTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsDeleteFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeDeleteFieldInput>\n}\n\nexport type ArrayTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsDisconnectFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeDisconnectFieldInput>\n}\n\nexport type ArrayTypeFieldRefsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsAggregateInput>>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsAggregateInput>\n  node?: InputMaybe<ArrayTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type ArrayTypeFieldRefsConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ArrayTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type ArrayTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsConnectionWhere>>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type ArrayTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type ArrayTypeFieldRefsDeleteFieldInput = {\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type ArrayTypeFieldRefsDisconnectFieldInput = {\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type ArrayTypeFieldRefsFieldInput = {\n  create?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n  connect?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n}\n\nexport type ArrayTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ArrayTypeFieldRefsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ArrayTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ArrayTypeFieldRefsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ArrayTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type ArrayTypeFieldRefsUpdateFieldInput = {\n  where?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  update?: InputMaybe<ArrayTypeFieldRefsUpdateConnectionInput>\n  connect?: InputMaybe<Array<ArrayTypeFieldRefsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<ArrayTypeFieldRefsDisconnectFieldInput>>\n  create?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<ArrayTypeFieldRefsDeleteFieldInput>>\n}\n\nexport type ArrayTypeItemTypeConnectFieldInput = {\n  connect?: InputMaybe<IBaseTypeConnectInput>\n  where?: InputMaybe<IBaseTypeConnectWhere>\n}\n\nexport type ArrayTypeItemTypeConnectionSort = {\n  node?: InputMaybe<IBaseTypeSort>\n}\n\nexport type ArrayTypeItemTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ArrayTypeItemTypeConnectionWhere>>\n  OR?: InputMaybe<Array<ArrayTypeItemTypeConnectionWhere>>\n  NOT?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  node?: InputMaybe<IBaseTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<IBaseTypeWhere>\n}\n\nexport type ArrayTypeItemTypeCreateFieldInput = {\n  node: IBaseTypeCreateInput\n}\n\nexport type ArrayTypeItemTypeDeleteFieldInput = {\n  delete?: InputMaybe<IBaseTypeDeleteInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeItemTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<IBaseTypeDisconnectInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeItemTypeFieldInput = {\n  create?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n  connect?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n}\n\nexport type ArrayTypeItemTypeUpdateConnectionInput = {\n  node?: InputMaybe<IBaseTypeUpdateInput>\n}\n\nexport type ArrayTypeItemTypeUpdateFieldInput = {\n  connect?: InputMaybe<ArrayTypeItemTypeConnectFieldInput>\n  create?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n  delete?: InputMaybe<ArrayTypeItemTypeDeleteFieldInput>\n  disconnect?: InputMaybe<ArrayTypeItemTypeDisconnectFieldInput>\n  update?: InputMaybe<ArrayTypeItemTypeUpdateConnectionInput>\n  where?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type ArrayTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type ArrayTypeOptions = {\n  /** Specify one or more ArrayTypeSort objects to sort ArrayTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ArrayTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ArrayTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ArrayTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ArrayTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ArrayTypeOwnerAggregateInput>\n  node?: InputMaybe<ArrayTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ArrayTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ArrayTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ArrayTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ArrayTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ArrayTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsCreateFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeCreateFieldInput>\n}\n\n/** Fields to sort ArrayTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ArrayTypeSort object. */\nexport type ArrayTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type ArrayTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ArrayTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  fieldRefs?: InputMaybe<Array<ArrayTypeFieldRefsUpdateFieldInput>>\n  itemType?: InputMaybe<ArrayTypeItemTypeUpdateFieldInput>\n}\n\nexport type ArrayTypeWhere = {\n  OR?: InputMaybe<Array<ArrayTypeWhere>>\n  AND?: InputMaybe<Array<ArrayTypeWhere>>\n  NOT?: InputMaybe<ArrayTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ArrayTypeOwnerAggregateInput>\n  /** @deprecated Use `fieldRefs_SOME` instead. */\n  fieldRefs?: InputMaybe<FieldWhere>\n  /** @deprecated Use `fieldRefs_NONE` instead. */\n  fieldRefs_NOT?: InputMaybe<FieldWhere>\n  fieldRefsAggregate?: InputMaybe<ArrayTypeFieldRefsAggregateInput>\n  /** Return ArrayTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return ArrayTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_SOME` instead. */\n  fieldRefsConnection?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_NONE` instead. */\n  fieldRefsConnection_NOT?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where all of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where none of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where one of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  /** Return ArrayTypes where some of the related ArrayTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<ArrayTypeFieldRefsConnectionWhere>\n  itemTypeConnection?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n  itemTypeConnection_NOT?: InputMaybe<ArrayTypeItemTypeConnectionWhere>\n}\n\nexport type AtomApiAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AtomApiAggregateInput>>\n  OR?: InputMaybe<Array<AtomApiAggregateInput>>\n  NOT?: InputMaybe<AtomApiAggregateInput>\n  node?: InputMaybe<AtomApiNodeAggregationWhereInput>\n}\n\nexport type AtomApiConnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AtomApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type AtomApiConnectionWhere = {\n  AND?: InputMaybe<Array<AtomApiConnectionWhere>>\n  OR?: InputMaybe<Array<AtomApiConnectionWhere>>\n  NOT?: InputMaybe<AtomApiConnectionWhere>\n  node?: InputMaybe<InterfaceTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type AtomApiConnectOrCreateFieldInput = {\n  where: InterfaceTypeConnectOrCreateWhere\n  onCreate: AtomApiConnectOrCreateFieldInputOnCreate\n}\n\nexport type AtomApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type AtomApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type AtomApiDeleteFieldInput = {\n  where?: InputMaybe<AtomApiConnectionWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type AtomApiDisconnectFieldInput = {\n  where?: InputMaybe<AtomApiConnectionWhere>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n}\n\nexport type AtomApiFieldInput = {\n  create?: InputMaybe<AtomApiCreateFieldInput>\n  connect?: InputMaybe<AtomApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n}\n\nexport type AtomApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomApiNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AtomApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomApiNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type AtomApiUpdateFieldInput = {\n  where?: InputMaybe<AtomApiConnectionWhere>\n  update?: InputMaybe<AtomApiUpdateConnectionInput>\n  connect?: InputMaybe<AtomApiConnectFieldInput>\n  disconnect?: InputMaybe<AtomApiDisconnectFieldInput>\n  create?: InputMaybe<AtomApiCreateFieldInput>\n  delete?: InputMaybe<AtomApiDeleteFieldInput>\n  connectOrCreate?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n}\n\nexport type AtomConnectInput = {\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  tags?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n  api?: InputMaybe<AtomApiConnectFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n}\n\nexport type AtomConnectOrCreateInput = {\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  tags?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n  api?: InputMaybe<AtomApiConnectOrCreateFieldInput>\n  requiredParents?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n  suggestedChildren?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n}\n\nexport type AtomConnectOrCreateWhere = {\n  node: AtomUniqueWhere\n}\n\nexport type AtomConnectWhere = {\n  node: AtomWhere\n}\n\nexport type AtomCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  icon?: InputMaybe<Scalars['String']>\n  externalJsSource?: InputMaybe<Scalars['String']>\n  externalCssSource?: InputMaybe<Scalars['String']>\n  externalSourceType?: InputMaybe<Scalars['String']>\n  type: AtomType\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  tags?: InputMaybe<AtomTagsFieldInput>\n  api?: InputMaybe<AtomApiFieldInput>\n  requiredParents?: InputMaybe<AtomRequiredParentsFieldInput>\n  suggestedChildren?: InputMaybe<AtomSuggestedChildrenFieldInput>\n}\n\nexport type AtomDeleteInput = {\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  tags?: InputMaybe<Array<AtomTagsDeleteFieldInput>>\n  api?: InputMaybe<AtomApiDeleteFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsDeleteFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenDeleteFieldInput>>\n}\n\nexport type AtomDisconnectInput = {\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  tags?: InputMaybe<Array<AtomTagsDisconnectFieldInput>>\n  api?: InputMaybe<AtomApiDisconnectFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsDisconnectFieldInput>>\n  suggestedChildren?: InputMaybe<\n    Array<AtomSuggestedChildrenDisconnectFieldInput>\n  >\n}\n\nexport type AtomOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  icon?: InputMaybe<Scalars['String']>\n  externalJsSource?: InputMaybe<Scalars['String']>\n  externalCssSource?: InputMaybe<Scalars['String']>\n  externalSourceType?: InputMaybe<Scalars['String']>\n  type: AtomType\n}\n\nexport type AtomOptions = {\n  /** Specify one or more AtomSort objects to sort Atoms by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<AtomSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AtomOwnerAggregateInput>>\n  OR?: InputMaybe<Array<AtomOwnerAggregateInput>>\n  NOT?: InputMaybe<AtomOwnerAggregateInput>\n  node?: InputMaybe<AtomOwnerNodeAggregationWhereInput>\n}\n\nexport type AtomOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AtomOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomRelationInput = {\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  tags?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n  api?: InputMaybe<AtomApiCreateFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n}\n\nexport type AtomRequiredParentsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AtomRequiredParentsAggregateInput>>\n  OR?: InputMaybe<Array<AtomRequiredParentsAggregateInput>>\n  NOT?: InputMaybe<AtomRequiredParentsAggregateInput>\n  node?: InputMaybe<AtomRequiredParentsNodeAggregationWhereInput>\n}\n\nexport type AtomRequiredParentsConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AtomRequiredParentsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type AtomRequiredParentsConnectionWhere = {\n  AND?: InputMaybe<Array<AtomRequiredParentsConnectionWhere>>\n  OR?: InputMaybe<Array<AtomRequiredParentsConnectionWhere>>\n  NOT?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type AtomRequiredParentsConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: AtomRequiredParentsConnectOrCreateFieldInputOnCreate\n}\n\nexport type AtomRequiredParentsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type AtomRequiredParentsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type AtomRequiredParentsDeleteFieldInput = {\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type AtomRequiredParentsDisconnectFieldInput = {\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type AtomRequiredParentsFieldInput = {\n  create?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n  connect?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n}\n\nexport type AtomRequiredParentsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomRequiredParentsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AtomRequiredParentsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomRequiredParentsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomRequiredParentsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type AtomRequiredParentsUpdateFieldInput = {\n  where?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  update?: InputMaybe<AtomRequiredParentsUpdateConnectionInput>\n  connect?: InputMaybe<Array<AtomRequiredParentsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<AtomRequiredParentsDisconnectFieldInput>>\n  create?: InputMaybe<Array<AtomRequiredParentsCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomRequiredParentsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomRequiredParentsConnectOrCreateFieldInput>\n  >\n}\n\n/** Fields to sort Atoms by. The order in which sorts are applied is not guaranteed when specifying many fields in one AtomSort object. */\nexport type AtomSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  icon?: InputMaybe<SortDirection>\n  externalJsSource?: InputMaybe<SortDirection>\n  externalCssSource?: InputMaybe<SortDirection>\n  externalSourceType?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type AtomSuggestedChildrenAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AtomSuggestedChildrenAggregateInput>>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenAggregateInput>>\n  NOT?: InputMaybe<AtomSuggestedChildrenAggregateInput>\n  node?: InputMaybe<AtomSuggestedChildrenNodeAggregationWhereInput>\n}\n\nexport type AtomSuggestedChildrenConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AtomSuggestedChildrenConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type AtomSuggestedChildrenConnectionWhere = {\n  AND?: InputMaybe<Array<AtomSuggestedChildrenConnectionWhere>>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenConnectionWhere>>\n  NOT?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type AtomSuggestedChildrenConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: AtomSuggestedChildrenConnectOrCreateFieldInputOnCreate\n}\n\nexport type AtomSuggestedChildrenConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type AtomSuggestedChildrenCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type AtomSuggestedChildrenDeleteFieldInput = {\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type AtomSuggestedChildrenDisconnectFieldInput = {\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type AtomSuggestedChildrenFieldInput = {\n  create?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n  connect?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n}\n\nexport type AtomSuggestedChildrenNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomSuggestedChildrenNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AtomSuggestedChildrenNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomSuggestedChildrenNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomSuggestedChildrenUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type AtomSuggestedChildrenUpdateFieldInput = {\n  where?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  update?: InputMaybe<AtomSuggestedChildrenUpdateConnectionInput>\n  connect?: InputMaybe<Array<AtomSuggestedChildrenConnectFieldInput>>\n  disconnect?: InputMaybe<Array<AtomSuggestedChildrenDisconnectFieldInput>>\n  create?: InputMaybe<Array<AtomSuggestedChildrenCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomSuggestedChildrenDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<AtomSuggestedChildrenConnectOrCreateFieldInput>\n  >\n}\n\nexport type AtomTagsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<AtomTagsAggregateInput>>\n  OR?: InputMaybe<Array<AtomTagsAggregateInput>>\n  NOT?: InputMaybe<AtomTagsAggregateInput>\n  node?: InputMaybe<AtomTagsNodeAggregationWhereInput>\n}\n\nexport type AtomTagsConnectFieldInput = {\n  where?: InputMaybe<TagConnectWhere>\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type AtomTagsConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type AtomTagsConnectionWhere = {\n  AND?: InputMaybe<Array<AtomTagsConnectionWhere>>\n  OR?: InputMaybe<Array<AtomTagsConnectionWhere>>\n  NOT?: InputMaybe<AtomTagsConnectionWhere>\n  node?: InputMaybe<TagWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<TagWhere>\n}\n\nexport type AtomTagsConnectOrCreateFieldInput = {\n  where: TagConnectOrCreateWhere\n  onCreate: AtomTagsConnectOrCreateFieldInputOnCreate\n}\n\nexport type AtomTagsConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type AtomTagsCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type AtomTagsDeleteFieldInput = {\n  where?: InputMaybe<AtomTagsConnectionWhere>\n  delete?: InputMaybe<TagDeleteInput>\n}\n\nexport type AtomTagsDisconnectFieldInput = {\n  where?: InputMaybe<AtomTagsConnectionWhere>\n  disconnect?: InputMaybe<TagDisconnectInput>\n}\n\nexport type AtomTagsFieldInput = {\n  create?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n  connect?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n}\n\nexport type AtomTagsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<AtomTagsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<AtomTagsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<AtomTagsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type AtomTagsUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type AtomTagsUpdateFieldInput = {\n  where?: InputMaybe<AtomTagsConnectionWhere>\n  update?: InputMaybe<AtomTagsUpdateConnectionInput>\n  connect?: InputMaybe<Array<AtomTagsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<AtomTagsDisconnectFieldInput>>\n  create?: InputMaybe<Array<AtomTagsCreateFieldInput>>\n  delete?: InputMaybe<Array<AtomTagsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<AtomTagsConnectOrCreateFieldInput>>\n}\n\nexport type AtomUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  externalSourceType?: InputMaybe<Scalars['String']>\n}\n\nexport type AtomUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  icon?: InputMaybe<Scalars['String']>\n  externalJsSource?: InputMaybe<Scalars['String']>\n  externalCssSource?: InputMaybe<Scalars['String']>\n  externalSourceType?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<AtomType>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  tags?: InputMaybe<Array<AtomTagsUpdateFieldInput>>\n  api?: InputMaybe<AtomApiUpdateFieldInput>\n  requiredParents?: InputMaybe<Array<AtomRequiredParentsUpdateFieldInput>>\n  suggestedChildren?: InputMaybe<Array<AtomSuggestedChildrenUpdateFieldInput>>\n}\n\nexport type AtomWhere = {\n  OR?: InputMaybe<Array<AtomWhere>>\n  AND?: InputMaybe<Array<AtomWhere>>\n  NOT?: InputMaybe<AtomWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  icon?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  icon_NOT?: InputMaybe<Scalars['String']>\n  icon_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  icon_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  icon_MATCHES?: InputMaybe<Scalars['String']>\n  icon_CONTAINS?: InputMaybe<Scalars['String']>\n  icon_STARTS_WITH?: InputMaybe<Scalars['String']>\n  icon_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  icon_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  icon_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  icon_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  externalJsSource?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalJsSource_NOT?: InputMaybe<Scalars['String']>\n  externalJsSource_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalJsSource_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  externalJsSource_MATCHES?: InputMaybe<Scalars['String']>\n  externalJsSource_CONTAINS?: InputMaybe<Scalars['String']>\n  externalJsSource_STARTS_WITH?: InputMaybe<Scalars['String']>\n  externalJsSource_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalJsSource_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalJsSource_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalJsSource_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  externalCssSource?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalCssSource_NOT?: InputMaybe<Scalars['String']>\n  externalCssSource_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalCssSource_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  externalCssSource_MATCHES?: InputMaybe<Scalars['String']>\n  externalCssSource_CONTAINS?: InputMaybe<Scalars['String']>\n  externalCssSource_STARTS_WITH?: InputMaybe<Scalars['String']>\n  externalCssSource_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalCssSource_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalCssSource_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalCssSource_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  externalSourceType?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalSourceType_NOT?: InputMaybe<Scalars['String']>\n  externalSourceType_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalSourceType_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  externalSourceType_MATCHES?: InputMaybe<Scalars['String']>\n  externalSourceType_CONTAINS?: InputMaybe<Scalars['String']>\n  externalSourceType_STARTS_WITH?: InputMaybe<Scalars['String']>\n  externalSourceType_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalSourceType_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalSourceType_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  externalSourceType_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<AtomType>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<AtomType>\n  type_IN?: InputMaybe<Array<AtomType>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<AtomType>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<AtomOwnerAggregateInput>\n  /** @deprecated Use `tags_SOME` instead. */\n  tags?: InputMaybe<TagWhere>\n  /** @deprecated Use `tags_NONE` instead. */\n  tags_NOT?: InputMaybe<TagWhere>\n  tagsAggregate?: InputMaybe<AtomTagsAggregateInput>\n  /** Return Atoms where all of the related Tags match this filter */\n  tags_ALL?: InputMaybe<TagWhere>\n  /** Return Atoms where none of the related Tags match this filter */\n  tags_NONE?: InputMaybe<TagWhere>\n  /** Return Atoms where one of the related Tags match this filter */\n  tags_SINGLE?: InputMaybe<TagWhere>\n  /** Return Atoms where some of the related Tags match this filter */\n  tags_SOME?: InputMaybe<TagWhere>\n  api?: InputMaybe<InterfaceTypeWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<AtomApiAggregateInput>\n  /** @deprecated Use `requiredParents_SOME` instead. */\n  requiredParents?: InputMaybe<AtomWhere>\n  /** @deprecated Use `requiredParents_NONE` instead. */\n  requiredParents_NOT?: InputMaybe<AtomWhere>\n  requiredParentsAggregate?: InputMaybe<AtomRequiredParentsAggregateInput>\n  /** Return Atoms where all of the related Atoms match this filter */\n  requiredParents_ALL?: InputMaybe<AtomWhere>\n  /** Return Atoms where none of the related Atoms match this filter */\n  requiredParents_NONE?: InputMaybe<AtomWhere>\n  /** Return Atoms where one of the related Atoms match this filter */\n  requiredParents_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Atoms where some of the related Atoms match this filter */\n  requiredParents_SOME?: InputMaybe<AtomWhere>\n  /** @deprecated Use `suggestedChildren_SOME` instead. */\n  suggestedChildren?: InputMaybe<AtomWhere>\n  /** @deprecated Use `suggestedChildren_NONE` instead. */\n  suggestedChildren_NOT?: InputMaybe<AtomWhere>\n  suggestedChildrenAggregate?: InputMaybe<AtomSuggestedChildrenAggregateInput>\n  /** Return Atoms where all of the related Atoms match this filter */\n  suggestedChildren_ALL?: InputMaybe<AtomWhere>\n  /** Return Atoms where none of the related Atoms match this filter */\n  suggestedChildren_NONE?: InputMaybe<AtomWhere>\n  /** Return Atoms where one of the related Atoms match this filter */\n  suggestedChildren_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Atoms where some of the related Atoms match this filter */\n  suggestedChildren_SOME?: InputMaybe<AtomWhere>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  /** @deprecated Use `tagsConnection_SOME` instead. */\n  tagsConnection?: InputMaybe<AtomTagsConnectionWhere>\n  /** @deprecated Use `tagsConnection_NONE` instead. */\n  tagsConnection_NOT?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where all of the related AtomTagsConnections match this filter */\n  tagsConnection_ALL?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where none of the related AtomTagsConnections match this filter */\n  tagsConnection_NONE?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where one of the related AtomTagsConnections match this filter */\n  tagsConnection_SINGLE?: InputMaybe<AtomTagsConnectionWhere>\n  /** Return Atoms where some of the related AtomTagsConnections match this filter */\n  tagsConnection_SOME?: InputMaybe<AtomTagsConnectionWhere>\n  apiConnection?: InputMaybe<AtomApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<AtomApiConnectionWhere>\n  /** @deprecated Use `requiredParentsConnection_SOME` instead. */\n  requiredParentsConnection?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** @deprecated Use `requiredParentsConnection_NONE` instead. */\n  requiredParentsConnection_NOT?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where all of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_ALL?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where none of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_NONE?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where one of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_SINGLE?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** Return Atoms where some of the related AtomRequiredParentsConnections match this filter */\n  requiredParentsConnection_SOME?: InputMaybe<AtomRequiredParentsConnectionWhere>\n  /** @deprecated Use `suggestedChildrenConnection_SOME` instead. */\n  suggestedChildrenConnection?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** @deprecated Use `suggestedChildrenConnection_NONE` instead. */\n  suggestedChildrenConnection_NOT?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where all of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_ALL?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where none of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_NONE?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where one of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_SINGLE?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n  /** Return Atoms where some of the related AtomSuggestedChildrenConnections match this filter */\n  suggestedChildrenConnection_SOME?: InputMaybe<AtomSuggestedChildrenConnectionWhere>\n}\n\nexport type BaseActionConnectInput = {\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n  _on?: InputMaybe<BaseActionImplementationsConnectInput>\n}\n\nexport type BaseActionConnectWhere = {\n  node: BaseActionWhere\n}\n\nexport type BaseActionCreateInput = {\n  CodeAction?: InputMaybe<CodeActionCreateInput>\n  ApiAction?: InputMaybe<ApiActionCreateInput>\n}\n\nexport type BaseActionDeleteInput = {\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n  _on?: InputMaybe<BaseActionImplementationsDeleteInput>\n}\n\nexport type BaseActionDisconnectInput = {\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  _on?: InputMaybe<BaseActionImplementationsDisconnectInput>\n}\n\nexport type BaseActionElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<BaseActionElementAggregateInput>>\n  OR?: InputMaybe<Array<BaseActionElementAggregateInput>>\n  NOT?: InputMaybe<BaseActionElementAggregateInput>\n  node?: InputMaybe<BaseActionElementNodeAggregationWhereInput>\n}\n\nexport type BaseActionElementConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type BaseActionElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type BaseActionElementConnectionWhere = {\n  AND?: InputMaybe<Array<BaseActionElementConnectionWhere>>\n  OR?: InputMaybe<Array<BaseActionElementConnectionWhere>>\n  NOT?: InputMaybe<BaseActionElementConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type BaseActionElementConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: BaseActionElementConnectOrCreateFieldInputOnCreate\n}\n\nexport type BaseActionElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type BaseActionElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type BaseActionElementDeleteFieldInput = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type BaseActionElementDisconnectFieldInput = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type BaseActionElementFieldInput = {\n  create?: InputMaybe<BaseActionElementCreateFieldInput>\n  connect?: InputMaybe<BaseActionElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n}\n\nexport type BaseActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseActionElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<BaseActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseActionElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type BaseActionElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type BaseActionElementUpdateFieldInput = {\n  where?: InputMaybe<BaseActionElementConnectionWhere>\n  update?: InputMaybe<BaseActionElementUpdateConnectionInput>\n  connect?: InputMaybe<BaseActionElementConnectFieldInput>\n  disconnect?: InputMaybe<BaseActionElementDisconnectFieldInput>\n  create?: InputMaybe<BaseActionElementCreateFieldInput>\n  delete?: InputMaybe<BaseActionElementDeleteFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n}\n\nexport type BaseActionImplementationsConnectInput = {\n  CodeAction?: InputMaybe<Array<CodeActionConnectInput>>\n  ApiAction?: InputMaybe<Array<ApiActionConnectInput>>\n}\n\nexport type BaseActionImplementationsDeleteInput = {\n  CodeAction?: InputMaybe<Array<CodeActionDeleteInput>>\n  ApiAction?: InputMaybe<Array<ApiActionDeleteInput>>\n}\n\nexport type BaseActionImplementationsDisconnectInput = {\n  CodeAction?: InputMaybe<Array<CodeActionDisconnectInput>>\n  ApiAction?: InputMaybe<Array<ApiActionDisconnectInput>>\n}\n\nexport type BaseActionImplementationsUpdateInput = {\n  CodeAction?: InputMaybe<CodeActionUpdateInput>\n  ApiAction?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type BaseActionImplementationsWhere = {\n  CodeAction?: InputMaybe<CodeActionWhere>\n  ApiAction?: InputMaybe<ApiActionWhere>\n}\n\nexport type BaseActionOptions = {\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n  /** Specify one or more BaseActionSort objects to sort BaseActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InputMaybe<BaseActionSort>>>\n}\n\n/** Fields to sort BaseActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseActionSort object. */\nexport type BaseActionSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type BaseActionStoreAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<BaseActionStoreAggregateInput>>\n  OR?: InputMaybe<Array<BaseActionStoreAggregateInput>>\n  NOT?: InputMaybe<BaseActionStoreAggregateInput>\n  node?: InputMaybe<BaseActionStoreNodeAggregationWhereInput>\n}\n\nexport type BaseActionStoreConnectFieldInput = {\n  where?: InputMaybe<StoreConnectWhere>\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type BaseActionStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type BaseActionStoreConnectionWhere = {\n  AND?: InputMaybe<Array<BaseActionStoreConnectionWhere>>\n  OR?: InputMaybe<Array<BaseActionStoreConnectionWhere>>\n  NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  node?: InputMaybe<StoreWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<StoreWhere>\n}\n\nexport type BaseActionStoreConnectOrCreateFieldInput = {\n  where: StoreConnectOrCreateWhere\n  onCreate: BaseActionStoreConnectOrCreateFieldInputOnCreate\n}\n\nexport type BaseActionStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type BaseActionStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type BaseActionStoreDeleteFieldInput = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  delete?: InputMaybe<StoreDeleteInput>\n}\n\nexport type BaseActionStoreDisconnectFieldInput = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  disconnect?: InputMaybe<StoreDisconnectInput>\n}\n\nexport type BaseActionStoreFieldInput = {\n  create?: InputMaybe<BaseActionStoreCreateFieldInput>\n  connect?: InputMaybe<BaseActionStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n}\n\nexport type BaseActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseActionStoreNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<BaseActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseActionStoreNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type BaseActionStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type BaseActionStoreUpdateFieldInput = {\n  where?: InputMaybe<BaseActionStoreConnectionWhere>\n  update?: InputMaybe<BaseActionStoreUpdateConnectionInput>\n  connect?: InputMaybe<BaseActionStoreConnectFieldInput>\n  disconnect?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  create?: InputMaybe<BaseActionStoreCreateFieldInput>\n  delete?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  connectOrCreate?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n}\n\nexport type BaseActionUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  _on?: InputMaybe<BaseActionImplementationsUpdateInput>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n}\n\nexport type BaseActionWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<ActionKind>>\n  _on?: InputMaybe<BaseActionImplementationsWhere>\n  store?: InputMaybe<StoreWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<BaseActionStoreAggregateInput>\n  element?: InputMaybe<ElementWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<BaseActionElementAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type BaseTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type BaseTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type BaseTypeConnectOrCreateWhere = {\n  node: BaseTypeUniqueWhere\n}\n\nexport type BaseTypeConnectWhere = {\n  node: BaseTypeWhere\n}\n\nexport type BaseTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type BaseTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type BaseTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type BaseTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind: TypeKind\n}\n\nexport type BaseTypeOptions = {\n  /** Specify one or more BaseTypeSort objects to sort BaseTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<BaseTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type BaseTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<BaseTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<BaseTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<BaseTypeOwnerAggregateInput>\n  node?: InputMaybe<BaseTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type BaseTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<BaseTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<BaseTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<BaseTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type BaseTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort BaseTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseTypeSort object. */\nexport type BaseTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type BaseTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type BaseTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type BaseTypeWhere = {\n  OR?: InputMaybe<Array<BaseTypeWhere>>\n  AND?: InputMaybe<Array<BaseTypeWhere>>\n  NOT?: InputMaybe<BaseTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<BaseTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type CodeActionConnectInput = {\n  store?: InputMaybe<BaseActionStoreConnectFieldInput>\n  element?: InputMaybe<BaseActionElementConnectFieldInput>\n}\n\nexport type CodeActionConnectOrCreateInput = {\n  store?: InputMaybe<BaseActionStoreConnectOrCreateFieldInput>\n  element?: InputMaybe<BaseActionElementConnectOrCreateFieldInput>\n}\n\nexport type CodeActionConnectOrCreateWhere = {\n  node: CodeActionUniqueWhere\n}\n\nexport type CodeActionConnectWhere = {\n  node: CodeActionWhere\n}\n\nexport type CodeActionCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  code: Scalars['String']\n  type?: ActionKind\n  store?: InputMaybe<BaseActionStoreFieldInput>\n  element?: InputMaybe<BaseActionElementFieldInput>\n}\n\nexport type CodeActionDeleteInput = {\n  store?: InputMaybe<BaseActionStoreDeleteFieldInput>\n  element?: InputMaybe<BaseActionElementDeleteFieldInput>\n}\n\nexport type CodeActionDisconnectInput = {\n  store?: InputMaybe<BaseActionStoreDisconnectFieldInput>\n  element?: InputMaybe<BaseActionElementDisconnectFieldInput>\n}\n\nexport type CodeActionElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<CodeActionElementAggregateInput>>\n  OR?: InputMaybe<Array<CodeActionElementAggregateInput>>\n  NOT?: InputMaybe<CodeActionElementAggregateInput>\n  node?: InputMaybe<CodeActionElementNodeAggregationWhereInput>\n}\n\nexport type CodeActionElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeActionElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<CodeActionElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeActionElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type CodeActionOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  code: Scalars['String']\n  type?: ActionKind\n}\n\nexport type CodeActionOptions = {\n  /** Specify one or more CodeActionSort objects to sort CodeActions by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<CodeActionSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type CodeActionRelationInput = {\n  store?: InputMaybe<BaseActionStoreCreateFieldInput>\n  element?: InputMaybe<BaseActionElementCreateFieldInput>\n}\n\n/** Fields to sort CodeActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeActionSort object. */\nexport type CodeActionSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  code?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type CodeActionStoreAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<CodeActionStoreAggregateInput>>\n  OR?: InputMaybe<Array<CodeActionStoreAggregateInput>>\n  NOT?: InputMaybe<CodeActionStoreAggregateInput>\n  node?: InputMaybe<CodeActionStoreNodeAggregationWhereInput>\n}\n\nexport type CodeActionStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeActionStoreNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<CodeActionStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeActionStoreNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type CodeActionUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type CodeActionUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  code?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  store?: InputMaybe<BaseActionStoreUpdateFieldInput>\n  element?: InputMaybe<BaseActionElementUpdateFieldInput>\n}\n\nexport type CodeActionWhere = {\n  OR?: InputMaybe<Array<CodeActionWhere>>\n  AND?: InputMaybe<Array<CodeActionWhere>>\n  NOT?: InputMaybe<CodeActionWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  code?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  code_NOT?: InputMaybe<Scalars['String']>\n  code_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  code_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  code_MATCHES?: InputMaybe<Scalars['String']>\n  code_CONTAINS?: InputMaybe<Scalars['String']>\n  code_STARTS_WITH?: InputMaybe<Scalars['String']>\n  code_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  code_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  code_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  code_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ActionKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<ActionKind>\n  type_IN?: InputMaybe<Array<ActionKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<ActionKind>>\n  store?: InputMaybe<StoreWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<CodeActionStoreAggregateInput>\n  element?: InputMaybe<ElementWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<CodeActionElementAggregateInput>\n  storeConnection?: InputMaybe<BaseActionStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<BaseActionStoreConnectionWhere>\n  elementConnection?: InputMaybe<BaseActionElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<BaseActionElementConnectionWhere>\n}\n\nexport type CodeMirrorTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type CodeMirrorTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type CodeMirrorTypeConnectOrCreateWhere = {\n  node: CodeMirrorTypeUniqueWhere\n}\n\nexport type CodeMirrorTypeConnectWhere = {\n  node: CodeMirrorTypeWhere\n}\n\nexport type CodeMirrorTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  language: CodeMirrorLanguage\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type CodeMirrorTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type CodeMirrorTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type CodeMirrorTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  language: CodeMirrorLanguage\n}\n\nexport type CodeMirrorTypeOptions = {\n  /** Specify one or more CodeMirrorTypeSort objects to sort CodeMirrorTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<CodeMirrorTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type CodeMirrorTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<CodeMirrorTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<CodeMirrorTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<CodeMirrorTypeOwnerAggregateInput>\n  node?: InputMaybe<CodeMirrorTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type CodeMirrorTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<CodeMirrorTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<CodeMirrorTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<CodeMirrorTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type CodeMirrorTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort CodeMirrorTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeMirrorTypeSort object. */\nexport type CodeMirrorTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  language?: InputMaybe<SortDirection>\n}\n\nexport type CodeMirrorTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type CodeMirrorTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  language?: InputMaybe<CodeMirrorLanguage>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type CodeMirrorTypeWhere = {\n  OR?: InputMaybe<Array<CodeMirrorTypeWhere>>\n  AND?: InputMaybe<Array<CodeMirrorTypeWhere>>\n  NOT?: InputMaybe<CodeMirrorTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  language?: InputMaybe<CodeMirrorLanguage>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  language_NOT?: InputMaybe<CodeMirrorLanguage>\n  language_IN?: InputMaybe<Array<CodeMirrorLanguage>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  language_NOT_IN?: InputMaybe<Array<CodeMirrorLanguage>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<CodeMirrorTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ComponentApiAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentApiAggregateInput>>\n  OR?: InputMaybe<Array<ComponentApiAggregateInput>>\n  NOT?: InputMaybe<ComponentApiAggregateInput>\n  node?: InputMaybe<ComponentApiNodeAggregationWhereInput>\n}\n\nexport type ComponentApiConnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ComponentApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type ComponentApiConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentApiConnectionWhere>>\n  OR?: InputMaybe<Array<ComponentApiConnectionWhere>>\n  NOT?: InputMaybe<ComponentApiConnectionWhere>\n  node?: InputMaybe<InterfaceTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type ComponentApiConnectOrCreateFieldInput = {\n  where: InterfaceTypeConnectOrCreateWhere\n  onCreate: ComponentApiConnectOrCreateFieldInputOnCreate\n}\n\nexport type ComponentApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type ComponentApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type ComponentApiDeleteFieldInput = {\n  where?: InputMaybe<ComponentApiConnectionWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type ComponentApiDisconnectFieldInput = {\n  where?: InputMaybe<ComponentApiConnectionWhere>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n}\n\nexport type ComponentApiFieldInput = {\n  create?: InputMaybe<ComponentApiCreateFieldInput>\n  connect?: InputMaybe<ComponentApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n}\n\nexport type ComponentApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentApiNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ComponentApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentApiNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type ComponentApiUpdateFieldInput = {\n  where?: InputMaybe<ComponentApiConnectionWhere>\n  update?: InputMaybe<ComponentApiUpdateConnectionInput>\n  connect?: InputMaybe<ComponentApiConnectFieldInput>\n  disconnect?: InputMaybe<ComponentApiDisconnectFieldInput>\n  create?: InputMaybe<ComponentApiCreateFieldInput>\n  delete?: InputMaybe<ComponentApiDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n}\n\nexport type ComponentChildrenContainerElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentChildrenContainerElementAggregateInput>>\n  OR?: InputMaybe<Array<ComponentChildrenContainerElementAggregateInput>>\n  NOT?: InputMaybe<ComponentChildrenContainerElementAggregateInput>\n  node?: InputMaybe<ComponentChildrenContainerElementNodeAggregationWhereInput>\n}\n\nexport type ComponentChildrenContainerElementConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ComponentChildrenContainerElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ComponentChildrenContainerElementConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentChildrenContainerElementConnectionWhere>>\n  OR?: InputMaybe<Array<ComponentChildrenContainerElementConnectionWhere>>\n  NOT?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentChildrenContainerElementConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ComponentChildrenContainerElementConnectOrCreateFieldInputOnCreate\n}\n\nexport type ComponentChildrenContainerElementConnectOrCreateFieldInputOnCreate =\n  {\n    node: ElementOnCreateInput\n  }\n\nexport type ComponentChildrenContainerElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ComponentChildrenContainerElementDeleteFieldInput = {\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ComponentChildrenContainerElementDisconnectFieldInput = {\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ComponentChildrenContainerElementFieldInput = {\n  create?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n  connect?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n}\n\nexport type ComponentChildrenContainerElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<\n    Array<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  >\n  OR?: InputMaybe<\n    Array<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  >\n  NOT?: InputMaybe<ComponentChildrenContainerElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentChildrenContainerElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ComponentChildrenContainerElementUpdateFieldInput = {\n  where?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  update?: InputMaybe<ComponentChildrenContainerElementUpdateConnectionInput>\n  connect?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n  disconnect?: InputMaybe<ComponentChildrenContainerElementDisconnectFieldInput>\n  create?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n  delete?: InputMaybe<ComponentChildrenContainerElementDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n}\n\nexport type ComponentConnectInput = {\n  rootElement?: InputMaybe<ComponentRootElementConnectFieldInput>\n  api?: InputMaybe<ComponentApiConnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  store?: InputMaybe<ComponentStoreConnectFieldInput>\n  props?: InputMaybe<ComponentPropsConnectFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementConnectFieldInput>\n}\n\nexport type ComponentConnectOrCreateInput = {\n  rootElement?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n  api?: InputMaybe<ComponentApiConnectOrCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n  store?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n  props?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementConnectOrCreateFieldInput>\n}\n\nexport type ComponentConnectOrCreateWhere = {\n  node: ComponentUniqueWhere\n}\n\nexport type ComponentConnectWhere = {\n  node: ComponentWhere\n}\n\nexport type ComponentCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  keyGenerator?: InputMaybe<Scalars['String']>\n  rootElement?: InputMaybe<ComponentRootElementFieldInput>\n  api?: InputMaybe<ComponentApiFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n  store?: InputMaybe<ComponentStoreFieldInput>\n  props?: InputMaybe<ComponentPropsFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementFieldInput>\n}\n\nexport type ComponentDeleteInput = {\n  rootElement?: InputMaybe<ComponentRootElementDeleteFieldInput>\n  api?: InputMaybe<ComponentApiDeleteFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  store?: InputMaybe<ComponentStoreDeleteFieldInput>\n  props?: InputMaybe<ComponentPropsDeleteFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementDeleteFieldInput>\n}\n\nexport type ComponentDisconnectInput = {\n  rootElement?: InputMaybe<ComponentRootElementDisconnectFieldInput>\n  api?: InputMaybe<ComponentApiDisconnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  store?: InputMaybe<ComponentStoreDisconnectFieldInput>\n  props?: InputMaybe<ComponentPropsDisconnectFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementDisconnectFieldInput>\n}\n\nexport type ComponentOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  keyGenerator?: InputMaybe<Scalars['String']>\n}\n\nexport type ComponentOptions = {\n  /** Specify one or more ComponentSort objects to sort Components by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ComponentSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ComponentOwnerAggregateInput>>\n  NOT?: InputMaybe<ComponentOwnerAggregateInput>\n  node?: InputMaybe<ComponentOwnerNodeAggregationWhereInput>\n}\n\nexport type ComponentOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ComponentOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentPropsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentPropsAggregateInput>>\n  OR?: InputMaybe<Array<ComponentPropsAggregateInput>>\n  NOT?: InputMaybe<ComponentPropsAggregateInput>\n  node?: InputMaybe<ComponentPropsNodeAggregationWhereInput>\n}\n\nexport type ComponentPropsConnectFieldInput = {\n  where?: InputMaybe<PropConnectWhere>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ComponentPropsConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ComponentPropsConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentPropsConnectionWhere>>\n  OR?: InputMaybe<Array<ComponentPropsConnectionWhere>>\n  NOT?: InputMaybe<ComponentPropsConnectionWhere>\n  node?: InputMaybe<PropWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PropWhere>\n}\n\nexport type ComponentPropsConnectOrCreateFieldInput = {\n  where: PropConnectOrCreateWhere\n  onCreate: ComponentPropsConnectOrCreateFieldInputOnCreate\n}\n\nexport type ComponentPropsConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ComponentPropsCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ComponentPropsDeleteFieldInput = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentPropsDisconnectFieldInput = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n}\n\nexport type ComponentPropsFieldInput = {\n  create?: InputMaybe<ComponentPropsCreateFieldInput>\n  connect?: InputMaybe<ComponentPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n}\n\nexport type ComponentPropsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentPropsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ComponentPropsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentPropsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentPropsUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ComponentPropsUpdateFieldInput = {\n  where?: InputMaybe<ComponentPropsConnectionWhere>\n  update?: InputMaybe<ComponentPropsUpdateConnectionInput>\n  connect?: InputMaybe<ComponentPropsConnectFieldInput>\n  disconnect?: InputMaybe<ComponentPropsDisconnectFieldInput>\n  create?: InputMaybe<ComponentPropsCreateFieldInput>\n  delete?: InputMaybe<ComponentPropsDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ComponentPropsConnectOrCreateFieldInput>\n}\n\nexport type ComponentRelationInput = {\n  rootElement?: InputMaybe<ComponentRootElementCreateFieldInput>\n  api?: InputMaybe<ComponentApiCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  store?: InputMaybe<ComponentStoreCreateFieldInput>\n  props?: InputMaybe<ComponentPropsCreateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementCreateFieldInput>\n}\n\nexport type ComponentRootElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentRootElementAggregateInput>>\n  OR?: InputMaybe<Array<ComponentRootElementAggregateInput>>\n  NOT?: InputMaybe<ComponentRootElementAggregateInput>\n  node?: InputMaybe<ComponentRootElementNodeAggregationWhereInput>\n}\n\nexport type ComponentRootElementConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ComponentRootElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ComponentRootElementConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentRootElementConnectionWhere>>\n  OR?: InputMaybe<Array<ComponentRootElementConnectionWhere>>\n  NOT?: InputMaybe<ComponentRootElementConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ComponentRootElementConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ComponentRootElementConnectOrCreateFieldInputOnCreate\n}\n\nexport type ComponentRootElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ComponentRootElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ComponentRootElementDeleteFieldInput = {\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ComponentRootElementDisconnectFieldInput = {\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ComponentRootElementFieldInput = {\n  create?: InputMaybe<ComponentRootElementCreateFieldInput>\n  connect?: InputMaybe<ComponentRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n}\n\nexport type ComponentRootElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentRootElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ComponentRootElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentRootElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentRootElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ComponentRootElementUpdateFieldInput = {\n  where?: InputMaybe<ComponentRootElementConnectionWhere>\n  update?: InputMaybe<ComponentRootElementUpdateConnectionInput>\n  connect?: InputMaybe<ComponentRootElementConnectFieldInput>\n  disconnect?: InputMaybe<ComponentRootElementDisconnectFieldInput>\n  create?: InputMaybe<ComponentRootElementCreateFieldInput>\n  delete?: InputMaybe<ComponentRootElementDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ComponentRootElementConnectOrCreateFieldInput>\n}\n\n/** Fields to sort Components by. The order in which sorts are applied is not guaranteed when specifying many fields in one ComponentSort object. */\nexport type ComponentSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  keyGenerator?: InputMaybe<SortDirection>\n}\n\nexport type ComponentStoreAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ComponentStoreAggregateInput>>\n  OR?: InputMaybe<Array<ComponentStoreAggregateInput>>\n  NOT?: InputMaybe<ComponentStoreAggregateInput>\n  node?: InputMaybe<ComponentStoreNodeAggregationWhereInput>\n}\n\nexport type ComponentStoreConnectFieldInput = {\n  where?: InputMaybe<StoreConnectWhere>\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ComponentStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type ComponentStoreConnectionWhere = {\n  AND?: InputMaybe<Array<ComponentStoreConnectionWhere>>\n  OR?: InputMaybe<Array<ComponentStoreConnectionWhere>>\n  NOT?: InputMaybe<ComponentStoreConnectionWhere>\n  node?: InputMaybe<StoreWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<StoreWhere>\n}\n\nexport type ComponentStoreConnectOrCreateFieldInput = {\n  where: StoreConnectOrCreateWhere\n  onCreate: ComponentStoreConnectOrCreateFieldInputOnCreate\n}\n\nexport type ComponentStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type ComponentStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type ComponentStoreDeleteFieldInput = {\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n  delete?: InputMaybe<StoreDeleteInput>\n}\n\nexport type ComponentStoreDisconnectFieldInput = {\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n  disconnect?: InputMaybe<StoreDisconnectInput>\n}\n\nexport type ComponentStoreFieldInput = {\n  create?: InputMaybe<ComponentStoreCreateFieldInput>\n  connect?: InputMaybe<ComponentStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n}\n\nexport type ComponentStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ComponentStoreNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ComponentStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ComponentStoreNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ComponentStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type ComponentStoreUpdateFieldInput = {\n  where?: InputMaybe<ComponentStoreConnectionWhere>\n  update?: InputMaybe<ComponentStoreUpdateConnectionInput>\n  connect?: InputMaybe<ComponentStoreConnectFieldInput>\n  disconnect?: InputMaybe<ComponentStoreDisconnectFieldInput>\n  create?: InputMaybe<ComponentStoreCreateFieldInput>\n  delete?: InputMaybe<ComponentStoreDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ComponentStoreConnectOrCreateFieldInput>\n}\n\nexport type ComponentUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ComponentUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  keyGenerator?: InputMaybe<Scalars['String']>\n  rootElement?: InputMaybe<ComponentRootElementUpdateFieldInput>\n  api?: InputMaybe<ComponentApiUpdateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n  store?: InputMaybe<ComponentStoreUpdateFieldInput>\n  props?: InputMaybe<ComponentPropsUpdateFieldInput>\n  childrenContainerElement?: InputMaybe<ComponentChildrenContainerElementUpdateFieldInput>\n}\n\nexport type ComponentWhere = {\n  OR?: InputMaybe<Array<ComponentWhere>>\n  AND?: InputMaybe<Array<ComponentWhere>>\n  NOT?: InputMaybe<ComponentWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  keyGenerator?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  keyGenerator_NOT?: InputMaybe<Scalars['String']>\n  keyGenerator_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  keyGenerator_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  keyGenerator_MATCHES?: InputMaybe<Scalars['String']>\n  keyGenerator_CONTAINS?: InputMaybe<Scalars['String']>\n  keyGenerator_STARTS_WITH?: InputMaybe<Scalars['String']>\n  keyGenerator_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  keyGenerator_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  keyGenerator_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  keyGenerator_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  rootElement?: InputMaybe<ElementWhere>\n  rootElement_NOT?: InputMaybe<ElementWhere>\n  rootElementAggregate?: InputMaybe<ComponentRootElementAggregateInput>\n  api?: InputMaybe<InterfaceTypeWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<ComponentApiAggregateInput>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ComponentOwnerAggregateInput>\n  store?: InputMaybe<StoreWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<ComponentStoreAggregateInput>\n  props?: InputMaybe<PropWhere>\n  props_NOT?: InputMaybe<PropWhere>\n  propsAggregate?: InputMaybe<ComponentPropsAggregateInput>\n  childrenContainerElement?: InputMaybe<ElementWhere>\n  childrenContainerElement_NOT?: InputMaybe<ElementWhere>\n  childrenContainerElementAggregate?: InputMaybe<ComponentChildrenContainerElementAggregateInput>\n  rootElementConnection?: InputMaybe<ComponentRootElementConnectionWhere>\n  rootElementConnection_NOT?: InputMaybe<ComponentRootElementConnectionWhere>\n  apiConnection?: InputMaybe<ComponentApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<ComponentApiConnectionWhere>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  storeConnection?: InputMaybe<ComponentStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<ComponentStoreConnectionWhere>\n  propsConnection?: InputMaybe<ComponentPropsConnectionWhere>\n  propsConnection_NOT?: InputMaybe<ComponentPropsConnectionWhere>\n  childrenContainerElementConnection?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n  childrenContainerElementConnection_NOT?: InputMaybe<ComponentChildrenContainerElementConnectionWhere>\n}\n\nexport type DeleteInfoCreateInput = {\n  bookmark?: InputMaybe<Scalars['String']>\n  nodesDeleted: Scalars['Int']\n  relationshipsDeleted: Scalars['Int']\n}\n\nexport type DeleteInfoOptions = {\n  /** Specify one or more DeleteInfoSort objects to sort DeleteInfos by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<DeleteInfoSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort DeleteInfos by. The order in which sorts are applied is not guaranteed when specifying many fields in one DeleteInfoSort object. */\nexport type DeleteInfoSort = {\n  bookmark?: InputMaybe<SortDirection>\n  nodesDeleted?: InputMaybe<SortDirection>\n  relationshipsDeleted?: InputMaybe<SortDirection>\n}\n\nexport type DeleteInfoUpdateInput = {\n  bookmark?: InputMaybe<Scalars['String']>\n  nodesDeleted?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted?: InputMaybe<Scalars['Int']>\n  nodesDeleted_INCREMENT?: InputMaybe<Scalars['Int']>\n  nodesDeleted_DECREMENT?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_INCREMENT?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_DECREMENT?: InputMaybe<Scalars['Int']>\n}\n\nexport type DeleteInfoWhere = {\n  OR?: InputMaybe<Array<DeleteInfoWhere>>\n  AND?: InputMaybe<Array<DeleteInfoWhere>>\n  NOT?: InputMaybe<DeleteInfoWhere>\n  bookmark?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  bookmark_NOT?: InputMaybe<Scalars['String']>\n  bookmark_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  bookmark_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  bookmark_MATCHES?: InputMaybe<Scalars['String']>\n  bookmark_CONTAINS?: InputMaybe<Scalars['String']>\n  bookmark_STARTS_WITH?: InputMaybe<Scalars['String']>\n  bookmark_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  bookmark_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  bookmark_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  bookmark_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  nodesDeleted?: InputMaybe<Scalars['Int']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  nodesDeleted_NOT?: InputMaybe<Scalars['Int']>\n  nodesDeleted_IN?: InputMaybe<Array<Scalars['Int']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  nodesDeleted_NOT_IN?: InputMaybe<Array<Scalars['Int']>>\n  nodesDeleted_LT?: InputMaybe<Scalars['Int']>\n  nodesDeleted_LTE?: InputMaybe<Scalars['Int']>\n  nodesDeleted_GT?: InputMaybe<Scalars['Int']>\n  nodesDeleted_GTE?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted?: InputMaybe<Scalars['Int']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  relationshipsDeleted_NOT?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_IN?: InputMaybe<Array<Scalars['Int']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  relationshipsDeleted_NOT_IN?: InputMaybe<Array<Scalars['Int']>>\n  relationshipsDeleted_LT?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_LTE?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_GT?: InputMaybe<Scalars['Int']>\n  relationshipsDeleted_GTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type DomainAppAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<DomainAppAggregateInput>>\n  OR?: InputMaybe<Array<DomainAppAggregateInput>>\n  NOT?: InputMaybe<DomainAppAggregateInput>\n  node?: InputMaybe<DomainAppNodeAggregationWhereInput>\n}\n\nexport type DomainAppConnectFieldInput = {\n  where?: InputMaybe<AppConnectWhere>\n  connect?: InputMaybe<AppConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type DomainAppConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type DomainAppConnectionWhere = {\n  AND?: InputMaybe<Array<DomainAppConnectionWhere>>\n  OR?: InputMaybe<Array<DomainAppConnectionWhere>>\n  NOT?: InputMaybe<DomainAppConnectionWhere>\n  node?: InputMaybe<AppWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AppWhere>\n}\n\nexport type DomainAppConnectOrCreateFieldInput = {\n  where: AppConnectOrCreateWhere\n  onCreate: DomainAppConnectOrCreateFieldInputOnCreate\n}\n\nexport type DomainAppConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type DomainAppCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type DomainAppDeleteFieldInput = {\n  where?: InputMaybe<DomainAppConnectionWhere>\n  delete?: InputMaybe<AppDeleteInput>\n}\n\nexport type DomainAppDisconnectFieldInput = {\n  where?: InputMaybe<DomainAppConnectionWhere>\n  disconnect?: InputMaybe<AppDisconnectInput>\n}\n\nexport type DomainAppFieldInput = {\n  create?: InputMaybe<DomainAppCreateFieldInput>\n  connect?: InputMaybe<DomainAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n}\n\nexport type DomainAppNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<DomainAppNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<DomainAppNodeAggregationWhereInput>>\n  NOT?: InputMaybe<DomainAppNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type DomainAppUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type DomainAppUpdateFieldInput = {\n  where?: InputMaybe<DomainAppConnectionWhere>\n  update?: InputMaybe<DomainAppUpdateConnectionInput>\n  connect?: InputMaybe<DomainAppConnectFieldInput>\n  disconnect?: InputMaybe<DomainAppDisconnectFieldInput>\n  create?: InputMaybe<DomainAppCreateFieldInput>\n  delete?: InputMaybe<DomainAppDeleteFieldInput>\n  connectOrCreate?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n}\n\nexport type DomainConnectInput = {\n  app?: InputMaybe<DomainAppConnectFieldInput>\n}\n\nexport type DomainConnectOrCreateInput = {\n  app?: InputMaybe<DomainAppConnectOrCreateFieldInput>\n}\n\nexport type DomainConnectOrCreateWhere = {\n  node: DomainUniqueWhere\n}\n\nexport type DomainConnectWhere = {\n  node: DomainWhere\n}\n\nexport type DomainCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  app?: InputMaybe<DomainAppFieldInput>\n}\n\nexport type DomainDeleteInput = {\n  app?: InputMaybe<DomainAppDeleteFieldInput>\n}\n\nexport type DomainDisconnectInput = {\n  app?: InputMaybe<DomainAppDisconnectFieldInput>\n}\n\nexport type DomainOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n}\n\nexport type DomainOptions = {\n  /** Specify one or more DomainSort objects to sort Domains by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<DomainSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type DomainRelationInput = {\n  app?: InputMaybe<DomainAppCreateFieldInput>\n}\n\n/** Fields to sort Domains by. The order in which sorts are applied is not guaranteed when specifying many fields in one DomainSort object. */\nexport type DomainSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type DomainUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type DomainUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  app?: InputMaybe<DomainAppUpdateFieldInput>\n}\n\nexport type DomainWhere = {\n  OR?: InputMaybe<Array<DomainWhere>>\n  AND?: InputMaybe<Array<DomainWhere>>\n  NOT?: InputMaybe<DomainWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  app?: InputMaybe<AppWhere>\n  app_NOT?: InputMaybe<AppWhere>\n  appAggregate?: InputMaybe<DomainAppAggregateInput>\n  appConnection?: InputMaybe<DomainAppConnectionWhere>\n  appConnection_NOT?: InputMaybe<DomainAppConnectionWhere>\n}\n\nexport type ElementConnectInput = {\n  nextSibling?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildConnectFieldInput>\n  parent?: InputMaybe<ElementParentConnectFieldInput>\n  page?: InputMaybe<ElementPageConnectFieldInput>\n  props?: InputMaybe<ElementPropsConnectFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentConnectFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n}\n\nexport type ElementConnectOrCreateInput = {\n  nextSibling?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n  parent?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n  page?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n  props?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n}\n\nexport type ElementConnectOrCreateWhere = {\n  node: ElementUniqueWhere\n}\n\nexport type ElementConnectWhere = {\n  node: ElementWhere\n}\n\nexport type ElementCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  customCss?: InputMaybe<Scalars['String']>\n  guiCss?: InputMaybe<Scalars['String']>\n  propTransformationJs?: InputMaybe<Scalars['String']>\n  renderForEachPropKey?: InputMaybe<Scalars['String']>\n  renderIfExpression?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<ElementNextSiblingFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildFieldInput>\n  parent?: InputMaybe<ElementParentFieldInput>\n  page?: InputMaybe<ElementPageFieldInput>\n  props?: InputMaybe<ElementPropsFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeFieldInput>\n}\n\nexport type ElementDeleteInput = {\n  nextSibling?: InputMaybe<ElementNextSiblingDeleteFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingDeleteFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildDeleteFieldInput>\n  parent?: InputMaybe<ElementParentDeleteFieldInput>\n  page?: InputMaybe<ElementPageDeleteFieldInput>\n  props?: InputMaybe<ElementPropsDeleteFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentDeleteFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionDeleteFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionDeleteFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeDeleteFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeDeleteFieldInput>\n}\n\nexport type ElementDisconnectInput = {\n  nextSibling?: InputMaybe<ElementNextSiblingDisconnectFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingDisconnectFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildDisconnectFieldInput>\n  parent?: InputMaybe<ElementParentDisconnectFieldInput>\n  page?: InputMaybe<ElementPageDisconnectFieldInput>\n  props?: InputMaybe<ElementPropsDisconnectFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentDisconnectFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionDisconnectFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionDisconnectFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeDisconnectFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeDisconnectFieldInput>\n}\n\nexport type ElementFirstChildAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementFirstChildAggregateInput>>\n  OR?: InputMaybe<Array<ElementFirstChildAggregateInput>>\n  NOT?: InputMaybe<ElementFirstChildAggregateInput>\n  node?: InputMaybe<ElementFirstChildNodeAggregationWhereInput>\n}\n\nexport type ElementFirstChildConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementFirstChildConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementFirstChildConnectionWhere = {\n  AND?: InputMaybe<Array<ElementFirstChildConnectionWhere>>\n  OR?: InputMaybe<Array<ElementFirstChildConnectionWhere>>\n  NOT?: InputMaybe<ElementFirstChildConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ElementFirstChildConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ElementFirstChildConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementFirstChildConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementFirstChildCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementFirstChildDeleteFieldInput = {\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ElementFirstChildDisconnectFieldInput = {\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ElementFirstChildFieldInput = {\n  create?: InputMaybe<ElementFirstChildCreateFieldInput>\n  connect?: InputMaybe<ElementFirstChildConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n}\n\nexport type ElementFirstChildNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementFirstChildNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementFirstChildNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementFirstChildNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementFirstChildUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementFirstChildUpdateFieldInput = {\n  where?: InputMaybe<ElementFirstChildConnectionWhere>\n  update?: InputMaybe<ElementFirstChildUpdateConnectionInput>\n  connect?: InputMaybe<ElementFirstChildConnectFieldInput>\n  disconnect?: InputMaybe<ElementFirstChildDisconnectFieldInput>\n  create?: InputMaybe<ElementFirstChildCreateFieldInput>\n  delete?: InputMaybe<ElementFirstChildDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementFirstChildConnectOrCreateFieldInput>\n}\n\nexport type ElementNextSiblingAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementNextSiblingAggregateInput>>\n  OR?: InputMaybe<Array<ElementNextSiblingAggregateInput>>\n  NOT?: InputMaybe<ElementNextSiblingAggregateInput>\n  node?: InputMaybe<ElementNextSiblingNodeAggregationWhereInput>\n}\n\nexport type ElementNextSiblingConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementNextSiblingConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementNextSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<ElementNextSiblingConnectionWhere>>\n  OR?: InputMaybe<Array<ElementNextSiblingConnectionWhere>>\n  NOT?: InputMaybe<ElementNextSiblingConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ElementNextSiblingConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ElementNextSiblingConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementNextSiblingConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementNextSiblingCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementNextSiblingDeleteFieldInput = {\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ElementNextSiblingDisconnectFieldInput = {\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ElementNextSiblingFieldInput = {\n  create?: InputMaybe<ElementNextSiblingCreateFieldInput>\n  connect?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n}\n\nexport type ElementNextSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementNextSiblingNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementNextSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementNextSiblingNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementNextSiblingUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementNextSiblingUpdateFieldInput = {\n  where?: InputMaybe<ElementNextSiblingConnectionWhere>\n  update?: InputMaybe<ElementNextSiblingUpdateConnectionInput>\n  connect?: InputMaybe<ElementNextSiblingConnectFieldInput>\n  disconnect?: InputMaybe<ElementNextSiblingDisconnectFieldInput>\n  create?: InputMaybe<ElementNextSiblingCreateFieldInput>\n  delete?: InputMaybe<ElementNextSiblingDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementNextSiblingConnectOrCreateFieldInput>\n}\n\nexport type ElementOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  customCss?: InputMaybe<Scalars['String']>\n  guiCss?: InputMaybe<Scalars['String']>\n  propTransformationJs?: InputMaybe<Scalars['String']>\n  renderForEachPropKey?: InputMaybe<Scalars['String']>\n  renderIfExpression?: InputMaybe<Scalars['String']>\n}\n\nexport type ElementOptions = {\n  /** Specify one or more ElementSort objects to sort Elements by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ElementSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementPageAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementPageAggregateInput>>\n  OR?: InputMaybe<Array<ElementPageAggregateInput>>\n  NOT?: InputMaybe<ElementPageAggregateInput>\n  node?: InputMaybe<ElementPageNodeAggregationWhereInput>\n}\n\nexport type ElementPageConnectFieldInput = {\n  where?: InputMaybe<PageConnectWhere>\n  connect?: InputMaybe<PageConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementPageConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type ElementPageConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPageConnectionWhere>>\n  OR?: InputMaybe<Array<ElementPageConnectionWhere>>\n  NOT?: InputMaybe<ElementPageConnectionWhere>\n  node?: InputMaybe<PageWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PageWhere>\n}\n\nexport type ElementPageConnectOrCreateFieldInput = {\n  where: PageConnectOrCreateWhere\n  onCreate: ElementPageConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementPageConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type ElementPageCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type ElementPageDeleteFieldInput = {\n  where?: InputMaybe<ElementPageConnectionWhere>\n  delete?: InputMaybe<PageDeleteInput>\n}\n\nexport type ElementPageDisconnectFieldInput = {\n  where?: InputMaybe<ElementPageConnectionWhere>\n  disconnect?: InputMaybe<PageDisconnectInput>\n}\n\nexport type ElementPageFieldInput = {\n  create?: InputMaybe<ElementPageCreateFieldInput>\n  connect?: InputMaybe<ElementPageConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n}\n\nexport type ElementPageNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPageNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementPageNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPageNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementPageUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type ElementPageUpdateFieldInput = {\n  where?: InputMaybe<ElementPageConnectionWhere>\n  update?: InputMaybe<ElementPageUpdateConnectionInput>\n  connect?: InputMaybe<ElementPageConnectFieldInput>\n  disconnect?: InputMaybe<ElementPageDisconnectFieldInput>\n  create?: InputMaybe<ElementPageCreateFieldInput>\n  delete?: InputMaybe<ElementPageDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementPageConnectOrCreateFieldInput>\n}\n\nexport type ElementParentAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementParentAggregateInput>>\n  OR?: InputMaybe<Array<ElementParentAggregateInput>>\n  NOT?: InputMaybe<ElementParentAggregateInput>\n  node?: InputMaybe<ElementParentNodeAggregationWhereInput>\n}\n\nexport type ElementParentComponentAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementParentComponentAggregateInput>>\n  OR?: InputMaybe<Array<ElementParentComponentAggregateInput>>\n  NOT?: InputMaybe<ElementParentComponentAggregateInput>\n  node?: InputMaybe<ElementParentComponentNodeAggregationWhereInput>\n}\n\nexport type ElementParentComponentConnectFieldInput = {\n  where?: InputMaybe<ComponentConnectWhere>\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementParentComponentConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type ElementParentComponentConnectionWhere = {\n  AND?: InputMaybe<Array<ElementParentComponentConnectionWhere>>\n  OR?: InputMaybe<Array<ElementParentComponentConnectionWhere>>\n  NOT?: InputMaybe<ElementParentComponentConnectionWhere>\n  node?: InputMaybe<ComponentWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementParentComponentConnectOrCreateFieldInput = {\n  where: ComponentConnectOrCreateWhere\n  onCreate: ElementParentComponentConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementParentComponentConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type ElementParentComponentCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type ElementParentComponentDeleteFieldInput = {\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}\n\nexport type ElementParentComponentDisconnectFieldInput = {\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n}\n\nexport type ElementParentComponentFieldInput = {\n  create?: InputMaybe<ElementParentComponentCreateFieldInput>\n  connect?: InputMaybe<ElementParentComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n}\n\nexport type ElementParentComponentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementParentComponentNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementParentComponentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementParentComponentNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementParentComponentUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type ElementParentComponentUpdateFieldInput = {\n  where?: InputMaybe<ElementParentComponentConnectionWhere>\n  update?: InputMaybe<ElementParentComponentUpdateConnectionInput>\n  connect?: InputMaybe<ElementParentComponentConnectFieldInput>\n  disconnect?: InputMaybe<ElementParentComponentDisconnectFieldInput>\n  create?: InputMaybe<ElementParentComponentCreateFieldInput>\n  delete?: InputMaybe<ElementParentComponentDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentComponentConnectOrCreateFieldInput>\n}\n\nexport type ElementParentConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementParentConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementParentConnectionWhere = {\n  AND?: InputMaybe<Array<ElementParentConnectionWhere>>\n  OR?: InputMaybe<Array<ElementParentConnectionWhere>>\n  NOT?: InputMaybe<ElementParentConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ElementParentConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ElementParentConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementParentConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementParentCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementParentDeleteFieldInput = {\n  where?: InputMaybe<ElementParentConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ElementParentDisconnectFieldInput = {\n  where?: InputMaybe<ElementParentConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ElementParentFieldInput = {\n  create?: InputMaybe<ElementParentCreateFieldInput>\n  connect?: InputMaybe<ElementParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n}\n\nexport type ElementParentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementParentNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementParentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementParentNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementParentUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementParentUpdateFieldInput = {\n  where?: InputMaybe<ElementParentConnectionWhere>\n  update?: InputMaybe<ElementParentUpdateConnectionInput>\n  connect?: InputMaybe<ElementParentConnectFieldInput>\n  disconnect?: InputMaybe<ElementParentDisconnectFieldInput>\n  create?: InputMaybe<ElementParentCreateFieldInput>\n  delete?: InputMaybe<ElementParentDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementParentConnectOrCreateFieldInput>\n}\n\nexport type ElementPostRenderActionConnectFieldInput = {\n  connect?: InputMaybe<BaseActionConnectInput>\n  where?: InputMaybe<BaseActionConnectWhere>\n}\n\nexport type ElementPostRenderActionConnectionSort = {\n  node?: InputMaybe<BaseActionSort>\n}\n\nexport type ElementPostRenderActionConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPostRenderActionConnectionWhere>>\n  OR?: InputMaybe<Array<ElementPostRenderActionConnectionWhere>>\n  NOT?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  node?: InputMaybe<BaseActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPostRenderActionCreateFieldInput = {\n  node: BaseActionCreateInput\n}\n\nexport type ElementPostRenderActionDeleteFieldInput = {\n  delete?: InputMaybe<BaseActionDeleteInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPostRenderActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<BaseActionDisconnectInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPostRenderActionFieldInput = {\n  create?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n  connect?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n}\n\nexport type ElementPostRenderActionUpdateConnectionInput = {\n  node?: InputMaybe<BaseActionUpdateInput>\n}\n\nexport type ElementPostRenderActionUpdateFieldInput = {\n  connect?: InputMaybe<ElementPostRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n  delete?: InputMaybe<ElementPostRenderActionDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPostRenderActionDisconnectFieldInput>\n  update?: InputMaybe<ElementPostRenderActionUpdateConnectionInput>\n  where?: InputMaybe<ElementPostRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionConnectFieldInput = {\n  connect?: InputMaybe<BaseActionConnectInput>\n  where?: InputMaybe<BaseActionConnectWhere>\n}\n\nexport type ElementPreRenderActionConnectionSort = {\n  node?: InputMaybe<BaseActionSort>\n}\n\nexport type ElementPreRenderActionConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPreRenderActionConnectionWhere>>\n  OR?: InputMaybe<Array<ElementPreRenderActionConnectionWhere>>\n  NOT?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  node?: InputMaybe<BaseActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<BaseActionWhere>\n}\n\nexport type ElementPreRenderActionCreateFieldInput = {\n  node: BaseActionCreateInput\n}\n\nexport type ElementPreRenderActionDeleteFieldInput = {\n  delete?: InputMaybe<BaseActionDeleteInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionDisconnectFieldInput = {\n  disconnect?: InputMaybe<BaseActionDisconnectInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPreRenderActionFieldInput = {\n  create?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n  connect?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n}\n\nexport type ElementPreRenderActionUpdateConnectionInput = {\n  node?: InputMaybe<BaseActionUpdateInput>\n}\n\nexport type ElementPreRenderActionUpdateFieldInput = {\n  connect?: InputMaybe<ElementPreRenderActionConnectFieldInput>\n  create?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n  delete?: InputMaybe<ElementPreRenderActionDeleteFieldInput>\n  disconnect?: InputMaybe<ElementPreRenderActionDisconnectFieldInput>\n  update?: InputMaybe<ElementPreRenderActionUpdateConnectionInput>\n  where?: InputMaybe<ElementPreRenderActionConnectionWhere>\n}\n\nexport type ElementPrevSiblingAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementPrevSiblingAggregateInput>>\n  OR?: InputMaybe<Array<ElementPrevSiblingAggregateInput>>\n  NOT?: InputMaybe<ElementPrevSiblingAggregateInput>\n  node?: InputMaybe<ElementPrevSiblingNodeAggregationWhereInput>\n}\n\nexport type ElementPrevSiblingConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementPrevSiblingConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type ElementPrevSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPrevSiblingConnectionWhere>>\n  OR?: InputMaybe<Array<ElementPrevSiblingConnectionWhere>>\n  NOT?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type ElementPrevSiblingConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: ElementPrevSiblingConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementPrevSiblingConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type ElementPrevSiblingCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type ElementPrevSiblingDeleteFieldInput = {\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type ElementPrevSiblingDisconnectFieldInput = {\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type ElementPrevSiblingFieldInput = {\n  create?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n  connect?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n}\n\nexport type ElementPrevSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPrevSiblingNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementPrevSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPrevSiblingNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementPrevSiblingUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type ElementPrevSiblingUpdateFieldInput = {\n  where?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  update?: InputMaybe<ElementPrevSiblingUpdateConnectionInput>\n  connect?: InputMaybe<ElementPrevSiblingConnectFieldInput>\n  disconnect?: InputMaybe<ElementPrevSiblingDisconnectFieldInput>\n  create?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n  delete?: InputMaybe<ElementPrevSiblingDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementPrevSiblingConnectOrCreateFieldInput>\n}\n\nexport type ElementPropsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementPropsAggregateInput>>\n  OR?: InputMaybe<Array<ElementPropsAggregateInput>>\n  NOT?: InputMaybe<ElementPropsAggregateInput>\n  node?: InputMaybe<ElementPropsNodeAggregationWhereInput>\n}\n\nexport type ElementPropsConnectFieldInput = {\n  where?: InputMaybe<PropConnectWhere>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementPropsConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ElementPropsConnectionWhere = {\n  AND?: InputMaybe<Array<ElementPropsConnectionWhere>>\n  OR?: InputMaybe<Array<ElementPropsConnectionWhere>>\n  NOT?: InputMaybe<ElementPropsConnectionWhere>\n  node?: InputMaybe<PropWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PropWhere>\n}\n\nexport type ElementPropsConnectOrCreateFieldInput = {\n  where: PropConnectOrCreateWhere\n  onCreate: ElementPropsConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementPropsConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ElementPropsCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ElementPropsDeleteFieldInput = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementPropsDisconnectFieldInput = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n}\n\nexport type ElementPropsFieldInput = {\n  create?: InputMaybe<ElementPropsCreateFieldInput>\n  connect?: InputMaybe<ElementPropsConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n}\n\nexport type ElementPropsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementPropsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementPropsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementPropsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementPropsUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ElementPropsUpdateFieldInput = {\n  where?: InputMaybe<ElementPropsConnectionWhere>\n  update?: InputMaybe<ElementPropsUpdateConnectionInput>\n  connect?: InputMaybe<ElementPropsConnectFieldInput>\n  disconnect?: InputMaybe<ElementPropsDisconnectFieldInput>\n  create?: InputMaybe<ElementPropsCreateFieldInput>\n  delete?: InputMaybe<ElementPropsDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementPropsConnectOrCreateFieldInput>\n}\n\nexport type ElementRelationInput = {\n  nextSibling?: InputMaybe<ElementNextSiblingCreateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingCreateFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildCreateFieldInput>\n  parent?: InputMaybe<ElementParentCreateFieldInput>\n  page?: InputMaybe<ElementPageCreateFieldInput>\n  props?: InputMaybe<ElementPropsCreateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentCreateFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionCreateFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionCreateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n}\n\nexport type ElementRenderAtomTypeAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementRenderAtomTypeAggregateInput>>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeAggregateInput>>\n  NOT?: InputMaybe<ElementRenderAtomTypeAggregateInput>\n  node?: InputMaybe<ElementRenderAtomTypeNodeAggregationWhereInput>\n}\n\nexport type ElementRenderAtomTypeConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<AtomConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementRenderAtomTypeConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type ElementRenderAtomTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ElementRenderAtomTypeConnectionWhere>>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeConnectionWhere>>\n  NOT?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type ElementRenderAtomTypeConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: ElementRenderAtomTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementRenderAtomTypeConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type ElementRenderAtomTypeCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type ElementRenderAtomTypeDeleteFieldInput = {\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type ElementRenderAtomTypeDisconnectFieldInput = {\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type ElementRenderAtomTypeFieldInput = {\n  create?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n  connect?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n}\n\nexport type ElementRenderAtomTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementRenderAtomTypeNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementRenderAtomTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementRenderAtomTypeNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementRenderAtomTypeUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type ElementRenderAtomTypeUpdateFieldInput = {\n  where?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  update?: InputMaybe<ElementRenderAtomTypeUpdateConnectionInput>\n  connect?: InputMaybe<ElementRenderAtomTypeConnectFieldInput>\n  disconnect?: InputMaybe<ElementRenderAtomTypeDisconnectFieldInput>\n  create?: InputMaybe<ElementRenderAtomTypeCreateFieldInput>\n  delete?: InputMaybe<ElementRenderAtomTypeDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderAtomTypeConnectOrCreateFieldInput>\n}\n\nexport type ElementRenderComponentTypeAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementRenderComponentTypeAggregateInput>>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeAggregateInput>>\n  NOT?: InputMaybe<ElementRenderComponentTypeAggregateInput>\n  node?: InputMaybe<ElementRenderComponentTypeNodeAggregationWhereInput>\n}\n\nexport type ElementRenderComponentTypeConnectFieldInput = {\n  where?: InputMaybe<ComponentConnectWhere>\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ElementRenderComponentTypeConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type ElementRenderComponentTypeConnectionWhere = {\n  AND?: InputMaybe<Array<ElementRenderComponentTypeConnectionWhere>>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeConnectionWhere>>\n  NOT?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  node?: InputMaybe<ComponentWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ComponentWhere>\n}\n\nexport type ElementRenderComponentTypeConnectOrCreateFieldInput = {\n  where: ComponentConnectOrCreateWhere\n  onCreate: ElementRenderComponentTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type ElementRenderComponentTypeConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type ElementRenderComponentTypeCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type ElementRenderComponentTypeDeleteFieldInput = {\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}\n\nexport type ElementRenderComponentTypeDisconnectFieldInput = {\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n}\n\nexport type ElementRenderComponentTypeFieldInput = {\n  create?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n  connect?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n}\n\nexport type ElementRenderComponentTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementRenderComponentTypeNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementRenderComponentTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementRenderComponentTypeNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementRenderComponentTypeUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type ElementRenderComponentTypeUpdateFieldInput = {\n  where?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  update?: InputMaybe<ElementRenderComponentTypeUpdateConnectionInput>\n  connect?: InputMaybe<ElementRenderComponentTypeConnectFieldInput>\n  disconnect?: InputMaybe<ElementRenderComponentTypeDisconnectFieldInput>\n  create?: InputMaybe<ElementRenderComponentTypeCreateFieldInput>\n  delete?: InputMaybe<ElementRenderComponentTypeDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ElementRenderComponentTypeConnectOrCreateFieldInput>\n}\n\n/** Fields to sort Elements by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementSort object. */\nexport type ElementSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  customCss?: InputMaybe<SortDirection>\n  guiCss?: InputMaybe<SortDirection>\n  propTransformationJs?: InputMaybe<SortDirection>\n  renderForEachPropKey?: InputMaybe<SortDirection>\n  renderIfExpression?: InputMaybe<SortDirection>\n}\n\nexport type ElementTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ElementTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ElementTypeConnectOrCreateWhere = {\n  node: ElementTypeUniqueWhere\n}\n\nexport type ElementTypeConnectWhere = {\n  node: ElementTypeWhere\n}\n\nexport type ElementTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  elementKind: ElementTypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ElementTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ElementTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ElementTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  elementKind: ElementTypeKind\n}\n\nexport type ElementTypeOptions = {\n  /** Specify one or more ElementTypeSort objects to sort ElementTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ElementTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ElementTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ElementTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ElementTypeOwnerAggregateInput>\n  node?: InputMaybe<ElementTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ElementTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ElementTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ElementTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ElementTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ElementTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ElementTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementTypeSort object. */\nexport type ElementTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  elementKind?: InputMaybe<SortDirection>\n}\n\nexport type ElementTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ElementTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  elementKind?: InputMaybe<ElementTypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ElementTypeWhere = {\n  OR?: InputMaybe<Array<ElementTypeWhere>>\n  AND?: InputMaybe<Array<ElementTypeWhere>>\n  NOT?: InputMaybe<ElementTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  elementKind?: InputMaybe<ElementTypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  elementKind_NOT?: InputMaybe<ElementTypeKind>\n  elementKind_IN?: InputMaybe<Array<ElementTypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  elementKind_NOT_IN?: InputMaybe<Array<ElementTypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ElementTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type ElementUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ElementUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  customCss?: InputMaybe<Scalars['String']>\n  guiCss?: InputMaybe<Scalars['String']>\n  propTransformationJs?: InputMaybe<Scalars['String']>\n  renderForEachPropKey?: InputMaybe<Scalars['String']>\n  renderIfExpression?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<ElementNextSiblingUpdateFieldInput>\n  prevSibling?: InputMaybe<ElementPrevSiblingUpdateFieldInput>\n  firstChild?: InputMaybe<ElementFirstChildUpdateFieldInput>\n  parent?: InputMaybe<ElementParentUpdateFieldInput>\n  page?: InputMaybe<ElementPageUpdateFieldInput>\n  props?: InputMaybe<ElementPropsUpdateFieldInput>\n  parentComponent?: InputMaybe<ElementParentComponentUpdateFieldInput>\n  preRenderAction?: InputMaybe<ElementPreRenderActionUpdateFieldInput>\n  postRenderAction?: InputMaybe<ElementPostRenderActionUpdateFieldInput>\n  renderComponentType?: InputMaybe<ElementRenderComponentTypeUpdateFieldInput>\n  renderAtomType?: InputMaybe<ElementRenderAtomTypeUpdateFieldInput>\n}\n\nexport type ElementWhere = {\n  OR?: InputMaybe<Array<ElementWhere>>\n  AND?: InputMaybe<Array<ElementWhere>>\n  NOT?: InputMaybe<ElementWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  customCss?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  customCss_NOT?: InputMaybe<Scalars['String']>\n  customCss_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  customCss_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  customCss_MATCHES?: InputMaybe<Scalars['String']>\n  customCss_CONTAINS?: InputMaybe<Scalars['String']>\n  customCss_STARTS_WITH?: InputMaybe<Scalars['String']>\n  customCss_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  customCss_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  customCss_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  customCss_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  guiCss?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  guiCss_NOT?: InputMaybe<Scalars['String']>\n  guiCss_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  guiCss_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  guiCss_MATCHES?: InputMaybe<Scalars['String']>\n  guiCss_CONTAINS?: InputMaybe<Scalars['String']>\n  guiCss_STARTS_WITH?: InputMaybe<Scalars['String']>\n  guiCss_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  guiCss_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  guiCss_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  guiCss_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  propTransformationJs?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  propTransformationJs_NOT?: InputMaybe<Scalars['String']>\n  propTransformationJs_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  propTransformationJs_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  propTransformationJs_MATCHES?: InputMaybe<Scalars['String']>\n  propTransformationJs_CONTAINS?: InputMaybe<Scalars['String']>\n  propTransformationJs_STARTS_WITH?: InputMaybe<Scalars['String']>\n  propTransformationJs_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  propTransformationJs_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  propTransformationJs_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  propTransformationJs_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  renderForEachPropKey?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderForEachPropKey_NOT?: InputMaybe<Scalars['String']>\n  renderForEachPropKey_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderForEachPropKey_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  renderForEachPropKey_MATCHES?: InputMaybe<Scalars['String']>\n  renderForEachPropKey_CONTAINS?: InputMaybe<Scalars['String']>\n  renderForEachPropKey_STARTS_WITH?: InputMaybe<Scalars['String']>\n  renderForEachPropKey_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderForEachPropKey_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderForEachPropKey_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderForEachPropKey_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  renderIfExpression?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderIfExpression_NOT?: InputMaybe<Scalars['String']>\n  renderIfExpression_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderIfExpression_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  renderIfExpression_MATCHES?: InputMaybe<Scalars['String']>\n  renderIfExpression_CONTAINS?: InputMaybe<Scalars['String']>\n  renderIfExpression_STARTS_WITH?: InputMaybe<Scalars['String']>\n  renderIfExpression_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderIfExpression_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderIfExpression_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  renderIfExpression_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<ElementWhere>\n  nextSibling_NOT?: InputMaybe<ElementWhere>\n  nextSiblingAggregate?: InputMaybe<ElementNextSiblingAggregateInput>\n  prevSibling?: InputMaybe<ElementWhere>\n  prevSibling_NOT?: InputMaybe<ElementWhere>\n  prevSiblingAggregate?: InputMaybe<ElementPrevSiblingAggregateInput>\n  firstChild?: InputMaybe<ElementWhere>\n  firstChild_NOT?: InputMaybe<ElementWhere>\n  firstChildAggregate?: InputMaybe<ElementFirstChildAggregateInput>\n  parent?: InputMaybe<ElementWhere>\n  parent_NOT?: InputMaybe<ElementWhere>\n  parentAggregate?: InputMaybe<ElementParentAggregateInput>\n  page?: InputMaybe<PageWhere>\n  page_NOT?: InputMaybe<PageWhere>\n  pageAggregate?: InputMaybe<ElementPageAggregateInput>\n  props?: InputMaybe<PropWhere>\n  props_NOT?: InputMaybe<PropWhere>\n  propsAggregate?: InputMaybe<ElementPropsAggregateInput>\n  parentComponent?: InputMaybe<ComponentWhere>\n  parentComponent_NOT?: InputMaybe<ComponentWhere>\n  parentComponentAggregate?: InputMaybe<ElementParentComponentAggregateInput>\n  renderComponentType?: InputMaybe<ComponentWhere>\n  renderComponentType_NOT?: InputMaybe<ComponentWhere>\n  renderComponentTypeAggregate?: InputMaybe<ElementRenderComponentTypeAggregateInput>\n  renderAtomType?: InputMaybe<AtomWhere>\n  renderAtomType_NOT?: InputMaybe<AtomWhere>\n  renderAtomTypeAggregate?: InputMaybe<ElementRenderAtomTypeAggregateInput>\n  nextSiblingConnection?: InputMaybe<ElementNextSiblingConnectionWhere>\n  nextSiblingConnection_NOT?: InputMaybe<ElementNextSiblingConnectionWhere>\n  prevSiblingConnection?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  prevSiblingConnection_NOT?: InputMaybe<ElementPrevSiblingConnectionWhere>\n  firstChildConnection?: InputMaybe<ElementFirstChildConnectionWhere>\n  firstChildConnection_NOT?: InputMaybe<ElementFirstChildConnectionWhere>\n  parentConnection?: InputMaybe<ElementParentConnectionWhere>\n  parentConnection_NOT?: InputMaybe<ElementParentConnectionWhere>\n  pageConnection?: InputMaybe<ElementPageConnectionWhere>\n  pageConnection_NOT?: InputMaybe<ElementPageConnectionWhere>\n  propsConnection?: InputMaybe<ElementPropsConnectionWhere>\n  propsConnection_NOT?: InputMaybe<ElementPropsConnectionWhere>\n  parentComponentConnection?: InputMaybe<ElementParentComponentConnectionWhere>\n  parentComponentConnection_NOT?: InputMaybe<ElementParentComponentConnectionWhere>\n  preRenderActionConnection?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  preRenderActionConnection_NOT?: InputMaybe<ElementPreRenderActionConnectionWhere>\n  postRenderActionConnection?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  postRenderActionConnection_NOT?: InputMaybe<ElementPostRenderActionConnectionWhere>\n  renderComponentTypeConnection?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  renderComponentTypeConnection_NOT?: InputMaybe<ElementRenderComponentTypeConnectionWhere>\n  renderAtomTypeConnection?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n  renderAtomTypeConnection_NOT?: InputMaybe<ElementRenderAtomTypeConnectionWhere>\n}\n\nexport type EnumTypeAllowedValuesAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesAggregateInput>>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesAggregateInput>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesAggregateInput>\n  node?: InputMaybe<EnumTypeAllowedValuesNodeAggregationWhereInput>\n}\n\nexport type EnumTypeAllowedValuesConnectFieldInput = {\n  where?: InputMaybe<EnumTypeValueConnectWhere>\n  connect?: InputMaybe<Array<EnumTypeValueConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type EnumTypeAllowedValuesConnectionSort = {\n  node?: InputMaybe<EnumTypeValueSort>\n}\n\nexport type EnumTypeAllowedValuesConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesConnectionWhere>>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  node?: InputMaybe<EnumTypeValueWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<EnumTypeValueWhere>\n}\n\nexport type EnumTypeAllowedValuesCreateFieldInput = {\n  node: EnumTypeValueCreateInput\n}\n\nexport type EnumTypeAllowedValuesDeleteFieldInput = {\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  delete?: InputMaybe<EnumTypeValueDeleteInput>\n}\n\nexport type EnumTypeAllowedValuesDisconnectFieldInput = {\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  disconnect?: InputMaybe<EnumTypeValueDisconnectInput>\n}\n\nexport type EnumTypeAllowedValuesFieldInput = {\n  create?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n  connect?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n}\n\nexport type EnumTypeAllowedValuesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeAllowedValuesNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<EnumTypeAllowedValuesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeAllowedValuesNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  value_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  value_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  value_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  value_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  value_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  value_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  value_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  value_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  value_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  value_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  value_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  value_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  value_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  value_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  value_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  value_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  value_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  value_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  value_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  value_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  value_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeAllowedValuesUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeValueUpdateInput>\n}\n\nexport type EnumTypeAllowedValuesUpdateFieldInput = {\n  where?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  update?: InputMaybe<EnumTypeAllowedValuesUpdateConnectionInput>\n  connect?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n  disconnect?: InputMaybe<Array<EnumTypeAllowedValuesDisconnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n  delete?: InputMaybe<Array<EnumTypeAllowedValuesDeleteFieldInput>>\n}\n\nexport type EnumTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesConnectFieldInput>>\n}\n\nexport type EnumTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeConnectOrCreateWhere = {\n  node: EnumTypeUniqueWhere\n}\n\nexport type EnumTypeConnectWhere = {\n  node: EnumTypeWhere\n}\n\nexport type EnumTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  fieldRefs?: InputMaybe<EnumTypeFieldRefsFieldInput>\n  allowedValues?: InputMaybe<EnumTypeAllowedValuesFieldInput>\n}\n\nexport type EnumTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsDeleteFieldInput>>\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesDeleteFieldInput>>\n}\n\nexport type EnumTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsDisconnectFieldInput>>\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesDisconnectFieldInput>>\n}\n\nexport type EnumTypeFieldRefsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<EnumTypeFieldRefsAggregateInput>>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<EnumTypeFieldRefsAggregateInput>\n  node?: InputMaybe<EnumTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type EnumTypeFieldRefsConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type EnumTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type EnumTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeFieldRefsConnectionWhere>>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type EnumTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type EnumTypeFieldRefsDeleteFieldInput = {\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type EnumTypeFieldRefsDisconnectFieldInput = {\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type EnumTypeFieldRefsFieldInput = {\n  create?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n  connect?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n}\n\nexport type EnumTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeFieldRefsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<EnumTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeFieldRefsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type EnumTypeFieldRefsUpdateFieldInput = {\n  where?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  update?: InputMaybe<EnumTypeFieldRefsUpdateConnectionInput>\n  connect?: InputMaybe<Array<EnumTypeFieldRefsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<EnumTypeFieldRefsDisconnectFieldInput>>\n  create?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<EnumTypeFieldRefsDeleteFieldInput>>\n}\n\nexport type EnumTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type EnumTypeOptions = {\n  /** Specify one or more EnumTypeSort objects to sort EnumTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<EnumTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<EnumTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<EnumTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<EnumTypeOwnerAggregateInput>\n  node?: InputMaybe<EnumTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type EnumTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<EnumTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsCreateFieldInput>>\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesCreateFieldInput>>\n}\n\n/** Fields to sort EnumTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeSort object. */\nexport type EnumTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type EnumTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type EnumTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  fieldRefs?: InputMaybe<Array<EnumTypeFieldRefsUpdateFieldInput>>\n  allowedValues?: InputMaybe<Array<EnumTypeAllowedValuesUpdateFieldInput>>\n}\n\nexport type EnumTypeValueConnectInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n}\n\nexport type EnumTypeValueConnectOrCreateInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeValueConnectWhere = {\n  node: EnumTypeValueWhere\n}\n\nexport type EnumTypeValueCreateInput = {\n  id: Scalars['ID']\n  key: Scalars['String']\n  value: Scalars['String']\n  enumType?: InputMaybe<EnumTypeValueEnumTypeFieldInput>\n}\n\nexport type EnumTypeValueDeleteInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeDeleteFieldInput>\n}\n\nexport type EnumTypeValueDisconnectInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeDisconnectFieldInput>\n}\n\nexport type EnumTypeValueEnumTypeAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeAggregateInput>>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeAggregateInput>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeAggregateInput>\n  node?: InputMaybe<EnumTypeValueEnumTypeNodeAggregationWhereInput>\n}\n\nexport type EnumTypeValueEnumTypeConnectFieldInput = {\n  where?: InputMaybe<EnumTypeConnectWhere>\n  connect?: InputMaybe<EnumTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type EnumTypeValueEnumTypeConnectionSort = {\n  node?: InputMaybe<EnumTypeSort>\n}\n\nexport type EnumTypeValueEnumTypeConnectionWhere = {\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionWhere>>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeConnectionWhere>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  node?: InputMaybe<EnumTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<EnumTypeWhere>\n}\n\nexport type EnumTypeValueEnumTypeConnectOrCreateFieldInput = {\n  where: EnumTypeConnectOrCreateWhere\n  onCreate: EnumTypeValueEnumTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type EnumTypeValueEnumTypeConnectOrCreateFieldInputOnCreate = {\n  node: EnumTypeOnCreateInput\n}\n\nexport type EnumTypeValueEnumTypeCreateFieldInput = {\n  node: EnumTypeCreateInput\n}\n\nexport type EnumTypeValueEnumTypeDeleteFieldInput = {\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n}\n\nexport type EnumTypeValueEnumTypeDisconnectFieldInput = {\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n}\n\nexport type EnumTypeValueEnumTypeFieldInput = {\n  create?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n  connect?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeValueEnumTypeNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<EnumTypeValueEnumTypeNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<EnumTypeValueEnumTypeNodeAggregationWhereInput>>\n  NOT?: InputMaybe<EnumTypeValueEnumTypeNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeValueEnumTypeUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeUpdateInput>\n}\n\nexport type EnumTypeValueEnumTypeUpdateFieldInput = {\n  where?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  update?: InputMaybe<EnumTypeValueEnumTypeUpdateConnectionInput>\n  connect?: InputMaybe<EnumTypeValueEnumTypeConnectFieldInput>\n  disconnect?: InputMaybe<EnumTypeValueEnumTypeDisconnectFieldInput>\n  create?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n  delete?: InputMaybe<EnumTypeValueEnumTypeDeleteFieldInput>\n  connectOrCreate?: InputMaybe<EnumTypeValueEnumTypeConnectOrCreateFieldInput>\n}\n\nexport type EnumTypeValueOptions = {\n  /** Specify one or more EnumTypeValueSort objects to sort EnumTypeValues by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<EnumTypeValueSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type EnumTypeValueRelationInput = {\n  enumType?: InputMaybe<EnumTypeValueEnumTypeCreateFieldInput>\n}\n\n/** Fields to sort EnumTypeValues by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeValueSort object. */\nexport type EnumTypeValueSort = {\n  id?: InputMaybe<SortDirection>\n  key?: InputMaybe<SortDirection>\n  value?: InputMaybe<SortDirection>\n}\n\nexport type EnumTypeValueUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  key?: InputMaybe<Scalars['String']>\n  value?: InputMaybe<Scalars['String']>\n  enumType?: InputMaybe<EnumTypeValueEnumTypeUpdateFieldInput>\n}\n\nexport type EnumTypeValueWhere = {\n  OR?: InputMaybe<Array<EnumTypeValueWhere>>\n  AND?: InputMaybe<Array<EnumTypeValueWhere>>\n  NOT?: InputMaybe<EnumTypeValueWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  key?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT?: InputMaybe<Scalars['String']>\n  key_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  key_MATCHES?: InputMaybe<Scalars['String']>\n  key_CONTAINS?: InputMaybe<Scalars['String']>\n  key_STARTS_WITH?: InputMaybe<Scalars['String']>\n  key_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  value?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  value_NOT?: InputMaybe<Scalars['String']>\n  value_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  value_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  value_MATCHES?: InputMaybe<Scalars['String']>\n  value_CONTAINS?: InputMaybe<Scalars['String']>\n  value_STARTS_WITH?: InputMaybe<Scalars['String']>\n  value_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  value_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  value_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  value_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  enumType?: InputMaybe<EnumTypeWhere>\n  enumType_NOT?: InputMaybe<EnumTypeWhere>\n  enumTypeAggregate?: InputMaybe<EnumTypeValueEnumTypeAggregateInput>\n  enumTypeConnection?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n  enumTypeConnection_NOT?: InputMaybe<EnumTypeValueEnumTypeConnectionWhere>\n}\n\nexport type EnumTypeWhere = {\n  OR?: InputMaybe<Array<EnumTypeWhere>>\n  AND?: InputMaybe<Array<EnumTypeWhere>>\n  NOT?: InputMaybe<EnumTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<EnumTypeOwnerAggregateInput>\n  /** @deprecated Use `fieldRefs_SOME` instead. */\n  fieldRefs?: InputMaybe<FieldWhere>\n  /** @deprecated Use `fieldRefs_NONE` instead. */\n  fieldRefs_NOT?: InputMaybe<FieldWhere>\n  fieldRefsAggregate?: InputMaybe<EnumTypeFieldRefsAggregateInput>\n  /** Return EnumTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return EnumTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  /** @deprecated Use `allowedValues_SOME` instead. */\n  allowedValues?: InputMaybe<EnumTypeValueWhere>\n  /** @deprecated Use `allowedValues_NONE` instead. */\n  allowedValues_NOT?: InputMaybe<EnumTypeValueWhere>\n  allowedValuesAggregate?: InputMaybe<EnumTypeAllowedValuesAggregateInput>\n  /** Return EnumTypes where all of the related EnumTypeValues match this filter */\n  allowedValues_ALL?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where none of the related EnumTypeValues match this filter */\n  allowedValues_NONE?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where one of the related EnumTypeValues match this filter */\n  allowedValues_SINGLE?: InputMaybe<EnumTypeValueWhere>\n  /** Return EnumTypes where some of the related EnumTypeValues match this filter */\n  allowedValues_SOME?: InputMaybe<EnumTypeValueWhere>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_SOME` instead. */\n  fieldRefsConnection?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_NONE` instead. */\n  fieldRefsConnection_NOT?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where all of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where none of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where one of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** Return EnumTypes where some of the related EnumTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<EnumTypeFieldRefsConnectionWhere>\n  /** @deprecated Use `allowedValuesConnection_SOME` instead. */\n  allowedValuesConnection?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** @deprecated Use `allowedValuesConnection_NONE` instead. */\n  allowedValuesConnection_NOT?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where all of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_ALL?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where none of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_NONE?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where one of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_SINGLE?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n  /** Return EnumTypes where some of the related EnumTypeAllowedValuesConnections match this filter */\n  allowedValuesConnection_SOME?: InputMaybe<EnumTypeAllowedValuesConnectionWhere>\n}\n\nexport type FieldApiAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<FieldApiAggregateInput>>\n  OR?: InputMaybe<Array<FieldApiAggregateInput>>\n  NOT?: InputMaybe<FieldApiAggregateInput>\n  node?: InputMaybe<FieldApiNodeAggregationWhereInput>\n}\n\nexport type FieldApiConnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type FieldApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type FieldApiConnectionWhere = {\n  AND?: InputMaybe<Array<FieldApiConnectionWhere>>\n  OR?: InputMaybe<Array<FieldApiConnectionWhere>>\n  NOT?: InputMaybe<FieldApiConnectionWhere>\n  node?: InputMaybe<InterfaceTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type FieldApiConnectOrCreateFieldInput = {\n  where: InterfaceTypeConnectOrCreateWhere\n  onCreate: FieldApiConnectOrCreateFieldInputOnCreate\n}\n\nexport type FieldApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type FieldApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type FieldApiDeleteFieldInput = {\n  where?: InputMaybe<FieldApiConnectionWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type FieldApiDisconnectFieldInput = {\n  where?: InputMaybe<FieldApiConnectionWhere>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n}\n\nexport type FieldApiFieldInput = {\n  create?: InputMaybe<FieldApiCreateFieldInput>\n  connect?: InputMaybe<FieldApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n}\n\nexport type FieldApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldApiNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<FieldApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldApiNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type FieldApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type FieldApiUpdateFieldInput = {\n  where?: InputMaybe<FieldApiConnectionWhere>\n  update?: InputMaybe<FieldApiUpdateConnectionInput>\n  connect?: InputMaybe<FieldApiConnectFieldInput>\n  disconnect?: InputMaybe<FieldApiDisconnectFieldInput>\n  create?: InputMaybe<FieldApiCreateFieldInput>\n  delete?: InputMaybe<FieldApiDeleteFieldInput>\n  connectOrCreate?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n}\n\nexport type FieldConnectInput = {\n  nextSibling?: InputMaybe<FieldNextSiblingConnectFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeConnectFieldInput>\n  api?: InputMaybe<FieldApiConnectFieldInput>\n}\n\nexport type FieldConnectOrCreateInput = {\n  api?: InputMaybe<FieldApiConnectOrCreateFieldInput>\n}\n\nexport type FieldConnectWhere = {\n  node: FieldWhere\n}\n\nexport type FieldCreateInput = {\n  id: Scalars['ID']\n  key: Scalars['String']\n  name?: InputMaybe<Scalars['String']>\n  description?: InputMaybe<Scalars['String']>\n  validationRules?: InputMaybe<Scalars['String']>\n  defaultValues?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<FieldNextSiblingFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeFieldInput>\n  api?: InputMaybe<FieldApiFieldInput>\n}\n\nexport type FieldDeleteInput = {\n  nextSibling?: InputMaybe<FieldNextSiblingDeleteFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingDeleteFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeDeleteFieldInput>\n  api?: InputMaybe<FieldApiDeleteFieldInput>\n}\n\nexport type FieldDisconnectInput = {\n  nextSibling?: InputMaybe<FieldNextSiblingDisconnectFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingDisconnectFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeDisconnectFieldInput>\n  api?: InputMaybe<FieldApiDisconnectFieldInput>\n}\n\nexport type FieldFieldTypeConnectFieldInput = {\n  connect?: InputMaybe<IBaseTypeConnectInput>\n  where?: InputMaybe<IBaseTypeConnectWhere>\n}\n\nexport type FieldFieldTypeConnectionSort = {\n  node?: InputMaybe<IBaseTypeSort>\n}\n\nexport type FieldFieldTypeConnectionWhere = {\n  AND?: InputMaybe<Array<FieldFieldTypeConnectionWhere>>\n  OR?: InputMaybe<Array<FieldFieldTypeConnectionWhere>>\n  NOT?: InputMaybe<FieldFieldTypeConnectionWhere>\n  node?: InputMaybe<IBaseTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<IBaseTypeWhere>\n}\n\nexport type FieldFieldTypeCreateFieldInput = {\n  node: IBaseTypeCreateInput\n}\n\nexport type FieldFieldTypeDeleteFieldInput = {\n  delete?: InputMaybe<IBaseTypeDeleteInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldFieldTypeDisconnectFieldInput = {\n  disconnect?: InputMaybe<IBaseTypeDisconnectInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldFieldTypeFieldInput = {\n  create?: InputMaybe<FieldFieldTypeCreateFieldInput>\n  connect?: InputMaybe<FieldFieldTypeConnectFieldInput>\n}\n\nexport type FieldFieldTypeUpdateConnectionInput = {\n  node?: InputMaybe<IBaseTypeUpdateInput>\n}\n\nexport type FieldFieldTypeUpdateFieldInput = {\n  connect?: InputMaybe<FieldFieldTypeConnectFieldInput>\n  create?: InputMaybe<FieldFieldTypeCreateFieldInput>\n  delete?: InputMaybe<FieldFieldTypeDeleteFieldInput>\n  disconnect?: InputMaybe<FieldFieldTypeDisconnectFieldInput>\n  update?: InputMaybe<FieldFieldTypeUpdateConnectionInput>\n  where?: InputMaybe<FieldFieldTypeConnectionWhere>\n}\n\nexport type FieldNextSiblingAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<FieldNextSiblingAggregateInput>>\n  OR?: InputMaybe<Array<FieldNextSiblingAggregateInput>>\n  NOT?: InputMaybe<FieldNextSiblingAggregateInput>\n  node?: InputMaybe<FieldNextSiblingNodeAggregationWhereInput>\n}\n\nexport type FieldNextSiblingConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<FieldConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type FieldNextSiblingConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type FieldNextSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<FieldNextSiblingConnectionWhere>>\n  OR?: InputMaybe<Array<FieldNextSiblingConnectionWhere>>\n  NOT?: InputMaybe<FieldNextSiblingConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type FieldNextSiblingCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type FieldNextSiblingDeleteFieldInput = {\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type FieldNextSiblingDisconnectFieldInput = {\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type FieldNextSiblingFieldInput = {\n  create?: InputMaybe<FieldNextSiblingCreateFieldInput>\n  connect?: InputMaybe<FieldNextSiblingConnectFieldInput>\n}\n\nexport type FieldNextSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldNextSiblingNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<FieldNextSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldNextSiblingNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type FieldNextSiblingUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type FieldNextSiblingUpdateFieldInput = {\n  where?: InputMaybe<FieldNextSiblingConnectionWhere>\n  update?: InputMaybe<FieldNextSiblingUpdateConnectionInput>\n  connect?: InputMaybe<FieldNextSiblingConnectFieldInput>\n  disconnect?: InputMaybe<FieldNextSiblingDisconnectFieldInput>\n  create?: InputMaybe<FieldNextSiblingCreateFieldInput>\n  delete?: InputMaybe<FieldNextSiblingDeleteFieldInput>\n}\n\nexport type FieldOptions = {\n  /** Specify one or more FieldSort objects to sort Fields by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<FieldSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type FieldPrevSiblingAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<FieldPrevSiblingAggregateInput>>\n  OR?: InputMaybe<Array<FieldPrevSiblingAggregateInput>>\n  NOT?: InputMaybe<FieldPrevSiblingAggregateInput>\n  node?: InputMaybe<FieldPrevSiblingNodeAggregationWhereInput>\n}\n\nexport type FieldPrevSiblingConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<FieldConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type FieldPrevSiblingConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type FieldPrevSiblingConnectionWhere = {\n  AND?: InputMaybe<Array<FieldPrevSiblingConnectionWhere>>\n  OR?: InputMaybe<Array<FieldPrevSiblingConnectionWhere>>\n  NOT?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type FieldPrevSiblingCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type FieldPrevSiblingDeleteFieldInput = {\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type FieldPrevSiblingDisconnectFieldInput = {\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type FieldPrevSiblingFieldInput = {\n  create?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n  connect?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n}\n\nexport type FieldPrevSiblingNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<FieldPrevSiblingNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<FieldPrevSiblingNodeAggregationWhereInput>>\n  NOT?: InputMaybe<FieldPrevSiblingNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type FieldPrevSiblingUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type FieldPrevSiblingUpdateFieldInput = {\n  where?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  update?: InputMaybe<FieldPrevSiblingUpdateConnectionInput>\n  connect?: InputMaybe<FieldPrevSiblingConnectFieldInput>\n  disconnect?: InputMaybe<FieldPrevSiblingDisconnectFieldInput>\n  create?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n  delete?: InputMaybe<FieldPrevSiblingDeleteFieldInput>\n}\n\nexport type FieldRelationInput = {\n  nextSibling?: InputMaybe<FieldNextSiblingCreateFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingCreateFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeCreateFieldInput>\n  api?: InputMaybe<FieldApiCreateFieldInput>\n}\n\n/** Fields to sort Fields by. The order in which sorts are applied is not guaranteed when specifying many fields in one FieldSort object. */\nexport type FieldSort = {\n  id?: InputMaybe<SortDirection>\n  key?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  description?: InputMaybe<SortDirection>\n  validationRules?: InputMaybe<SortDirection>\n  defaultValues?: InputMaybe<SortDirection>\n}\n\nexport type FieldUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  key?: InputMaybe<Scalars['String']>\n  name?: InputMaybe<Scalars['String']>\n  description?: InputMaybe<Scalars['String']>\n  validationRules?: InputMaybe<Scalars['String']>\n  defaultValues?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<FieldNextSiblingUpdateFieldInput>\n  prevSibling?: InputMaybe<FieldPrevSiblingUpdateFieldInput>\n  fieldType?: InputMaybe<FieldFieldTypeUpdateFieldInput>\n  api?: InputMaybe<FieldApiUpdateFieldInput>\n}\n\nexport type FieldWhere = {\n  OR?: InputMaybe<Array<FieldWhere>>\n  AND?: InputMaybe<Array<FieldWhere>>\n  NOT?: InputMaybe<FieldWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  key?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT?: InputMaybe<Scalars['String']>\n  key_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  key_MATCHES?: InputMaybe<Scalars['String']>\n  key_CONTAINS?: InputMaybe<Scalars['String']>\n  key_STARTS_WITH?: InputMaybe<Scalars['String']>\n  key_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  key_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  description?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  description_NOT?: InputMaybe<Scalars['String']>\n  description_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  description_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  description_MATCHES?: InputMaybe<Scalars['String']>\n  description_CONTAINS?: InputMaybe<Scalars['String']>\n  description_STARTS_WITH?: InputMaybe<Scalars['String']>\n  description_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  description_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  description_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  description_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  validationRules?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  validationRules_NOT?: InputMaybe<Scalars['String']>\n  validationRules_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  validationRules_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  validationRules_MATCHES?: InputMaybe<Scalars['String']>\n  validationRules_CONTAINS?: InputMaybe<Scalars['String']>\n  validationRules_STARTS_WITH?: InputMaybe<Scalars['String']>\n  validationRules_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  validationRules_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  validationRules_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  validationRules_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  defaultValues?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  defaultValues_NOT?: InputMaybe<Scalars['String']>\n  defaultValues_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  defaultValues_NOT_IN?: InputMaybe<Array<InputMaybe<Scalars['String']>>>\n  defaultValues_MATCHES?: InputMaybe<Scalars['String']>\n  defaultValues_CONTAINS?: InputMaybe<Scalars['String']>\n  defaultValues_STARTS_WITH?: InputMaybe<Scalars['String']>\n  defaultValues_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  defaultValues_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  defaultValues_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  defaultValues_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  nextSibling?: InputMaybe<FieldWhere>\n  nextSibling_NOT?: InputMaybe<FieldWhere>\n  nextSiblingAggregate?: InputMaybe<FieldNextSiblingAggregateInput>\n  prevSibling?: InputMaybe<FieldWhere>\n  prevSibling_NOT?: InputMaybe<FieldWhere>\n  prevSiblingAggregate?: InputMaybe<FieldPrevSiblingAggregateInput>\n  api?: InputMaybe<InterfaceTypeWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<FieldApiAggregateInput>\n  nextSiblingConnection?: InputMaybe<FieldNextSiblingConnectionWhere>\n  nextSiblingConnection_NOT?: InputMaybe<FieldNextSiblingConnectionWhere>\n  prevSiblingConnection?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  prevSiblingConnection_NOT?: InputMaybe<FieldPrevSiblingConnectionWhere>\n  fieldTypeConnection?: InputMaybe<FieldFieldTypeConnectionWhere>\n  fieldTypeConnection_NOT?: InputMaybe<FieldFieldTypeConnectionWhere>\n  apiConnection?: InputMaybe<FieldApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<FieldApiConnectionWhere>\n}\n\nexport type GetBaseTypesReturnCreateInput = {\n  totalCount: Scalars['Int']\n}\n\nexport type GetBaseTypesReturnOptions = {\n  /** Specify one or more GetBaseTypesReturnSort objects to sort GetBaseTypesReturns by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<GetBaseTypesReturnSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort GetBaseTypesReturns by. The order in which sorts are applied is not guaranteed when specifying many fields in one GetBaseTypesReturnSort object. */\nexport type GetBaseTypesReturnSort = {\n  totalCount?: InputMaybe<SortDirection>\n}\n\nexport type GetBaseTypesReturnUpdateInput = {\n  totalCount?: InputMaybe<Scalars['Int']>\n  totalCount_INCREMENT?: InputMaybe<Scalars['Int']>\n  totalCount_DECREMENT?: InputMaybe<Scalars['Int']>\n}\n\nexport type GetBaseTypesReturnWhere = {\n  OR?: InputMaybe<Array<GetBaseTypesReturnWhere>>\n  AND?: InputMaybe<Array<GetBaseTypesReturnWhere>>\n  NOT?: InputMaybe<GetBaseTypesReturnWhere>\n  totalCount?: InputMaybe<Scalars['Int']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  totalCount_NOT?: InputMaybe<Scalars['Int']>\n  totalCount_IN?: InputMaybe<Array<Scalars['Int']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  totalCount_NOT_IN?: InputMaybe<Array<Scalars['Int']>>\n  totalCount_LT?: InputMaybe<Scalars['Int']>\n  totalCount_LTE?: InputMaybe<Scalars['Int']>\n  totalCount_GT?: InputMaybe<Scalars['Int']>\n  totalCount_GTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type HookConfigAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<HookConfigAggregateInput>>\n  OR?: InputMaybe<Array<HookConfigAggregateInput>>\n  NOT?: InputMaybe<HookConfigAggregateInput>\n  node?: InputMaybe<HookConfigNodeAggregationWhereInput>\n}\n\nexport type HookConfigConnectFieldInput = {\n  where?: InputMaybe<PropConnectWhere>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type HookConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type HookConfigConnectionWhere = {\n  AND?: InputMaybe<Array<HookConfigConnectionWhere>>\n  OR?: InputMaybe<Array<HookConfigConnectionWhere>>\n  NOT?: InputMaybe<HookConfigConnectionWhere>\n  node?: InputMaybe<PropWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PropWhere>\n}\n\nexport type HookConfigConnectOrCreateFieldInput = {\n  where: PropConnectOrCreateWhere\n  onCreate: HookConfigConnectOrCreateFieldInputOnCreate\n}\n\nexport type HookConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type HookConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type HookConfigDeleteFieldInput = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookConfigDisconnectFieldInput = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n}\n\nexport type HookConfigFieldInput = {\n  create?: InputMaybe<HookConfigCreateFieldInput>\n  connect?: InputMaybe<HookConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n}\n\nexport type HookConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<HookConfigNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<HookConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<HookConfigNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type HookConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type HookConfigUpdateFieldInput = {\n  where?: InputMaybe<HookConfigConnectionWhere>\n  update?: InputMaybe<HookConfigUpdateConnectionInput>\n  connect?: InputMaybe<HookConfigConnectFieldInput>\n  disconnect?: InputMaybe<HookConfigDisconnectFieldInput>\n  create?: InputMaybe<HookConfigCreateFieldInput>\n  delete?: InputMaybe<HookConfigDeleteFieldInput>\n  connectOrCreate?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n}\n\nexport type HookConnectInput = {\n  config?: InputMaybe<HookConfigConnectFieldInput>\n  element?: InputMaybe<HookElementConnectFieldInput>\n}\n\nexport type HookConnectOrCreateInput = {\n  config?: InputMaybe<HookConfigConnectOrCreateFieldInput>\n  element?: InputMaybe<HookElementConnectOrCreateFieldInput>\n}\n\nexport type HookCreateInput = {\n  type: AtomType\n  config?: InputMaybe<HookConfigFieldInput>\n  element?: InputMaybe<HookElementFieldInput>\n}\n\nexport type HookDeleteInput = {\n  config?: InputMaybe<HookConfigDeleteFieldInput>\n  element?: InputMaybe<HookElementDeleteFieldInput>\n}\n\nexport type HookDisconnectInput = {\n  config?: InputMaybe<HookConfigDisconnectFieldInput>\n  element?: InputMaybe<HookElementDisconnectFieldInput>\n}\n\nexport type HookElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<HookElementAggregateInput>>\n  OR?: InputMaybe<Array<HookElementAggregateInput>>\n  NOT?: InputMaybe<HookElementAggregateInput>\n  node?: InputMaybe<HookElementNodeAggregationWhereInput>\n}\n\nexport type HookElementConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type HookElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type HookElementConnectionWhere = {\n  AND?: InputMaybe<Array<HookElementConnectionWhere>>\n  OR?: InputMaybe<Array<HookElementConnectionWhere>>\n  NOT?: InputMaybe<HookElementConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type HookElementConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: HookElementConnectOrCreateFieldInputOnCreate\n}\n\nexport type HookElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type HookElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type HookElementDeleteFieldInput = {\n  where?: InputMaybe<HookElementConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type HookElementDisconnectFieldInput = {\n  where?: InputMaybe<HookElementConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type HookElementFieldInput = {\n  create?: InputMaybe<HookElementCreateFieldInput>\n  connect?: InputMaybe<HookElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<HookElementConnectOrCreateFieldInput>\n}\n\nexport type HookElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<HookElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<HookElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<HookElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type HookElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type HookElementUpdateFieldInput = {\n  where?: InputMaybe<HookElementConnectionWhere>\n  update?: InputMaybe<HookElementUpdateConnectionInput>\n  connect?: InputMaybe<HookElementConnectFieldInput>\n  disconnect?: InputMaybe<HookElementDisconnectFieldInput>\n  create?: InputMaybe<HookElementCreateFieldInput>\n  delete?: InputMaybe<HookElementDeleteFieldInput>\n  connectOrCreate?: InputMaybe<HookElementConnectOrCreateFieldInput>\n}\n\nexport type HookOptions = {\n  /** Specify one or more HookSort objects to sort Hooks by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<HookSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type HookRelationInput = {\n  config?: InputMaybe<HookConfigCreateFieldInput>\n  element?: InputMaybe<HookElementCreateFieldInput>\n}\n\n/** Fields to sort Hooks by. The order in which sorts are applied is not guaranteed when specifying many fields in one HookSort object. */\nexport type HookSort = {\n  id?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type HookUpdateInput = {\n  type?: InputMaybe<AtomType>\n  config?: InputMaybe<HookConfigUpdateFieldInput>\n  element?: InputMaybe<HookElementUpdateFieldInput>\n}\n\nexport type HookWhere = {\n  OR?: InputMaybe<Array<HookWhere>>\n  AND?: InputMaybe<Array<HookWhere>>\n  NOT?: InputMaybe<HookWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  type?: InputMaybe<AtomType>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<AtomType>\n  type_IN?: InputMaybe<Array<AtomType>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<AtomType>>\n  config?: InputMaybe<PropWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<HookConfigAggregateInput>\n  element?: InputMaybe<ElementWhere>\n  element_NOT?: InputMaybe<ElementWhere>\n  elementAggregate?: InputMaybe<HookElementAggregateInput>\n  configConnection?: InputMaybe<HookConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<HookConfigConnectionWhere>\n  elementConnection?: InputMaybe<HookElementConnectionWhere>\n  elementConnection_NOT?: InputMaybe<HookElementConnectionWhere>\n}\n\nexport type IBaseTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  _on?: InputMaybe<IBaseTypeImplementationsConnectInput>\n}\n\nexport type IBaseTypeConnectWhere = {\n  node: IBaseTypeWhere\n}\n\nexport type IBaseTypeCreateInput = {\n  BaseType?: InputMaybe<BaseTypeCreateInput>\n  PrimitiveType?: InputMaybe<PrimitiveTypeCreateInput>\n  ArrayType?: InputMaybe<ArrayTypeCreateInput>\n  UnionType?: InputMaybe<UnionTypeCreateInput>\n  InterfaceType?: InputMaybe<InterfaceTypeCreateInput>\n  ElementType?: InputMaybe<ElementTypeCreateInput>\n  RenderPropType?: InputMaybe<RenderPropTypeCreateInput>\n  ReactNodeType?: InputMaybe<ReactNodeTypeCreateInput>\n  EnumType?: InputMaybe<EnumTypeCreateInput>\n  LambdaType?: InputMaybe<LambdaTypeCreateInput>\n  PageType?: InputMaybe<PageTypeCreateInput>\n  AppType?: InputMaybe<AppTypeCreateInput>\n  ActionType?: InputMaybe<ActionTypeCreateInput>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeCreateInput>\n}\n\nexport type IBaseTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  _on?: InputMaybe<IBaseTypeImplementationsDeleteInput>\n}\n\nexport type IBaseTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  _on?: InputMaybe<IBaseTypeImplementationsDisconnectInput>\n}\n\nexport type IBaseTypeImplementationsConnectInput = {\n  BaseType?: InputMaybe<Array<BaseTypeConnectInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeConnectInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeConnectInput>>\n  UnionType?: InputMaybe<Array<UnionTypeConnectInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeConnectInput>>\n  ElementType?: InputMaybe<Array<ElementTypeConnectInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeConnectInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeConnectInput>>\n  EnumType?: InputMaybe<Array<EnumTypeConnectInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeConnectInput>>\n  PageType?: InputMaybe<Array<PageTypeConnectInput>>\n  AppType?: InputMaybe<Array<AppTypeConnectInput>>\n  ActionType?: InputMaybe<Array<ActionTypeConnectInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeConnectInput>>\n}\n\nexport type IBaseTypeImplementationsDeleteInput = {\n  BaseType?: InputMaybe<Array<BaseTypeDeleteInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeDeleteInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeDeleteInput>>\n  UnionType?: InputMaybe<Array<UnionTypeDeleteInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeDeleteInput>>\n  ElementType?: InputMaybe<Array<ElementTypeDeleteInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeDeleteInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeDeleteInput>>\n  EnumType?: InputMaybe<Array<EnumTypeDeleteInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeDeleteInput>>\n  PageType?: InputMaybe<Array<PageTypeDeleteInput>>\n  AppType?: InputMaybe<Array<AppTypeDeleteInput>>\n  ActionType?: InputMaybe<Array<ActionTypeDeleteInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeDeleteInput>>\n}\n\nexport type IBaseTypeImplementationsDisconnectInput = {\n  BaseType?: InputMaybe<Array<BaseTypeDisconnectInput>>\n  PrimitiveType?: InputMaybe<Array<PrimitiveTypeDisconnectInput>>\n  ArrayType?: InputMaybe<Array<ArrayTypeDisconnectInput>>\n  UnionType?: InputMaybe<Array<UnionTypeDisconnectInput>>\n  InterfaceType?: InputMaybe<Array<InterfaceTypeDisconnectInput>>\n  ElementType?: InputMaybe<Array<ElementTypeDisconnectInput>>\n  RenderPropType?: InputMaybe<Array<RenderPropTypeDisconnectInput>>\n  ReactNodeType?: InputMaybe<Array<ReactNodeTypeDisconnectInput>>\n  EnumType?: InputMaybe<Array<EnumTypeDisconnectInput>>\n  LambdaType?: InputMaybe<Array<LambdaTypeDisconnectInput>>\n  PageType?: InputMaybe<Array<PageTypeDisconnectInput>>\n  AppType?: InputMaybe<Array<AppTypeDisconnectInput>>\n  ActionType?: InputMaybe<Array<ActionTypeDisconnectInput>>\n  CodeMirrorType?: InputMaybe<Array<CodeMirrorTypeDisconnectInput>>\n}\n\nexport type IBaseTypeImplementationsUpdateInput = {\n  BaseType?: InputMaybe<BaseTypeUpdateInput>\n  PrimitiveType?: InputMaybe<PrimitiveTypeUpdateInput>\n  ArrayType?: InputMaybe<ArrayTypeUpdateInput>\n  UnionType?: InputMaybe<UnionTypeUpdateInput>\n  InterfaceType?: InputMaybe<InterfaceTypeUpdateInput>\n  ElementType?: InputMaybe<ElementTypeUpdateInput>\n  RenderPropType?: InputMaybe<RenderPropTypeUpdateInput>\n  ReactNodeType?: InputMaybe<ReactNodeTypeUpdateInput>\n  EnumType?: InputMaybe<EnumTypeUpdateInput>\n  LambdaType?: InputMaybe<LambdaTypeUpdateInput>\n  PageType?: InputMaybe<PageTypeUpdateInput>\n  AppType?: InputMaybe<AppTypeUpdateInput>\n  ActionType?: InputMaybe<ActionTypeUpdateInput>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeUpdateInput>\n}\n\nexport type IBaseTypeImplementationsWhere = {\n  BaseType?: InputMaybe<BaseTypeWhere>\n  PrimitiveType?: InputMaybe<PrimitiveTypeWhere>\n  ArrayType?: InputMaybe<ArrayTypeWhere>\n  UnionType?: InputMaybe<UnionTypeWhere>\n  InterfaceType?: InputMaybe<InterfaceTypeWhere>\n  ElementType?: InputMaybe<ElementTypeWhere>\n  RenderPropType?: InputMaybe<RenderPropTypeWhere>\n  ReactNodeType?: InputMaybe<ReactNodeTypeWhere>\n  EnumType?: InputMaybe<EnumTypeWhere>\n  LambdaType?: InputMaybe<LambdaTypeWhere>\n  PageType?: InputMaybe<PageTypeWhere>\n  AppType?: InputMaybe<AppTypeWhere>\n  ActionType?: InputMaybe<ActionTypeWhere>\n  CodeMirrorType?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type IBaseTypeOptions = {\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n  /** Specify one or more IBaseTypeSort objects to sort IBaseTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InputMaybe<IBaseTypeSort>>>\n}\n\nexport type IBaseTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<IBaseTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<IBaseTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<IBaseTypeOwnerAggregateInput>\n  node?: InputMaybe<IBaseTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type IBaseTypeOwnerConnectFieldInput = {\n  where?: InputMaybe<UserConnectWhere>\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type IBaseTypeOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type IBaseTypeOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<IBaseTypeOwnerConnectionWhere>>\n  OR?: InputMaybe<Array<IBaseTypeOwnerConnectionWhere>>\n  NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  node?: InputMaybe<UserWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<UserWhere>\n}\n\nexport type IBaseTypeOwnerConnectOrCreateFieldInput = {\n  where: UserConnectOrCreateWhere\n  onCreate: IBaseTypeOwnerConnectOrCreateFieldInputOnCreate\n}\n\nexport type IBaseTypeOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type IBaseTypeOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type IBaseTypeOwnerDeleteFieldInput = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  delete?: InputMaybe<UserDeleteInput>\n}\n\nexport type IBaseTypeOwnerDisconnectFieldInput = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  disconnect?: InputMaybe<UserDisconnectInput>\n}\n\nexport type IBaseTypeOwnerFieldInput = {\n  create?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  connect?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type IBaseTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<IBaseTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<IBaseTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<IBaseTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type IBaseTypeOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type IBaseTypeOwnerUpdateFieldInput = {\n  where?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  update?: InputMaybe<IBaseTypeOwnerUpdateConnectionInput>\n  connect?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  disconnect?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  create?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  delete?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  connectOrCreate?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\n/** Fields to sort IBaseTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one IBaseTypeSort object. */\nexport type IBaseTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type IBaseTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  _on?: InputMaybe<IBaseTypeImplementationsUpdateInput>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type IBaseTypeWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  _on?: InputMaybe<IBaseTypeImplementationsWhere>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<IBaseTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsAggregateInput>>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsAggregateInput>\n  node?: InputMaybe<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type InterfaceTypeApiOfAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionWhere>>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type InterfaceTypeApiOfAtomsConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: InterfaceTypeApiOfAtomsConnectOrCreateFieldInputOnCreate\n}\n\nexport type InterfaceTypeApiOfAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type InterfaceTypeApiOfAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type InterfaceTypeApiOfAtomsDeleteFieldInput = {\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type InterfaceTypeApiOfAtomsDisconnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type InterfaceTypeApiOfAtomsFieldInput = {\n  create?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n  connect?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n}\n\nexport type InterfaceTypeApiOfAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeApiOfAtomsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type InterfaceTypeApiOfAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type InterfaceTypeApiOfAtomsUpdateFieldInput = {\n  where?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  update?: InputMaybe<InterfaceTypeApiOfAtomsUpdateConnectionInput>\n  connect?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeApiOfAtomsDisconnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeApiOfAtomsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n}\n\nexport type InterfaceTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsConnectFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n}\n\nexport type InterfaceTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n  apiOfAtoms?: InputMaybe<\n    Array<InterfaceTypeApiOfAtomsConnectOrCreateFieldInput>\n  >\n}\n\nexport type InterfaceTypeConnectOrCreateWhere = {\n  node: InterfaceTypeUniqueWhere\n}\n\nexport type InterfaceTypeConnectWhere = {\n  node: InterfaceTypeWhere\n}\n\nexport type InterfaceTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  fieldRefs?: InputMaybe<InterfaceTypeFieldRefsFieldInput>\n  apiOfAtoms?: InputMaybe<InterfaceTypeApiOfAtomsFieldInput>\n  fields?: InputMaybe<InterfaceTypeFieldsFieldInput>\n}\n\nexport type InterfaceTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsDeleteFieldInput>>\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsDeleteFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsDeleteFieldInput>>\n}\n\nexport type InterfaceTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsDisconnectFieldInput>>\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsDisconnectFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsDisconnectFieldInput>>\n}\n\nexport type InterfaceTypeFieldRefsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsAggregateInput>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsAggregateInput>\n  node?: InputMaybe<InterfaceTypeFieldRefsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeFieldRefsConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type InterfaceTypeFieldRefsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type InterfaceTypeFieldRefsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionWhere>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type InterfaceTypeFieldRefsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type InterfaceTypeFieldRefsDeleteFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type InterfaceTypeFieldRefsDisconnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type InterfaceTypeFieldRefsFieldInput = {\n  create?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n  connect?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n}\n\nexport type InterfaceTypeFieldRefsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldRefsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldRefsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldRefsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type InterfaceTypeFieldRefsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type InterfaceTypeFieldRefsUpdateFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  update?: InputMaybe<InterfaceTypeFieldRefsUpdateConnectionInput>\n  connect?: InputMaybe<Array<InterfaceTypeFieldRefsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeFieldRefsDisconnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeFieldRefsDeleteFieldInput>>\n}\n\nexport type InterfaceTypeFieldsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<InterfaceTypeFieldsAggregateInput>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldsAggregateInput>\n  node?: InputMaybe<InterfaceTypeFieldsNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeFieldsConnectFieldInput = {\n  where?: InputMaybe<FieldConnectWhere>\n  connect?: InputMaybe<Array<FieldConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type InterfaceTypeFieldsConnectionSort = {\n  node?: InputMaybe<FieldSort>\n}\n\nexport type InterfaceTypeFieldsConnectionWhere = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldsConnectionWhere>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsConnectionWhere>>\n  NOT?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  node?: InputMaybe<FieldWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<FieldWhere>\n}\n\nexport type InterfaceTypeFieldsCreateFieldInput = {\n  node: FieldCreateInput\n}\n\nexport type InterfaceTypeFieldsDeleteFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  delete?: InputMaybe<FieldDeleteInput>\n}\n\nexport type InterfaceTypeFieldsDisconnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  disconnect?: InputMaybe<FieldDisconnectInput>\n}\n\nexport type InterfaceTypeFieldsFieldInput = {\n  create?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n  connect?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n}\n\nexport type InterfaceTypeFieldsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeFieldsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<InterfaceTypeFieldsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeFieldsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  key_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  key_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  key_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  key_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  key_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  description_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  description_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  description_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  description_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  description_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  validationRules_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  validationRules_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  validationRules_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  validationRules_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  defaultValues_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  defaultValues_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  defaultValues_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  defaultValues_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type InterfaceTypeFieldsUpdateConnectionInput = {\n  node?: InputMaybe<FieldUpdateInput>\n}\n\nexport type InterfaceTypeFieldsUpdateFieldInput = {\n  where?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  update?: InputMaybe<InterfaceTypeFieldsUpdateConnectionInput>\n  connect?: InputMaybe<Array<InterfaceTypeFieldsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<InterfaceTypeFieldsDisconnectFieldInput>>\n  create?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n  delete?: InputMaybe<Array<InterfaceTypeFieldsDeleteFieldInput>>\n}\n\nexport type InterfaceTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type InterfaceTypeOptions = {\n  /** Specify one or more InterfaceTypeSort objects to sort InterfaceTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<InterfaceTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type InterfaceTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<InterfaceTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<InterfaceTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<InterfaceTypeOwnerAggregateInput>\n  node?: InputMaybe<InterfaceTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type InterfaceTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<InterfaceTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<InterfaceTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<InterfaceTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type InterfaceTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsCreateFieldInput>>\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsCreateFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsCreateFieldInput>>\n}\n\n/** Fields to sort InterfaceTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one InterfaceTypeSort object. */\nexport type InterfaceTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type InterfaceTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type InterfaceTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  fieldRefs?: InputMaybe<Array<InterfaceTypeFieldRefsUpdateFieldInput>>\n  apiOfAtoms?: InputMaybe<Array<InterfaceTypeApiOfAtomsUpdateFieldInput>>\n  fields?: InputMaybe<Array<InterfaceTypeFieldsUpdateFieldInput>>\n}\n\nexport type InterfaceTypeWhere = {\n  OR?: InputMaybe<Array<InterfaceTypeWhere>>\n  AND?: InputMaybe<Array<InterfaceTypeWhere>>\n  NOT?: InputMaybe<InterfaceTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<InterfaceTypeOwnerAggregateInput>\n  /** @deprecated Use `fieldRefs_SOME` instead. */\n  fieldRefs?: InputMaybe<FieldWhere>\n  /** @deprecated Use `fieldRefs_NONE` instead. */\n  fieldRefs_NOT?: InputMaybe<FieldWhere>\n  fieldRefsAggregate?: InputMaybe<InterfaceTypeFieldRefsAggregateInput>\n  /** Return InterfaceTypes where all of the related Fields match this filter */\n  fieldRefs_ALL?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where none of the related Fields match this filter */\n  fieldRefs_NONE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where one of the related Fields match this filter */\n  fieldRefs_SINGLE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where some of the related Fields match this filter */\n  fieldRefs_SOME?: InputMaybe<FieldWhere>\n  /** @deprecated Use `apiOfAtoms_SOME` instead. */\n  apiOfAtoms?: InputMaybe<AtomWhere>\n  /** @deprecated Use `apiOfAtoms_NONE` instead. */\n  apiOfAtoms_NOT?: InputMaybe<AtomWhere>\n  apiOfAtomsAggregate?: InputMaybe<InterfaceTypeApiOfAtomsAggregateInput>\n  /** Return InterfaceTypes where all of the related Atoms match this filter */\n  apiOfAtoms_ALL?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where none of the related Atoms match this filter */\n  apiOfAtoms_NONE?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where one of the related Atoms match this filter */\n  apiOfAtoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return InterfaceTypes where some of the related Atoms match this filter */\n  apiOfAtoms_SOME?: InputMaybe<AtomWhere>\n  /** @deprecated Use `fields_SOME` instead. */\n  fields?: InputMaybe<FieldWhere>\n  /** @deprecated Use `fields_NONE` instead. */\n  fields_NOT?: InputMaybe<FieldWhere>\n  fieldsAggregate?: InputMaybe<InterfaceTypeFieldsAggregateInput>\n  /** Return InterfaceTypes where all of the related Fields match this filter */\n  fields_ALL?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where none of the related Fields match this filter */\n  fields_NONE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where one of the related Fields match this filter */\n  fields_SINGLE?: InputMaybe<FieldWhere>\n  /** Return InterfaceTypes where some of the related Fields match this filter */\n  fields_SOME?: InputMaybe<FieldWhere>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_SOME` instead. */\n  fieldRefsConnection?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** @deprecated Use `fieldRefsConnection_NONE` instead. */\n  fieldRefsConnection_NOT?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where all of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_ALL?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_NONE?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SINGLE?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeFieldRefsConnections match this filter */\n  fieldRefsConnection_SOME?: InputMaybe<InterfaceTypeFieldRefsConnectionWhere>\n  /** @deprecated Use `apiOfAtomsConnection_SOME` instead. */\n  apiOfAtomsConnection?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** @deprecated Use `apiOfAtomsConnection_NONE` instead. */\n  apiOfAtomsConnection_NOT?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where all of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_ALL?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_NONE?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_SINGLE?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeApiOfAtomsConnections match this filter */\n  apiOfAtomsConnection_SOME?: InputMaybe<InterfaceTypeApiOfAtomsConnectionWhere>\n  /** @deprecated Use `fieldsConnection_SOME` instead. */\n  fieldsConnection?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** @deprecated Use `fieldsConnection_NONE` instead. */\n  fieldsConnection_NOT?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where all of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_ALL?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where none of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_NONE?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where one of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_SINGLE?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n  /** Return InterfaceTypes where some of the related InterfaceTypeFieldsConnections match this filter */\n  fieldsConnection_SOME?: InputMaybe<InterfaceTypeFieldsConnectionWhere>\n}\n\nexport type LambdaTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type LambdaTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type LambdaTypeConnectOrCreateWhere = {\n  node: LambdaTypeUniqueWhere\n}\n\nexport type LambdaTypeConnectWhere = {\n  node: LambdaTypeWhere\n}\n\nexport type LambdaTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type LambdaTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type LambdaTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type LambdaTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type LambdaTypeOptions = {\n  /** Specify one or more LambdaTypeSort objects to sort LambdaTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<LambdaTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type LambdaTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<LambdaTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<LambdaTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<LambdaTypeOwnerAggregateInput>\n  node?: InputMaybe<LambdaTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type LambdaTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<LambdaTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<LambdaTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<LambdaTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type LambdaTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort LambdaTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one LambdaTypeSort object. */\nexport type LambdaTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type LambdaTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type LambdaTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type LambdaTypeWhere = {\n  OR?: InputMaybe<Array<LambdaTypeWhere>>\n  AND?: InputMaybe<Array<LambdaTypeWhere>>\n  NOT?: InputMaybe<LambdaTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<LambdaTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type PageAppAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PageAppAggregateInput>>\n  OR?: InputMaybe<Array<PageAppAggregateInput>>\n  NOT?: InputMaybe<PageAppAggregateInput>\n  node?: InputMaybe<PageAppNodeAggregationWhereInput>\n}\n\nexport type PageAppConnectFieldInput = {\n  where?: InputMaybe<AppConnectWhere>\n  connect?: InputMaybe<AppConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type PageAppConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type PageAppConnectionWhere = {\n  AND?: InputMaybe<Array<PageAppConnectionWhere>>\n  OR?: InputMaybe<Array<PageAppConnectionWhere>>\n  NOT?: InputMaybe<PageAppConnectionWhere>\n  node?: InputMaybe<AppWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AppWhere>\n}\n\nexport type PageAppConnectOrCreateFieldInput = {\n  where: AppConnectOrCreateWhere\n  onCreate: PageAppConnectOrCreateFieldInputOnCreate\n}\n\nexport type PageAppConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type PageAppCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type PageAppDeleteFieldInput = {\n  where?: InputMaybe<PageAppConnectionWhere>\n  delete?: InputMaybe<AppDeleteInput>\n}\n\nexport type PageAppDisconnectFieldInput = {\n  where?: InputMaybe<PageAppConnectionWhere>\n  disconnect?: InputMaybe<AppDisconnectInput>\n}\n\nexport type PageAppFieldInput = {\n  create?: InputMaybe<PageAppCreateFieldInput>\n  connect?: InputMaybe<PageAppConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageAppConnectOrCreateFieldInput>\n}\n\nexport type PageAppNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageAppNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PageAppNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageAppNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PageAppUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type PageAppUpdateFieldInput = {\n  where?: InputMaybe<PageAppConnectionWhere>\n  update?: InputMaybe<PageAppUpdateConnectionInput>\n  connect?: InputMaybe<PageAppConnectFieldInput>\n  disconnect?: InputMaybe<PageAppDisconnectFieldInput>\n  create?: InputMaybe<PageAppCreateFieldInput>\n  delete?: InputMaybe<PageAppDeleteFieldInput>\n  connectOrCreate?: InputMaybe<PageAppConnectOrCreateFieldInput>\n}\n\nexport type PageConnectInput = {\n  rootElement?: InputMaybe<PageRootElementConnectFieldInput>\n  app?: InputMaybe<PageAppConnectFieldInput>\n  store?: InputMaybe<PageStoreConnectFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerConnectFieldInput>\n}\n\nexport type PageConnectOrCreateInput = {\n  rootElement?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n  app?: InputMaybe<PageAppConnectOrCreateFieldInput>\n  store?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n}\n\nexport type PageConnectOrCreateWhere = {\n  node: PageUniqueWhere\n}\n\nexport type PageConnectWhere = {\n  node: PageWhere\n}\n\nexport type PageCreateInput = {\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n  url: Scalars['String']\n  kind: PageKind\n  rootElement?: InputMaybe<PageRootElementFieldInput>\n  app?: InputMaybe<PageAppFieldInput>\n  store?: InputMaybe<PageStoreFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerFieldInput>\n}\n\nexport type PageDeleteInput = {\n  rootElement?: InputMaybe<PageRootElementDeleteFieldInput>\n  app?: InputMaybe<PageAppDeleteFieldInput>\n  store?: InputMaybe<PageStoreDeleteFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerDeleteFieldInput>\n}\n\nexport type PageDisconnectInput = {\n  rootElement?: InputMaybe<PageRootElementDisconnectFieldInput>\n  app?: InputMaybe<PageAppDisconnectFieldInput>\n  store?: InputMaybe<PageStoreDisconnectFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerDisconnectFieldInput>\n}\n\nexport type PageOnCreateInput = {\n  id: Scalars['ID']\n  _compoundName: Scalars['String']\n  url: Scalars['String']\n  kind: PageKind\n}\n\nexport type PageOptions = {\n  /** Specify one or more PageSort objects to sort Pages by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PageSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type PagePageContentContainerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PagePageContentContainerAggregateInput>>\n  OR?: InputMaybe<Array<PagePageContentContainerAggregateInput>>\n  NOT?: InputMaybe<PagePageContentContainerAggregateInput>\n  node?: InputMaybe<PagePageContentContainerNodeAggregationWhereInput>\n}\n\nexport type PagePageContentContainerConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type PagePageContentContainerConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type PagePageContentContainerConnectionWhere = {\n  AND?: InputMaybe<Array<PagePageContentContainerConnectionWhere>>\n  OR?: InputMaybe<Array<PagePageContentContainerConnectionWhere>>\n  NOT?: InputMaybe<PagePageContentContainerConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type PagePageContentContainerConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: PagePageContentContainerConnectOrCreateFieldInputOnCreate\n}\n\nexport type PagePageContentContainerConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type PagePageContentContainerCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type PagePageContentContainerDeleteFieldInput = {\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type PagePageContentContainerDisconnectFieldInput = {\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type PagePageContentContainerFieldInput = {\n  create?: InputMaybe<PagePageContentContainerCreateFieldInput>\n  connect?: InputMaybe<PagePageContentContainerConnectFieldInput>\n  connectOrCreate?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n}\n\nexport type PagePageContentContainerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PagePageContentContainerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PagePageContentContainerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PagePageContentContainerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PagePageContentContainerUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type PagePageContentContainerUpdateFieldInput = {\n  where?: InputMaybe<PagePageContentContainerConnectionWhere>\n  update?: InputMaybe<PagePageContentContainerUpdateConnectionInput>\n  connect?: InputMaybe<PagePageContentContainerConnectFieldInput>\n  disconnect?: InputMaybe<PagePageContentContainerDisconnectFieldInput>\n  create?: InputMaybe<PagePageContentContainerCreateFieldInput>\n  delete?: InputMaybe<PagePageContentContainerDeleteFieldInput>\n  connectOrCreate?: InputMaybe<PagePageContentContainerConnectOrCreateFieldInput>\n}\n\nexport type PageRelationInput = {\n  rootElement?: InputMaybe<PageRootElementCreateFieldInput>\n  app?: InputMaybe<PageAppCreateFieldInput>\n  store?: InputMaybe<PageStoreCreateFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerCreateFieldInput>\n}\n\nexport type PageRootElementAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PageRootElementAggregateInput>>\n  OR?: InputMaybe<Array<PageRootElementAggregateInput>>\n  NOT?: InputMaybe<PageRootElementAggregateInput>\n  node?: InputMaybe<PageRootElementNodeAggregationWhereInput>\n}\n\nexport type PageRootElementConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<ElementConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type PageRootElementConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type PageRootElementConnectionWhere = {\n  AND?: InputMaybe<Array<PageRootElementConnectionWhere>>\n  OR?: InputMaybe<Array<PageRootElementConnectionWhere>>\n  NOT?: InputMaybe<PageRootElementConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type PageRootElementConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: PageRootElementConnectOrCreateFieldInputOnCreate\n}\n\nexport type PageRootElementConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type PageRootElementCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type PageRootElementDeleteFieldInput = {\n  where?: InputMaybe<PageRootElementConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type PageRootElementDisconnectFieldInput = {\n  where?: InputMaybe<PageRootElementConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type PageRootElementFieldInput = {\n  create?: InputMaybe<PageRootElementCreateFieldInput>\n  connect?: InputMaybe<PageRootElementConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n}\n\nexport type PageRootElementNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageRootElementNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PageRootElementNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageRootElementNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PageRootElementUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type PageRootElementUpdateFieldInput = {\n  where?: InputMaybe<PageRootElementConnectionWhere>\n  update?: InputMaybe<PageRootElementUpdateConnectionInput>\n  connect?: InputMaybe<PageRootElementConnectFieldInput>\n  disconnect?: InputMaybe<PageRootElementDisconnectFieldInput>\n  create?: InputMaybe<PageRootElementCreateFieldInput>\n  delete?: InputMaybe<PageRootElementDeleteFieldInput>\n  connectOrCreate?: InputMaybe<PageRootElementConnectOrCreateFieldInput>\n}\n\n/** Fields to sort Pages by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageSort object. */\nexport type PageSort = {\n  id?: InputMaybe<SortDirection>\n  _compoundName?: InputMaybe<SortDirection>\n  url?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type PageStoreAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PageStoreAggregateInput>>\n  OR?: InputMaybe<Array<PageStoreAggregateInput>>\n  NOT?: InputMaybe<PageStoreAggregateInput>\n  node?: InputMaybe<PageStoreNodeAggregationWhereInput>\n}\n\nexport type PageStoreConnectFieldInput = {\n  where?: InputMaybe<StoreConnectWhere>\n  connect?: InputMaybe<StoreConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type PageStoreConnectionSort = {\n  node?: InputMaybe<StoreSort>\n}\n\nexport type PageStoreConnectionWhere = {\n  AND?: InputMaybe<Array<PageStoreConnectionWhere>>\n  OR?: InputMaybe<Array<PageStoreConnectionWhere>>\n  NOT?: InputMaybe<PageStoreConnectionWhere>\n  node?: InputMaybe<StoreWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<StoreWhere>\n}\n\nexport type PageStoreConnectOrCreateFieldInput = {\n  where: StoreConnectOrCreateWhere\n  onCreate: PageStoreConnectOrCreateFieldInputOnCreate\n}\n\nexport type PageStoreConnectOrCreateFieldInputOnCreate = {\n  node: StoreOnCreateInput\n}\n\nexport type PageStoreCreateFieldInput = {\n  node: StoreCreateInput\n}\n\nexport type PageStoreDeleteFieldInput = {\n  where?: InputMaybe<PageStoreConnectionWhere>\n  delete?: InputMaybe<StoreDeleteInput>\n}\n\nexport type PageStoreDisconnectFieldInput = {\n  where?: InputMaybe<PageStoreConnectionWhere>\n  disconnect?: InputMaybe<StoreDisconnectInput>\n}\n\nexport type PageStoreFieldInput = {\n  create?: InputMaybe<PageStoreCreateFieldInput>\n  connect?: InputMaybe<PageStoreConnectFieldInput>\n  connectOrCreate?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n}\n\nexport type PageStoreNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageStoreNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PageStoreNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageStoreNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PageStoreUpdateConnectionInput = {\n  node?: InputMaybe<StoreUpdateInput>\n}\n\nexport type PageStoreUpdateFieldInput = {\n  where?: InputMaybe<PageStoreConnectionWhere>\n  update?: InputMaybe<PageStoreUpdateConnectionInput>\n  connect?: InputMaybe<PageStoreConnectFieldInput>\n  disconnect?: InputMaybe<PageStoreDisconnectFieldInput>\n  create?: InputMaybe<PageStoreCreateFieldInput>\n  delete?: InputMaybe<PageStoreDeleteFieldInput>\n  connectOrCreate?: InputMaybe<PageStoreConnectOrCreateFieldInput>\n}\n\nexport type PageTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type PageTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type PageTypeConnectOrCreateWhere = {\n  node: PageTypeUniqueWhere\n}\n\nexport type PageTypeConnectWhere = {\n  node: PageTypeWhere\n}\n\nexport type PageTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type PageTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type PageTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type PageTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type PageTypeOptions = {\n  /** Specify one or more PageTypeSort objects to sort PageTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PageTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type PageTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PageTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<PageTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<PageTypeOwnerAggregateInput>\n  node?: InputMaybe<PageTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type PageTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PageTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PageTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PageTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PageTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort PageTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageTypeSort object. */\nexport type PageTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type PageTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type PageTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type PageTypeWhere = {\n  OR?: InputMaybe<Array<PageTypeWhere>>\n  AND?: InputMaybe<Array<PageTypeWhere>>\n  NOT?: InputMaybe<PageTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<PageTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type PageUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n}\n\nexport type PageUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n  url?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<PageKind>\n  rootElement?: InputMaybe<PageRootElementUpdateFieldInput>\n  app?: InputMaybe<PageAppUpdateFieldInput>\n  store?: InputMaybe<PageStoreUpdateFieldInput>\n  pageContentContainer?: InputMaybe<PagePageContentContainerUpdateFieldInput>\n}\n\nexport type PageWhere = {\n  OR?: InputMaybe<Array<PageWhere>>\n  AND?: InputMaybe<Array<PageWhere>>\n  NOT?: InputMaybe<PageWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  _compoundName?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT?: InputMaybe<Scalars['String']>\n  _compoundName_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  _compoundName_MATCHES?: InputMaybe<Scalars['String']>\n  _compoundName_CONTAINS?: InputMaybe<Scalars['String']>\n  _compoundName_STARTS_WITH?: InputMaybe<Scalars['String']>\n  _compoundName_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  _compoundName_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  url?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  url_NOT?: InputMaybe<Scalars['String']>\n  url_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  url_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  url_MATCHES?: InputMaybe<Scalars['String']>\n  url_CONTAINS?: InputMaybe<Scalars['String']>\n  url_STARTS_WITH?: InputMaybe<Scalars['String']>\n  url_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  url_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  url_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  url_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<PageKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<PageKind>\n  kind_IN?: InputMaybe<Array<PageKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<PageKind>>\n  rootElement?: InputMaybe<ElementWhere>\n  rootElement_NOT?: InputMaybe<ElementWhere>\n  rootElementAggregate?: InputMaybe<PageRootElementAggregateInput>\n  app?: InputMaybe<AppWhere>\n  app_NOT?: InputMaybe<AppWhere>\n  appAggregate?: InputMaybe<PageAppAggregateInput>\n  store?: InputMaybe<StoreWhere>\n  store_NOT?: InputMaybe<StoreWhere>\n  storeAggregate?: InputMaybe<PageStoreAggregateInput>\n  pageContentContainer?: InputMaybe<ElementWhere>\n  pageContentContainer_NOT?: InputMaybe<ElementWhere>\n  pageContentContainerAggregate?: InputMaybe<PagePageContentContainerAggregateInput>\n  rootElementConnection?: InputMaybe<PageRootElementConnectionWhere>\n  rootElementConnection_NOT?: InputMaybe<PageRootElementConnectionWhere>\n  appConnection?: InputMaybe<PageAppConnectionWhere>\n  appConnection_NOT?: InputMaybe<PageAppConnectionWhere>\n  storeConnection?: InputMaybe<PageStoreConnectionWhere>\n  storeConnection_NOT?: InputMaybe<PageStoreConnectionWhere>\n  pageContentContainerConnection?: InputMaybe<PagePageContentContainerConnectionWhere>\n  pageContentContainerConnection_NOT?: InputMaybe<PagePageContentContainerConnectionWhere>\n}\n\nexport type PrimitiveTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type PrimitiveTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type PrimitiveTypeConnectOrCreateWhere = {\n  node: PrimitiveTypeUniqueWhere\n}\n\nexport type PrimitiveTypeConnectWhere = {\n  node: PrimitiveTypeWhere\n}\n\nexport type PrimitiveTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  primitiveKind: PrimitiveTypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type PrimitiveTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type PrimitiveTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type PrimitiveTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  primitiveKind: PrimitiveTypeKind\n}\n\nexport type PrimitiveTypeOptions = {\n  /** Specify one or more PrimitiveTypeSort objects to sort PrimitiveTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PrimitiveTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type PrimitiveTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<PrimitiveTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<PrimitiveTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<PrimitiveTypeOwnerAggregateInput>\n  node?: InputMaybe<PrimitiveTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type PrimitiveTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<PrimitiveTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<PrimitiveTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<PrimitiveTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type PrimitiveTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort PrimitiveTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PrimitiveTypeSort object. */\nexport type PrimitiveTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n  primitiveKind?: InputMaybe<SortDirection>\n}\n\nexport type PrimitiveTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n}\n\nexport type PrimitiveTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type PrimitiveTypeWhere = {\n  OR?: InputMaybe<Array<PrimitiveTypeWhere>>\n  AND?: InputMaybe<Array<PrimitiveTypeWhere>>\n  NOT?: InputMaybe<PrimitiveTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  primitiveKind?: InputMaybe<PrimitiveTypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  primitiveKind_NOT?: InputMaybe<PrimitiveTypeKind>\n  primitiveKind_IN?: InputMaybe<Array<PrimitiveTypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  primitiveKind_NOT_IN?: InputMaybe<Array<PrimitiveTypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<PrimitiveTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type PropConnectOrCreateWhere = {\n  node: PropUniqueWhere\n}\n\nexport type PropConnectWhere = {\n  node: PropWhere\n}\n\nexport type PropCreateInput = {\n  id: Scalars['ID']\n  data: Scalars['String']\n}\n\nexport type PropOnCreateInput = {\n  id: Scalars['ID']\n  data: Scalars['String']\n}\n\nexport type PropOptions = {\n  /** Specify one or more PropSort objects to sort Props by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<PropSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort Props by. The order in which sorts are applied is not guaranteed when specifying many fields in one PropSort object. */\nexport type PropSort = {\n  id?: InputMaybe<SortDirection>\n  data?: InputMaybe<SortDirection>\n}\n\nexport type PropUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type PropUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  data?: InputMaybe<Scalars['String']>\n}\n\nexport type PropWhere = {\n  OR?: InputMaybe<Array<PropWhere>>\n  AND?: InputMaybe<Array<PropWhere>>\n  NOT?: InputMaybe<PropWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  data?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  data_NOT?: InputMaybe<Scalars['String']>\n  data_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  data_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  data_MATCHES?: InputMaybe<Scalars['String']>\n  data_CONTAINS?: InputMaybe<Scalars['String']>\n  data_STARTS_WITH?: InputMaybe<Scalars['String']>\n  data_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  data_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  data_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  data_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n}\n\nexport type QueryOptions = {\n  offset?: InputMaybe<Scalars['Int']>\n  limit?: InputMaybe<Scalars['Int']>\n}\n\nexport type ReactNodeTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type ReactNodeTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type ReactNodeTypeConnectOrCreateWhere = {\n  node: ReactNodeTypeUniqueWhere\n}\n\nexport type ReactNodeTypeConnectWhere = {\n  node: ReactNodeTypeWhere\n}\n\nexport type ReactNodeTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type ReactNodeTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type ReactNodeTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type ReactNodeTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type ReactNodeTypeOptions = {\n  /** Specify one or more ReactNodeTypeSort objects to sort ReactNodeTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ReactNodeTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ReactNodeTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ReactNodeTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ReactNodeTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<ReactNodeTypeOwnerAggregateInput>\n  node?: InputMaybe<ReactNodeTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type ReactNodeTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ReactNodeTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ReactNodeTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ReactNodeTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ReactNodeTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort ReactNodeTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ReactNodeTypeSort object. */\nexport type ReactNodeTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type ReactNodeTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type ReactNodeTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type ReactNodeTypeWhere = {\n  OR?: InputMaybe<Array<ReactNodeTypeWhere>>\n  AND?: InputMaybe<Array<ReactNodeTypeWhere>>\n  NOT?: InputMaybe<ReactNodeTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ReactNodeTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type RenderPropTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n}\n\nexport type RenderPropTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n}\n\nexport type RenderPropTypeConnectOrCreateWhere = {\n  node: RenderPropTypeUniqueWhere\n}\n\nexport type RenderPropTypeConnectWhere = {\n  node: RenderPropTypeWhere\n}\n\nexport type RenderPropTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n}\n\nexport type RenderPropTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n}\n\nexport type RenderPropTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n}\n\nexport type RenderPropTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type RenderPropTypeOptions = {\n  /** Specify one or more RenderPropTypeSort objects to sort RenderPropTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<RenderPropTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type RenderPropTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<RenderPropTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<RenderPropTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<RenderPropTypeOwnerAggregateInput>\n  node?: InputMaybe<RenderPropTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type RenderPropTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<RenderPropTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<RenderPropTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<RenderPropTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type RenderPropTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n}\n\n/** Fields to sort RenderPropTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one RenderPropTypeSort object. */\nexport type RenderPropTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type RenderPropTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type RenderPropTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n}\n\nexport type RenderPropTypeWhere = {\n  OR?: InputMaybe<Array<RenderPropTypeWhere>>\n  AND?: InputMaybe<Array<RenderPropTypeWhere>>\n  NOT?: InputMaybe<RenderPropTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<RenderPropTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n}\n\nexport type RenderTypeCreateInput = {\n  id: Scalars['ID']\n  kind: RenderTypeKind\n}\n\nexport type RenderTypeOptions = {\n  /** Specify one or more RenderTypeSort objects to sort RenderTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<RenderTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort RenderTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one RenderTypeSort object. */\nexport type RenderTypeSort = {\n  id?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type RenderTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  kind?: InputMaybe<RenderTypeKind>\n}\n\nexport type RenderTypeWhere = {\n  OR?: InputMaybe<Array<RenderTypeWhere>>\n  AND?: InputMaybe<Array<RenderTypeWhere>>\n  NOT?: InputMaybe<RenderTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  kind?: InputMaybe<RenderTypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<RenderTypeKind>\n  kind_IN?: InputMaybe<Array<RenderTypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<RenderTypeKind>>\n}\n\nexport type ResetDatabaseMutationResponseCreateInput = {\n  success?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResetDatabaseMutationResponseOptions = {\n  /** Specify one or more ResetDatabaseMutationResponseSort objects to sort ResetDatabaseMutationResponses by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ResetDatabaseMutationResponseSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort ResetDatabaseMutationResponses by. The order in which sorts are applied is not guaranteed when specifying many fields in one ResetDatabaseMutationResponseSort object. */\nexport type ResetDatabaseMutationResponseSort = {\n  success?: InputMaybe<SortDirection>\n}\n\nexport type ResetDatabaseMutationResponseUpdateInput = {\n  success?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResetDatabaseMutationResponseWhere = {\n  OR?: InputMaybe<Array<ResetDatabaseMutationResponseWhere>>\n  AND?: InputMaybe<Array<ResetDatabaseMutationResponseWhere>>\n  NOT?: InputMaybe<ResetDatabaseMutationResponseWhere>\n  success?: InputMaybe<Scalars['Boolean']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  success_NOT?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type ResourceConfigAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ResourceConfigAggregateInput>>\n  OR?: InputMaybe<Array<ResourceConfigAggregateInput>>\n  NOT?: InputMaybe<ResourceConfigAggregateInput>\n  node?: InputMaybe<ResourceConfigNodeAggregationWhereInput>\n}\n\nexport type ResourceConfigConnectFieldInput = {\n  where?: InputMaybe<PropConnectWhere>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type ResourceConfigConnectionSort = {\n  node?: InputMaybe<PropSort>\n}\n\nexport type ResourceConfigConnectionWhere = {\n  AND?: InputMaybe<Array<ResourceConfigConnectionWhere>>\n  OR?: InputMaybe<Array<ResourceConfigConnectionWhere>>\n  NOT?: InputMaybe<ResourceConfigConnectionWhere>\n  node?: InputMaybe<PropWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PropWhere>\n}\n\nexport type ResourceConfigConnectOrCreateFieldInput = {\n  where: PropConnectOrCreateWhere\n  onCreate: ResourceConfigConnectOrCreateFieldInputOnCreate\n}\n\nexport type ResourceConfigConnectOrCreateFieldInputOnCreate = {\n  node: PropOnCreateInput\n}\n\nexport type ResourceConfigCreateFieldInput = {\n  node: PropCreateInput\n}\n\nexport type ResourceConfigDeleteFieldInput = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceConfigDisconnectFieldInput = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n}\n\nexport type ResourceConfigFieldInput = {\n  create?: InputMaybe<ResourceConfigCreateFieldInput>\n  connect?: InputMaybe<ResourceConfigConnectFieldInput>\n  connectOrCreate?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n}\n\nexport type ResourceConfigNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ResourceConfigNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ResourceConfigNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ResourceConfigNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  data_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  data_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  data_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  data_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  data_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ResourceConfigUpdateConnectionInput = {\n  node?: InputMaybe<PropUpdateInput>\n}\n\nexport type ResourceConfigUpdateFieldInput = {\n  where?: InputMaybe<ResourceConfigConnectionWhere>\n  update?: InputMaybe<ResourceConfigUpdateConnectionInput>\n  connect?: InputMaybe<ResourceConfigConnectFieldInput>\n  disconnect?: InputMaybe<ResourceConfigDisconnectFieldInput>\n  create?: InputMaybe<ResourceConfigCreateFieldInput>\n  delete?: InputMaybe<ResourceConfigDeleteFieldInput>\n  connectOrCreate?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n}\n\nexport type ResourceConnectInput = {\n  config?: InputMaybe<ResourceConfigConnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n}\n\nexport type ResourceConnectOrCreateInput = {\n  config?: InputMaybe<ResourceConfigConnectOrCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n}\n\nexport type ResourceConnectOrCreateWhere = {\n  node: ResourceUniqueWhere\n}\n\nexport type ResourceConnectWhere = {\n  node: ResourceWhere\n}\n\nexport type ResourceCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  type: ResourceType\n  config?: InputMaybe<ResourceConfigFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerFieldInput>\n}\n\nexport type ResourceDeleteInput = {\n  config?: InputMaybe<ResourceConfigDeleteFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n}\n\nexport type ResourceDisconnectInput = {\n  config?: InputMaybe<ResourceConfigDisconnectFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n}\n\nexport type ResourceOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  type: ResourceType\n}\n\nexport type ResourceOptions = {\n  /** Specify one or more ResourceSort objects to sort Resources by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<ResourceSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type ResourceOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<ResourceOwnerAggregateInput>>\n  OR?: InputMaybe<Array<ResourceOwnerAggregateInput>>\n  NOT?: InputMaybe<ResourceOwnerAggregateInput>\n  node?: InputMaybe<ResourceOwnerNodeAggregationWhereInput>\n}\n\nexport type ResourceOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<ResourceOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<ResourceOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<ResourceOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type ResourceRelationInput = {\n  config?: InputMaybe<ResourceConfigCreateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n}\n\n/** Fields to sort Resources by. The order in which sorts are applied is not guaranteed when specifying many fields in one ResourceSort object. */\nexport type ResourceSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  type?: InputMaybe<SortDirection>\n}\n\nexport type ResourceUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type ResourceUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ResourceType>\n  config?: InputMaybe<ResourceConfigUpdateFieldInput>\n  owner?: InputMaybe<WithOwnerOwnerUpdateFieldInput>\n}\n\nexport type ResourceWhere = {\n  OR?: InputMaybe<Array<ResourceWhere>>\n  AND?: InputMaybe<Array<ResourceWhere>>\n  NOT?: InputMaybe<ResourceWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  type?: InputMaybe<ResourceType>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT?: InputMaybe<ResourceType>\n  type_IN?: InputMaybe<Array<ResourceType>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  type_NOT_IN?: InputMaybe<Array<ResourceType>>\n  config?: InputMaybe<PropWhere>\n  config_NOT?: InputMaybe<PropWhere>\n  configAggregate?: InputMaybe<ResourceConfigAggregateInput>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<ResourceOwnerAggregateInput>\n  configConnection?: InputMaybe<ResourceConfigConnectionWhere>\n  configConnection_NOT?: InputMaybe<ResourceConfigConnectionWhere>\n  ownerConnection?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n}\n\nexport type StoreActionsApiActionConnectFieldInput = {\n  where?: InputMaybe<ApiActionConnectWhere>\n  connect?: InputMaybe<Array<ApiActionConnectInput>>\n}\n\nexport type StoreActionsApiActionConnectionWhere = {\n  OR?: InputMaybe<Array<StoreActionsApiActionConnectionWhere>>\n  AND?: InputMaybe<Array<StoreActionsApiActionConnectionWhere>>\n  NOT?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  node?: InputMaybe<ApiActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ApiActionWhere>\n}\n\nexport type StoreActionsApiActionConnectOrCreateFieldInput = {\n  where: ApiActionConnectOrCreateWhere\n  onCreate: StoreActionsApiActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type StoreActionsApiActionConnectOrCreateFieldInputOnCreate = {\n  node: ApiActionOnCreateInput\n}\n\nexport type StoreActionsApiActionCreateFieldInput = {\n  node: ApiActionCreateInput\n}\n\nexport type StoreActionsApiActionDeleteFieldInput = {\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  delete?: InputMaybe<ApiActionDeleteInput>\n}\n\nexport type StoreActionsApiActionDisconnectFieldInput = {\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  disconnect?: InputMaybe<ApiActionDisconnectInput>\n}\n\nexport type StoreActionsApiActionFieldInput = {\n  create?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n  connect?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsApiActionConnectOrCreateFieldInput>\n  >\n}\n\nexport type StoreActionsApiActionUpdateConnectionInput = {\n  node?: InputMaybe<ApiActionUpdateInput>\n}\n\nexport type StoreActionsApiActionUpdateFieldInput = {\n  where?: InputMaybe<StoreActionsApiActionConnectionWhere>\n  update?: InputMaybe<StoreActionsApiActionUpdateConnectionInput>\n  connect?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n  disconnect?: InputMaybe<Array<StoreActionsApiActionDisconnectFieldInput>>\n  create?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n  delete?: InputMaybe<Array<StoreActionsApiActionDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsApiActionConnectOrCreateFieldInput>\n  >\n}\n\nexport type StoreActionsCodeActionConnectFieldInput = {\n  where?: InputMaybe<CodeActionConnectWhere>\n  connect?: InputMaybe<Array<CodeActionConnectInput>>\n}\n\nexport type StoreActionsCodeActionConnectionWhere = {\n  OR?: InputMaybe<Array<StoreActionsCodeActionConnectionWhere>>\n  AND?: InputMaybe<Array<StoreActionsCodeActionConnectionWhere>>\n  NOT?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  node?: InputMaybe<CodeActionWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<CodeActionWhere>\n}\n\nexport type StoreActionsCodeActionConnectOrCreateFieldInput = {\n  where: CodeActionConnectOrCreateWhere\n  onCreate: StoreActionsCodeActionConnectOrCreateFieldInputOnCreate\n}\n\nexport type StoreActionsCodeActionConnectOrCreateFieldInputOnCreate = {\n  node: CodeActionOnCreateInput\n}\n\nexport type StoreActionsCodeActionCreateFieldInput = {\n  node: CodeActionCreateInput\n}\n\nexport type StoreActionsCodeActionDeleteFieldInput = {\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  delete?: InputMaybe<CodeActionDeleteInput>\n}\n\nexport type StoreActionsCodeActionDisconnectFieldInput = {\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  disconnect?: InputMaybe<CodeActionDisconnectInput>\n}\n\nexport type StoreActionsCodeActionFieldInput = {\n  create?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n  connect?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n}\n\nexport type StoreActionsCodeActionUpdateConnectionInput = {\n  node?: InputMaybe<CodeActionUpdateInput>\n}\n\nexport type StoreActionsCodeActionUpdateFieldInput = {\n  where?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  update?: InputMaybe<StoreActionsCodeActionUpdateConnectionInput>\n  connect?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n  disconnect?: InputMaybe<Array<StoreActionsCodeActionDisconnectFieldInput>>\n  create?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n  delete?: InputMaybe<Array<StoreActionsCodeActionDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n}\n\nexport type StoreActionsConnectInput = {\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionConnectFieldInput>>\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionConnectFieldInput>>\n}\n\nexport type StoreActionsConnectionWhere = {\n  CodeAction?: InputMaybe<StoreActionsCodeActionConnectionWhere>\n  ApiAction?: InputMaybe<StoreActionsApiActionConnectionWhere>\n}\n\nexport type StoreActionsConnectOrCreateInput = {\n  CodeAction?: InputMaybe<\n    Array<StoreActionsCodeActionConnectOrCreateFieldInput>\n  >\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionConnectOrCreateFieldInput>>\n}\n\nexport type StoreActionsCreateFieldInput = {\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionCreateFieldInput>>\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionCreateFieldInput>>\n}\n\nexport type StoreActionsCreateInput = {\n  CodeAction?: InputMaybe<StoreActionsCodeActionFieldInput>\n  ApiAction?: InputMaybe<StoreActionsApiActionFieldInput>\n}\n\nexport type StoreActionsDeleteInput = {\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionDeleteFieldInput>>\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionDeleteFieldInput>>\n}\n\nexport type StoreActionsDisconnectInput = {\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionDisconnectFieldInput>>\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionDisconnectFieldInput>>\n}\n\nexport type StoreActionsUpdateInput = {\n  CodeAction?: InputMaybe<Array<StoreActionsCodeActionUpdateFieldInput>>\n  ApiAction?: InputMaybe<Array<StoreActionsApiActionUpdateFieldInput>>\n}\n\nexport type StoreApiAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<StoreApiAggregateInput>>\n  OR?: InputMaybe<Array<StoreApiAggregateInput>>\n  NOT?: InputMaybe<StoreApiAggregateInput>\n  node?: InputMaybe<StoreApiNodeAggregationWhereInput>\n}\n\nexport type StoreApiConnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n  connect?: InputMaybe<InterfaceTypeConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type StoreApiConnectionSort = {\n  node?: InputMaybe<InterfaceTypeSort>\n}\n\nexport type StoreApiConnectionWhere = {\n  AND?: InputMaybe<Array<StoreApiConnectionWhere>>\n  OR?: InputMaybe<Array<StoreApiConnectionWhere>>\n  NOT?: InputMaybe<StoreApiConnectionWhere>\n  node?: InputMaybe<InterfaceTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type StoreApiConnectOrCreateFieldInput = {\n  where: InterfaceTypeConnectOrCreateWhere\n  onCreate: StoreApiConnectOrCreateFieldInputOnCreate\n}\n\nexport type StoreApiConnectOrCreateFieldInputOnCreate = {\n  node: InterfaceTypeOnCreateInput\n}\n\nexport type StoreApiCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type StoreApiDeleteFieldInput = {\n  where?: InputMaybe<StoreApiConnectionWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type StoreApiDisconnectFieldInput = {\n  where?: InputMaybe<StoreApiConnectionWhere>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n}\n\nexport type StoreApiFieldInput = {\n  create?: InputMaybe<StoreApiCreateFieldInput>\n  connect?: InputMaybe<StoreApiConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n}\n\nexport type StoreApiNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StoreApiNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<StoreApiNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StoreApiNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type StoreApiUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type StoreApiUpdateFieldInput = {\n  where?: InputMaybe<StoreApiConnectionWhere>\n  update?: InputMaybe<StoreApiUpdateConnectionInput>\n  connect?: InputMaybe<StoreApiConnectFieldInput>\n  disconnect?: InputMaybe<StoreApiDisconnectFieldInput>\n  create?: InputMaybe<StoreApiCreateFieldInput>\n  delete?: InputMaybe<StoreApiDeleteFieldInput>\n  connectOrCreate?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n}\n\nexport type StoreComponentAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<StoreComponentAggregateInput>>\n  OR?: InputMaybe<Array<StoreComponentAggregateInput>>\n  NOT?: InputMaybe<StoreComponentAggregateInput>\n  node?: InputMaybe<StoreComponentNodeAggregationWhereInput>\n}\n\nexport type StoreComponentConnectFieldInput = {\n  where?: InputMaybe<ComponentConnectWhere>\n  connect?: InputMaybe<ComponentConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type StoreComponentConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type StoreComponentConnectionWhere = {\n  AND?: InputMaybe<Array<StoreComponentConnectionWhere>>\n  OR?: InputMaybe<Array<StoreComponentConnectionWhere>>\n  NOT?: InputMaybe<StoreComponentConnectionWhere>\n  node?: InputMaybe<ComponentWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ComponentWhere>\n}\n\nexport type StoreComponentConnectOrCreateFieldInput = {\n  where: ComponentConnectOrCreateWhere\n  onCreate: StoreComponentConnectOrCreateFieldInputOnCreate\n}\n\nexport type StoreComponentConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type StoreComponentCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type StoreComponentDeleteFieldInput = {\n  where?: InputMaybe<StoreComponentConnectionWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}\n\nexport type StoreComponentDisconnectFieldInput = {\n  where?: InputMaybe<StoreComponentConnectionWhere>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n}\n\nexport type StoreComponentFieldInput = {\n  create?: InputMaybe<StoreComponentCreateFieldInput>\n  connect?: InputMaybe<StoreComponentConnectFieldInput>\n  connectOrCreate?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n}\n\nexport type StoreComponentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StoreComponentNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<StoreComponentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StoreComponentNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type StoreComponentUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type StoreComponentUpdateFieldInput = {\n  where?: InputMaybe<StoreComponentConnectionWhere>\n  update?: InputMaybe<StoreComponentUpdateConnectionInput>\n  connect?: InputMaybe<StoreComponentConnectFieldInput>\n  disconnect?: InputMaybe<StoreComponentDisconnectFieldInput>\n  create?: InputMaybe<StoreComponentCreateFieldInput>\n  delete?: InputMaybe<StoreComponentDeleteFieldInput>\n  connectOrCreate?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n}\n\nexport type StoreConnectInput = {\n  api?: InputMaybe<StoreApiConnectFieldInput>\n  actions?: InputMaybe<StoreActionsConnectInput>\n  component?: InputMaybe<StoreComponentConnectFieldInput>\n  page?: InputMaybe<StorePageConnectFieldInput>\n}\n\nexport type StoreConnectOrCreateInput = {\n  api?: InputMaybe<StoreApiConnectOrCreateFieldInput>\n  actions?: InputMaybe<StoreActionsConnectOrCreateInput>\n  component?: InputMaybe<StoreComponentConnectOrCreateFieldInput>\n  page?: InputMaybe<StorePageConnectOrCreateFieldInput>\n}\n\nexport type StoreConnectOrCreateWhere = {\n  node: StoreUniqueWhere\n}\n\nexport type StoreConnectWhere = {\n  node: StoreWhere\n}\n\nexport type StoreCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  api?: InputMaybe<StoreApiFieldInput>\n  actions?: InputMaybe<StoreActionsCreateInput>\n  component?: InputMaybe<StoreComponentFieldInput>\n  page?: InputMaybe<StorePageFieldInput>\n}\n\nexport type StoreDeleteInput = {\n  api?: InputMaybe<StoreApiDeleteFieldInput>\n  actions?: InputMaybe<StoreActionsDeleteInput>\n  component?: InputMaybe<StoreComponentDeleteFieldInput>\n  page?: InputMaybe<StorePageDeleteFieldInput>\n}\n\nexport type StoreDisconnectInput = {\n  api?: InputMaybe<StoreApiDisconnectFieldInput>\n  actions?: InputMaybe<StoreActionsDisconnectInput>\n  component?: InputMaybe<StoreComponentDisconnectFieldInput>\n  page?: InputMaybe<StorePageDisconnectFieldInput>\n}\n\nexport type StoreOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n}\n\nexport type StoreOptions = {\n  /** Specify one or more StoreSort objects to sort Stores by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<StoreSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type StorePageAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<StorePageAggregateInput>>\n  OR?: InputMaybe<Array<StorePageAggregateInput>>\n  NOT?: InputMaybe<StorePageAggregateInput>\n  node?: InputMaybe<StorePageNodeAggregationWhereInput>\n}\n\nexport type StorePageConnectFieldInput = {\n  where?: InputMaybe<PageConnectWhere>\n  connect?: InputMaybe<PageConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type StorePageConnectionSort = {\n  node?: InputMaybe<PageSort>\n}\n\nexport type StorePageConnectionWhere = {\n  AND?: InputMaybe<Array<StorePageConnectionWhere>>\n  OR?: InputMaybe<Array<StorePageConnectionWhere>>\n  NOT?: InputMaybe<StorePageConnectionWhere>\n  node?: InputMaybe<PageWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PageWhere>\n}\n\nexport type StorePageConnectOrCreateFieldInput = {\n  where: PageConnectOrCreateWhere\n  onCreate: StorePageConnectOrCreateFieldInputOnCreate\n}\n\nexport type StorePageConnectOrCreateFieldInputOnCreate = {\n  node: PageOnCreateInput\n}\n\nexport type StorePageCreateFieldInput = {\n  node: PageCreateInput\n}\n\nexport type StorePageDeleteFieldInput = {\n  where?: InputMaybe<StorePageConnectionWhere>\n  delete?: InputMaybe<PageDeleteInput>\n}\n\nexport type StorePageDisconnectFieldInput = {\n  where?: InputMaybe<StorePageConnectionWhere>\n  disconnect?: InputMaybe<PageDisconnectInput>\n}\n\nexport type StorePageFieldInput = {\n  create?: InputMaybe<StorePageCreateFieldInput>\n  connect?: InputMaybe<StorePageConnectFieldInput>\n  connectOrCreate?: InputMaybe<StorePageConnectOrCreateFieldInput>\n}\n\nexport type StorePageNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<StorePageNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<StorePageNodeAggregationWhereInput>>\n  NOT?: InputMaybe<StorePageNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  url_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  url_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  url_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  url_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  url_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type StorePageUpdateConnectionInput = {\n  node?: InputMaybe<PageUpdateInput>\n}\n\nexport type StorePageUpdateFieldInput = {\n  where?: InputMaybe<StorePageConnectionWhere>\n  update?: InputMaybe<StorePageUpdateConnectionInput>\n  connect?: InputMaybe<StorePageConnectFieldInput>\n  disconnect?: InputMaybe<StorePageDisconnectFieldInput>\n  create?: InputMaybe<StorePageCreateFieldInput>\n  delete?: InputMaybe<StorePageDeleteFieldInput>\n  connectOrCreate?: InputMaybe<StorePageConnectOrCreateFieldInput>\n}\n\nexport type StoreRelationInput = {\n  api?: InputMaybe<StoreApiCreateFieldInput>\n  actions?: InputMaybe<StoreActionsCreateFieldInput>\n  component?: InputMaybe<StoreComponentCreateFieldInput>\n  page?: InputMaybe<StorePageCreateFieldInput>\n}\n\n/** Fields to sort Stores by. The order in which sorts are applied is not guaranteed when specifying many fields in one StoreSort object. */\nexport type StoreSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n}\n\nexport type StoreUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n}\n\nexport type StoreUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  api?: InputMaybe<StoreApiUpdateFieldInput>\n  actions?: InputMaybe<StoreActionsUpdateInput>\n  component?: InputMaybe<StoreComponentUpdateFieldInput>\n  page?: InputMaybe<StorePageUpdateFieldInput>\n}\n\nexport type StoreWhere = {\n  OR?: InputMaybe<Array<StoreWhere>>\n  AND?: InputMaybe<Array<StoreWhere>>\n  NOT?: InputMaybe<StoreWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  api?: InputMaybe<InterfaceTypeWhere>\n  api_NOT?: InputMaybe<InterfaceTypeWhere>\n  apiAggregate?: InputMaybe<StoreApiAggregateInput>\n  component?: InputMaybe<ComponentWhere>\n  component_NOT?: InputMaybe<ComponentWhere>\n  componentAggregate?: InputMaybe<StoreComponentAggregateInput>\n  page?: InputMaybe<PageWhere>\n  page_NOT?: InputMaybe<PageWhere>\n  pageAggregate?: InputMaybe<StorePageAggregateInput>\n  apiConnection?: InputMaybe<StoreApiConnectionWhere>\n  apiConnection_NOT?: InputMaybe<StoreApiConnectionWhere>\n  /** @deprecated Use `actionsConnection_SOME` instead. */\n  actionsConnection?: InputMaybe<StoreActionsConnectionWhere>\n  /** @deprecated Use `actionsConnection_NONE` instead. */\n  actionsConnection_NOT?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where all of the related StoreActionsConnections match this filter */\n  actionsConnection_ALL?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where none of the related StoreActionsConnections match this filter */\n  actionsConnection_NONE?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where one of the related StoreActionsConnections match this filter */\n  actionsConnection_SINGLE?: InputMaybe<StoreActionsConnectionWhere>\n  /** Return Stores where some of the related StoreActionsConnections match this filter */\n  actionsConnection_SOME?: InputMaybe<StoreActionsConnectionWhere>\n  componentConnection?: InputMaybe<StoreComponentConnectionWhere>\n  componentConnection_NOT?: InputMaybe<StoreComponentConnectionWhere>\n  pageConnection?: InputMaybe<StorePageConnectionWhere>\n  pageConnection_NOT?: InputMaybe<StorePageConnectionWhere>\n}\n\nexport type TagAtomsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<TagAtomsAggregateInput>>\n  OR?: InputMaybe<Array<TagAtomsAggregateInput>>\n  NOT?: InputMaybe<TagAtomsAggregateInput>\n  node?: InputMaybe<TagAtomsNodeAggregationWhereInput>\n}\n\nexport type TagAtomsConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type TagAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type TagAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<TagAtomsConnectionWhere>>\n  OR?: InputMaybe<Array<TagAtomsConnectionWhere>>\n  NOT?: InputMaybe<TagAtomsConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type TagAtomsConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: TagAtomsConnectOrCreateFieldInputOnCreate\n}\n\nexport type TagAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type TagAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type TagAtomsDeleteFieldInput = {\n  where?: InputMaybe<TagAtomsConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type TagAtomsDisconnectFieldInput = {\n  where?: InputMaybe<TagAtomsConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type TagAtomsFieldInput = {\n  create?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n  connect?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n}\n\nexport type TagAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagAtomsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<TagAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagAtomsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type TagAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type TagAtomsUpdateFieldInput = {\n  where?: InputMaybe<TagAtomsConnectionWhere>\n  update?: InputMaybe<TagAtomsUpdateConnectionInput>\n  connect?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<TagAtomsDisconnectFieldInput>>\n  create?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<TagAtomsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n}\n\nexport type TagChildrenAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<TagChildrenAggregateInput>>\n  OR?: InputMaybe<Array<TagChildrenAggregateInput>>\n  NOT?: InputMaybe<TagChildrenAggregateInput>\n  node?: InputMaybe<TagChildrenNodeAggregationWhereInput>\n}\n\nexport type TagChildrenConnectFieldInput = {\n  where?: InputMaybe<TagConnectWhere>\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type TagChildrenConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type TagChildrenConnectionWhere = {\n  AND?: InputMaybe<Array<TagChildrenConnectionWhere>>\n  OR?: InputMaybe<Array<TagChildrenConnectionWhere>>\n  NOT?: InputMaybe<TagChildrenConnectionWhere>\n  node?: InputMaybe<TagWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<TagWhere>\n}\n\nexport type TagChildrenConnectOrCreateFieldInput = {\n  where: TagConnectOrCreateWhere\n  onCreate: TagChildrenConnectOrCreateFieldInputOnCreate\n}\n\nexport type TagChildrenConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type TagChildrenCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type TagChildrenDeleteFieldInput = {\n  where?: InputMaybe<TagChildrenConnectionWhere>\n  delete?: InputMaybe<TagDeleteInput>\n}\n\nexport type TagChildrenDisconnectFieldInput = {\n  where?: InputMaybe<TagChildrenConnectionWhere>\n  disconnect?: InputMaybe<TagDisconnectInput>\n}\n\nexport type TagChildrenFieldInput = {\n  create?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n  connect?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n}\n\nexport type TagChildrenNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagChildrenNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<TagChildrenNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagChildrenNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type TagChildrenUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type TagChildrenUpdateFieldInput = {\n  where?: InputMaybe<TagChildrenConnectionWhere>\n  update?: InputMaybe<TagChildrenUpdateConnectionInput>\n  connect?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  disconnect?: InputMaybe<Array<TagChildrenDisconnectFieldInput>>\n  create?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n  delete?: InputMaybe<Array<TagChildrenDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n}\n\nexport type TagConnectInput = {\n  parent?: InputMaybe<TagParentConnectFieldInput>\n  children?: InputMaybe<Array<TagChildrenConnectFieldInput>>\n  owner?: InputMaybe<TagOwnerConnectFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsConnectFieldInput>>\n}\n\nexport type TagConnectOrCreateInput = {\n  parent?: InputMaybe<TagParentConnectOrCreateFieldInput>\n  children?: InputMaybe<Array<TagChildrenConnectOrCreateFieldInput>>\n  owner?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsConnectOrCreateFieldInput>>\n}\n\nexport type TagConnectOrCreateWhere = {\n  node: TagUniqueWhere\n}\n\nexport type TagConnectWhere = {\n  node: TagWhere\n}\n\nexport type TagCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  parent?: InputMaybe<TagParentFieldInput>\n  children?: InputMaybe<TagChildrenFieldInput>\n  owner?: InputMaybe<TagOwnerFieldInput>\n  atoms?: InputMaybe<TagAtomsFieldInput>\n}\n\nexport type TagDeleteInput = {\n  parent?: InputMaybe<TagParentDeleteFieldInput>\n  children?: InputMaybe<Array<TagChildrenDeleteFieldInput>>\n  owner?: InputMaybe<TagOwnerDeleteFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsDeleteFieldInput>>\n}\n\nexport type TagDisconnectInput = {\n  parent?: InputMaybe<TagParentDisconnectFieldInput>\n  children?: InputMaybe<Array<TagChildrenDisconnectFieldInput>>\n  owner?: InputMaybe<TagOwnerDisconnectFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsDisconnectFieldInput>>\n}\n\nexport type TagOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n}\n\nexport type TagOptions = {\n  /** Specify one or more TagSort objects to sort Tags by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<TagSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type TagOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<TagOwnerAggregateInput>>\n  OR?: InputMaybe<Array<TagOwnerAggregateInput>>\n  NOT?: InputMaybe<TagOwnerAggregateInput>\n  node?: InputMaybe<TagOwnerNodeAggregationWhereInput>\n}\n\nexport type TagOwnerConnectFieldInput = {\n  where?: InputMaybe<UserConnectWhere>\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type TagOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type TagOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<TagOwnerConnectionWhere>>\n  OR?: InputMaybe<Array<TagOwnerConnectionWhere>>\n  NOT?: InputMaybe<TagOwnerConnectionWhere>\n  node?: InputMaybe<UserWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<UserWhere>\n}\n\nexport type TagOwnerConnectOrCreateFieldInput = {\n  where: UserConnectOrCreateWhere\n  onCreate: TagOwnerConnectOrCreateFieldInputOnCreate\n}\n\nexport type TagOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type TagOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type TagOwnerDeleteFieldInput = {\n  where?: InputMaybe<TagOwnerConnectionWhere>\n  delete?: InputMaybe<UserDeleteInput>\n}\n\nexport type TagOwnerDisconnectFieldInput = {\n  where?: InputMaybe<TagOwnerConnectionWhere>\n  disconnect?: InputMaybe<UserDisconnectInput>\n}\n\nexport type TagOwnerFieldInput = {\n  create?: InputMaybe<TagOwnerCreateFieldInput>\n  connect?: InputMaybe<TagOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n}\n\nexport type TagOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<TagOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type TagOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type TagOwnerUpdateFieldInput = {\n  where?: InputMaybe<TagOwnerConnectionWhere>\n  update?: InputMaybe<TagOwnerUpdateConnectionInput>\n  connect?: InputMaybe<TagOwnerConnectFieldInput>\n  disconnect?: InputMaybe<TagOwnerDisconnectFieldInput>\n  create?: InputMaybe<TagOwnerCreateFieldInput>\n  delete?: InputMaybe<TagOwnerDeleteFieldInput>\n  connectOrCreate?: InputMaybe<TagOwnerConnectOrCreateFieldInput>\n}\n\nexport type TagParentAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<TagParentAggregateInput>>\n  OR?: InputMaybe<Array<TagParentAggregateInput>>\n  NOT?: InputMaybe<TagParentAggregateInput>\n  node?: InputMaybe<TagParentNodeAggregationWhereInput>\n}\n\nexport type TagParentConnectFieldInput = {\n  where?: InputMaybe<TagConnectWhere>\n  connect?: InputMaybe<TagConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type TagParentConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type TagParentConnectionWhere = {\n  AND?: InputMaybe<Array<TagParentConnectionWhere>>\n  OR?: InputMaybe<Array<TagParentConnectionWhere>>\n  NOT?: InputMaybe<TagParentConnectionWhere>\n  node?: InputMaybe<TagWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<TagWhere>\n}\n\nexport type TagParentConnectOrCreateFieldInput = {\n  where: TagConnectOrCreateWhere\n  onCreate: TagParentConnectOrCreateFieldInputOnCreate\n}\n\nexport type TagParentConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type TagParentCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type TagParentDeleteFieldInput = {\n  where?: InputMaybe<TagParentConnectionWhere>\n  delete?: InputMaybe<TagDeleteInput>\n}\n\nexport type TagParentDisconnectFieldInput = {\n  where?: InputMaybe<TagParentConnectionWhere>\n  disconnect?: InputMaybe<TagDisconnectInput>\n}\n\nexport type TagParentFieldInput = {\n  create?: InputMaybe<TagParentCreateFieldInput>\n  connect?: InputMaybe<TagParentConnectFieldInput>\n  connectOrCreate?: InputMaybe<TagParentConnectOrCreateFieldInput>\n}\n\nexport type TagParentNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<TagParentNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<TagParentNodeAggregationWhereInput>>\n  NOT?: InputMaybe<TagParentNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type TagParentUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type TagParentUpdateFieldInput = {\n  where?: InputMaybe<TagParentConnectionWhere>\n  update?: InputMaybe<TagParentUpdateConnectionInput>\n  connect?: InputMaybe<TagParentConnectFieldInput>\n  disconnect?: InputMaybe<TagParentDisconnectFieldInput>\n  create?: InputMaybe<TagParentCreateFieldInput>\n  delete?: InputMaybe<TagParentDeleteFieldInput>\n  connectOrCreate?: InputMaybe<TagParentConnectOrCreateFieldInput>\n}\n\nexport type TagRelationInput = {\n  parent?: InputMaybe<TagParentCreateFieldInput>\n  children?: InputMaybe<Array<TagChildrenCreateFieldInput>>\n  owner?: InputMaybe<TagOwnerCreateFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsCreateFieldInput>>\n}\n\n/** Fields to sort Tags by. The order in which sorts are applied is not guaranteed when specifying many fields in one TagSort object. */\nexport type TagSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  isRoot?: InputMaybe<SortDirection>\n}\n\nexport type TagUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type TagUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  parent?: InputMaybe<TagParentUpdateFieldInput>\n  children?: InputMaybe<Array<TagChildrenUpdateFieldInput>>\n  owner?: InputMaybe<TagOwnerUpdateFieldInput>\n  atoms?: InputMaybe<Array<TagAtomsUpdateFieldInput>>\n}\n\nexport type TagWhere = {\n  OR?: InputMaybe<Array<TagWhere>>\n  AND?: InputMaybe<Array<TagWhere>>\n  NOT?: InputMaybe<TagWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  parent?: InputMaybe<TagWhere>\n  parent_NOT?: InputMaybe<TagWhere>\n  parentAggregate?: InputMaybe<TagParentAggregateInput>\n  /** @deprecated Use `children_SOME` instead. */\n  children?: InputMaybe<TagWhere>\n  /** @deprecated Use `children_NONE` instead. */\n  children_NOT?: InputMaybe<TagWhere>\n  childrenAggregate?: InputMaybe<TagChildrenAggregateInput>\n  /** Return Tags where all of the related Tags match this filter */\n  children_ALL?: InputMaybe<TagWhere>\n  /** Return Tags where none of the related Tags match this filter */\n  children_NONE?: InputMaybe<TagWhere>\n  /** Return Tags where one of the related Tags match this filter */\n  children_SINGLE?: InputMaybe<TagWhere>\n  /** Return Tags where some of the related Tags match this filter */\n  children_SOME?: InputMaybe<TagWhere>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<TagOwnerAggregateInput>\n  /** @deprecated Use `atoms_SOME` instead. */\n  atoms?: InputMaybe<AtomWhere>\n  /** @deprecated Use `atoms_NONE` instead. */\n  atoms_NOT?: InputMaybe<AtomWhere>\n  atomsAggregate?: InputMaybe<TagAtomsAggregateInput>\n  /** Return Tags where all of the related Atoms match this filter */\n  atoms_ALL?: InputMaybe<AtomWhere>\n  /** Return Tags where none of the related Atoms match this filter */\n  atoms_NONE?: InputMaybe<AtomWhere>\n  /** Return Tags where one of the related Atoms match this filter */\n  atoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Tags where some of the related Atoms match this filter */\n  atoms_SOME?: InputMaybe<AtomWhere>\n  parentConnection?: InputMaybe<TagParentConnectionWhere>\n  parentConnection_NOT?: InputMaybe<TagParentConnectionWhere>\n  /** @deprecated Use `childrenConnection_SOME` instead. */\n  childrenConnection?: InputMaybe<TagChildrenConnectionWhere>\n  /** @deprecated Use `childrenConnection_NONE` instead. */\n  childrenConnection_NOT?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where all of the related TagChildrenConnections match this filter */\n  childrenConnection_ALL?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where none of the related TagChildrenConnections match this filter */\n  childrenConnection_NONE?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where one of the related TagChildrenConnections match this filter */\n  childrenConnection_SINGLE?: InputMaybe<TagChildrenConnectionWhere>\n  /** Return Tags where some of the related TagChildrenConnections match this filter */\n  childrenConnection_SOME?: InputMaybe<TagChildrenConnectionWhere>\n  ownerConnection?: InputMaybe<TagOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<TagOwnerConnectionWhere>\n  /** @deprecated Use `atomsConnection_SOME` instead. */\n  atomsConnection?: InputMaybe<TagAtomsConnectionWhere>\n  /** @deprecated Use `atomsConnection_NONE` instead. */\n  atomsConnection_NOT?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where all of the related TagAtomsConnections match this filter */\n  atomsConnection_ALL?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where none of the related TagAtomsConnections match this filter */\n  atomsConnection_NONE?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where one of the related TagAtomsConnections match this filter */\n  atomsConnection_SINGLE?: InputMaybe<TagAtomsConnectionWhere>\n  /** Return Tags where some of the related TagAtomsConnections match this filter */\n  atomsConnection_SOME?: InputMaybe<TagAtomsConnectionWhere>\n}\n\nexport type TypeReferenceCreateInput = {\n  name: Scalars['String']\n  label: Scalars['String']\n}\n\nexport type TypeReferenceOptions = {\n  /** Specify one or more TypeReferenceSort objects to sort TypeReferences by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<TypeReferenceSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort TypeReferences by. The order in which sorts are applied is not guaranteed when specifying many fields in one TypeReferenceSort object. */\nexport type TypeReferenceSort = {\n  name?: InputMaybe<SortDirection>\n  label?: InputMaybe<SortDirection>\n}\n\nexport type TypeReferenceUpdateInput = {\n  name?: InputMaybe<Scalars['String']>\n  label?: InputMaybe<Scalars['String']>\n}\n\nexport type TypeReferenceWhere = {\n  OR?: InputMaybe<Array<TypeReferenceWhere>>\n  AND?: InputMaybe<Array<TypeReferenceWhere>>\n  NOT?: InputMaybe<TypeReferenceWhere>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  label?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  label_NOT?: InputMaybe<Scalars['String']>\n  label_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  label_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  label_MATCHES?: InputMaybe<Scalars['String']>\n  label_CONTAINS?: InputMaybe<Scalars['String']>\n  label_STARTS_WITH?: InputMaybe<Scalars['String']>\n  label_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  label_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  label_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  label_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n}\n\nexport type UnionTypeConnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeConnectInput>\n}\n\nexport type UnionTypeConnectOrCreateInput = {\n  owner?: InputMaybe<IBaseTypeOwnerConnectOrCreateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeConnectOrCreateInput>\n}\n\nexport type UnionTypeConnectOrCreateWhere = {\n  node: UnionTypeUniqueWhere\n}\n\nexport type UnionTypeConnectWhere = {\n  node: UnionTypeWhere\n}\n\nexport type UnionTypeCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n  owner?: InputMaybe<IBaseTypeOwnerFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeCreateInput>\n}\n\nexport type UnionTypeDeleteInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDeleteFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeDeleteInput>\n}\n\nexport type UnionTypeDisconnectInput = {\n  owner?: InputMaybe<IBaseTypeOwnerDisconnectFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeDisconnectInput>\n}\n\nexport type UnionTypeOnCreateInput = {\n  id: Scalars['ID']\n  name: Scalars['String']\n  kind?: TypeKind\n}\n\nexport type UnionTypeOptions = {\n  /** Specify one or more UnionTypeSort objects to sort UnionTypes by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<UnionTypeSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type UnionTypeOwnerAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UnionTypeOwnerAggregateInput>>\n  OR?: InputMaybe<Array<UnionTypeOwnerAggregateInput>>\n  NOT?: InputMaybe<UnionTypeOwnerAggregateInput>\n  node?: InputMaybe<UnionTypeOwnerNodeAggregationWhereInput>\n}\n\nexport type UnionTypeOwnerNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UnionTypeOwnerNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UnionTypeOwnerNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UnionTypeOwnerNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  auth0Id_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  auth0Id_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  auth0Id_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  auth0Id_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  email_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  email_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  email_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  email_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  email_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  username_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  username_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  username_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  username_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  username_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UnionTypeRelationInput = {\n  owner?: InputMaybe<IBaseTypeOwnerCreateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeCreateFieldInput>\n}\n\n/** Fields to sort UnionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one UnionTypeSort object. */\nexport type UnionTypeSort = {\n  id?: InputMaybe<SortDirection>\n  name?: InputMaybe<SortDirection>\n  kind?: InputMaybe<SortDirection>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput = {\n  where?: InputMaybe<ActionTypeConnectWhere>\n  connect?: InputMaybe<Array<ActionTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  node?: InputMaybe<ActionTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ActionTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput = {\n  where: ActionTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ActionTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput = {\n  node: ActionTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  delete?: InputMaybe<ActionTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  disconnect?: InputMaybe<ActionTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput = {\n  node?: InputMaybe<ActionTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput = {\n  where?: InputMaybe<AppTypeConnectWhere>\n  connect?: InputMaybe<Array<AppTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  node?: InputMaybe<AppTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AppTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput = {\n  where: AppTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: AppTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput = {\n  node: AppTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  delete?: InputMaybe<AppTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  disconnect?: InputMaybe<AppTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeFieldInput = {\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n  connect?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput = {\n  node?: InputMaybe<AppTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput>\n  connect?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput = {\n  where?: InputMaybe<ArrayTypeConnectWhere>\n  connect?: InputMaybe<Array<ArrayTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  node?: InputMaybe<ArrayTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ArrayTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput = {\n  where: ArrayTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ArrayTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput = {\n  node: ArrayTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  delete?: InputMaybe<ArrayTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  disconnect?: InputMaybe<ArrayTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeFieldInput = {\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput = {\n  node?: InputMaybe<ArrayTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput = {\n  where?: InputMaybe<CodeMirrorTypeConnectWhere>\n  connect?: InputMaybe<Array<CodeMirrorTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>>\n  AND?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  >\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  node?: InputMaybe<CodeMirrorTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<CodeMirrorTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput = {\n  where: CodeMirrorTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: CodeMirrorTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput = {\n  node: CodeMirrorTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  delete?: InputMaybe<CodeMirrorTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  disconnect?: InputMaybe<CodeMirrorTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput = {\n  node?: InputMaybe<CodeMirrorTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput>>\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectionWhere = {\n  PrimitiveType?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  ArrayType?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere>\n  UnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  InterfaceType?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  ElementType?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  RenderPropType?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  ReactNodeType?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  EnumType?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  LambdaType?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  PageType?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  AppType?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeConnectionWhere>\n  ActionType?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeConnectionWhere>\n  CodeMirrorType?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeConnectOrCreateInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeConnectOrCreateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n  AppType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeConnectOrCreateFieldInput>\n  >\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeConnectOrCreateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCreateFieldInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput>>\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeCreateInput = {\n  PrimitiveType?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput>\n  ArrayType?: InputMaybe<UnionTypeTypesOfUnionTypeArrayTypeFieldInput>\n  UnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeFieldInput>\n  InterfaceType?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput>\n  ElementType?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeFieldInput>\n  RenderPropType?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput>\n  ReactNodeType?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput>\n  EnumType?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeFieldInput>\n  LambdaType?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeFieldInput>\n  PageType?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeFieldInput>\n  AppType?: InputMaybe<UnionTypeTypesOfUnionTypeAppTypeFieldInput>\n  ActionType?: InputMaybe<UnionTypeTypesOfUnionTypeActionTypeFieldInput>\n  CodeMirrorType?: InputMaybe<UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeDeleteInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput>>\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeDisconnectInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput>\n  >\n  AppType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput>\n  >\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput = {\n  where?: InputMaybe<ElementTypeConnectWhere>\n  connect?: InputMaybe<Array<ElementTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  node?: InputMaybe<ElementTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput = {\n  where: ElementTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ElementTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput = {\n  node: ElementTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  delete?: InputMaybe<ElementTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  disconnect?: InputMaybe<ElementTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput = {\n  node?: InputMaybe<ElementTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput = {\n  where?: InputMaybe<EnumTypeConnectWhere>\n  connect?: InputMaybe<Array<EnumTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  node?: InputMaybe<EnumTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<EnumTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput = {\n  where: EnumTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: EnumTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput = {\n  node: EnumTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  delete?: InputMaybe<EnumTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  disconnect?: InputMaybe<EnumTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeFieldInput = {\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput = {\n  node?: InputMaybe<EnumTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput = {\n  where?: InputMaybe<InterfaceTypeConnectWhere>\n  connect?: InputMaybe<Array<InterfaceTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  node?: InputMaybe<InterfaceTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<InterfaceTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput = {\n  where: InterfaceTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: InterfaceTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput = {\n  node: InterfaceTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  delete?: InputMaybe<InterfaceTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  disconnect?: InputMaybe<InterfaceTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput = {\n  node?: InputMaybe<InterfaceTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput = {\n  where?: InputMaybe<LambdaTypeConnectWhere>\n  connect?: InputMaybe<Array<LambdaTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  node?: InputMaybe<LambdaTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<LambdaTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput = {\n  where: LambdaTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: LambdaTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput = {\n  node: LambdaTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  delete?: InputMaybe<LambdaTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  disconnect?: InputMaybe<LambdaTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput = {\n  node?: InputMaybe<LambdaTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectFieldInput = {\n  where?: InputMaybe<PageTypeConnectWhere>\n  connect?: InputMaybe<Array<PageTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  node?: InputMaybe<PageTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PageTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput = {\n  where: PageTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: PageTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypePageTypeCreateFieldInput = {\n  node: PageTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  delete?: InputMaybe<PageTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  disconnect?: InputMaybe<PageTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeFieldInput = {\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput = {\n  node?: InputMaybe<PageTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput = {\n  where?: InputMaybe<PrimitiveTypeConnectWhere>\n  connect?: InputMaybe<Array<PrimitiveTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  node?: InputMaybe<PrimitiveTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<PrimitiveTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput = {\n  where: PrimitiveTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: PrimitiveTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput = {\n  node: PrimitiveTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  delete?: InputMaybe<PrimitiveTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  disconnect?: InputMaybe<PrimitiveTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput = {\n  node?: InputMaybe<PrimitiveTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput = {\n  where?: InputMaybe<ReactNodeTypeConnectWhere>\n  connect?: InputMaybe<Array<ReactNodeTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  node?: InputMaybe<ReactNodeTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ReactNodeTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput = {\n  where: ReactNodeTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: ReactNodeTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput = {\n  node: ReactNodeTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  delete?: InputMaybe<ReactNodeTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  disconnect?: InputMaybe<ReactNodeTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput = {\n  node?: InputMaybe<ReactNodeTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput = {\n  where?: InputMaybe<RenderPropTypeConnectWhere>\n  connect?: InputMaybe<Array<RenderPropTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>>\n  AND?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  >\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  node?: InputMaybe<RenderPropTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<RenderPropTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput = {\n  where: RenderPropTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: RenderPropTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput = {\n  node: RenderPropTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  delete?: InputMaybe<RenderPropTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  disconnect?: InputMaybe<RenderPropTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput = {\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput = {\n  node?: InputMaybe<RenderPropTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput>\n  >\n  delete?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput = {\n  where?: InputMaybe<UnionTypeConnectWhere>\n  connect?: InputMaybe<Array<UnionTypeConnectInput>>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere = {\n  OR?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>>\n  AND?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>>\n  NOT?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  node?: InputMaybe<UnionTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<UnionTypeWhere>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput = {\n  where: UnionTypeConnectOrCreateWhere\n  onCreate: UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInputOnCreate\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInputOnCreate =\n  {\n    node: UnionTypeOnCreateInput\n  }\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput = {\n  node: UnionTypeCreateInput\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  delete?: InputMaybe<UnionTypeDeleteInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  disconnect?: InputMaybe<UnionTypeDisconnectInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeFieldInput = {\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput = {\n  node?: InputMaybe<UnionTypeUpdateInput>\n}\n\nexport type UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput = {\n  where?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere>\n  update?: InputMaybe<UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput>\n  connect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput>\n  >\n  disconnect?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput>\n  >\n  create?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput>>\n  delete?: InputMaybe<Array<UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeConnectOrCreateFieldInput>\n  >\n}\n\nexport type UnionTypeTypesOfUnionTypeUpdateInput = {\n  PrimitiveType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput>\n  >\n  ArrayType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput>\n  >\n  UnionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput>\n  >\n  InterfaceType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput>\n  >\n  ElementType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput>\n  >\n  RenderPropType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput>\n  >\n  ReactNodeType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput>\n  >\n  EnumType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput>\n  >\n  LambdaType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput>\n  >\n  PageType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput>\n  >\n  AppType?: InputMaybe<Array<UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput>>\n  ActionType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput>\n  >\n  CodeMirrorType?: InputMaybe<\n    Array<UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput>\n  >\n}\n\nexport type UnionTypeUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n}\n\nexport type UnionTypeUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  owner?: InputMaybe<IBaseTypeOwnerUpdateFieldInput>\n  typesOfUnionType?: InputMaybe<UnionTypeTypesOfUnionTypeUpdateInput>\n}\n\nexport type UnionTypeWhere = {\n  OR?: InputMaybe<Array<UnionTypeWhere>>\n  AND?: InputMaybe<Array<UnionTypeWhere>>\n  NOT?: InputMaybe<UnionTypeWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  name?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT?: InputMaybe<Scalars['String']>\n  name_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  name_MATCHES?: InputMaybe<Scalars['String']>\n  name_CONTAINS?: InputMaybe<Scalars['String']>\n  name_STARTS_WITH?: InputMaybe<Scalars['String']>\n  name_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  name_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  kind?: InputMaybe<TypeKind>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT?: InputMaybe<TypeKind>\n  kind_IN?: InputMaybe<Array<TypeKind>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  kind_NOT_IN?: InputMaybe<Array<TypeKind>>\n  owner?: InputMaybe<UserWhere>\n  owner_NOT?: InputMaybe<UserWhere>\n  ownerAggregate?: InputMaybe<UnionTypeOwnerAggregateInput>\n  ownerConnection?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  ownerConnection_NOT?: InputMaybe<IBaseTypeOwnerConnectionWhere>\n  /** @deprecated Use `typesOfUnionTypeConnection_SOME` instead. */\n  typesOfUnionTypeConnection?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** @deprecated Use `typesOfUnionTypeConnection_NONE` instead. */\n  typesOfUnionTypeConnection_NOT?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where all of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_ALL?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where none of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_NONE?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where one of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_SINGLE?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n  /** Return UnionTypes where some of the related UnionTypeTypesOfUnionTypeConnections match this filter */\n  typesOfUnionTypeConnection_SOME?: InputMaybe<UnionTypeTypesOfUnionTypeConnectionWhere>\n}\n\nexport type UserAppsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserAppsAggregateInput>>\n  OR?: InputMaybe<Array<UserAppsAggregateInput>>\n  NOT?: InputMaybe<UserAppsAggregateInput>\n  node?: InputMaybe<UserAppsNodeAggregationWhereInput>\n}\n\nexport type UserAppsConnectFieldInput = {\n  where?: InputMaybe<AppConnectWhere>\n  connect?: InputMaybe<Array<AppConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserAppsConnectionSort = {\n  node?: InputMaybe<AppSort>\n}\n\nexport type UserAppsConnectionWhere = {\n  AND?: InputMaybe<Array<UserAppsConnectionWhere>>\n  OR?: InputMaybe<Array<UserAppsConnectionWhere>>\n  NOT?: InputMaybe<UserAppsConnectionWhere>\n  node?: InputMaybe<AppWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AppWhere>\n}\n\nexport type UserAppsConnectOrCreateFieldInput = {\n  where: AppConnectOrCreateWhere\n  onCreate: UserAppsConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserAppsConnectOrCreateFieldInputOnCreate = {\n  node: AppOnCreateInput\n}\n\nexport type UserAppsCreateFieldInput = {\n  node: AppCreateInput\n}\n\nexport type UserAppsDeleteFieldInput = {\n  where?: InputMaybe<UserAppsConnectionWhere>\n  delete?: InputMaybe<AppDeleteInput>\n}\n\nexport type UserAppsDisconnectFieldInput = {\n  where?: InputMaybe<UserAppsConnectionWhere>\n  disconnect?: InputMaybe<AppDisconnectInput>\n}\n\nexport type UserAppsFieldInput = {\n  create?: InputMaybe<Array<UserAppsCreateFieldInput>>\n  connect?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAppsConnectOrCreateFieldInput>>\n}\n\nexport type UserAppsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserAppsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserAppsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserAppsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  _compoundName_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  _compoundName_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  _compoundName_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  _compoundName_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserAppsUpdateConnectionInput = {\n  node?: InputMaybe<AppUpdateInput>\n}\n\nexport type UserAppsUpdateFieldInput = {\n  where?: InputMaybe<UserAppsConnectionWhere>\n  update?: InputMaybe<UserAppsUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserAppsDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserAppsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserAppsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAppsConnectOrCreateFieldInput>>\n}\n\nexport type UserAtomsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserAtomsAggregateInput>>\n  OR?: InputMaybe<Array<UserAtomsAggregateInput>>\n  NOT?: InputMaybe<UserAtomsAggregateInput>\n  node?: InputMaybe<UserAtomsNodeAggregationWhereInput>\n}\n\nexport type UserAtomsConnectFieldInput = {\n  where?: InputMaybe<AtomConnectWhere>\n  connect?: InputMaybe<Array<AtomConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserAtomsConnectionSort = {\n  node?: InputMaybe<AtomSort>\n}\n\nexport type UserAtomsConnectionWhere = {\n  AND?: InputMaybe<Array<UserAtomsConnectionWhere>>\n  OR?: InputMaybe<Array<UserAtomsConnectionWhere>>\n  NOT?: InputMaybe<UserAtomsConnectionWhere>\n  node?: InputMaybe<AtomWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<AtomWhere>\n}\n\nexport type UserAtomsConnectOrCreateFieldInput = {\n  where: AtomConnectOrCreateWhere\n  onCreate: UserAtomsConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserAtomsConnectOrCreateFieldInputOnCreate = {\n  node: AtomOnCreateInput\n}\n\nexport type UserAtomsCreateFieldInput = {\n  node: AtomCreateInput\n}\n\nexport type UserAtomsDeleteFieldInput = {\n  where?: InputMaybe<UserAtomsConnectionWhere>\n  delete?: InputMaybe<AtomDeleteInput>\n}\n\nexport type UserAtomsDisconnectFieldInput = {\n  where?: InputMaybe<UserAtomsConnectionWhere>\n  disconnect?: InputMaybe<AtomDisconnectInput>\n}\n\nexport type UserAtomsFieldInput = {\n  create?: InputMaybe<Array<UserAtomsCreateFieldInput>>\n  connect?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAtomsConnectOrCreateFieldInput>>\n}\n\nexport type UserAtomsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserAtomsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserAtomsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserAtomsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  icon_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  icon_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  icon_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  icon_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  icon_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalJsSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalJsSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalJsSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalJsSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalCssSource_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalCssSource_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalCssSource_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalCssSource_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  externalSourceType_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  externalSourceType_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  externalSourceType_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  externalSourceType_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserAtomsUpdateConnectionInput = {\n  node?: InputMaybe<AtomUpdateInput>\n}\n\nexport type UserAtomsUpdateFieldInput = {\n  where?: InputMaybe<UserAtomsConnectionWhere>\n  update?: InputMaybe<UserAtomsUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserAtomsDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserAtomsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserAtomsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserAtomsConnectOrCreateFieldInput>>\n}\n\nexport type UserComponentsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserComponentsAggregateInput>>\n  OR?: InputMaybe<Array<UserComponentsAggregateInput>>\n  NOT?: InputMaybe<UserComponentsAggregateInput>\n  node?: InputMaybe<UserComponentsNodeAggregationWhereInput>\n}\n\nexport type UserComponentsConnectFieldInput = {\n  where?: InputMaybe<ComponentConnectWhere>\n  connect?: InputMaybe<Array<ComponentConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserComponentsConnectionSort = {\n  node?: InputMaybe<ComponentSort>\n}\n\nexport type UserComponentsConnectionWhere = {\n  AND?: InputMaybe<Array<UserComponentsConnectionWhere>>\n  OR?: InputMaybe<Array<UserComponentsConnectionWhere>>\n  NOT?: InputMaybe<UserComponentsConnectionWhere>\n  node?: InputMaybe<ComponentWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ComponentWhere>\n}\n\nexport type UserComponentsConnectOrCreateFieldInput = {\n  where: ComponentConnectOrCreateWhere\n  onCreate: UserComponentsConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserComponentsConnectOrCreateFieldInputOnCreate = {\n  node: ComponentOnCreateInput\n}\n\nexport type UserComponentsCreateFieldInput = {\n  node: ComponentCreateInput\n}\n\nexport type UserComponentsDeleteFieldInput = {\n  where?: InputMaybe<UserComponentsConnectionWhere>\n  delete?: InputMaybe<ComponentDeleteInput>\n}\n\nexport type UserComponentsDisconnectFieldInput = {\n  where?: InputMaybe<UserComponentsConnectionWhere>\n  disconnect?: InputMaybe<ComponentDisconnectInput>\n}\n\nexport type UserComponentsFieldInput = {\n  create?: InputMaybe<Array<UserComponentsCreateFieldInput>>\n  connect?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserComponentsConnectOrCreateFieldInput>>\n}\n\nexport type UserComponentsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserComponentsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserComponentsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserComponentsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  keyGenerator_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  keyGenerator_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  keyGenerator_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  keyGenerator_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserComponentsUpdateConnectionInput = {\n  node?: InputMaybe<ComponentUpdateInput>\n}\n\nexport type UserComponentsUpdateFieldInput = {\n  where?: InputMaybe<UserComponentsConnectionWhere>\n  update?: InputMaybe<UserComponentsUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserComponentsDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserComponentsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserComponentsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserComponentsConnectOrCreateFieldInput>>\n}\n\nexport type UserConnectInput = {\n  types?: InputMaybe<Array<UserTypesConnectFieldInput>>\n  apps?: InputMaybe<Array<UserAppsConnectFieldInput>>\n  elements?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  components?: InputMaybe<Array<UserComponentsConnectFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsConnectFieldInput>>\n  tags?: InputMaybe<Array<UserTagsConnectFieldInput>>\n}\n\nexport type UserConnectOrCreateInput = {\n  types?: InputMaybe<Array<UserTypesConnectOrCreateFieldInput>>\n  apps?: InputMaybe<Array<UserAppsConnectOrCreateFieldInput>>\n  elements?: InputMaybe<Array<UserElementsConnectOrCreateFieldInput>>\n  components?: InputMaybe<Array<UserComponentsConnectOrCreateFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsConnectOrCreateFieldInput>>\n  tags?: InputMaybe<Array<UserTagsConnectOrCreateFieldInput>>\n}\n\nexport type UserConnectOrCreateWhere = {\n  node: UserUniqueWhere\n}\n\nexport type UserConnectWhere = {\n  node: UserWhere\n}\n\nexport type UserCreateInput = {\n  id: Scalars['ID']\n  auth0Id: Scalars['String']\n  email: Scalars['String']\n  username: Scalars['String']\n  roles?: InputMaybe<Array<Role>>\n  types?: InputMaybe<UserTypesFieldInput>\n  apps?: InputMaybe<UserAppsFieldInput>\n  elements?: InputMaybe<UserElementsFieldInput>\n  components?: InputMaybe<UserComponentsFieldInput>\n  atoms?: InputMaybe<UserAtomsFieldInput>\n  tags?: InputMaybe<UserTagsFieldInput>\n}\n\nexport type UserDeleteInput = {\n  types?: InputMaybe<Array<UserTypesDeleteFieldInput>>\n  apps?: InputMaybe<Array<UserAppsDeleteFieldInput>>\n  elements?: InputMaybe<Array<UserElementsDeleteFieldInput>>\n  components?: InputMaybe<Array<UserComponentsDeleteFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsDeleteFieldInput>>\n  tags?: InputMaybe<Array<UserTagsDeleteFieldInput>>\n}\n\nexport type UserDisconnectInput = {\n  types?: InputMaybe<Array<UserTypesDisconnectFieldInput>>\n  apps?: InputMaybe<Array<UserAppsDisconnectFieldInput>>\n  elements?: InputMaybe<Array<UserElementsDisconnectFieldInput>>\n  components?: InputMaybe<Array<UserComponentsDisconnectFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsDisconnectFieldInput>>\n  tags?: InputMaybe<Array<UserTagsDisconnectFieldInput>>\n}\n\nexport type UserElementsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserElementsAggregateInput>>\n  OR?: InputMaybe<Array<UserElementsAggregateInput>>\n  NOT?: InputMaybe<UserElementsAggregateInput>\n  node?: InputMaybe<UserElementsNodeAggregationWhereInput>\n}\n\nexport type UserElementsConnectFieldInput = {\n  where?: InputMaybe<ElementConnectWhere>\n  connect?: InputMaybe<Array<ElementConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserElementsConnectionSort = {\n  node?: InputMaybe<ElementSort>\n}\n\nexport type UserElementsConnectionWhere = {\n  AND?: InputMaybe<Array<UserElementsConnectionWhere>>\n  OR?: InputMaybe<Array<UserElementsConnectionWhere>>\n  NOT?: InputMaybe<UserElementsConnectionWhere>\n  node?: InputMaybe<ElementWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<ElementWhere>\n}\n\nexport type UserElementsConnectOrCreateFieldInput = {\n  where: ElementConnectOrCreateWhere\n  onCreate: UserElementsConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserElementsConnectOrCreateFieldInputOnCreate = {\n  node: ElementOnCreateInput\n}\n\nexport type UserElementsCreateFieldInput = {\n  node: ElementCreateInput\n}\n\nexport type UserElementsDeleteFieldInput = {\n  where?: InputMaybe<UserElementsConnectionWhere>\n  delete?: InputMaybe<ElementDeleteInput>\n}\n\nexport type UserElementsDisconnectFieldInput = {\n  where?: InputMaybe<UserElementsConnectionWhere>\n  disconnect?: InputMaybe<ElementDisconnectInput>\n}\n\nexport type UserElementsFieldInput = {\n  create?: InputMaybe<Array<UserElementsCreateFieldInput>>\n  connect?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserElementsConnectOrCreateFieldInput>>\n}\n\nexport type UserElementsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserElementsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserElementsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserElementsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  customCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  customCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  customCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  customCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  customCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  guiCss_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  guiCss_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  guiCss_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  guiCss_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  propTransformationJs_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  propTransformationJs_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  propTransformationJs_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  propTransformationJs_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderForEachPropKey_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderForEachPropKey_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderForEachPropKey_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderForEachPropKey_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  renderIfExpression_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  renderIfExpression_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  renderIfExpression_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  renderIfExpression_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserElementsUpdateConnectionInput = {\n  node?: InputMaybe<ElementUpdateInput>\n}\n\nexport type UserElementsUpdateFieldInput = {\n  where?: InputMaybe<UserElementsConnectionWhere>\n  update?: InputMaybe<UserElementsUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserElementsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserElementsDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserElementsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserElementsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserElementsConnectOrCreateFieldInput>>\n}\n\nexport type UserOnCreateInput = {\n  id: Scalars['ID']\n  auth0Id: Scalars['String']\n  email: Scalars['String']\n  username: Scalars['String']\n  roles?: InputMaybe<Array<Role>>\n}\n\nexport type UserOptions = {\n  /** Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<UserSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserRelationInput = {\n  types?: InputMaybe<Array<UserTypesCreateFieldInput>>\n  apps?: InputMaybe<Array<UserAppsCreateFieldInput>>\n  elements?: InputMaybe<Array<UserElementsCreateFieldInput>>\n  components?: InputMaybe<Array<UserComponentsCreateFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsCreateFieldInput>>\n  tags?: InputMaybe<Array<UserTagsCreateFieldInput>>\n}\n\n/** Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object. */\nexport type UserSort = {\n  id?: InputMaybe<SortDirection>\n  auth0Id?: InputMaybe<SortDirection>\n  email?: InputMaybe<SortDirection>\n  username?: InputMaybe<SortDirection>\n}\n\nexport type UserTagsAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserTagsAggregateInput>>\n  OR?: InputMaybe<Array<UserTagsAggregateInput>>\n  NOT?: InputMaybe<UserTagsAggregateInput>\n  node?: InputMaybe<UserTagsNodeAggregationWhereInput>\n}\n\nexport type UserTagsConnectFieldInput = {\n  where?: InputMaybe<TagConnectWhere>\n  connect?: InputMaybe<Array<TagConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserTagsConnectionSort = {\n  node?: InputMaybe<TagSort>\n}\n\nexport type UserTagsConnectionWhere = {\n  AND?: InputMaybe<Array<UserTagsConnectionWhere>>\n  OR?: InputMaybe<Array<UserTagsConnectionWhere>>\n  NOT?: InputMaybe<UserTagsConnectionWhere>\n  node?: InputMaybe<TagWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<TagWhere>\n}\n\nexport type UserTagsConnectOrCreateFieldInput = {\n  where: TagConnectOrCreateWhere\n  onCreate: UserTagsConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserTagsConnectOrCreateFieldInputOnCreate = {\n  node: TagOnCreateInput\n}\n\nexport type UserTagsCreateFieldInput = {\n  node: TagCreateInput\n}\n\nexport type UserTagsDeleteFieldInput = {\n  where?: InputMaybe<UserTagsConnectionWhere>\n  delete?: InputMaybe<TagDeleteInput>\n}\n\nexport type UserTagsDisconnectFieldInput = {\n  where?: InputMaybe<UserTagsConnectionWhere>\n  disconnect?: InputMaybe<TagDisconnectInput>\n}\n\nexport type UserTagsFieldInput = {\n  create?: InputMaybe<Array<UserTagsCreateFieldInput>>\n  connect?: InputMaybe<Array<UserTagsConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTagsConnectOrCreateFieldInput>>\n}\n\nexport type UserTagsNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserTagsNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserTagsNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserTagsNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserTagsUpdateConnectionInput = {\n  node?: InputMaybe<TagUpdateInput>\n}\n\nexport type UserTagsUpdateFieldInput = {\n  where?: InputMaybe<UserTagsConnectionWhere>\n  update?: InputMaybe<UserTagsUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserTagsConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserTagsDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserTagsCreateFieldInput>>\n  delete?: InputMaybe<Array<UserTagsDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTagsConnectOrCreateFieldInput>>\n}\n\nexport type UserTypesAggregateInput = {\n  count?: InputMaybe<Scalars['Int']>\n  count_LT?: InputMaybe<Scalars['Int']>\n  count_LTE?: InputMaybe<Scalars['Int']>\n  count_GT?: InputMaybe<Scalars['Int']>\n  count_GTE?: InputMaybe<Scalars['Int']>\n  AND?: InputMaybe<Array<UserTypesAggregateInput>>\n  OR?: InputMaybe<Array<UserTypesAggregateInput>>\n  NOT?: InputMaybe<UserTypesAggregateInput>\n  node?: InputMaybe<UserTypesNodeAggregationWhereInput>\n}\n\nexport type UserTypesConnectFieldInput = {\n  where?: InputMaybe<BaseTypeConnectWhere>\n  connect?: InputMaybe<Array<BaseTypeConnectInput>>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type UserTypesConnectionSort = {\n  node?: InputMaybe<BaseTypeSort>\n}\n\nexport type UserTypesConnectionWhere = {\n  AND?: InputMaybe<Array<UserTypesConnectionWhere>>\n  OR?: InputMaybe<Array<UserTypesConnectionWhere>>\n  NOT?: InputMaybe<UserTypesConnectionWhere>\n  node?: InputMaybe<BaseTypeWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<BaseTypeWhere>\n}\n\nexport type UserTypesConnectOrCreateFieldInput = {\n  where: BaseTypeConnectOrCreateWhere\n  onCreate: UserTypesConnectOrCreateFieldInputOnCreate\n}\n\nexport type UserTypesConnectOrCreateFieldInputOnCreate = {\n  node: BaseTypeOnCreateInput\n}\n\nexport type UserTypesCreateFieldInput = {\n  node: BaseTypeCreateInput\n}\n\nexport type UserTypesDeleteFieldInput = {\n  where?: InputMaybe<UserTypesConnectionWhere>\n  delete?: InputMaybe<BaseTypeDeleteInput>\n}\n\nexport type UserTypesDisconnectFieldInput = {\n  where?: InputMaybe<UserTypesConnectionWhere>\n  disconnect?: InputMaybe<BaseTypeDisconnectInput>\n}\n\nexport type UserTypesFieldInput = {\n  create?: InputMaybe<Array<UserTypesCreateFieldInput>>\n  connect?: InputMaybe<Array<UserTypesConnectFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTypesConnectOrCreateFieldInput>>\n}\n\nexport type UserTypesNodeAggregationWhereInput = {\n  AND?: InputMaybe<Array<UserTypesNodeAggregationWhereInput>>\n  OR?: InputMaybe<Array<UserTypesNodeAggregationWhereInput>>\n  NOT?: InputMaybe<UserTypesNodeAggregationWhereInput>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  id_EQUAL?: InputMaybe<Scalars['ID']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_EQUAL?: InputMaybe<Scalars['String']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_EQUAL?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_EQUAL?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_EQUAL?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_EQUAL?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_GTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_GTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_GTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_GTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LT?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LT?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LT?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LT?: InputMaybe<Scalars['Int']>\n  /** @deprecated Aggregation filters that are not relying on an aggregating function will be deprecated. */\n  name_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_AVERAGE_LTE?: InputMaybe<Scalars['Float']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_LONGEST_LTE?: InputMaybe<Scalars['Int']>\n  /** @deprecated Please use the explicit _LENGTH version for string aggregation. */\n  name_SHORTEST_LTE?: InputMaybe<Scalars['Int']>\n  name_AVERAGE_LENGTH_LTE?: InputMaybe<Scalars['Float']>\n  name_LONGEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n  name_SHORTEST_LENGTH_LTE?: InputMaybe<Scalars['Int']>\n}\n\nexport type UserTypesUpdateConnectionInput = {\n  node?: InputMaybe<BaseTypeUpdateInput>\n}\n\nexport type UserTypesUpdateFieldInput = {\n  where?: InputMaybe<UserTypesConnectionWhere>\n  update?: InputMaybe<UserTypesUpdateConnectionInput>\n  connect?: InputMaybe<Array<UserTypesConnectFieldInput>>\n  disconnect?: InputMaybe<Array<UserTypesDisconnectFieldInput>>\n  create?: InputMaybe<Array<UserTypesCreateFieldInput>>\n  delete?: InputMaybe<Array<UserTypesDeleteFieldInput>>\n  connectOrCreate?: InputMaybe<Array<UserTypesConnectOrCreateFieldInput>>\n}\n\nexport type UserUniqueWhere = {\n  id?: InputMaybe<Scalars['ID']>\n  auth0Id?: InputMaybe<Scalars['String']>\n  username?: InputMaybe<Scalars['String']>\n}\n\nexport type UserUpdateInput = {\n  id?: InputMaybe<Scalars['ID']>\n  auth0Id?: InputMaybe<Scalars['String']>\n  email?: InputMaybe<Scalars['String']>\n  username?: InputMaybe<Scalars['String']>\n  roles?: InputMaybe<Array<Role>>\n  types?: InputMaybe<Array<UserTypesUpdateFieldInput>>\n  apps?: InputMaybe<Array<UserAppsUpdateFieldInput>>\n  elements?: InputMaybe<Array<UserElementsUpdateFieldInput>>\n  components?: InputMaybe<Array<UserComponentsUpdateFieldInput>>\n  atoms?: InputMaybe<Array<UserAtomsUpdateFieldInput>>\n  tags?: InputMaybe<Array<UserTagsUpdateFieldInput>>\n}\n\nexport type UserWhere = {\n  OR?: InputMaybe<Array<UserWhere>>\n  AND?: InputMaybe<Array<UserWhere>>\n  NOT?: InputMaybe<UserWhere>\n  id?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT?: InputMaybe<Scalars['ID']>\n  id_IN?: InputMaybe<Array<Scalars['ID']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_IN?: InputMaybe<Array<Scalars['ID']>>\n  id_MATCHES?: InputMaybe<Scalars['String']>\n  id_CONTAINS?: InputMaybe<Scalars['ID']>\n  id_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  id_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_CONTAINS?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_STARTS_WITH?: InputMaybe<Scalars['ID']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  id_NOT_ENDS_WITH?: InputMaybe<Scalars['ID']>\n  auth0Id?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  auth0Id_NOT?: InputMaybe<Scalars['String']>\n  auth0Id_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  auth0Id_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  auth0Id_MATCHES?: InputMaybe<Scalars['String']>\n  auth0Id_CONTAINS?: InputMaybe<Scalars['String']>\n  auth0Id_STARTS_WITH?: InputMaybe<Scalars['String']>\n  auth0Id_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  auth0Id_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  auth0Id_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  auth0Id_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  email?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  email_NOT?: InputMaybe<Scalars['String']>\n  email_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  email_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  email_MATCHES?: InputMaybe<Scalars['String']>\n  email_CONTAINS?: InputMaybe<Scalars['String']>\n  email_STARTS_WITH?: InputMaybe<Scalars['String']>\n  email_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  email_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  email_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  email_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  username?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  username_NOT?: InputMaybe<Scalars['String']>\n  username_IN?: InputMaybe<Array<Scalars['String']>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  username_NOT_IN?: InputMaybe<Array<Scalars['String']>>\n  username_MATCHES?: InputMaybe<Scalars['String']>\n  username_CONTAINS?: InputMaybe<Scalars['String']>\n  username_STARTS_WITH?: InputMaybe<Scalars['String']>\n  username_ENDS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  username_NOT_CONTAINS?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  username_NOT_STARTS_WITH?: InputMaybe<Scalars['String']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  username_NOT_ENDS_WITH?: InputMaybe<Scalars['String']>\n  roles?: InputMaybe<Array<Role>>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  roles_NOT?: InputMaybe<Array<Role>>\n  roles_INCLUDES?: InputMaybe<Role>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  roles_NOT_INCLUDES?: InputMaybe<Role>\n  /** @deprecated Use `types_SOME` instead. */\n  types?: InputMaybe<BaseTypeWhere>\n  /** @deprecated Use `types_NONE` instead. */\n  types_NOT?: InputMaybe<BaseTypeWhere>\n  typesAggregate?: InputMaybe<UserTypesAggregateInput>\n  /** Return Users where all of the related BaseTypes match this filter */\n  types_ALL?: InputMaybe<BaseTypeWhere>\n  /** Return Users where none of the related BaseTypes match this filter */\n  types_NONE?: InputMaybe<BaseTypeWhere>\n  /** Return Users where one of the related BaseTypes match this filter */\n  types_SINGLE?: InputMaybe<BaseTypeWhere>\n  /** Return Users where some of the related BaseTypes match this filter */\n  types_SOME?: InputMaybe<BaseTypeWhere>\n  /** @deprecated Use `apps_SOME` instead. */\n  apps?: InputMaybe<AppWhere>\n  /** @deprecated Use `apps_NONE` instead. */\n  apps_NOT?: InputMaybe<AppWhere>\n  appsAggregate?: InputMaybe<UserAppsAggregateInput>\n  /** Return Users where all of the related Apps match this filter */\n  apps_ALL?: InputMaybe<AppWhere>\n  /** Return Users where none of the related Apps match this filter */\n  apps_NONE?: InputMaybe<AppWhere>\n  /** Return Users where one of the related Apps match this filter */\n  apps_SINGLE?: InputMaybe<AppWhere>\n  /** Return Users where some of the related Apps match this filter */\n  apps_SOME?: InputMaybe<AppWhere>\n  /** @deprecated Use `elements_SOME` instead. */\n  elements?: InputMaybe<ElementWhere>\n  /** @deprecated Use `elements_NONE` instead. */\n  elements_NOT?: InputMaybe<ElementWhere>\n  elementsAggregate?: InputMaybe<UserElementsAggregateInput>\n  /** Return Users where all of the related Elements match this filter */\n  elements_ALL?: InputMaybe<ElementWhere>\n  /** Return Users where none of the related Elements match this filter */\n  elements_NONE?: InputMaybe<ElementWhere>\n  /** Return Users where one of the related Elements match this filter */\n  elements_SINGLE?: InputMaybe<ElementWhere>\n  /** Return Users where some of the related Elements match this filter */\n  elements_SOME?: InputMaybe<ElementWhere>\n  /** @deprecated Use `components_SOME` instead. */\n  components?: InputMaybe<ComponentWhere>\n  /** @deprecated Use `components_NONE` instead. */\n  components_NOT?: InputMaybe<ComponentWhere>\n  componentsAggregate?: InputMaybe<UserComponentsAggregateInput>\n  /** Return Users where all of the related Components match this filter */\n  components_ALL?: InputMaybe<ComponentWhere>\n  /** Return Users where none of the related Components match this filter */\n  components_NONE?: InputMaybe<ComponentWhere>\n  /** Return Users where one of the related Components match this filter */\n  components_SINGLE?: InputMaybe<ComponentWhere>\n  /** Return Users where some of the related Components match this filter */\n  components_SOME?: InputMaybe<ComponentWhere>\n  /** @deprecated Use `atoms_SOME` instead. */\n  atoms?: InputMaybe<AtomWhere>\n  /** @deprecated Use `atoms_NONE` instead. */\n  atoms_NOT?: InputMaybe<AtomWhere>\n  atomsAggregate?: InputMaybe<UserAtomsAggregateInput>\n  /** Return Users where all of the related Atoms match this filter */\n  atoms_ALL?: InputMaybe<AtomWhere>\n  /** Return Users where none of the related Atoms match this filter */\n  atoms_NONE?: InputMaybe<AtomWhere>\n  /** Return Users where one of the related Atoms match this filter */\n  atoms_SINGLE?: InputMaybe<AtomWhere>\n  /** Return Users where some of the related Atoms match this filter */\n  atoms_SOME?: InputMaybe<AtomWhere>\n  /** @deprecated Use `tags_SOME` instead. */\n  tags?: InputMaybe<TagWhere>\n  /** @deprecated Use `tags_NONE` instead. */\n  tags_NOT?: InputMaybe<TagWhere>\n  tagsAggregate?: InputMaybe<UserTagsAggregateInput>\n  /** Return Users where all of the related Tags match this filter */\n  tags_ALL?: InputMaybe<TagWhere>\n  /** Return Users where none of the related Tags match this filter */\n  tags_NONE?: InputMaybe<TagWhere>\n  /** Return Users where one of the related Tags match this filter */\n  tags_SINGLE?: InputMaybe<TagWhere>\n  /** Return Users where some of the related Tags match this filter */\n  tags_SOME?: InputMaybe<TagWhere>\n  /** @deprecated Use `typesConnection_SOME` instead. */\n  typesConnection?: InputMaybe<UserTypesConnectionWhere>\n  /** @deprecated Use `typesConnection_NONE` instead. */\n  typesConnection_NOT?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where all of the related UserTypesConnections match this filter */\n  typesConnection_ALL?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where none of the related UserTypesConnections match this filter */\n  typesConnection_NONE?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where one of the related UserTypesConnections match this filter */\n  typesConnection_SINGLE?: InputMaybe<UserTypesConnectionWhere>\n  /** Return Users where some of the related UserTypesConnections match this filter */\n  typesConnection_SOME?: InputMaybe<UserTypesConnectionWhere>\n  /** @deprecated Use `appsConnection_SOME` instead. */\n  appsConnection?: InputMaybe<UserAppsConnectionWhere>\n  /** @deprecated Use `appsConnection_NONE` instead. */\n  appsConnection_NOT?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where all of the related UserAppsConnections match this filter */\n  appsConnection_ALL?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where none of the related UserAppsConnections match this filter */\n  appsConnection_NONE?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where one of the related UserAppsConnections match this filter */\n  appsConnection_SINGLE?: InputMaybe<UserAppsConnectionWhere>\n  /** Return Users where some of the related UserAppsConnections match this filter */\n  appsConnection_SOME?: InputMaybe<UserAppsConnectionWhere>\n  /** @deprecated Use `elementsConnection_SOME` instead. */\n  elementsConnection?: InputMaybe<UserElementsConnectionWhere>\n  /** @deprecated Use `elementsConnection_NONE` instead. */\n  elementsConnection_NOT?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where all of the related UserElementsConnections match this filter */\n  elementsConnection_ALL?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where none of the related UserElementsConnections match this filter */\n  elementsConnection_NONE?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where one of the related UserElementsConnections match this filter */\n  elementsConnection_SINGLE?: InputMaybe<UserElementsConnectionWhere>\n  /** Return Users where some of the related UserElementsConnections match this filter */\n  elementsConnection_SOME?: InputMaybe<UserElementsConnectionWhere>\n  /** @deprecated Use `componentsConnection_SOME` instead. */\n  componentsConnection?: InputMaybe<UserComponentsConnectionWhere>\n  /** @deprecated Use `componentsConnection_NONE` instead. */\n  componentsConnection_NOT?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where all of the related UserComponentsConnections match this filter */\n  componentsConnection_ALL?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where none of the related UserComponentsConnections match this filter */\n  componentsConnection_NONE?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where one of the related UserComponentsConnections match this filter */\n  componentsConnection_SINGLE?: InputMaybe<UserComponentsConnectionWhere>\n  /** Return Users where some of the related UserComponentsConnections match this filter */\n  componentsConnection_SOME?: InputMaybe<UserComponentsConnectionWhere>\n  /** @deprecated Use `atomsConnection_SOME` instead. */\n  atomsConnection?: InputMaybe<UserAtomsConnectionWhere>\n  /** @deprecated Use `atomsConnection_NONE` instead. */\n  atomsConnection_NOT?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where all of the related UserAtomsConnections match this filter */\n  atomsConnection_ALL?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where none of the related UserAtomsConnections match this filter */\n  atomsConnection_NONE?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where one of the related UserAtomsConnections match this filter */\n  atomsConnection_SINGLE?: InputMaybe<UserAtomsConnectionWhere>\n  /** Return Users where some of the related UserAtomsConnections match this filter */\n  atomsConnection_SOME?: InputMaybe<UserAtomsConnectionWhere>\n  /** @deprecated Use `tagsConnection_SOME` instead. */\n  tagsConnection?: InputMaybe<UserTagsConnectionWhere>\n  /** @deprecated Use `tagsConnection_NONE` instead. */\n  tagsConnection_NOT?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where all of the related UserTagsConnections match this filter */\n  tagsConnection_ALL?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where none of the related UserTagsConnections match this filter */\n  tagsConnection_NONE?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where one of the related UserTagsConnections match this filter */\n  tagsConnection_SINGLE?: InputMaybe<UserTagsConnectionWhere>\n  /** Return Users where some of the related UserTagsConnections match this filter */\n  tagsConnection_SOME?: InputMaybe<UserTagsConnectionWhere>\n}\n\nexport type VercelDomainConfigCreateInput = {\n  misconfigured: Scalars['Boolean']\n}\n\nexport type VercelDomainConfigOptions = {\n  /** Specify one or more VercelDomainConfigSort objects to sort VercelDomainConfigs by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<VercelDomainConfigSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort VercelDomainConfigs by. The order in which sorts are applied is not guaranteed when specifying many fields in one VercelDomainConfigSort object. */\nexport type VercelDomainConfigSort = {\n  misconfigured?: InputMaybe<SortDirection>\n}\n\nexport type VercelDomainConfigUpdateInput = {\n  misconfigured?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type VercelDomainConfigWhere = {\n  OR?: InputMaybe<Array<VercelDomainConfigWhere>>\n  AND?: InputMaybe<Array<VercelDomainConfigWhere>>\n  NOT?: InputMaybe<VercelDomainConfigWhere>\n  misconfigured?: InputMaybe<Scalars['Boolean']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  misconfigured_NOT?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type VercelProjectDomainCreateInput = {\n  verified: Scalars['Boolean']\n}\n\nexport type VercelProjectDomainOptions = {\n  /** Specify one or more VercelProjectDomainSort objects to sort VercelProjectDomains by. The sorts will be applied in the order in which they are arranged in the array. */\n  sort?: InputMaybe<Array<VercelProjectDomainSort>>\n  limit?: InputMaybe<Scalars['Int']>\n  offset?: InputMaybe<Scalars['Int']>\n}\n\n/** Fields to sort VercelProjectDomains by. The order in which sorts are applied is not guaranteed when specifying many fields in one VercelProjectDomainSort object. */\nexport type VercelProjectDomainSort = {\n  verified?: InputMaybe<SortDirection>\n}\n\nexport type VercelProjectDomainUpdateInput = {\n  verified?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type VercelProjectDomainWhere = {\n  OR?: InputMaybe<Array<VercelProjectDomainWhere>>\n  AND?: InputMaybe<Array<VercelProjectDomainWhere>>\n  NOT?: InputMaybe<VercelProjectDomainWhere>\n  verified?: InputMaybe<Scalars['Boolean']>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  verified_NOT?: InputMaybe<Scalars['Boolean']>\n}\n\nexport type WithOwnerOwnerConnectFieldInput = {\n  where?: InputMaybe<UserConnectWhere>\n  connect?: InputMaybe<UserConnectInput>\n  /** Whether or not to overwrite any matching relationship with the new properties. Will default to `false` in 4.0.0. */\n  overwrite?: Scalars['Boolean']\n}\n\nexport type WithOwnerOwnerConnectionSort = {\n  node?: InputMaybe<UserSort>\n}\n\nexport type WithOwnerOwnerConnectionWhere = {\n  AND?: InputMaybe<Array<WithOwnerOwnerConnectionWhere>>\n  OR?: InputMaybe<Array<WithOwnerOwnerConnectionWhere>>\n  NOT?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  node?: InputMaybe<UserWhere>\n  /** @deprecated Negation filters will be deprecated, use the NOT operator to achieve the same behavior */\n  node_NOT?: InputMaybe<UserWhere>\n}\n\nexport type WithOwnerOwnerConnectOrCreateFieldInput = {\n  where: UserConnectOrCreateWhere\n  onCreate: WithOwnerOwnerConnectOrCreateFieldInputOnCreate\n}\n\nexport type WithOwnerOwnerConnectOrCreateFieldInputOnCreate = {\n  node: UserOnCreateInput\n}\n\nexport type WithOwnerOwnerCreateFieldInput = {\n  node: UserCreateInput\n}\n\nexport type WithOwnerOwnerDeleteFieldInput = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  delete?: InputMaybe<UserDeleteInput>\n}\n\nexport type WithOwnerOwnerDisconnectFieldInput = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  disconnect?: InputMaybe<UserDisconnectInput>\n}\n\nexport type WithOwnerOwnerFieldInput = {\n  create?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  connect?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  connectOrCreate?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n}\n\nexport type WithOwnerOwnerUpdateConnectionInput = {\n  node?: InputMaybe<UserUpdateInput>\n}\n\nexport type WithOwnerOwnerUpdateFieldInput = {\n  where?: InputMaybe<WithOwnerOwnerConnectionWhere>\n  update?: InputMaybe<WithOwnerOwnerUpdateConnectionInput>\n  connect?: InputMaybe<WithOwnerOwnerConnectFieldInput>\n  disconnect?: InputMaybe<WithOwnerOwnerDisconnectFieldInput>\n  create?: InputMaybe<WithOwnerOwnerCreateFieldInput>\n  delete?: InputMaybe<WithOwnerOwnerDeleteFieldInput>\n  connectOrCreate?: InputMaybe<WithOwnerOwnerConnectOrCreateFieldInput>\n}\n\nexport interface ResetDatabaseMutationResponseAggregateSelectionInput {\n  count?: boolean\n}\n\nexport declare class ResetDatabaseMutationResponseModel {\n  public find(args?: {\n    where?: ResetDatabaseMutationResponseWhere\n\n    options?: ResetDatabaseMutationResponseOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ResetDatabaseMutationResponse[]>\n  public create(args: {\n    input: ResetDatabaseMutationResponseCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateResetDatabaseMutationResponsesMutationResponse>\n  public update(args: {\n    where?: ResetDatabaseMutationResponseWhere\n    update?: ResetDatabaseMutationResponseUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateResetDatabaseMutationResponsesMutationResponse>\n  public delete(args: {\n    where?: ResetDatabaseMutationResponseWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ResetDatabaseMutationResponseWhere\n\n    aggregate: ResetDatabaseMutationResponseAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ResetDatabaseMutationResponseAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface UserAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  auth0Id?: StringAggregateInputNonNullable\n  email?: StringAggregateInputNonNullable\n  username?: StringAggregateInputNonNullable\n}\n\nexport declare class UserModel {\n  public find(args?: {\n    where?: UserWhere\n\n    options?: UserOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<User[]>\n  public create(args: {\n    input: UserCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateUsersMutationResponse>\n  public update(args: {\n    where?: UserWhere\n    update?: UserUpdateInput\n    connect?: UserConnectInput\n    disconnect?: UserDisconnectInput\n    create?: UserCreateInput\n    connectOrCreate?: UserConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateUsersMutationResponse>\n  public delete(args: {\n    where?: UserWhere\n    delete?: UserDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: UserWhere\n\n    aggregate: UserAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<UserAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface AppAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  _compoundName?: StringAggregateInputNonNullable\n}\n\nexport declare class AppModel {\n  public find(args?: {\n    where?: AppWhere\n\n    options?: AppOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<App[]>\n  public create(args: {\n    input: AppCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateAppsMutationResponse>\n  public update(args: {\n    where?: AppWhere\n    update?: AppUpdateInput\n    connect?: AppConnectInput\n    disconnect?: AppDisconnectInput\n    create?: AppCreateInput\n    connectOrCreate?: AppConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateAppsMutationResponse>\n  public delete(args: {\n    where?: AppWhere\n    delete?: AppDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: AppWhere\n\n    aggregate: AppAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<AppAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface FieldAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  key?: StringAggregateInputNonNullable\n  name?: StringAggregateInputNullable\n  description?: StringAggregateInputNullable\n  validationRules?: StringAggregateInputNullable\n  defaultValues?: StringAggregateInputNullable\n}\n\nexport declare class FieldModel {\n  public find(args?: {\n    where?: FieldWhere\n\n    options?: FieldOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Field[]>\n  public create(args: {\n    input: FieldCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateFieldsMutationResponse>\n  public update(args: {\n    where?: FieldWhere\n    update?: FieldUpdateInput\n    connect?: FieldConnectInput\n    disconnect?: FieldDisconnectInput\n    create?: FieldCreateInput\n    connectOrCreate?: FieldConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateFieldsMutationResponse>\n  public delete(args: {\n    where?: FieldWhere\n    delete?: FieldDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: FieldWhere\n\n    aggregate: FieldAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<FieldAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface AtomAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n  icon?: StringAggregateInputNullable\n  externalJsSource?: StringAggregateInputNullable\n  externalCssSource?: StringAggregateInputNullable\n  externalSourceType?: StringAggregateInputNullable\n}\n\nexport declare class AtomModel {\n  public find(args?: {\n    where?: AtomWhere\n\n    options?: AtomOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Atom[]>\n  public create(args: {\n    input: AtomCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateAtomsMutationResponse>\n  public update(args: {\n    where?: AtomWhere\n    update?: AtomUpdateInput\n    connect?: AtomConnectInput\n    disconnect?: AtomDisconnectInput\n    create?: AtomCreateInput\n    connectOrCreate?: AtomConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateAtomsMutationResponse>\n  public delete(args: {\n    where?: AtomWhere\n    delete?: AtomDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: AtomWhere\n\n    aggregate: AtomAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<AtomAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface PageAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  _compoundName?: StringAggregateInputNonNullable\n  url?: StringAggregateInputNonNullable\n}\n\nexport declare class PageModel {\n  public find(args?: {\n    where?: PageWhere\n\n    options?: PageOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Page[]>\n  public create(args: {\n    input: PageCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreatePagesMutationResponse>\n  public update(args: {\n    where?: PageWhere\n    update?: PageUpdateInput\n    connect?: PageConnectInput\n    disconnect?: PageDisconnectInput\n    create?: PageCreateInput\n    connectOrCreate?: PageConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdatePagesMutationResponse>\n  public delete(args: {\n    where?: PageWhere\n    delete?: PageDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: PageWhere\n\n    aggregate: PageAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<PageAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface TypeReferenceAggregateSelectionInput {\n  count?: boolean\n  name?: StringAggregateInputNonNullable\n  label?: StringAggregateInputNonNullable\n}\n\nexport declare class TypeReferenceModel {\n  public find(args?: {\n    where?: TypeReferenceWhere\n\n    options?: TypeReferenceOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<TypeReference[]>\n  public create(args: {\n    input: TypeReferenceCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateTypeReferencesMutationResponse>\n  public update(args: {\n    where?: TypeReferenceWhere\n    update?: TypeReferenceUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateTypeReferencesMutationResponse>\n  public delete(args: {\n    where?: TypeReferenceWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: TypeReferenceWhere\n\n    aggregate: TypeReferenceAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<TypeReferenceAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface GetBaseTypesReturnAggregateSelectionInput {\n  count?: boolean\n  totalCount?: IntAggregateInputNonNullable\n}\n\nexport declare class GetBaseTypesReturnModel {\n  public find(args?: {\n    where?: GetBaseTypesReturnWhere\n\n    options?: GetBaseTypesReturnOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<GetBaseTypesReturn[]>\n  public create(args: {\n    input: GetBaseTypesReturnCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateGetBaseTypesReturnsMutationResponse>\n  public update(args: {\n    where?: GetBaseTypesReturnWhere\n    update?: GetBaseTypesReturnUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateGetBaseTypesReturnsMutationResponse>\n  public delete(args: {\n    where?: GetBaseTypesReturnWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: GetBaseTypesReturnWhere\n\n    aggregate: GetBaseTypesReturnAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<GetBaseTypesReturnAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface BaseTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class BaseTypeModel {\n  public find(args?: {\n    where?: BaseTypeWhere\n\n    options?: BaseTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<BaseType[]>\n  public create(args: {\n    input: BaseTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateBaseTypesMutationResponse>\n  public update(args: {\n    where?: BaseTypeWhere\n    update?: BaseTypeUpdateInput\n    connect?: BaseTypeConnectInput\n    disconnect?: BaseTypeDisconnectInput\n    create?: BaseTypeCreateInput\n    connectOrCreate?: BaseTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateBaseTypesMutationResponse>\n  public delete(args: {\n    where?: BaseTypeWhere\n    delete?: BaseTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: BaseTypeWhere\n\n    aggregate: BaseTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<BaseTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface PrimitiveTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class PrimitiveTypeModel {\n  public find(args?: {\n    where?: PrimitiveTypeWhere\n\n    options?: PrimitiveTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<PrimitiveType[]>\n  public create(args: {\n    input: PrimitiveTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreatePrimitiveTypesMutationResponse>\n  public update(args: {\n    where?: PrimitiveTypeWhere\n    update?: PrimitiveTypeUpdateInput\n    connect?: PrimitiveTypeConnectInput\n    disconnect?: PrimitiveTypeDisconnectInput\n    create?: PrimitiveTypeCreateInput\n    connectOrCreate?: PrimitiveTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdatePrimitiveTypesMutationResponse>\n  public delete(args: {\n    where?: PrimitiveTypeWhere\n    delete?: PrimitiveTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: PrimitiveTypeWhere\n\n    aggregate: PrimitiveTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<PrimitiveTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ArrayTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ArrayTypeModel {\n  public find(args?: {\n    where?: ArrayTypeWhere\n\n    options?: ArrayTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ArrayType[]>\n  public create(args: {\n    input: ArrayTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateArrayTypesMutationResponse>\n  public update(args: {\n    where?: ArrayTypeWhere\n    update?: ArrayTypeUpdateInput\n    connect?: ArrayTypeConnectInput\n    disconnect?: ArrayTypeDisconnectInput\n    create?: ArrayTypeCreateInput\n    connectOrCreate?: ArrayTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateArrayTypesMutationResponse>\n  public delete(args: {\n    where?: ArrayTypeWhere\n    delete?: ArrayTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ArrayTypeWhere\n\n    aggregate: ArrayTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ArrayTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface UnionTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class UnionTypeModel {\n  public find(args?: {\n    where?: UnionTypeWhere\n\n    options?: UnionTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UnionType[]>\n  public create(args: {\n    input: UnionTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateUnionTypesMutationResponse>\n  public update(args: {\n    where?: UnionTypeWhere\n    update?: UnionTypeUpdateInput\n    connect?: UnionTypeConnectInput\n    disconnect?: UnionTypeDisconnectInput\n    create?: UnionTypeCreateInput\n    connectOrCreate?: UnionTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateUnionTypesMutationResponse>\n  public delete(args: {\n    where?: UnionTypeWhere\n    delete?: UnionTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: UnionTypeWhere\n\n    aggregate: UnionTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<UnionTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface InterfaceTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class InterfaceTypeModel {\n  public find(args?: {\n    where?: InterfaceTypeWhere\n\n    options?: InterfaceTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<InterfaceType[]>\n  public create(args: {\n    input: InterfaceTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateInterfaceTypesMutationResponse>\n  public update(args: {\n    where?: InterfaceTypeWhere\n    update?: InterfaceTypeUpdateInput\n    connect?: InterfaceTypeConnectInput\n    disconnect?: InterfaceTypeDisconnectInput\n    create?: InterfaceTypeCreateInput\n    connectOrCreate?: InterfaceTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateInterfaceTypesMutationResponse>\n  public delete(args: {\n    where?: InterfaceTypeWhere\n    delete?: InterfaceTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: InterfaceTypeWhere\n\n    aggregate: InterfaceTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<InterfaceTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ElementTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ElementTypeModel {\n  public find(args?: {\n    where?: ElementTypeWhere\n\n    options?: ElementTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ElementType[]>\n  public create(args: {\n    input: ElementTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateElementTypesMutationResponse>\n  public update(args: {\n    where?: ElementTypeWhere\n    update?: ElementTypeUpdateInput\n    connect?: ElementTypeConnectInput\n    disconnect?: ElementTypeDisconnectInput\n    create?: ElementTypeCreateInput\n    connectOrCreate?: ElementTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateElementTypesMutationResponse>\n  public delete(args: {\n    where?: ElementTypeWhere\n    delete?: ElementTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ElementTypeWhere\n\n    aggregate: ElementTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ElementTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface RenderPropTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class RenderPropTypeModel {\n  public find(args?: {\n    where?: RenderPropTypeWhere\n\n    options?: RenderPropTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<RenderPropType[]>\n  public create(args: {\n    input: RenderPropTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateRenderPropTypesMutationResponse>\n  public update(args: {\n    where?: RenderPropTypeWhere\n    update?: RenderPropTypeUpdateInput\n    connect?: RenderPropTypeConnectInput\n    disconnect?: RenderPropTypeDisconnectInput\n    create?: RenderPropTypeCreateInput\n    connectOrCreate?: RenderPropTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateRenderPropTypesMutationResponse>\n  public delete(args: {\n    where?: RenderPropTypeWhere\n    delete?: RenderPropTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: RenderPropTypeWhere\n\n    aggregate: RenderPropTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<RenderPropTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ReactNodeTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ReactNodeTypeModel {\n  public find(args?: {\n    where?: ReactNodeTypeWhere\n\n    options?: ReactNodeTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ReactNodeType[]>\n  public create(args: {\n    input: ReactNodeTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateReactNodeTypesMutationResponse>\n  public update(args: {\n    where?: ReactNodeTypeWhere\n    update?: ReactNodeTypeUpdateInput\n    connect?: ReactNodeTypeConnectInput\n    disconnect?: ReactNodeTypeDisconnectInput\n    create?: ReactNodeTypeCreateInput\n    connectOrCreate?: ReactNodeTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateReactNodeTypesMutationResponse>\n  public delete(args: {\n    where?: ReactNodeTypeWhere\n    delete?: ReactNodeTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ReactNodeTypeWhere\n\n    aggregate: ReactNodeTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ReactNodeTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface EnumTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class EnumTypeModel {\n  public find(args?: {\n    where?: EnumTypeWhere\n\n    options?: EnumTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<EnumType[]>\n  public create(args: {\n    input: EnumTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateEnumTypesMutationResponse>\n  public update(args: {\n    where?: EnumTypeWhere\n    update?: EnumTypeUpdateInput\n    connect?: EnumTypeConnectInput\n    disconnect?: EnumTypeDisconnectInput\n    create?: EnumTypeCreateInput\n    connectOrCreate?: EnumTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateEnumTypesMutationResponse>\n  public delete(args: {\n    where?: EnumTypeWhere\n    delete?: EnumTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: EnumTypeWhere\n\n    aggregate: EnumTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<EnumTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface EnumTypeValueAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  key?: StringAggregateInputNonNullable\n  value?: StringAggregateInputNonNullable\n}\n\nexport declare class EnumTypeValueModel {\n  public find(args?: {\n    where?: EnumTypeValueWhere\n\n    options?: EnumTypeValueOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<EnumTypeValue[]>\n  public create(args: {\n    input: EnumTypeValueCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateEnumTypeValuesMutationResponse>\n  public update(args: {\n    where?: EnumTypeValueWhere\n    update?: EnumTypeValueUpdateInput\n    connect?: EnumTypeValueConnectInput\n    disconnect?: EnumTypeValueDisconnectInput\n    create?: EnumTypeValueCreateInput\n    connectOrCreate?: EnumTypeValueConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateEnumTypeValuesMutationResponse>\n  public delete(args: {\n    where?: EnumTypeValueWhere\n    delete?: EnumTypeValueDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: EnumTypeValueWhere\n\n    aggregate: EnumTypeValueAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<EnumTypeValueAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface LambdaTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class LambdaTypeModel {\n  public find(args?: {\n    where?: LambdaTypeWhere\n\n    options?: LambdaTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<LambdaType[]>\n  public create(args: {\n    input: LambdaTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateLambdaTypesMutationResponse>\n  public update(args: {\n    where?: LambdaTypeWhere\n    update?: LambdaTypeUpdateInput\n    connect?: LambdaTypeConnectInput\n    disconnect?: LambdaTypeDisconnectInput\n    create?: LambdaTypeCreateInput\n    connectOrCreate?: LambdaTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateLambdaTypesMutationResponse>\n  public delete(args: {\n    where?: LambdaTypeWhere\n    delete?: LambdaTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: LambdaTypeWhere\n\n    aggregate: LambdaTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<LambdaTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface PageTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class PageTypeModel {\n  public find(args?: {\n    where?: PageTypeWhere\n\n    options?: PageTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<PageType[]>\n  public create(args: {\n    input: PageTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreatePageTypesMutationResponse>\n  public update(args: {\n    where?: PageTypeWhere\n    update?: PageTypeUpdateInput\n    connect?: PageTypeConnectInput\n    disconnect?: PageTypeDisconnectInput\n    create?: PageTypeCreateInput\n    connectOrCreate?: PageTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdatePageTypesMutationResponse>\n  public delete(args: {\n    where?: PageTypeWhere\n    delete?: PageTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: PageTypeWhere\n\n    aggregate: PageTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<PageTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface AppTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class AppTypeModel {\n  public find(args?: {\n    where?: AppTypeWhere\n\n    options?: AppTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<AppType[]>\n  public create(args: {\n    input: AppTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateAppTypesMutationResponse>\n  public update(args: {\n    where?: AppTypeWhere\n    update?: AppTypeUpdateInput\n    connect?: AppTypeConnectInput\n    disconnect?: AppTypeDisconnectInput\n    create?: AppTypeCreateInput\n    connectOrCreate?: AppTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateAppTypesMutationResponse>\n  public delete(args: {\n    where?: AppTypeWhere\n    delete?: AppTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: AppTypeWhere\n\n    aggregate: AppTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<AppTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ActionTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ActionTypeModel {\n  public find(args?: {\n    where?: ActionTypeWhere\n\n    options?: ActionTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ActionType[]>\n  public create(args: {\n    input: ActionTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateActionTypesMutationResponse>\n  public update(args: {\n    where?: ActionTypeWhere\n    update?: ActionTypeUpdateInput\n    connect?: ActionTypeConnectInput\n    disconnect?: ActionTypeDisconnectInput\n    create?: ActionTypeCreateInput\n    connectOrCreate?: ActionTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateActionTypesMutationResponse>\n  public delete(args: {\n    where?: ActionTypeWhere\n    delete?: ActionTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ActionTypeWhere\n\n    aggregate: ActionTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ActionTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface CodeMirrorTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class CodeMirrorTypeModel {\n  public find(args?: {\n    where?: CodeMirrorTypeWhere\n\n    options?: CodeMirrorTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CodeMirrorType[]>\n  public create(args: {\n    input: CodeMirrorTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateCodeMirrorTypesMutationResponse>\n  public update(args: {\n    where?: CodeMirrorTypeWhere\n    update?: CodeMirrorTypeUpdateInput\n    connect?: CodeMirrorTypeConnectInput\n    disconnect?: CodeMirrorTypeDisconnectInput\n    create?: CodeMirrorTypeCreateInput\n    connectOrCreate?: CodeMirrorTypeConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateCodeMirrorTypesMutationResponse>\n  public delete(args: {\n    where?: CodeMirrorTypeWhere\n    delete?: CodeMirrorTypeDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: CodeMirrorTypeWhere\n\n    aggregate: CodeMirrorTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<CodeMirrorTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface TagAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class TagModel {\n  public find(args?: {\n    where?: TagWhere\n\n    options?: TagOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Tag[]>\n  public create(args: {\n    input: TagCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateTagsMutationResponse>\n  public update(args: {\n    where?: TagWhere\n    update?: TagUpdateInput\n    connect?: TagConnectInput\n    disconnect?: TagDisconnectInput\n    create?: TagCreateInput\n    connectOrCreate?: TagConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateTagsMutationResponse>\n  public delete(args: {\n    where?: TagWhere\n    delete?: TagDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: TagWhere\n\n    aggregate: TagAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<TagAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface RenderTypeAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n}\n\nexport declare class RenderTypeModel {\n  public find(args?: {\n    where?: RenderTypeWhere\n\n    options?: RenderTypeOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<RenderType[]>\n  public create(args: {\n    input: RenderTypeCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateRenderTypesMutationResponse>\n  public update(args: {\n    where?: RenderTypeWhere\n    update?: RenderTypeUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateRenderTypesMutationResponse>\n  public delete(args: {\n    where?: RenderTypeWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: RenderTypeWhere\n\n    aggregate: RenderTypeAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<RenderTypeAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ElementAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n  customCss?: StringAggregateInputNullable\n  guiCss?: StringAggregateInputNullable\n  propTransformationJs?: StringAggregateInputNullable\n  renderForEachPropKey?: StringAggregateInputNullable\n  renderIfExpression?: StringAggregateInputNullable\n}\n\nexport declare class ElementModel {\n  public find(args?: {\n    where?: ElementWhere\n\n    options?: ElementOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Element[]>\n  public create(args: {\n    input: ElementCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateElementsMutationResponse>\n  public update(args: {\n    where?: ElementWhere\n    update?: ElementUpdateInput\n    connect?: ElementConnectInput\n    disconnect?: ElementDisconnectInput\n    create?: ElementCreateInput\n    connectOrCreate?: ElementConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateElementsMutationResponse>\n  public delete(args: {\n    where?: ElementWhere\n    delete?: ElementDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ElementWhere\n\n    aggregate: ElementAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ElementAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface PropAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  data?: StringAggregateInputNonNullable\n}\n\nexport declare class PropModel {\n  public find(args?: {\n    where?: PropWhere\n\n    options?: PropOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Prop[]>\n  public create(args: {\n    input: PropCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreatePropsMutationResponse>\n  public update(args: {\n    where?: PropWhere\n    update?: PropUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdatePropsMutationResponse>\n  public delete(args: {\n    where?: PropWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: PropWhere\n\n    aggregate: PropAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<PropAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface HookAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n}\n\nexport declare class HookModel {\n  public find(args?: {\n    where?: HookWhere\n\n    options?: HookOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Hook[]>\n  public create(args: {\n    input: HookCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateHooksMutationResponse>\n  public update(args: {\n    where?: HookWhere\n    update?: HookUpdateInput\n    connect?: HookConnectInput\n    disconnect?: HookDisconnectInput\n    create?: HookCreateInput\n    connectOrCreate?: HookConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateHooksMutationResponse>\n  public delete(args: {\n    where?: HookWhere\n    delete?: HookDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: HookWhere\n\n    aggregate: HookAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<HookAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ComponentAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n  keyGenerator?: StringAggregateInputNullable\n}\n\nexport declare class ComponentModel {\n  public find(args?: {\n    where?: ComponentWhere\n\n    options?: ComponentOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Component[]>\n  public create(args: {\n    input: ComponentCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateComponentsMutationResponse>\n  public update(args: {\n    where?: ComponentWhere\n    update?: ComponentUpdateInput\n    connect?: ComponentConnectInput\n    disconnect?: ComponentDisconnectInput\n    create?: ComponentCreateInput\n    connectOrCreate?: ComponentConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateComponentsMutationResponse>\n  public delete(args: {\n    where?: ComponentWhere\n    delete?: ComponentDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ComponentWhere\n\n    aggregate: ComponentAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ComponentAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface StoreAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class StoreModel {\n  public find(args?: {\n    where?: StoreWhere\n\n    options?: StoreOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Store[]>\n  public create(args: {\n    input: StoreCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateStoresMutationResponse>\n  public update(args: {\n    where?: StoreWhere\n    update?: StoreUpdateInput\n    connect?: StoreConnectInput\n    disconnect?: StoreDisconnectInput\n    create?: StoreCreateInput\n    connectOrCreate?: StoreConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateStoresMutationResponse>\n  public delete(args: {\n    where?: StoreWhere\n    delete?: StoreDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: StoreWhere\n\n    aggregate: StoreAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<StoreAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface CodeActionAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n  code?: StringAggregateInputNonNullable\n}\n\nexport declare class CodeActionModel {\n  public find(args?: {\n    where?: CodeActionWhere\n\n    options?: CodeActionOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CodeAction[]>\n  public create(args: {\n    input: CodeActionCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateCodeActionsMutationResponse>\n  public update(args: {\n    where?: CodeActionWhere\n    update?: CodeActionUpdateInput\n    connect?: CodeActionConnectInput\n    disconnect?: CodeActionDisconnectInput\n    create?: CodeActionCreateInput\n    connectOrCreate?: CodeActionConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateCodeActionsMutationResponse>\n  public delete(args: {\n    where?: CodeActionWhere\n    delete?: CodeActionDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: CodeActionWhere\n\n    aggregate: CodeActionAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<CodeActionAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ApiActionAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ApiActionModel {\n  public find(args?: {\n    where?: ApiActionWhere\n\n    options?: ApiActionOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<ApiAction[]>\n  public create(args: {\n    input: ApiActionCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateApiActionsMutationResponse>\n  public update(args: {\n    where?: ApiActionWhere\n    update?: ApiActionUpdateInput\n    connect?: ApiActionConnectInput\n    disconnect?: ApiActionDisconnectInput\n    create?: ApiActionCreateInput\n    connectOrCreate?: ApiActionConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateApiActionsMutationResponse>\n  public delete(args: {\n    where?: ApiActionWhere\n    delete?: ApiActionDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ApiActionWhere\n\n    aggregate: ApiActionAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ApiActionAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface ResourceAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class ResourceModel {\n  public find(args?: {\n    where?: ResourceWhere\n\n    options?: ResourceOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Resource[]>\n  public create(args: {\n    input: ResourceCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateResourcesMutationResponse>\n  public update(args: {\n    where?: ResourceWhere\n    update?: ResourceUpdateInput\n    connect?: ResourceConnectInput\n    disconnect?: ResourceDisconnectInput\n    create?: ResourceCreateInput\n    connectOrCreate?: ResourceConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateResourcesMutationResponse>\n  public delete(args: {\n    where?: ResourceWhere\n    delete?: ResourceDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: ResourceWhere\n\n    aggregate: ResourceAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<ResourceAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface DeleteInfoAggregateSelectionInput {\n  count?: boolean\n  bookmark?: StringAggregateInputNullable\n  nodesDeleted?: IntAggregateInputNonNullable\n  relationshipsDeleted?: IntAggregateInputNonNullable\n}\n\nexport declare class DeleteInfoModel {\n  public find(args?: {\n    where?: DeleteInfoWhere\n\n    options?: DeleteInfoOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<DeleteInfo[]>\n  public create(args: {\n    input: DeleteInfoCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateDeleteInfosMutationResponse>\n  public update(args: {\n    where?: DeleteInfoWhere\n    update?: DeleteInfoUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateDeleteInfosMutationResponse>\n  public delete(args: {\n    where?: DeleteInfoWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: DeleteInfoWhere\n\n    aggregate: DeleteInfoAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<DeleteInfoAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface VercelDomainConfigAggregateSelectionInput {\n  count?: boolean\n}\n\nexport declare class VercelDomainConfigModel {\n  public find(args?: {\n    where?: VercelDomainConfigWhere\n\n    options?: VercelDomainConfigOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<VercelDomainConfig[]>\n  public create(args: {\n    input: VercelDomainConfigCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateVercelDomainConfigsMutationResponse>\n  public update(args: {\n    where?: VercelDomainConfigWhere\n    update?: VercelDomainConfigUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateVercelDomainConfigsMutationResponse>\n  public delete(args: {\n    where?: VercelDomainConfigWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: VercelDomainConfigWhere\n\n    aggregate: VercelDomainConfigAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<VercelDomainConfigAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface VercelProjectDomainAggregateSelectionInput {\n  count?: boolean\n}\n\nexport declare class VercelProjectDomainModel {\n  public find(args?: {\n    where?: VercelProjectDomainWhere\n\n    options?: VercelProjectDomainOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<VercelProjectDomain[]>\n  public create(args: {\n    input: VercelProjectDomainCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateVercelProjectDomainsMutationResponse>\n  public update(args: {\n    where?: VercelProjectDomainWhere\n    update?: VercelProjectDomainUpdateInput\n\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateVercelProjectDomainsMutationResponse>\n  public delete(args: {\n    where?: VercelProjectDomainWhere\n\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: VercelProjectDomainWhere\n\n    aggregate: VercelProjectDomainAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<VercelProjectDomainAggregateSelection>\n}\n\nexport interface IdAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNonNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface StringAggregateInputNullable {\n  shortest?: boolean\n  longest?: boolean\n}\nexport interface IntAggregateInputNonNullable {\n  max?: boolean\n  min?: boolean\n  average?: boolean\n  sum?: boolean\n}\nexport interface DomainAggregateSelectionInput {\n  count?: boolean\n  id?: IdAggregateInputNonNullable\n  name?: StringAggregateInputNonNullable\n}\n\nexport declare class DomainModel {\n  public find(args?: {\n    where?: DomainWhere\n\n    options?: DomainOptions\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<Domain[]>\n  public create(args: {\n    input: DomainCreateInput[]\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<CreateDomainsMutationResponse>\n  public update(args: {\n    where?: DomainWhere\n    update?: DomainUpdateInput\n    connect?: DomainConnectInput\n    disconnect?: DomainDisconnectInput\n    create?: DomainCreateInput\n    connectOrCreate?: DomainConnectOrCreateInput\n    selectionSet?: string | DocumentNode | SelectionSetNode\n    args?: any\n    context?: any\n    rootValue?: any\n  }): Promise<UpdateDomainsMutationResponse>\n  public delete(args: {\n    where?: DomainWhere\n    delete?: DomainDeleteInput\n    context?: any\n    rootValue?: any\n  }): Promise<{ nodesDeleted: number; relationshipsDeleted: number }>\n  public aggregate(args: {\n    where?: DomainWhere\n\n    aggregate: DomainAggregateSelectionInput\n    context?: any\n    rootValue?: any\n  }): Promise<DomainAggregateSelection>\n}\n\nexport interface ModelMap {\n  ResetDatabaseMutationResponse: ResetDatabaseMutationResponseModel\n  User: UserModel\n  App: AppModel\n  Field: FieldModel\n  Atom: AtomModel\n  Page: PageModel\n  TypeReference: TypeReferenceModel\n  GetBaseTypesReturn: GetBaseTypesReturnModel\n  BaseType: BaseTypeModel\n  PrimitiveType: PrimitiveTypeModel\n  ArrayType: ArrayTypeModel\n  UnionType: UnionTypeModel\n  InterfaceType: InterfaceTypeModel\n  ElementType: ElementTypeModel\n  RenderPropType: RenderPropTypeModel\n  ReactNodeType: ReactNodeTypeModel\n  EnumType: EnumTypeModel\n  EnumTypeValue: EnumTypeValueModel\n  LambdaType: LambdaTypeModel\n  PageType: PageTypeModel\n  AppType: AppTypeModel\n  ActionType: ActionTypeModel\n  CodeMirrorType: CodeMirrorTypeModel\n  Tag: TagModel\n  RenderType: RenderTypeModel\n  Element: ElementModel\n  Prop: PropModel\n  Hook: HookModel\n  Component: ComponentModel\n  Store: StoreModel\n  CodeAction: CodeActionModel\n  ApiAction: ApiActionModel\n  Resource: ResourceModel\n  DeleteInfo: DeleteInfoModel\n  VercelDomainConfig: VercelDomainConfigModel\n  VercelProjectDomain: VercelProjectDomainModel\n  Domain: DomainModel\n}\n","import type { InterfaceType } from '@codelab/backend/abstract/codegen'\n\nexport const sortInterfaceTypesFields = (\n  interfaceTypes: Array<InterfaceType>,\n) => {\n  return interfaceTypes.map((interfaceType) => ({\n    ...interfaceType,\n    fields: interfaceType.fields.sort((a, b) => (a.id > b.id ? 1 : -1)),\n  }))\n}\n","import { SortDirection } from '@codelab/backend/abstract/codegen'\nimport type { ITypesExport } from '@codelab/backend/abstract/core'\nimport {\n  exportFieldSelectionSet,\n  exportInterfaceTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { sortInterfaceTypesFields } from '../../mapper/sort'\n\n/**\n * These are types created by the admin, mostly types related to an atom.\n *\n * We export api separately since those can be it's own file\n */\nexport const exportAtomApis = async (): Promise<ITypesExport> => {\n  /**\n   * Get all interfaces that are connected to atoms, here we don't do dependent types since Ant Design atoms don't have them (at least I haven't seen any)\n   *\n   * We will go through dependent types for user interfaces however\n   */\n  const InterfaceType = await Repository.instance.InterfaceType\n\n  const interfaceTypes = await InterfaceType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportInterfaceTypeSelectionSet,\n    // Where it is assigned to atom\n    where: {\n      apiOfAtomsAggregate: {\n        count_GTE: 0,\n      },\n    },\n  })\n\n  /**\n   * Get all fields related to interface type\n   */\n  const Field = await Repository.instance.Field\n\n  const fields = await Field.find({\n    options: {\n      sort: [{ key: SortDirection.Asc }],\n    },\n    selectionSet: exportFieldSelectionSet,\n    where: {\n      api: {\n        id_IN: interfaceTypes.map((api) => api.id),\n      },\n    },\n  })\n\n  /**\n   * Here we create the interface dependency tree order\n   *\n   * Further to the front are closer to the leaf.\n   */\n\n  return { fields, types: sortInterfaceTypesFields(interfaceTypes) }\n}\n","import { SortDirection } from '@codelab/backend/abstract/codegen'\nimport type { ITypesExport } from '@codelab/backend/abstract/core'\nimport {\n  exportActionTypeSelectionSet,\n  exportPrimitiveTypeSelectionSet,\n  exportReactNodeTypeSelectionSet,\n  exportRenderPropTypeSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\n\n/**\n * These are required system types that other types reference\n */\nexport const exportSystemTypes = async (): Promise<ITypesExport> => {\n  /**\n   * Export all primitive types\n   */\n  const PrimitiveType = await Repository.instance.PrimitiveType\n\n  const primitiveTypes = await PrimitiveType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportPrimitiveTypeSelectionSet,\n  })\n\n  /**\n   * React Node Type\n   */\n  const ReactNodeType = await Repository.instance.ReactNodeType\n\n  // Only 1 here\n  const reactNodeTypes = await ReactNodeType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportReactNodeTypeSelectionSet,\n  })\n\n  /**\n   * Render Props Type\n   */\n  const RenderPropType = await Repository.instance.RenderPropType\n\n  // Only 1 here\n  const renderPropTypes = await RenderPropType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportRenderPropTypeSelectionSet,\n  })\n\n  /**\n   * ActionType\n   */\n  const ActionType = await Repository.instance.ActionType\n\n  const actionTypes = await ActionType.find({\n    options: {\n      sort: [{ name: SortDirection.Asc }],\n    },\n    selectionSet: exportActionTypeSelectionSet,\n  })\n\n  /**\n   * Here we create the interface dependency tree order\n   *\n   * Further to the front are closer to the leaf.\n   */\n  return {\n    fields: [],\n    types: [\n      ...primitiveTypes,\n      ...renderPropTypes,\n      ...reactNodeTypes,\n      ...actionTypes,\n    ],\n  } as ITypesExport\n}\n","import type { InterfaceType } from '@codelab/backend/abstract/codegen'\nimport type { ITypesExport } from '@codelab/backend/abstract/core'\nimport {\n  exportInterfaceTypeSelectionSet,\n  getDriver,\n  getTypeDescendantsOGM,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\n\ninterface Descendant {\n  id: string\n  kind: ITypeKind\n}\n\nexport const exportUserTypes = async (): Promise<ITypesExport> => {\n  /**\n   * Export types\n   */\n\n  /**\n   * Export all types\n   *\n   * Go through each interface, then grab all descendant ids of it\n   */\n  const InterfaceType = await Repository.instance.InterfaceType\n\n  const interfaceTypes = await InterfaceType.find({\n    selectionSet: exportInterfaceTypeSelectionSet,\n    where: {\n      apiOfAtomsAggregate: {\n        count: 0,\n      },\n    },\n  })\n\n  /**\n   * Here we create the interface dependency tree order\n   *\n   * Further to the front are closer to the leaf.\n   */\n  let dependentTypes: Array<Descendant> = []\n\n  for (const interfaceType of interfaceTypes) {\n    const driver = getDriver()\n    const session = driver.session()\n\n    const results = await session.run(getTypeDescendantsOGM, {\n      id: interfaceType.id,\n    })\n\n    // We pass in a single id, so only get 1 record, for each record, we want the first column\n    const descendants = [\n      ...(results.records[0]?.values() ?? []),\n    ][0] as Array<Descendant>\n\n    // We only get interface type descendants, since other types are pushed in front of interfaces\n    const interfaceDescendants = descendants.filter(\n      (type) => type.kind === ITypeKind.InterfaceType,\n    )\n\n    dependentTypes = [...interfaceDescendants, ...dependentTypes]\n  }\n\n  // Here we get all the types that needs to be added\n  const orderedInterfaceTypes = dependentTypes\n    .map((type) => {\n      return interfaceTypes.find(\n        (interfaceType) => interfaceType.id === type.id,\n      )\n    })\n    .filter((type): type is InterfaceType => Boolean(type))\n\n  // TODO: Need to fix type here\n  return {\n    fields: [],\n    types: [...orderedInterfaceTypes],\n  } as ITypesExport\n}\n","export * from './extract-ant-design-fields.service'\n","import type { AntDesignField } from '@codelab/backend/abstract/core'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport {\n  Field,\n  FieldRepository,\n  TypeFactory,\n} from '@codelab/backend/domain/type'\nimport type { IAtomDTO, IFieldDTO } from '@codelab/shared/abstract/core'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\nimport find from 'lodash/find'\nimport { v4 } from 'uuid'\nimport { AntdTypeAdapterService } from '../../type-adapter/antd-type-adapter/antd-type-adapter.service'\nimport { readAntDesignApis } from './read-ant-design-apis'\n\n/**\n * Here we want to parse the CSV files from Ant Design and seed it as atoms\n *\n * We don't map the existing ids here\n */\nexport class ExtractAntDesignFieldsService extends AuthUseCase<\n  Array<IAtomDTO>,\n  Array<IFieldDTO>\n> {\n  private antdDataFolder = `${process.cwd()}/data/antd-v5/`\n\n  fieldRepository = new FieldRepository()\n\n  /**\n   * Extract data to be used for seeding, these data have already been mapped with correct ID for upsert\n   */\n  protected async _execute(atoms: Array<IAtomDTO>) {\n    const antDesignApis = await readAntDesignApis(this.antdDataFolder)\n    const fieldsByAtom = []\n\n    for (const atom of atoms) {\n      const antDesignApi = find(\n        antDesignApis,\n        (api) =>\n          api.atom.name === atom.name.replace('AntDesign', '').toLowerCase(),\n      )\n\n      if (!antDesignApi) {\n        continue\n      }\n\n      const fields = await this.transformFields(atom, antDesignApi.fields)\n      fieldsByAtom.push(...fields)\n    }\n\n    return fieldsByAtom\n  }\n\n  private async transformFields(\n    atom: IAtomDTO,\n    atomFields: Array<AntDesignField>,\n  ) {\n    const result: Array<IFieldDTO> = []\n\n    for (const field of atomFields) {\n      const existingOrNewField = await this.createOrUpdateField(atom, field)\n\n      if (existingOrNewField) {\n        result.push(existingOrNewField)\n      }\n    }\n\n    return result\n  }\n\n  private async createOrUpdateField(\n    atom: IAtomDTO,\n    field: AntDesignField,\n  ): Promise<IFieldDTO | undefined> {\n    const existingField = await this.fieldRepository.findOne({\n      api: {\n        id: atom.api.id,\n      },\n      key: field.property,\n    })\n\n    if (existingField) {\n      return existingField\n    }\n\n    const fieldTypeDTO = await new AntdTypeAdapterService({\n      atom,\n      field: {\n        key: field.property,\n      },\n      owner: this.owner,\n    }).execute({ type: field.type })\n\n    if (!fieldTypeDTO) {\n      return undefined\n    }\n\n    const type = await TypeFactory.save(\n      {\n        ...fieldTypeDTO,\n        owner: this.owner,\n      },\n      { name: fieldTypeDTO.name },\n    )\n\n    return Field.create({\n      api: { id: atom.api.id },\n      defaultValues: null,\n      description: field.description,\n      fieldType: type,\n      id: v4(),\n      key: field.property,\n      name: compoundCaseToTitleCase(field.property),\n    })\n  }\n}\n","module.exports = require(\"lodash/find\");","import { DefaultTypeAdapterService } from '../default-type-adapter/default-type-adapter.service'\n\nexport class AntdTypeAdapterService extends DefaultTypeAdapterService {}\n","import type {\n  EnumType as IEnumType,\n  InterfaceType as IInterfaceType,\n  UnionType as IUnionType,\n} from '@codelab/backend/abstract/codegen'\nimport type { IType } from '@codelab/backend/abstract/core'\nimport type { ITypeTransformer } from '@codelab/backend/abstract/ports'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport {\n  ActionTypeRepository,\n  EnumType,\n  InterfaceType,\n  PrimitiveTypeRepository,\n  ReactNodeTypeRepository,\n  RenderPropTypeRepository,\n  TypeFactory,\n  UnionType,\n} from '@codelab/backend/domain/type'\nimport { throwIfUndefined } from '@codelab/frontend/shared/utils'\nimport type {\n  IAtomDTO,\n  IAuth0Owner,\n  IEnumTypeDTO,\n  IFieldDTO,\n  IInterfaceTypeDTO,\n  IUnionTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { IPrimitiveTypeKind, ITypeKind } from '@codelab/shared/abstract/core'\nimport { v4 } from 'uuid'\nimport {\n  arrowFnReturnReactNode,\n  es5FnReturnReactNode,\n  parseSeparators,\n} from '../../../parser'\n\ninterface Request {\n  type: string\n}\n\ninterface Props {\n  atom: Pick<IAtomDTO, 'name'>\n  field: Pick<IFieldDTO, 'key'>\n  owner: IAuth0Owner\n}\n\n/**\n * Transform a string representation to the actual type\n *\n * - Will check if string format maps to a type\n *\n */\nexport class DefaultTypeAdapterService\n  extends AuthUseCase<Request, IType | undefined>\n  implements ITypeTransformer\n{\n  primitiveTypeRepository = new PrimitiveTypeRepository()\n\n  actionTypeRepository = new ActionTypeRepository()\n\n  reactNodeTypeRepository = new ReactNodeTypeRepository()\n\n  renderPropTypeRepository = new RenderPropTypeRepository()\n\n  atom: Pick<IAtomDTO, 'name'>\n\n  field: Pick<IFieldDTO, 'key'>\n\n  reactNodeTypeRegex = /(([:|=>] (ReactNode|HTMLElement))|ReactNode)/\n\n  renderPropTypeRegexes = [arrowFnReturnReactNode, es5FnReturnReactNode]\n\n  booleanTypeRegex = /^boolean$/\n\n  stringTypeRegex = /^string$/\n\n  numberTypeRegex = /^number$/\n\n  integerTypeRegex = /^integer$/\n\n  /**\n   * This pattern ensures that it will match any string that starts with a { and ends with a }, even if there are multiple lines or nested objects within the interface type. The [\\s\\S]* part of the regex pattern matches any character, including whitespace and non-whitespace characters, zero or more times.\n   */\n  interfaceTypeRegex = /^\\{[\\s\\S]*}$/\n\n  containsInterfaceTypeRegex = /{[\\s\\S]*}/\n\n  unionTypeRegex = /\\|/\n\n  actionTypeRegex = /(^function\\(.*?\\))|((\\(.*?\\)) => \\w)/\n\n  constructor({ atom, field, owner }: Props) {\n    super(owner)\n\n    this.atom = atom\n    this.field = field\n  }\n\n  async _execute({ type }: Request) {\n    const typeChecks = [\n      {\n        check: this.isEnumType.bind(this),\n        transform: this.enumType.bind(this),\n      },\n      {\n        check: this.isReactNodeType.bind(this),\n        transform: this.reactNodeType.bind(this),\n      },\n      {\n        check: this.isRenderPropType.bind(this),\n        transform: this.renderPropType.bind(this),\n      },\n      {\n        check: this.isActionType.bind(this),\n        transform: this.actionType.bind(this),\n      },\n      {\n        check: this.isStringType.bind(this),\n        transform: this.stringType.bind(this),\n      },\n      {\n        check: this.isBooleanType.bind(this),\n        transform: this.booleanType.bind(this),\n      },\n      {\n        check: this.isNumberType.bind(this),\n        transform: this.numberType.bind(this),\n      },\n      {\n        check: this.isIntegerType.bind(this),\n        transform: this.integerType.bind(this),\n      },\n      {\n        check: this.isInterfaceType.bind(this),\n        transform: this.interfaceType.bind(this),\n      },\n      {\n        check: this.isUnionType.bind(this),\n        transform: this.unionType.bind(this),\n      },\n    ]\n\n    const matchingTypeChecks = typeChecks.filter(({ check }) => check(type))\n\n    if (matchingTypeChecks.length === 0) {\n      console.warn(\n        `No matching type check found for type: ${type}. Consider improving the code to handle this case.`,\n      )\n\n      return\n    }\n\n    if (matchingTypeChecks.length > 1) {\n      const matchedKinds = matchingTypeChecks.map(\n        ({ transform }) => transform.name,\n      )\n\n      console.error(\n        `More than one type check matched for type: ${type}. The type checks should be mutually exclusive. Matched kinds: ${matchedKinds.join(\n          ', ',\n        )}`,\n      )\n\n      throw new Error(\n        `More than one type check matched for type: ${type}. The type checks should be mutually exclusive.`,\n      )\n    }\n\n    return await matchingTypeChecks[0]?.transform(type)\n  }\n\n  isNumberType(type: string) {\n    return this.numberTypeRegex.test(type)\n  }\n\n  isStringType(type: string) {\n    return this.stringTypeRegex.test(type)\n  }\n\n  /**\n   * Must be a union type if contains a nested interface type\n   */\n  isEnumType(type: string) {\n    if (this.containsInterfaceTypeRegex.test(type)) {\n      return false\n    }\n\n    return this.unionTypeRegex.test(type)\n  }\n\n  isBooleanType(type: string) {\n    return this.booleanTypeRegex.test(type)\n  }\n\n  isActionType(type: string) {\n    return this.actionTypeRegex.test(type)\n  }\n\n  isIntegerType(type: string) {\n    return this.integerTypeRegex.test(type)\n  }\n\n  isUnionType(type: string) {\n    return this.unionTypeRegex.test(type) && !this.interfaceTypeRegex.test(type)\n  }\n\n  isInterfaceType(type: string) {\n    return this.interfaceTypeRegex.test(type)\n  }\n\n  isRenderPropType(type: string) {\n    return this.renderPropTypeRegexes.some((regex) => regex.test(type))\n  }\n\n  async actionType() {\n    return throwIfUndefined(\n      await this.actionTypeRepository.findOne({ name: ITypeKind.ActionType }),\n    )\n  }\n\n  async reactNodeType() {\n    return throwIfUndefined(\n      await this.reactNodeTypeRepository.findOne({\n        name: ITypeKind.ReactNodeType,\n      }),\n    )\n  }\n\n  async renderPropType() {\n    return throwIfUndefined(\n      await this.renderPropTypeRepository.findOne({\n        name: ITypeKind.RenderPropType,\n      }),\n    )\n  }\n\n  async interfaceType() {\n    const interfaceType: IInterfaceTypeDTO = {\n      __typename: ITypeKind.InterfaceType,\n      fields: [],\n      id: v4(),\n      kind: ITypeKind.InterfaceType,\n      name: InterfaceType.getApiName(this.atom, {\n        key: this.field.key,\n      }),\n      owner: this.owner,\n    }\n\n    return await TypeFactory.save<IInterfaceType>(interfaceType)\n  }\n\n  async booleanType() {\n    return throwIfUndefined(\n      await this.primitiveTypeRepository.findOne({\n        name: IPrimitiveTypeKind.Boolean,\n      }),\n    )\n  }\n\n  async stringType() {\n    return throwIfUndefined(\n      await this.primitiveTypeRepository.findOne({\n        name: IPrimitiveTypeKind.String,\n      }),\n    )\n  }\n\n  async numberType() {\n    return throwIfUndefined(\n      await this.primitiveTypeRepository.findOne({\n        name: IPrimitiveTypeKind.Number,\n      }),\n    )\n  }\n\n  async integerType() {\n    return throwIfUndefined(\n      await this.primitiveTypeRepository.findOne({\n        name: IPrimitiveTypeKind.Integer,\n      }),\n    )\n  }\n\n  async unionType(type: string) {\n    const typesOfUnionType = parseSeparators({ type })\n\n    const mappedTypesOfUnionType = (\n      await Promise.all(\n        typesOfUnionType.map(async (typeOfUnionType) => {\n          return await new DefaultTypeAdapterService({\n            atom: this.atom,\n            field: this.field,\n            owner: this.owner,\n          }).execute({\n            type: typeOfUnionType,\n          })\n        }),\n      )\n    ).filter((typeOfUnionType): typeOfUnionType is IType =>\n      Boolean(typeOfUnionType),\n    )\n\n    // Create nested types\n    await Promise.all(\n      mappedTypesOfUnionType.map(async ({ ...typeOfUnionType }) => {\n        return await TypeFactory.save({\n          ...typeOfUnionType,\n          owner: this.owner,\n        })\n      }),\n    )\n\n    const unionType: IUnionTypeDTO = {\n      __typename: ITypeKind.UnionType,\n      id: v4(),\n      kind: ITypeKind.UnionType,\n      name: UnionType.compositeName(this.atom, {\n        key: this.field.key,\n      }),\n      owner: this.owner,\n      // These need to exist already\n      typesOfUnionType: mappedTypesOfUnionType,\n    }\n\n    return await TypeFactory.save<IUnionType>(unionType)\n  }\n\n  async enumType(type: string) {\n    const values = parseSeparators({ type })\n\n    const enumType: IEnumTypeDTO = {\n      __typename: ITypeKind.EnumType,\n      allowedValues: values.map((value) => ({\n        id: v4(),\n        key: value,\n        value: value,\n      })),\n      id: v4(),\n      kind: ITypeKind.EnumType,\n      name: EnumType.compositeName(this.atom, {\n        key: this.field.key,\n      }),\n      owner: this.owner,\n    }\n\n    return await TypeFactory.save<IEnumType>(enumType)\n  }\n\n  isReactNodeType(type: string) {\n    return this.reactNodeTypeRegex.test(type)\n  }\n}\n","export * from './callback-with-params'\nexport * from './client-cache'\nexport * from './copy-text-to-clipboard'\nexport * from './dynamic-loader'\nexport * from './extract-error-message'\nexport * from './graphql'\nexport * from './inline-form.service'\nexport * from './modal.service'\nexport * from './notifications'\nexport * from './pagination'\nexport * from './run-middleware'\nexport * from './ssr-pipe'\nexport * from './state-expressions'\nexport * from './throw-if-undefined'\nexport * from './try-parse'\nexport * from './try-stringify'\nexport * from './typescript-utils'\nexport * from './useDebouncedState.hook'\nexport * from './useOnClickOutside.hook'\nexport * from './usePrevious.hook'\nexport * from './useScroll.hook'\n","import type { VoidCallback } from '@codelab/frontend/abstract/types'\nimport isFunction from 'lodash/isFunction'\n\nexport const callbackWithParams = <\n  TIn,\n  TCb extends VoidCallback<TIn> = VoidCallback<TIn>,\n>(\n  callbacks: TCb,\n  param: TIn,\n) => {\n  const callbacksArray = Array.isArray(callbacks) ? callbacks : [callbacks]\n\n  callbacksArray.forEach((cb) => {\n    if (isFunction(cb)) {\n      cb(param)\n    }\n  })\n}\n","import { TTLCache } from '@codelab/shared/utils'\n\ninterface MobXPropertyDescriptor extends PropertyDescriptor {\n  initializer?(): (...args: Array<unknown>) => unknown\n}\n\n// Create a map to store cache instances for each cache key\nconst cacheMap = new Map<string, TTLCache<string, unknown>>()\n\n/**\n * @param segmentCacheKey The key indicates a cache segment. Can be used to clear cache for a specific key.\n * @param ttl Time until cache is reset in milliseconds. Default is 5 minutes.\n */\nexport const cachedWithTTL = (segmentCacheKey: string, ttl = 5 * 60 * 1000) => {\n  return (\n    target: unknown,\n    propertyKey: string,\n    descriptor?: MobXPropertyDescriptor,\n  ) => {\n    if (typeof descriptor?.initializer !== 'function') {\n      throw new Error(\"Can't decorate property without 'initializer'\")\n    }\n\n    const originalInitializer = descriptor.initializer\n\n    descriptor.initializer = function () {\n      // Get or create cache for this cacheKey\n      let cache = cacheMap.get(segmentCacheKey)\n\n      if (!cache) {\n        cache = new TTLCache<string, unknown>(ttl)\n        cacheMap.set(segmentCacheKey, cache)\n      }\n\n      const originalMethod = originalInitializer!.call(this)\n\n      return async (...args: Array<unknown>) => {\n        const cacheKey = JSON.stringify(args)\n        const cachedValue = cache?.get(cacheKey)\n\n        if (cachedValue !== undefined) {\n          console.log(\n            `Take value from cache segment ${segmentCacheKey}:`,\n            cachedValue,\n          )\n\n          return cachedValue\n        }\n\n        const result = await originalMethod.apply(this, args)\n        cache?.set(cacheKey, result)\n\n        return result\n      }\n    }\n  }\n}\n\n/**\n * @param segmentCacheKey The a single key or array of keys used as a cache segments.\n * All the records in the specified segments will be cleared.\n */\nexport const clearCacheForKey = (segmentCacheKey: Array<string> | string) => {\n  return (\n    target: unknown,\n    propertyKey: string,\n    descriptor?: MobXPropertyDescriptor,\n  ) => {\n    if (typeof descriptor?.initializer !== 'function') {\n      throw new Error(\"Can't decorate property without 'initializer'\")\n    }\n\n    const originalInitializer = descriptor.initializer\n\n    descriptor.initializer = function () {\n      const originalMethod = originalInitializer!.call(this)\n\n      return (...args: Array<unknown>) => {\n        const cacheKeys = Array.isArray(segmentCacheKey)\n          ? segmentCacheKey\n          : [segmentCacheKey]\n\n        cacheKeys.forEach((cacheKey) => {\n          const cacheSegment = cacheMap.get(cacheKey)\n\n          if (cacheSegment) {\n            console.log(\n              `Deleting cache segment ${cacheKey} with ${cacheSegment.size()} records`,\n            )\n\n            cacheSegment.clear()\n            cacheMap.delete(cacheKey)\n          }\n        })\n\n        return originalMethod.apply(this, args)\n      }\n    }\n  }\n}\n","export const copyTextToClipboard = async (text: string) => {\n  // eslint-disable-next-line no-restricted-globals\n  await navigator.clipboard.writeText(text)\n}\n","import type { LoaderComponent } from 'next/dynamic'\nimport dynamic from 'next/dynamic'\nimport type { RefObject } from 'react'\nimport React from 'react'\n\n/**\n * a workaround for : https://github.com/vercel/next.js/issues/4957\n */\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const dynamicLoader = (loadingFn: () => LoaderComponent<any>) =>\n  dynamic(\n    async () => {\n      const result = await loadingFn()\n      const Component = 'default' in result ? result.default : result\n\n      return React.forwardRef(\n        (props: unknown & { forwardedRef: RefObject<unknown> }, ref) =>\n          React.createElement(Component, { ...props, ref: props.forwardedRef }),\n      )\n    },\n    { ssr: false },\n  )\n","module.exports = require(\"next/dynamic\");","import type { ApolloError } from '@apollo/client'\nimport type { AsyncState } from '@react-hookz/web'\nimport isObjectLike from 'lodash/isObjectLike'\nimport isString from 'lodash/isString'\n\nexport const extractErrorMessage = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: ApolloError | AsyncState<unknown> | Error | any | string | undefined,\n): string => {\n  if (!error) {\n    return ''\n  }\n\n  console.error(JSON.stringify(error))\n\n  if (isString(error)) {\n    return error\n  }\n\n  if (Array.isArray(error)) {\n    return error.map(extractErrorMessage).join('\\n')\n  }\n\n  if (isObjectLike(error)) {\n    if (error.error) {\n      return extractErrorMessage(error.error)\n    }\n\n    if (error.errors) {\n      return extractErrorMessage(error.errors)\n    }\n\n    //\n    if (error.response) {\n      return extractErrorMessage(error.response)\n    }\n\n    //\n    // if (e.data) {\n    //   return extractErrorMessage(e.data)\n    // }\n    //\n    if (error.message) {\n      return extractErrorMessage(error.message)\n    }\n\n    if (error.extensions?.response) {\n      return `[${error.extensions.response.message}]: ${error.extensions.response.error}`\n      // return e.graphQLErrors[0].extensions\n      //   ? `[${e.message}]: ${\n      //       (e.graphQLErrors[0].extensions.response as any)?.error\n      //     }`\n      //   : e.message\n    }\n  }\n\n  return JSON.stringify(error)\n}\n","module.exports = require(\"lodash/isString\");","export * from './extract-first-graph-ql-error-code'\n","import type { ApolloError } from '@apollo/client'\n\nexport const extractFirstGraphQlErrorCode = (error: ApolloError) =>\n  error.graphQLErrors[0]?.extensions?.code\n","import type { IModalService } from '@codelab/frontend/abstract/core'\nimport { Model, model, modelAction, prop } from 'mobx-keystone'\n\n@model('@codelab/InlineFormService')\nexport class InlineFormService<\n    TMetadata = never,\n    Properties extends object = Record<string, unknown>,\n  >\n  extends Model(<\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    TMetadata,\n  >() => ({\n    isOpen: prop<boolean>(false),\n    metadata: prop<TMetadata | null>(null),\n  }))<TMetadata>\n  implements IModalService<TMetadata>\n{\n  @modelAction\n  open(...args: TMetadata extends never ? [] : [TMetadata]) {\n    this.isOpen = true\n\n    if (args.length > 0) {\n      this.metadata = args[0] ?? null\n    }\n  }\n\n  @modelAction\n  close() {\n    this.isOpen = false\n    this.metadata = null\n  }\n}\n","import type { IModalService } from '@codelab/frontend/abstract/core'\nimport { Model, model, modelAction, prop } from 'mobx-keystone'\n\n@model('@codelab/ModalService')\nexport class ModalService<\n    TMetadata = never,\n    Properties extends object = Record<string, unknown>,\n  >\n  extends Model(<\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    TMetadata,\n  >() => ({\n    isOpen: prop<boolean>(false),\n    metadata: prop<TMetadata | null>(null),\n  }))<TMetadata>\n  implements IModalService<TMetadata>\n{\n  @modelAction\n  open(...args: TMetadata extends never ? [] : [TMetadata]) {\n    this.isOpen = true\n\n    if (args.length > 0) {\n      this.metadata = args[0] ?? null\n    }\n  }\n\n  @modelAction\n  close() {\n    this.isOpen = false\n    this.metadata = null\n  }\n}\n","import type { Maybe } from '@codelab/shared/abstract/types'\nimport { notification } from 'antd'\nimport isFunction from 'lodash/isFunction'\nimport isString from 'lodash/isString'\nimport { extractErrorMessage } from './extract-error-message'\n\ntype NotificationType = 'error' | 'info' | 'success' | 'warning'\n\nexport interface NotificationOptions<TEvent = unknown> {\n  /** Enter a custom content of the notification. If you don't, it will be inferred from the error message, if found */\n  content?: string | ((e: Maybe<TEvent>) => string)\n  /** Enter a custom title of the notification. If you don't, it will be \"info\" */\n  title?: string | ((e: Maybe<TEvent>) => string)\n  /** The type of notification. Default is error */\n  type?: NotificationType\n}\n\nconst defaultOptions: NotificationOptions = {\n  type: 'error',\n}\n\nexport const notify = <TEvent>(\n  options: NotificationOptions<TEvent>,\n  event: Maybe<TEvent> = undefined,\n) => {\n  const { content, title, type } = { ...defaultOptions, ...options }\n  let titleString = ''\n  let contentString = ''\n\n  if (isString(title)) {\n    titleString = title\n  } else if (isFunction(title)) {\n    titleString = title(event)\n  } else if (type === 'error') {\n    titleString = 'Error'\n  }\n\n  if (isString(content)) {\n    contentString = content\n  } else if (isFunction(content)) {\n    contentString = content(event)\n  } else if (type === 'error') {\n    contentString = extractErrorMessage(event)\n  }\n\n  notification[type || 'info']({\n    description: contentString,\n    message: titleString,\n    placement: 'topRight',\n  })\n\n  if (type === 'warning') {\n    console.warn(titleString, contentString)\n  } else if (type === 'error') {\n    console.error(titleString, contentString)\n  } else {\n    console.log(titleString, contentString)\n  }\n}\n\nexport interface UseNotifyReturnType {\n  onError(e: unknown): void\n  onSuccess(): void\n}\n\nexport const useNotify = (\n  success: Omit<NotificationOptions, 'type'>,\n  error: Omit<NotificationOptions, 'type'>,\n): UseNotifyReturnType => {\n  const onSuccess = () => notify({ ...success, type: 'success' })\n\n  const onError = (_error: unknown) => {\n    console.error(_error)\n    notify({\n      ...error,\n      content: error.content || extractErrorMessage(_error),\n      type: 'error',\n    })\n  }\n\n  return { onError, onSuccess }\n}\n\n/**\n * Returns a function that can be used as standalone notification function:\n * const notify = getNotificationHandler({...options})\n * notify({...someEvent})\n *\n * Or as an error handler directly\n * e.g.:\n *  .catch(getNotificationHandler({...options}))\n */\nexport const createNotificationHandler =\n  <TEvent>(options: NotificationOptions<TEvent> = defaultOptions) =>\n  (event: Maybe<TEvent> = undefined) => {\n    notify(options, event)\n  }\n","module.exports = require(\"antd\");","export * from './extract-table-queries'\nexport * from './pagination.service'\nexport * from './useTablePagination.hook'\n","import type { Filterables } from '@codelab/frontend/abstract/core'\nimport type { NextRouter } from 'next/router'\n\n/**\n * Used with paginationService to extract page, pageSize, and filter properties from the url params\n * @param router NextRouter\n * @param filterTypes key-value pair for the filter properties and their types for parsing from string\n * @returns An object that contains the page, pageSize, and filter object\n */\nexport const extractTableQueries = <T extends Filterables>(\n  router: NextRouter,\n  filterTypes: Partial<\n    Record<keyof T, 'boolean' | 'number' | 'string' | 'string[]'>\n  > = {},\n) => {\n  const page = router.query.page\n    ? parseInt(router.query.page.toString())\n    : undefined\n\n  const pageSize = router.query.pageSize\n    ? parseInt(router.query.pageSize.toString())\n    : undefined\n\n  // Url param values are transformed with the types provided in the filterTypes\n  const filter = Object.entries(filterTypes).reduce<Partial<T>>(\n    (acc, [key, type]) => {\n      if (router.query[key as string]) {\n        let value: Array<string> | boolean | number | string | undefined =\n          router.query[key as string]\n\n        if (type === 'number') {\n          value = Number(value)\n        }\n\n        if (type === 'boolean') {\n          value = value === 'true'\n        }\n\n        acc[key as keyof T] = value as T[typeof key]\n      }\n\n      return acc\n    },\n    {},\n  )\n\n  return {\n    filter,\n    page,\n    pageSize,\n  }\n}\n","import type {\n  Filterables,\n  IPaginationService,\n  SupportedPaginationModel,\n} from '@codelab/frontend/abstract/core'\nimport sortBy from 'lodash/sortBy'\nimport { computed } from 'mobx'\nimport type { Ref } from 'mobx-keystone'\nimport {\n  _async,\n  _await,\n  detach,\n  Model,\n  model,\n  modelFlow,\n  objectMap,\n  prop,\n  rootRef,\n} from 'mobx-keystone'\n\n@model('@codelab/PaginationService')\nexport class PaginationService<\n    T1 extends SupportedPaginationModel,\n    U1 extends Filterables | void = void,\n  >\n  extends Model(<\n    T2 extends SupportedPaginationModel,\n    U2 extends Filterables | void = void,\n  >() => ({\n    currentPage: prop(1).withSetter(),\n    dataRefs: prop(() => objectMap<Ref<T2>>()),\n    filter: prop(() => ({} as U2)).withSetter(),\n    isLoading: prop(false),\n    pageSize: prop(20).withSetter(),\n    totalItems: prop<number>(0),\n  }))<T1, U1>\n  implements IPaginationService<T1, U1>\n{\n  /**\n   * This can't be passed as props when creating a PaginationService instance so this has to be initialized in the `onAttachedToRootStore` of the service using this\n   */\n  getDataFn = async (page: number, pageSize: number, filter: U1) => ({\n    items: [] as Array<T1>,\n    totalItems: 0,\n  })\n\n  @computed\n  get data() {\n    return sortBy(Array.from(this.dataRefs.values()), (ref) =>\n      ref.current.name.toLowerCase(),\n    ).map((ref) => ref.current)\n  }\n\n  @modelFlow\n  getData = _async(function* (this: PaginationService<T1, U1>) {\n    this.isLoading = true\n\n    const { items, totalItems } = yield* _await(\n      this.getDataFn(this.currentPage, this.pageSize, this.filter),\n    )\n\n    this.totalItems = totalItems\n\n    this.dataRefs.clear()\n\n    items.forEach((type) => {\n      this.dataRefs.set(type.id, paginationServiceRef(type.id) as Ref<T1>)\n    })\n\n    this.isLoading = false\n\n    return items\n  })\n}\n\nconst paginationServiceRef = rootRef('@codelab/PaginationServiceRef', {\n  onResolvedValueChange: (ref, newComponent, oldComponent) => {\n    if (oldComponent && !newComponent) {\n      detach(ref)\n    }\n  },\n})\n","module.exports = require(\"lodash/sortBy\");","module.exports = require(\"mobx\");","import type {\n  Filterables,\n  IPaginationService,\n  SupportedPaginationModel,\n  SupportedPaginationModelPage,\n} from '@codelab/frontend/abstract/core'\nimport type { TablePaginationConfig } from 'antd'\nimport debounce from 'lodash/debounce'\nimport isMatch from 'lodash/isMatch'\nimport { useRouter } from 'next/router'\nimport React, { useEffect } from 'react'\nimport { extractTableQueries } from './extract-table-queries'\n\ninterface Props<T> {\n  filterTypes?: Record<keyof T, 'boolean' | 'number' | 'string' | 'string[]'>\n  paginationService: IPaginationService<SupportedPaginationModel, Filterables>\n  pathname: SupportedPaginationModelPage\n}\n\nexport const useTablePagination = <\n  T extends SupportedPaginationModel,\n  U extends Filterables,\n>({\n  filterTypes,\n  paginationService,\n  pathname,\n}: Props<U>) => {\n  const router = useRouter()\n\n  const {\n    filter,\n    page = 1,\n    pageSize = 20,\n  } = extractTableQueries<U>(router, filterTypes)\n\n  const handleChange = React.useRef(\n    debounce(\n      async ({\n        newFilter = paginationService.filter,\n        newPage = paginationService.currentPage,\n        newPageSize = paginationService.pageSize,\n      }: {\n        newFilter?: Filterables\n        newPage?: number\n        newPageSize?: number\n      }) => {\n        const goBackToFirstPage =\n          newPageSize !== paginationService.pageSize ||\n          !isMatch(newFilter, paginationService.filter)\n\n        paginationService.setCurrentPage(goBackToFirstPage ? 1 : newPage)\n        paginationService.setPageSize(newPageSize)\n        paginationService.setFilter(newFilter)\n        void paginationService.getData()\n\n        await router.push(\n          {\n            pathname,\n            query: {\n              ...paginationService.filter,\n              page: paginationService.currentPage,\n              pageSize: paginationService.pageSize,\n            },\n          },\n          undefined,\n          { shallow: true },\n        )\n      },\n      500,\n    ),\n  ).current\n\n  useEffect(() => {\n    paginationService.setCurrentPage(page)\n    paginationService.setPageSize(pageSize)\n    paginationService.setFilter(filter)\n    void paginationService.getData()\n  }, [])\n\n  const pagination: TablePaginationConfig = {\n    current: paginationService.currentPage,\n    onChange: (newPage, newPageSize) => handleChange({ newPage, newPageSize }),\n    pageSize: paginationService.pageSize,\n    position: ['bottomCenter'],\n    showSizeChanger: true,\n    total: paginationService.totalItems,\n  }\n\n  return {\n    data: paginationService.data as Array<T>,\n    filter,\n    handleChange,\n    isLoading: paginationService.isLoading,\n    page,\n    pageSize,\n    pagination,\n  }\n}\n","module.exports = require(\"lodash/debounce\");","module.exports = require(\"lodash/isMatch\");","module.exports = require(\"next/router\");","import type { NextApiRequest, NextApiResponse } from 'next'\n\ntype CallbackFn = (\n  req: NextApiRequest,\n  res: NextApiResponse,\n  cb: (result: unknown) => unknown,\n) => void\n\nexport const runMiddleware = (\n  req: NextApiRequest,\n  res: NextApiResponse,\n  fn: CallbackFn,\n) => {\n  return new Promise((resolve, reject) => {\n    return fn(req, res, (result: unknown) => {\n      if (result instanceof Error) {\n        return reject(result)\n      }\n\n      return resolve(result)\n    })\n  })\n}\n","/**\n * https://frontend-devops.com/blog/pipe-serverside-props-in-nextjs\n */\n\ntype PipedGetServerSideProps = (arg?: unknown) => Promise<unknown> | unknown\n\nexport const ssrPipe =\n  (...functions: Array<PipedGetServerSideProps>) =>\n  async (\n    input: unknown,\n  ): Promise<{\n    props: Record<string, unknown>\n  }> => {\n    const parsedObject = JSON.parse(JSON.stringify(input))\n\n    return {\n      props: await functions.reduce(\n        (chain, func) => chain.then(func),\n        Promise.resolve(parsedObject),\n      ),\n    }\n  }\n","import type { IPropData } from '@codelab/frontend/abstract/core'\nimport {\n  STATE_PATH_TEMPLATE_END,\n  STATE_PATH_TEMPLATE_REGEX,\n  STATE_PATH_TEMPLATE_START,\n} from '@codelab/frontend/abstract/core'\nimport { mapDeep } from '@codelab/shared/utils'\nimport isString from 'lodash/isString'\n\nexport const hasStateExpression = (str: unknown): boolean =>\n  isString(str) &&\n  str.includes(STATE_PATH_TEMPLATE_START) &&\n  str.includes(STATE_PATH_TEMPLATE_END)\n\nexport const isSingleStateExpression = (str: string) =>\n  str.startsWith(STATE_PATH_TEMPLATE_START) &&\n  str.endsWith(STATE_PATH_TEMPLATE_END)\n\nexport const stripStateExpression = (expression: string) =>\n  expression.substring(2, expression.length - 2).trim()\n\nexport const evaluateExpression = (\n  expression: string,\n  state: IPropData,\n  componentProps: IPropData = {},\n) => {\n  try {\n    const code = `return ${stripStateExpression(expression)}`\n\n    // eslint-disable-next-line no-new-func\n    return new Function('component', code).call(state, componentProps)\n  } catch (error) {\n    console.log(error)\n\n    return expression\n  }\n}\n\nexport const replaceStateInProps = (\n  props: IPropData,\n  state: IPropData = {},\n  componentProps: IPropData = {},\n) =>\n  mapDeep(\n    props,\n    // value mapper\n    (value, key) =>\n      isString(value) ? getByExpression(value, state, componentProps) : value,\n    // key mapper\n    (value, key) =>\n      (isString(key)\n        ? getByExpression(key, state, componentProps)\n        : key) as string,\n  )\n\nexport const getByExpression = (\n  key: string,\n  state: IPropData,\n  componentProps: IPropData = {},\n) => {\n  if (!hasStateExpression(key)) {\n    return key\n  }\n\n  /**\n   * return typed value for : {{expression}}\n   */\n  if (isSingleStateExpression(key)) {\n    return evaluateExpression(key, state, componentProps)\n  }\n\n  /**\n   * return string value for : [text1]? {{expression1}} [text2]? {{expression2}}...\n   */\n  return key.replace(STATE_PATH_TEMPLATE_REGEX, (value) =>\n    evaluateExpression(value, state, componentProps),\n  )\n}\n","export * from './constant'\nexport * from './domain'\nexport * from './renderer'\nexport * from './routing'\nexport * from './service'\nexport * from './ui'\n","/**\n * <div data-component-id=\"0\" />\n *\n * becomes\n *\n * node.dataset.componentId\n */\nexport const DATASET_COMPONENT_ID = 'componentId'\nexport const DATA_COMPONENT_ID = 'data-component-id'\nexport const DATASET_ELEMENT_ID = 'elementId'\nexport const DATA_ELEMENT_ID = 'data-element-id'\n\nexport const BUILDER_CONTAINER_ID = 'Builder'\nexport const BUILDER_NONE_CLASS_NAME = 'Builder-none'\n\nexport const BINDING_WILDCARD = '*'\nexport const DATA_GRID = 'DATA-GRID'\nexport const ROOT_RENDER_CONTAINER_ID = 'render-root'\nexport const ROOT_ELEMENT_NAME = 'Body'\n\nexport const STATE_PATH_TEMPLATE_START = '{{'\nexport const STATE_PATH_TEMPLATE_START_REGEX = /\\{\\{/g\n// start bracket that is not closed with }}\nexport const STATE_PATH_TEMPLATE_START_OPEN_REGEX = /\\{\\{(?!(.+)?}})/g\nexport const STATE_PATH_TEMPLATE_END = '}}'\nexport const STATE_PATH_TEMPLATE_END_REGEX = /}}/g\nexport const STATE_PATH_TEMPLATE_REGEX = /\\{\\{[^}]+}}/g\n\nexport const LAST_WORD_AFTER_DOT_REGEX = /\\.\\w+$/\nexport const WORD_BEFORE_DOT_REGEX = /\\w*(\\.)?/\n\nexport const CUSTOM_TEXT_PROP_KEY = 'customText'\n\n// export const DEFAULT_GET_SERVER_SIDE_PROPS = `async function (context) {\n//     return {\n//       props: {},\n//       redirect: undefined,\n//       notFound: false,\n//     }\n//   }`\n","export * from './action'\nexport * from './admin'\nexport * from './app'\nexport * from './atom'\nexport * from './base'\nexport * from './builder'\nexport * from './component'\nexport * from './domain'\nexport * from './element'\nexport * from './hook'\nexport * from './lambda'\nexport * from './page'\nexport * from './prop'\nexport * from './render'\nexport * from './resource'\nexport * from './store'\nexport * from './tag'\nexport * from './type'\nexport * from './user'\nexport * from './vercel'\n","export * from './action.dto.interface'\nexport * from './action.input.interface'\nexport * from './action.interface'\nexport * from './action.ref'\nexport * from './action.repo.interface'\nexport * from './action.service.interface'\nexport * from './action.where.interface'\nexport * from './actions'\nexport * from './base-action.interface'\nexport * from './fragments'\n","import type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport type {\n  IApiActionDTO,\n  ICodeActionDTO,\n  IGraphQLActionConfig,\n  IRestActionConfig,\n} from './actions'\n\nexport type IApiActionConfig = IGraphQLActionConfig | IRestActionConfig\n\n/**\n * Base\n */\nexport interface IBaseActionData {\n  id: string\n  name: string\n  storeId: string\n  type: IActionKind\n}\n\nexport interface IApiActionData extends IBaseActionData {\n  config: {\n    id: string\n    data: IApiActionConfig\n  }\n  errorActionId?: string\n  id: string\n  name: string\n  resourceId: string\n  successActionId?: string\n}\n\nexport interface ICodeActionData extends IBaseActionData {\n  code: string\n}\n\nexport interface IBaseActionDTO {\n  __typename: `${IActionKind.ApiAction}` | `${IActionKind.CodeAction}`\n  id: string\n  name: string\n  store: IEntity\n}\n\n/**\n * Action\n */\n\nexport type IActionDTO = IApiActionDTO | ICodeActionDTO\n\nexport type ICreateActionData = IApiActionData & ICodeActionData\n\nexport type IUpdateActionData = ICreateActionData\n","import type * as cg from '@codelab/shared/abstract/codegen'\n\nexport type ICreateActionInput =\n  | cg.ApiActionCreateInput\n  | cg.CodeActionCreateInput\n\nexport type IUpdateActionInput =\n  | cg.ApiActionUpdateInput\n  | cg.CodeActionUpdateInput\n\nexport type IConnectActionInput =\n  | cg.ApiActionConnectInput\n  | cg.CodeActionConnectInput\n\nexport type IDisconnectActionInput =\n  | cg.ApiActionDisconnectInput\n  | cg.CodeActionDisconnectInput\n\nexport type IDeleteActionInput =\n  | cg.ApiActionDeleteInput\n  | cg.CodeActionDeleteInput\n","import type { IApiAction, ICodeAction } from './actions'\n\nexport type IAction = IApiAction | ICodeAction\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IAction } from './action.interface'\n\nexport const actionRef = rootRef<IAction>('@codelab/ActionRef', {\n  onResolvedValueChange: (ref, newStore, oldStore) => {\n    if (oldStore && !newStore) {\n      detach(ref)\n    }\n  },\n})\n","import type { IRepository } from '../../service'\nimport type { IAction } from './action.interface'\nimport type { IActionOptions, IActionWhere } from './action.where.interface'\nimport type { ActionFragment } from './fragments'\n\nexport type IActionRepository = IRepository<\n  IAction,\n  ActionFragment,\n  IActionWhere,\n  IActionOptions\n>\n","import type {\n  ActionFragment,\n  ApiActionOptions,\n} from '@codelab/shared/abstract/codegen'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IQueryService,\n} from '../../service'\nimport type {\n  IActionDTO,\n  ICreateActionData,\n  IUpdateActionData,\n} from './action.dto.interface'\nimport type { IAction } from './action.interface'\nimport type { IActionWhere } from './action.where.interface'\n\nexport interface IActionFactory {\n  fromActionFragment(fragment: ActionFragment): IActionDTO\n}\n\nexport interface IActionService\n  extends ICRUDService<IAction, ICreateActionData, IUpdateActionData>,\n    IQueryService<IAction, IActionWhere, ApiActionOptions>,\n    ICRUDModalService<Ref<IAction>, { action: Maybe<IAction> }> {\n  actionFactory: IActionFactory\n  actionsList: Array<IAction>\n\n  action(id: string): Maybe<IAction>\n  add<T extends IActionDTO>(action: T): IAction\n  load(actions: Array<ActionFragment>): Array<IAction>\n}\n","import type * as cg from '@codelab/shared/abstract/codegen'\n\nexport type IActionWhere = cg.ApiActionWhere & cg.CodeActionWhere\n\nexport type IActionOptions = cg.ApiActionOptions & cg.CodeActionOptions\n","export * from './api-action'\nexport * from './code-action'\n","export * from './api-action.dto.interface'\nexport * from './api-action.interface'\nexport * from './config'\n","import type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IBaseActionDTO } from '../../action.dto.interface'\n\nexport interface IApiActionDTO extends IBaseActionDTO {\n  // Used as discriminator\n  __typename: `${IActionKind.ApiAction}`\n  config: IEntity\n  errorAction?: IEntity\n  resource: IEntity\n  successAction?: IEntity\n}\n","import type {\n  ApiActionCreateInput,\n  ApiActionDeleteInput,\n  ApiActionUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { Nullish } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../../../service'\nimport type { IProp } from '../../../prop'\nimport type { IResource } from '../../../resource'\nimport type { IAction } from '../../action.interface'\nimport type { IBaseAction } from '../../base-action.interface'\nimport type { IApiActionDTO } from './api-action.dto.interface'\n\nexport interface IApiAction\n  extends IBaseAction,\n    ICacheService<IApiActionDTO, IApiAction> {\n  config: Ref<IProp>\n  errorAction?: Nullish<Ref<IAction>>\n  resource: Ref<IResource>\n  successAction?: Nullish<Ref<IAction>>\n  type: IActionKind.ApiAction\n\n  toCreateInput(): ApiActionCreateInput\n  toDeleteInput(): ApiActionDeleteInput\n  toUpdateInput(): ApiActionUpdateInput\n}\n","export * from './graphql-action-config.interface'\nexport * from './rest-action-config.interface'\n","import type { Nullable } from '@codelab/shared/abstract/types'\n\nexport interface IGraphQLActionConfig {\n  headers?: Nullable<string>\n  query: string\n  variables?: Nullable<string>\n}\n","import type { Nullable } from '@codelab/shared/abstract/types'\n\nexport enum HttpMethod {\n  DELETE = 'DELETE',\n  GET = 'GET',\n  HEAD = 'HEAD',\n  OPTION = 'OPTION',\n  PATCH = 'PATCH',\n  POST = 'POST',\n  PUT = 'PUT',\n}\n\nexport enum HttpResponseType {\n  ArrayBuffer = 'arraybuffer',\n  Blob = 'blob',\n  Document = 'document',\n  Json = 'json',\n  Stream = 'stream',\n  Text = 'text',\n}\n\nexport interface IRestActionConfig {\n  body?: Nullable<string>\n  headers?: Nullable<string>\n  method: HttpMethod\n  queryParams?: Nullable<string>\n  responseType: HttpResponseType\n  urlSegment: string\n}\n","export * from './code-action.dto.interface'\nexport * from './code-action.interface'\n","import type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { IBaseActionDTO } from '../../action.dto.interface'\n\nexport interface ICodeActionDTO extends IBaseActionDTO {\n  // Used as discriminator\n  __typename: `${IActionKind.CodeAction}`\n  code: string\n}\n","import type {\n  CodeActionCreateInput,\n  CodeActionDeleteInput,\n  CodeActionUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { ICacheService } from '../../../../service'\nimport type { IBaseAction } from '../../base-action.interface'\nimport type { ICodeActionDTO } from './code-action.dto.interface'\n\nexport interface ICodeAction\n  extends IBaseAction,\n    ICacheService<ICodeActionDTO, ICodeAction> {\n  code: string\n  type: IActionKind.CodeAction\n\n  toCreateInput(): CodeActionCreateInput\n  toDeleteInput(): CodeActionDeleteInput\n  toUpdateInput(): CodeActionUpdateInput\n}\n","import type { IActionKind } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { IElement } from '../element'\nimport type { IStore } from '../store'\nimport type { IAction } from './action.interface'\n\nexport interface IBaseAction {\n  element: Maybe<Ref<IElement>>\n  id: IActionRef\n  name: string\n  store: Ref<IStore>\n  type: IActionKind\n\n  clone(storeId: string): IAction\n  createRunner(): (...args: Array<unknown>) => unknown\n}\n\nexport type IActionRef = string\n","export type { ActionFragment } from './action.fragment.graphql.gen'\nexport type { ApiActionFragment } from './api-action.fragment.graphql.gen'\nexport type { CodeActionFragment } from './code-action.fragment.graphql.gen'\n","export * from './admin.service.interface'\n","import type { Nullish } from '@codelab/shared/abstract/types'\n\nexport interface IAdminService {\n  export(): Promise<unknown>\n  import(): Promise<unknown>\n  resetData(): Promise<Nullish<boolean>>\n}\n","export * from './app.dto.interface'\nexport * from './app.model.interface'\nexport * from './app.ref'\nexport * from './app.repo.interface'\nexport * from './app.service.context'\nexport * from './app.service.interface'\n","import type { IAppDTO } from '@codelab/shared/abstract/core'\nimport type { RenderedComponentFragment } from '../component/component-render.fragment.graphql.gen'\nimport type { BuilderPageFragment } from '../page/page.fragment.graphql.gen'\n\nexport type ICreateAppData = Pick<IAppDTO, 'id' | 'name' | 'owner'>\n\nexport type IUpdateAppData = Pick<IAppDTO, 'id' | 'name'>\n\n/* *\n * Data required to initialize a page builder app\n */\nexport interface IPageBuilderAppProps {\n  components?: Array<RenderedComponentFragment>\n  pages: Array<BuilderPageFragment>\n}\n","import type {\n  AppCreateInput,\n  AppDeleteInput,\n  AppUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAppDTO, IOwner } from '@codelab/shared/abstract/core'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IDomain } from '../domain'\nimport type { IElement } from '../element'\nimport type { IModel } from '../model.interface'\nimport type { IPage } from '../page'\nimport type { IPropData } from '../prop'\n\nexport interface IApp\n  extends IModel<AppCreateInput, AppUpdateInput, AppDeleteInput>,\n    ICacheService<IAppDTO, IApp>,\n    IOwner {\n  domains: Array<Ref<IDomain>>\n  id: IAppRef\n  name: string\n  pageRootElements: Array<Ref<IElement>>\n  pages: Array<Ref<IPage>>\n  /**\n   * The `_app.tsx` equivalent of pages\n   */\n  providerPage: IPage\n  slug: string\n  toJson: IPropData\n\n  page(id: string): IPage\n}\n\nexport interface IBuilderApp {\n  app: IApp\n  page: IPage\n}\n\nexport type IAppRef = string\n\nexport interface IAppSchema {\n  app: Pick<IApp, 'id'>\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IApp } from './app.model.interface'\n\nexport const appRef = rootRef<IApp>('@codelab/AppRef', {\n  onResolvedValueChange: (ref, newApp, oldApp) => {\n    if (oldApp && !newApp) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  AppFragment,\n  AppOptions,\n  AppWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IApp } from './app.model.interface'\n\nexport type IAppRepository = IRepository<\n  IApp,\n  AppFragment,\n  AppWhere,\n  AppOptions\n>\n","import { createContext } from 'mobx-keystone'\nimport type { IAppService } from './app.service.interface'\n\nexport const appServiceContext = createContext<IAppService>()\n\nexport const getAppService = (self: object) => {\n  const appService = appServiceContext.get(self)\n\n  if (!appService) {\n    throw new Error('appServiceContext is not defined')\n  }\n\n  return appService\n}\n","import type {\n  AppOptions,\n  AppWhere,\n  GetRenderedPageAndCommonAppDataQuery,\n  PageWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAppDTO } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IEntityModalService,\n  IQueryService,\n} from '../../service'\nimport type { IPropData } from '../prop'\nimport type {\n  ICreateAppData,\n  IPageBuilderAppProps,\n  IUpdateAppData,\n} from './app.dto.interface'\nimport type { IApp } from './app.model.interface'\nimport type { IAppRepository } from './app.repo.interface'\n\nexport interface IAppService\n  extends ICRUDService<IApp, ICreateAppData, IUpdateAppData>,\n    IQueryService<IApp, AppWhere, AppOptions>,\n    ICRUDModalService<Ref<IApp>, { app: Maybe<IApp> }> {\n  appRepository: IAppRepository\n  apps: ObjectMap<IApp>\n  appsJson: IPropData\n  appsList: Array<IApp>\n  buildModal: IEntityModalService<Ref<IApp>, { app: IApp }>\n\n  add(appDto: IAppDTO): IApp\n  app(id: string): Maybe<IApp>\n  getAppPages(appId: string, where: PageWhere): Promise<void>\n  getRenderedPageAndCommonAppData(\n    appId: string,\n    pageId: string,\n    initialData?: GetRenderedPageAndCommonAppDataQuery,\n  ): Promise<IApp | undefined>\n  loadAppsWithNestedPreviews(where: AppWhere): Promise<Array<IApp>>\n  loadPages(data: IPageBuilderAppProps): void\n}\n","export * from './atom.dto.interface'\nexport * from './atom.model.interface'\nexport * from './atom.ref'\nexport * from './atom.repo.interface'\nexport * from './atom.seed.interface'\nexport * from './atom.service.interface'\nexport * from './hooks.enum'\n","import type { IAtomType, IOwner } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport type { RenderAtomFragment } from './atom.fragment.graphql.gen'\nimport type { IAtomRef } from './atom.model.interface'\n\nexport interface ICreateAtomData extends IOwner {\n  // Used for interface\n  // Allow for connection to existing interface\n  // api: IEntity\n  externalCssSource?: string | null\n  externalJsSource?: string | null\n  externalSourceType?: string | null\n  id: string\n  name: string\n  requiredParents?: Array<IAtomRef>\n  suggestedChildren?: Array<IAtomRef>\n  tags?: Array<IEntity>\n  type: IAtomType\n}\n\nexport type IUpdateAtomData = Omit<ICreateAtomData, 'owner'>\n\nexport type IRenderAtomDTO = RenderAtomFragment\n","import type {\n  AtomCreateInput,\n  AtomUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAtomDTO, IAtomType, IOwner } from '@codelab/shared/abstract/core'\nimport type { Nullish } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IModel } from '../model.interface'\nimport type { ITag } from '../tag'\nimport type { IInterfaceType } from '../type'\nimport type { IRenderAtomDTO } from './atom.dto.interface'\n\nexport interface IAtom\n  extends ICacheService<IAtomDTO, IAtom>,\n    Omit<IModel<AtomCreateInput, AtomUpdateInput, void>, 'toDeleteInput'>,\n    IOwner {\n  allowCustomTextInjection: boolean\n  /**\n   * We don't need Ref here, only need id to filter the select options. Making it Ref requires dependency resolution that makes it more difficult.\n   *\n   * We store preview data here so we can more easily display the tags in the atoms table\n   */\n  api: Ref<IInterfaceType>\n  externalCssSource?: string | null\n  externalJsSource?: string | null\n  externalSourceType?: string | null\n  icon?: string | null\n  id: string\n  name: string\n  requiredParents: Array<Ref<IAtom>>\n  suggestedChildren: Array<Ref<IAtom>>\n  tags: Array<Ref<ITag>>\n  type: IAtomType\n}\n\nexport type IAtomRef = string\n\nexport const isAtomDTO = (\n  atom: Nullish<IRenderAtomDTO>,\n): atom is IRenderAtomDTO => {\n  return atom !== undefined && atom !== null\n}\n","import type { Ref } from 'mobx-keystone'\nimport { detach, rootRef } from 'mobx-keystone'\nimport type { IElementRenderType } from '../element'\nimport type { IAtom } from './atom.model.interface'\n\nexport const atomRef = rootRef<IAtom>('@codelab/AtomRef', {\n  onResolvedValueChange: (ref, newAtom, oldAtom) => {\n    if (oldAtom && !newAtom) {\n      detach(ref)\n    }\n  },\n})\n\n/**\n * used for determining the renderType of an element\n */\nexport const isAtomInstance = (\n  atom: IElementRenderType | null,\n): atom is Ref<IAtom> => {\n  return atom?.$modelType === '@codelab/AtomRef'\n}\n","import type {\n  AtomFragment,\n  AtomOptions,\n  AtomWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IAtom } from './atom.model.interface'\n\nexport type IAtomRepository = IRepository<\n  IAtom,\n  AtomFragment,\n  AtomWhere,\n  AtomOptions\n> & {\n  findOptions(): Promise<Array<Pick<IAtom, 'id' | 'name' | 'type'>>>\n}\n","import type { IAtomType } from '@codelab/shared/abstract/core'\nimport type { IComponentType } from '../../renderer'\n\n/**\n * Gives us a record of atom and its respective component type for rendering\n */\nexport type IAtomRendererRecord = Partial<Record<IAtomType, IComponentType>>\n","import type { AtomOptions, AtomWhere } from '@codelab/shared/abstract/codegen'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ArraySet, ObjectMap, Ref } from 'mobx-keystone'\nimport type { IComponentType } from '../../renderer'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IEntityModalService,\n  IPaginateable,\n  IQueryService,\n} from '../../service'\nimport type { ICreateAtomData, IUpdateAtomData } from './atom.dto.interface'\nimport type { IAtom } from './atom.model.interface'\nimport type { IAtomRepository } from './atom.repo.interface'\n\nexport interface IAtomService\n  extends Omit<ICRUDService<IAtom, ICreateAtomData, IUpdateAtomData>, 'delete'>,\n    IQueryService<IAtom, AtomWhere, AtomOptions>,\n    Omit<ICRUDModalService<Ref<IAtom>, { atom: Maybe<IAtom> }>, 'deleteModal'>,\n    IPaginateable<IAtom, { name?: string }> {\n  atomRepository: IAtomRepository\n  atoms: ObjectMap<IAtom>\n  atomsList: Array<IAtom>\n  deleteManyModal: IEntityModalService<\n    Array<Ref<IAtom>>,\n    { atoms: Array<IAtom> }\n  >\n  dynamicComponents: Record<string, IComponentType>\n  loadedExternalCssSources: ArraySet<string>\n  loadedExternalJsSources: ArraySet<string>\n\n  add(atomDTO: IAtomDTO): IAtom\n  delete(ids: Array<string>): Promise<number>\n  getOptions(): Promise<Array<Pick<IAtom, 'id' | 'name' | 'type'>>>\n}\n","import { IAtomType } from '@codelab/shared/abstract/core'\n\nexport const hookTypes = new Set([\n  IAtomType.HookGraphqlQuery,\n  IAtomType.HookGraphqlMutation,\n  IAtomType.HookQueryPage,\n  IAtomType.HookQueryPages,\n  IAtomType.HookRecoilState,\n  IAtomType.HookQueryConfig,\n  IAtomType.HookQueryLambda,\n  IAtomType.HookRouter,\n])\n\nexport const filterNotHookType = (atom: IAtomType): atom is IAtomType =>\n  !hookTypes.has(atom as IAtomType)\n\nexport const isAtomTypeForTest = (atom: IAtomType) =>\n  [IAtomType.AntDesignButton, IAtomType.AntDesignCard].includes(atom)\n","export * from './ref-schema'\n","import { z } from 'zod'\n\n/**\n * A reference to another entity.\n */\nexport const refSchema = z.object({\n  id: z.string(),\n})\n\nexport type IRef = z.infer<typeof refSchema>\n\nexport const resolveRefOrThrow = <T extends IRef>(\n  ref: IRef | T,\n  errorFactory?: () => Error,\n): T => {\n  if (!ref.id || Object.keys(ref).length === 1) {\n    throw errorFactory ? errorFactory() : new Error(\"Can't resolve ref\")\n  }\n\n  return ref as T\n}\n","module.exports = require(\"zod\");","export * from './builder.interface'\nexport * from './builder.service.context'\nexport * from './builder.service.interface'\nexport * from './expression-transformer.service.interface'\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { ICreateElementData } from '../element'\n\nexport interface MoveData {\n  parentElement: IEntity\n  prevSibling: IEntity\n}\n\nexport interface BuilderDragData {\n  createElementInput?: ICreateElementData\n  icon?: string\n  name?: string\n  type: BuilderDndType\n}\n\nexport interface BuilderDropData {\n  dragPosition?: DragPosition\n}\n\nexport interface BuilderWidth {\n  default: number\n  max: number\n  min: number\n}\n\nexport const enum BuilderWidthBreakPoints {\n  Desktop = 'desktop',\n  Mobile = 'mobile',\n  MobileVertical = 'mobile-vertical',\n  TabletHorizontal = 'tablet-horizontal',\n}\n\nexport enum BuilderDndType {\n  CreateElement = 'CreateElement',\n  MoveElement = 'MoveElement',\n}\n\nexport enum DragPosition {\n  After = 'After',\n  Before = 'Before',\n  Inside = 'Inside',\n}\n\nexport const defaultBuilderWidthBreakPoints: Record<\n  BuilderWidthBreakPoints,\n  BuilderWidth\n> = {\n  [BuilderWidthBreakPoints.Mobile]: { default: 320, max: 479, min: 240 },\n  [BuilderWidthBreakPoints.MobileVertical]: {\n    default: 568,\n    max: 767,\n    min: 480,\n  },\n  [BuilderWidthBreakPoints.TabletHorizontal]: {\n    default: 768,\n    max: 991,\n    min: 768,\n  },\n  // -1 means automatically set the value for this field to the max available space\n  [BuilderWidthBreakPoints.Desktop]: { default: 992, max: 1920, min: 992 },\n}\n\n/**\n * Useful data related to builder\n */\nexport interface IBuilderState {\n  /**\n   * Currently active component if any\n   */\n  componentId: string | undefined\n}\n","import { createContext } from 'mobx-keystone'\nimport type { IBuilderService } from './builder.service.interface'\n\nexport const builderServiceContext = createContext<IBuilderService>()\n\nexport const getBuilderService = (self: object) => {\n  const builderService = builderServiceContext.get(self)\n\n  if (!builderService) {\n    throw new Error('builderServiceContext is not defined')\n  }\n\n  return builderService\n}\n","import type { Maybe, Nullable } from '@codelab/shared/abstract/types'\nimport type { Frozen, Ref } from 'mobx-keystone'\nimport type { IAtom } from '../atom'\nimport type { IComponent } from '../component'\nimport type { IElement, IElementTree } from '../element'\nimport type { IPageNodeRef } from '../page'\nimport type { RendererTab } from '../render'\nimport type { BuilderDragData, BuilderWidth } from './builder.interface'\n// TBC: | IComponent\nexport type IBuilderComponent = IAtom & {\n  // tag: Ref<ITag>\n}\nexport interface IBuilderService {\n  /**\n   * Computed from selectedNode, the selected node may or may not be a component, and there may be no selected node\n   */\n  activeComponent: Nullable<Ref<IComponent>>\n  activeElementTree: Maybe<IElementTree>\n  /**\n   * Tells us which tree we are selecting in the main pane\n   */\n  activeTab: RendererTab\n  builderContainerWidth: number\n  componentTagNames: Array<string>\n  componentsGroupedByCategory: Record<string, Array<IBuilderComponent>>\n  /**\n   * The difference between current and selected builderWidth is that\n   * - currentBuilderWidth is changed by useBuilderResize\n   * - selectedBuilderWidth is changed by PageDetailHeader and\n   * is being listened to by useBuilderResize\n   */\n  currentBuilderWidth: BuilderWidth\n  currentDragData: Nullable<Frozen<BuilderDragData>>\n  expandedComponentTreeNodeIds: Array<string>\n  expandedPageElementTreeNodeIds: Array<string>\n  hoveredNode: Nullable<IPageNodeRef>\n  selectedBuilderWidth: BuilderWidth\n  selectedNode: Nullable<IPageNodeRef>\n\n  selectComponentNode(node: Nullable<IComponent>): void\n  selectElementNode(node: Nullable<IElement>): void\n  setActiveTab(tab: RendererTab): void\n  setBuilderContainerWidth(width: number): void\n  setCurrentBuilderWidth(width: Nullable<BuilderWidth>): void\n  setCurrentDragData(data: Nullable<Frozen<BuilderDragData>>): void\n  setExpandedComponentTreeNodeIds(expandedNodeIds: Array<string>): void\n  setExpandedPageElementTreeNodeIds(expandedNodeIds: Array<string>): void\n  setHoveredNode(element: Nullable<IPageNodeRef>): void\n  setSelectedBuilderWidth(width: Nullable<BuilderWidth>): void\n  setSelectedNode(node: Nullable<IPageNodeRef>): void\n}\n","import type { Nullable } from '@codelab/shared/abstract/types'\nimport type { Options } from 'sucrase'\n\nexport interface IExpressionTransformer {\n  context: Nullable<object>\n  initialized: boolean\n  transform: Nullable<\n    (code: string, options: Options) => { code: string | null }\n  >\n  init(): Promise<void>\n  transpileAndEvaluateExpression(expression: string): unknown\n}\n","export * from './component.dto.interface'\nexport * from './component.model.interface'\nexport * from './component.ref'\nexport * from './component.repo.interface'\nexport * from './component.service.interface'\n","import type { IOwner } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullish } from '@codelab/shared/abstract/types'\n\nexport interface IComponentDTO extends IOwner {\n  api: IEntity\n  childrenContainerElement: IEntity\n  id: string\n  keyGenerator?: Nullish<string>\n  name: string\n  props: IEntity\n  rootElement: IEntity\n  store: IEntity\n}\n\nexport type ICreateComponentData = Pick<\n  IComponentDTO,\n  'id' | 'keyGenerator' | 'name' | 'owner'\n>\n\nexport type IUpdateComponentData = Pick<\n  IComponentDTO,\n  'childrenContainerElement' | 'id' | 'keyGenerator' | 'name'\n>\n","import type { ComponentCreateInput } from '@codelab/shared/abstract/codegen'\nimport type { IOwner } from '@codelab/shared/abstract/core'\nimport type {\n  IEntity,\n  Maybe,\n  Nullable,\n  Nullish,\n} from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IElement, IElementTree } from '../element'\nimport type { IProp } from '../prop'\nimport type { IComponentRuntimeProp } from '../render'\nimport type { IStore } from '../store'\nimport type { IInterfaceType } from '../type'\nimport type { IComponentDTO } from './component.dto.interface'\n\nexport interface IComponent\n  extends ICacheService<IComponentDTO, IComponent>,\n    IOwner,\n    IElementTree {\n  api: Ref<IInterfaceType>\n  childrenContainerElement: Ref<IElement>\n  descendantComponents: Array<IComponent>\n  instanceElement: Nullable<Ref<IElement>>\n  keyGenerator: Nullish<string>\n  name: string\n  props: Ref<IProp>\n  runtimeProp: Maybe<IComponentRuntimeProp>\n  /**\n   * to render a component we create a duplicate for each instance\n   * keeps track of source component in case this is a duplicate\n   */\n  sourceComponent?: Nullable<IEntity>\n  store: Ref<IStore>\n\n  clone(key: string, instanceId?: string): IComponent\n  setChildrenContainerElement(element: Ref<IElement>): void\n  setInstanceElement(elementRef: Ref<IElement>): void\n  setProps(props: Nullable<Ref<IProp>>): void\n  setSourceComponent(entity: IEntity): void\n  setStore(props: Nullable<Ref<IStore>>): void\n  toCreateInput(): ComponentCreateInput\n}\n\nexport type IComponentRef = string\n\nexport const isComponentDTO = (\n  component: Nullish<IComponentDTO>,\n): component is IComponentDTO => {\n  return component !== undefined && component !== null\n}\n","import isNil from 'lodash/isNil'\nimport type { AnyModel, Ref } from 'mobx-keystone'\nimport {\n  createContext,\n  detach,\n  isRefOfType,\n  modelTypeKey,\n  rootRef,\n} from 'mobx-keystone'\nimport type { IElementRenderType } from '../element'\nimport type { IComponent } from './component.model.interface'\nimport type { IComponentService } from './component.service.interface'\n\n/**\n * Moved here because of dependency issue.\n *\n * Component can depend on element, but not the other way around\n */\n\nexport const componentRef = rootRef<IComponent>('@codelab/ComponentRef', {\n  onResolvedValueChange: (ref, newComponent, oldComponent) => {\n    if (oldComponent && !newComponent) {\n      detach(ref)\n    }\n  },\n})\n\n// This can be used to access the type store from anywhere inside the mobx-keystone tree\nexport const componentServiceContext = createContext<IComponentService>()\n\nexport const getComponentService = (self: object) => {\n  const componentService = componentServiceContext.get(self)\n\n  if (!componentService) {\n    throw new Error('componentServiceContext is not set')\n  }\n\n  return componentService\n}\n\n/**\n * Used for determining the RenderType of an element\n */\nexport const isComponentInstance = (\n  node: IElementRenderType | null,\n): node is Ref<IComponent> => {\n  return !isNil(node) && isRefOfType(node, componentRef)\n}\n\nexport const isComponentModel = (model: object): model is IComponent => {\n  return (\n    !isNil(model) &&\n    // `IComponent` is mobx model type\n    (model as unknown as AnyModel)[modelTypeKey] === '@codelab/Component'\n  )\n}\n","module.exports = require(\"lodash/isNil\");","import type {\n  ComponentFragment,\n  ComponentOptions,\n  ComponentWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IComponent } from './component.model.interface'\n\nexport type IComponentRepository = IRepository<\n  IComponent,\n  ComponentFragment,\n  ComponentWhere,\n  ComponentOptions\n>\n","import type {\n  ComponentOptions,\n  ComponentWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IEntityFormService,\n  IPaginateable,\n  IQueryService,\n} from '../../service'\nimport type {\n  IComponentDTO,\n  ICreateComponentData,\n  IUpdateComponentData,\n} from './component.dto.interface'\nimport type { IComponent } from './component.model.interface'\nimport type { IComponentRepository } from './component.repo.interface'\n\nexport interface IComponentService\n  extends ICRUDService<IComponent, ICreateComponentData, IUpdateComponentData>,\n    IQueryService<IComponent, ComponentWhere, ComponentOptions>,\n    ICRUDModalService<Ref<IComponent>, { component: Maybe<IComponent> }>,\n    IPaginateable<IComponent, { name?: string }> {\n  clonedComponents: ObjectMap<IComponent>\n  componentList: Array<IComponent>\n  componentRepository: IComponentRepository\n  components: ObjectMap<IComponent>\n  createForm: IEntityFormService\n\n  add(componentDTO: IComponentDTO): IComponent\n  component(id: string): IComponent\n}\n","export * from './domain.dto.interface'\nexport * from './domain.model.interface'\nexport * from './domain.ref'\nexport * from './domain.repo.interface'\nexport * from './domain.service.interface'\n","import type { IEntity, Maybe } from '@codelab/shared/abstract/types'\n\nexport interface ICreateDomainData {\n  app: IEntity\n  id: string\n  name: string\n}\n\nexport type IUpdateDomainData = ICreateDomainData\n\nexport interface IDomainDTO {\n  app: IEntity\n  domainConfig: Maybe<{ misconfigured: boolean }>\n  id: string\n  name: string\n  projectDomain: Maybe<{ verified: boolean }>\n}\n","import type {\n  DomainCreateInput,\n  DomainDeleteInput,\n  DomainUpdateInput,\n  VercelDomainConfig,\n  VercelProjectDomain,\n} from '@codelab/shared/abstract/codegen'\nimport type { IEntity, Maybe } from '@codelab/shared/abstract/types'\nimport type { ICacheService } from '../../service'\nimport type { IModel } from '../model.interface'\nimport type { IDomainDTO } from './domain.dto.interface'\n\nexport interface IDomain\n  extends ICacheService<IDomainDTO, IDomain>,\n    IModel<DomainCreateInput, DomainUpdateInput, DomainDeleteInput> {\n  app: IEntity\n  domainConfig: Maybe<VercelDomainConfig>\n  id: string\n  name: string\n  projectDomain: Maybe<VercelProjectDomain>\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IDomain } from './domain.model.interface'\n\nexport const domainRef = rootRef<IDomain>('@codelab/DomainRef', {\n  onResolvedValueChange: (ref, newApp, oldApp) => {\n    if (oldApp && !newApp) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  DomainFragment,\n  DomainOptions,\n  DomainWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IDomain } from './domain.model.interface'\n\nexport type IDomainRepository = IRepository<\n  IDomain,\n  DomainFragment,\n  DomainWhere,\n  DomainOptions\n>\n","import type {\n  DomainOptions,\n  DomainWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IQueryService,\n} from '../../service'\nimport type { ICreateDomainData } from './domain.dto.interface'\nimport type { IDomain } from './domain.model.interface'\n\nexport interface IDomainService\n  extends ICRUDService<IDomain, ICreateDomainData, ICreateDomainData>,\n    Omit<IQueryService<IDomain, DomainWhere, DomainOptions>, 'getOne'>,\n    ICRUDModalService<Ref<IDomain>, { domain: Maybe<IDomain> }> {\n  createModal: ICRUDModalService<\n    Ref<IDomain>,\n    { domain: Maybe<string> }\n  >['createModal']\n  domains: ObjectMap<IDomain>\n  domainsList: Array<IDomain>\n  getAll(where?: DomainWhere): Promise<Array<IDomain>>\n}\n","export * from './element.dto.interface'\nexport * from './element.model.interface'\nexport * from './element.ref'\nexport * from './element.repo.interface'\nexport * from './element.service.context'\nexport * from './element.service.interface'\nexport * from './element-graph.interface'\nexport * from './element-tree'\nexport * from './element-tree.interface.model'\nexport * from './render-type'\n","import type { IPropDTO, RenderType } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullable, Nullish } from '@codelab/shared/abstract/types'\n\nexport interface ICreateElementData {\n  customCss?: Nullable<string>\n  guiCss?: Nullable<string>\n  id: string\n  name: string\n  parentElement?: Nullable<IEntity>\n  postRenderAction?: Nullable<IEntity>\n  preRenderAction?: Nullable<IEntity>\n  prevSibling?: Nullable<IEntity>\n  propTransformationJs?: Nullable<string>\n  props?: Nullable<Pick<IPropDTO, 'data'>>\n  /**\n   * We should connect to `atom` or `component` in future\n   */\n  renderType?: Nullable<RenderType>\n}\n\nexport type IUpdateElementData = Pick<\n  ICreateElementData,\n  | 'customCss'\n  | 'guiCss'\n  | 'name'\n  | 'postRenderAction'\n  | 'preRenderAction'\n  | 'renderType'\n> &\n  Pick<ICreateElementData, 'id'> & {\n    propTransformationJs?: Nullish<string>\n    renderForEachPropKey?: Nullable<string>\n    renderIfExpression?: Nullable<string>\n  }\n\n/**\n * Some properties have their own forms, the base form only uses a subset of fields\n */\nexport type IUpdateBaseElementData = Pick<\n  IUpdateElementData,\n  | 'id'\n  | 'name'\n  | 'postRenderAction'\n  | 'preRenderAction'\n  | 'renderForEachPropKey'\n  | 'renderIfExpression'\n  | 'renderType'\n>\n","import type {\n  ElementCreateInput,\n  ElementUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAuth0Owner, IElementDTO } from '@codelab/shared/abstract/core'\nimport type {\n  IEntity,\n  Maybe,\n  Nullable,\n  Nullish,\n} from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IElementTreeViewDataNode } from '../../ui'\nimport type { IComponent } from '../component'\nimport type { IHook } from '../hook'\nimport type { IModel } from '../model.interface'\nimport type { IPage } from '../page'\nimport type { IProp, IPropData } from '../prop'\nimport type { IElementRuntimeProp } from '../render'\nimport type { IStore } from '../store'\nimport type { IElementRenderType } from './render-type'\n\n/**\n * This is a non-element type node that contains the root element.\n *\n * - App, Page, Component\n */\nexport interface IElementContainer {\n  id: string\n  rootElementId: string\n}\n\nexport interface CssMap {\n  [prop: string]: string\n}\n\nexport interface RenderingError {\n  message: string\n  stack: Maybe<string>\n}\n\n// Metadata obtained from the renderer\n// regarding the element's rendering\nexport interface RenderingMetadata {\n  error: Nullish<RenderingError>\n}\n\nexport type TransformPropsFn = (props: IPropData) => IPropData\n\nexport interface IElement\n  extends Omit<\n      IModel<ElementCreateInput, ElementUpdateInput, void>,\n      'toDeleteInput'\n    >,\n    ICacheService<IElementDTO, IElement> {\n  ancestorError: Nullish<RenderingError>\n  atomName: string\n  children: Array<IElement>\n  // the closest container node that element belongs to\n  closestContainerNode: IComponent | IPage\n  closestParent: IElement | null\n  // the closest rootElement of node (page/component) that element belongs to\n  closestRootElement: IElement\n  customCss?: Nullable<string>\n  // This is a computed property, so we can use model instead of ref\n  descendantElements: Array<IElement>\n  firstChild?: Nullable<Ref<IElement>>\n  guiCss?: Nullable<string>\n  hooks: Array<IHook>\n  id: string\n  isRoot: boolean\n  label: string\n  name: string\n  nextSibling?: Nullable<Ref<IElement>>\n  owner: Nullable<IAuth0Owner>\n  // page that this element belongs to\n  page: Nullable<Ref<IPage>>\n  parent?: Nullable<Ref<IElement>>\n  // component that this element belongs to\n  parentComponent?: Nullable<Ref<IComponent>>\n  prevSibling?: Nullable<Ref<IElement>>\n  propTransformationJs: Nullable<string>\n  props: Ref<IProp>\n  renderForEachPropKey: Nullable<string>\n  renderIfExpression: Nullable<string>\n  renderType: IElementRenderType | null\n  // atom: Nullable<Ref<IAtom>>\n  // renderComponentType: Nullable<Ref<IComponent>>\n  renderingMetadata: Nullable<RenderingMetadata>\n  runtimeProp: Maybe<IElementRuntimeProp>\n\n  /**\n   * to render a component we create a duplicate for each element\n   * keeps track of source element in case this is a duplicate\n   */\n  sourceElement: Nullable<IEntity>\n  // store attached to closestContainerNode\n  store: Ref<IStore>\n  transformPropsFn: Maybe<TransformPropsFn>\n  treeViewNode: IElementTreeViewDataNode\n\n  appendToGuiCss(css: CssMap): void\n  attachAsNextSibling(sibling: IElement): void\n  attachAsPrevSibling(sibling: IElement): void\n  attachToParentAsFirstChild(parentElement: IElement): void\n  clone(cloneIndex: number): IElement\n  connectPrevToNextSibling(): void\n  deleteFromGuiCss(propNames: Array<string>): void\n  detachAsFirstChild(): void\n  detachFromParent(): void\n  setCustomCss(css: string): void\n  setFirstChild(firstChild: Ref<IElement>): void\n  setName(name: string): void\n  setNextSibling(nextSibling: Ref<IElement>): void\n  setOrderInParent(order: number | null): void\n  setPage(page: Ref<IPage>): void\n  setParent(parent: Ref<IElement>): void\n  setParentComponent(component: Ref<IComponent>): void\n  setPrevSibling(prevSibling: Ref<IElement>): void\n  setPropTransformationJs(props: string): void\n  setProps(props: Nullable<Ref<IProp>>): void\n  setRenderForEachPropKey(key: string): void\n  setRenderIfExpression(key: Nullish<string>): void\n  setRenderType(renderType: IElementRenderType): void\n  setRenderingError(error: Nullish<RenderingError>): void\n  setSourceElement(element: Ref<IElement>): void\n  // setRenderComponentType(componentRef: Ref<IComponent>): void\n  // getDescendantRefs: Array<Ref<IElement>>\n  toUpdateNodesInput(): Pick<\n    ElementUpdateInput,\n    'firstChild' | 'nextSibling' | 'parent' | 'prevSibling'\n  >\n}\n\nexport type IElementRef = string\n","import isNil from 'lodash/isNil'\nimport type { Ref } from 'mobx-keystone'\nimport { detach, isRefOfType, rootRef } from 'mobx-keystone'\nimport type { IComponent } from '../component'\nimport type { IElement } from './element.model.interface'\n\nexport const elementRef = rootRef<IElement>('@codelab/ElementRef', {\n  onResolvedValueChange: (ref, newElement, oldElement) => {\n    if (oldElement && !newElement) {\n      detach(ref)\n    }\n  },\n})\n\n/**\n * Used for determining which node type is in the page tree\n */\nexport const isElementRef = (\n  node: Ref<IComponent> | Ref<IElement> | null,\n): node is Ref<IElement> => {\n  return !isNil(node) && isRefOfType(node, elementRef)\n}\n","import type {\n  DomainOptions,\n  ElementFragment,\n  ElementWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport type { IRepository } from '../../service'\nimport type { IElement } from './element.model.interface'\n\nexport interface IElementRepository\n  extends IRepository<IElement, ElementFragment, ElementWhere, DomainOptions> {\n  updateNodes(element: IElement): Promise<IEntity>\n}\n","import { createContext } from 'mobx-keystone'\nimport type { IElementService } from './element.service.interface'\n\n// This can be used to access the type store from anywhere inside the mobx-keystone tree\nexport const elementServiceContext = createContext<IElementService>()\n\nexport const getElementService = (self: object) => {\n  const elementService = elementServiceContext.get(self)\n\n  if (!elementService) {\n    throw new Error('elementServiceContext is not set')\n  }\n\n  return elementService\n}\n","import type { RenderedComponentFragment } from '@codelab/shared/abstract/codegen'\nimport type { IAuth0Owner, IElementDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity, Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDFormService,\n  ICRUDModalService,\n  ICRUDService,\n  IEntityFormService,\n  IEntityModalService,\n} from '../../service'\nimport type {\n  ICreateElementData,\n  IUpdateElementData,\n} from './element.dto.interface'\nimport type { IElement } from './element.model.interface'\nimport type { IElementRepository } from './element.repo.interface'\nimport type { IElementTree } from './element-tree.interface.model'\n\n/**\n * Used for modal input\n */\nexport interface CreateElementData {\n  elementOptions: Array<{\n    childrenIds?: Array<string>\n    label: string\n    value: string\n  }>\n  elementTree: Ref<IElementTree>\n  selectedElement?: Maybe<Ref<IElement>>\n}\n\nexport interface CreateElementProperties {\n  elementTree: IElementTree\n  parentElement: IElement\n}\n\nexport interface UpdateElementProperties {\n  element: IElement\n}\n\nexport interface IElementService\n  extends Omit<\n      ICRUDService<IElement, ICreateElementData, IUpdateElementData>,\n      'delete'\n    >,\n    Omit<\n      ICRUDModalService<Ref<IElement>, { element?: IElement }>,\n      'createModal'\n    >,\n    Omit<\n      ICRUDFormService<Ref<IElement>, { element?: IElement }>,\n      'createForm'\n    > {\n  clonedElements: ObjectMap<IElement>\n  createForm: IEntityFormService<CreateElementData, CreateElementProperties>\n  createModal: IEntityModalService<CreateElementData, CreateElementProperties>\n  elementRepository: IElementRepository\n  elements: ObjectMap<IElement>\n  updateForm: IEntityModalService<Ref<IElement>, UpdateElementProperties>\n  updateModal: IEntityModalService<Ref<IElement>, UpdateElementProperties>\n  add(elementDTO: IElementDTO): IElement\n  cloneElement(\n    target: IElement,\n    targetParent: IElement,\n  ): Promise<Array<IElement>>\n  convertElementToComponent(\n    element: IElement,\n    owner: IAuth0Owner,\n  ): Promise<Maybe<IElement>>\n  // moveElement(\n  //   targetElementId: IElementRef,\n  //   moveData: MoveData,\n  // ): Promise<IElement>\n  createElementAsFirstChild(data: ICreateElementData): Promise<IElement>\n  createElementAsNextSibling(data: ICreateElementData): Promise<IElement>\n  delete(subRoot: IEntity): Promise<void>\n  element(id: string): IElement\n  loadComponentTree(component: RenderedComponentFragment): {\n    hydratedElements: Array<IElement>\n    rootElement: IElement\n  }\n  maybeElement(id: Maybe<string>): Maybe<IElement>\n  moveElementAsFirstChild(props: {\n    element: IEntity\n    parentElement: IEntity\n  }): Promise<void>\n  moveElementAsNextSibling(props: {\n    element: IEntity\n    targetElement: IEntity\n  }): Promise<void>\n  /**\n   * @param props.object an element or a component\n   */\n  moveNodeToAnotherTree(props: {\n    dropPosition: number\n    object: IEntity\n    targetElement: IEntity\n  }): Promise<void>\n}\n","import type { IElement } from './element.model.interface'\n\nexport interface IElementGraph {\n  edges: Array<{\n    order?: number\n    source: string\n    target: string\n  }>\n  vertices: Array<IElement>\n}\n","export * from './element-tree.model'\nexport * from './element-tree.ref'\n","import { computed } from 'mobx'\nimport {\n  idProp,\n  Model,\n  model,\n  modelAction,\n  prop,\n  Ref,\n  walkTree,\n  WalkTreeMode,\n} from 'mobx-keystone'\nimport type { IPageNodeRef } from '../../page'\nimport { isElementPageNodeRef } from '../../page'\nimport type { IElement } from '../element.model.interface'\nimport { getElementService } from '../element.service.context'\nimport type { IElementTree } from '../element-tree.interface.model'\n\n/**\n * ElementTree is a mobx store that holds the tree of elements.\n * It is used as a local observable store for a tree of elements.\n * It doesn't handle remote data, use elementService for that\n *\n * ElementTree is just a required data structure for RenderService to work. The end goal is to render elements on a page, so we move this under RenderService\n */\n@model('@codelab/ElementTree')\nexport class ElementTree\n  extends Model({\n    id: idProp,\n    rootElement: prop<Ref<IElement>>().withSetter(),\n  })\n  implements IElementTree\n{\n  /**\n   * All elements within the tree\n   */\n  @computed\n  get elements() {\n    return [\n      this.rootElement.current,\n      ...this.rootElement.current.descendantElements,\n    ]\n  }\n\n  @computed\n  get elementService() {\n    return getElementService(this)\n  }\n\n  element(id: string) {\n    return this.elements.find((element) => element.id === id)\n  }\n\n  /**\n   * Get all descendant elements of current subRoot\n   */\n  @modelAction\n  descendants(subRoot: Ref<IElement>) {\n    const descendants: Array<IElement> = []\n\n    walkTree(\n      subRoot,\n      (node) => {\n        descendants.push(node as IElement)\n      },\n      // Walks from root to children\n      WalkTreeMode.ParentFirst,\n    )\n\n    return descendants\n  }\n\n  getPathFromRoot(selectedElement: IPageNodeRef): Array<string> {\n    const path = []\n\n    if (!isElementPageNodeRef(selectedElement)) {\n      return [selectedElement.current.id]\n    }\n\n    let currentElement = selectedElement.maybeCurrent\n\n    while (currentElement) {\n      path.push(currentElement.id)\n      currentElement = currentElement.parent?.current\n    }\n\n    return path.reverse()\n  }\n}\n","export * from './page.dto.interface'\nexport * from './page.model.interface'\nexport * from './page.ref'\nexport * from './page.repo.interface'\nexport * from './page.service.interface'\n","import type { IOwner, IPageDTO } from '@codelab/shared/abstract/core'\n\n/**\n * IOwnerSchema is required for store api\n */\nexport type ICreatePageData = IOwner &\n  Pick<IPageDTO, 'app' | 'id' | 'kind' | 'name' | 'url'>\n\nexport type IUpdatePageData = Pick<\n  IPageDTO,\n  'app' | 'id' | 'name' | 'pageContentContainer' | 'url'\n>\n","import type {\n  PageCreateInput,\n  PageDeleteInput,\n  PageUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IPageDTO, IPageKind } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullish } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IElement, IElementTree } from '../element'\nimport type { IModel } from '../model.interface'\nimport type { IPropData } from '../prop'\nimport type { IStore } from '../store'\n\nexport interface IPage\n  extends IModel<PageCreateInput, PageUpdateInput, PageDeleteInput>,\n    IEntity,\n    ICacheService<IPageDTO, IPage>,\n    IElementTree {\n  app: IEntity\n  // elementTree: IElementTree\n  // Helper getter to get all elements\n  elements: Array<IElement>\n  kind: IPageKind\n  name: string\n  /**\n   * A pointer to tell us where to render from app\n   */\n  pageContentContainer?: Nullish<Ref<IElement>>\n  rootElement: Ref<IElement>\n  slug: string\n  store: Ref<IStore>\n  toJson: IPropData\n  url: string\n}\n","import isNil from 'lodash/isNil'\nimport type { AnyModel, Ref } from 'mobx-keystone'\nimport { detach, isRefOfType, modelTypeKey, rootRef } from 'mobx-keystone'\nimport type { IComponent } from '../component'\nimport { componentRef } from '../component'\nimport type { IElement } from '../element'\nimport { elementRef } from '../element'\nimport type { IPage } from './page.model.interface'\n\nexport type IPageNodeRef = Ref<IComponent> | Ref<IElement>\n\nexport type IPageNode = IComponent | IElement\n\n/**\n * Used for determining the type of a page node\n */\nexport const isComponentPageNodeRef = (\n  node: IPageNodeRef | null,\n): node is Ref<IComponent> => {\n  return !isNil(node) && isRefOfType(node, componentRef)\n}\n\nexport const isComponentPageNode = (\n  node: IPageNode | null,\n): node is IComponent => {\n  return (\n    !isNil(node) &&\n    // `IComponent` is mobx model type\n    (node as unknown as AnyModel)[modelTypeKey] === '@codelab/Component'\n  )\n}\n\n/**\n * Used for determining the type of a page node\n */\nexport const isElementPageNodeRef = (\n  node: IPageNodeRef | null,\n): node is Ref<IElement> => {\n  return !isNil(node) && isRefOfType(node, elementRef)\n}\n\nexport const isElementPageNode = (node: IPageNode | null): node is IElement => {\n  return (\n    !isNil(node) &&\n    // `IComponent` is mobx model type\n    (node as unknown as AnyModel)[modelTypeKey] === '@codelab/Element'\n  )\n}\n\nexport const pageRef = rootRef<IPage>('@codelab/PageRef', {\n  onResolvedValueChange: (ref, newPage, oldPage) => {\n    if (oldPage && !newPage) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  PageFragment,\n  PageOptions,\n  PageWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IPage } from './page.model.interface'\n\nexport type IPageRepository = IRepository<\n  IPage,\n  PageFragment,\n  PageWhere,\n  PageOptions\n>\n","import type {\n  GetRenderedPageQuery,\n  PageOptions,\n  PageWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IPageDTO } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDFormService,\n  ICRUDModalService,\n  ICRUDService,\n  IQueryService,\n} from '../../service'\nimport type { IApp } from '../app'\nimport type { ICreatePageData, IUpdatePageData } from './page.dto.interface'\nimport type { IPage } from './page.model.interface'\nimport type { IPageRepository } from './page.repo.interface'\n\nexport type IPageAppFragment = Pick<IApp, 'id' | 'name' | 'owner'>\n\nexport interface IPageFactory {\n  addSystemPages(app: IPageAppFragment): Array<IPage>\n}\n\nexport interface IPageService\n  extends ICRUDService<IPage, ICreatePageData, IUpdatePageData>,\n    IQueryService<IPage, PageWhere, PageOptions>,\n    ICRUDModalService<Ref<IPage>, { page: Maybe<IPage> }>,\n    ICRUDFormService<Ref<IPage>, { page: Maybe<IPage> }> {\n  pageFactory: IPageFactory\n  pageRepository: IPageRepository\n  pages: ObjectMap<IPage>\n  pagesList: Array<IPage>\n\n  add(pageDTO: IPageDTO): IPage\n  getRenderedPage(pageId: string): Promise<GetRenderedPageQuery>\n  page(id: string): Maybe<IPage>\n  pagesByApp(appId: string): Array<IPage>\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IElementTree } from '../element-tree.interface.model'\n\nexport const elementTreeRef = rootRef<IElementTree>('@codelab/ElementTreeRef', {\n  onResolvedValueChange: (ref, newType, oldType) => {\n    if (oldType && !newType) {\n      detach(ref)\n    }\n  },\n})\n","import type { Maybe } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { IPageNodeRef } from '../page'\nimport type { IElement } from './element.model.interface'\n\n/**\n * Uses ref's only for the implementation\n *\n * Possibly could use computed tree to drive the elementTree from an original tree\n *\n * This is either a `Page` or a `Component`\n *\n * https://mobx-keystone.js.org/computed-trees\n */\nexport interface IElementTree {\n  elements: Array<IElement>\n  id: string\n  rootElement: Ref<IElement>\n\n  descendants(subRoot: Ref<IElement>): Array<IElement>\n  element(id: string): Maybe<IElement>\n  getPathFromRoot(pageNode: IPageNodeRef): Array<string>\n  setRootElement(elementRef: Ref<IElement>): void\n}\n","import type { Ref } from 'mobx-keystone'\nimport type { IAtom } from '../atom'\nimport type { IComponent } from '../component'\n\nexport type IElementRenderType = Ref<IAtom> | Ref<IComponent>\n","export * from './config'\nexport * from './hook.discriminator'\nexport * from './hook.dto.interface'\nexport * from './hook.interface'\n","export * from './graphql'\nexport * from './hook-config.interface'\nexport * from './page'\nexport * from './pages'\nexport * from './query-config'\nexport * from './query-lambda'\nexport * from './recoil'\nexport * from './router'\n","export * from './graphql-hook-config.interface'\n","import { z } from 'zod'\n\nexport const GraphqlHookConfigSchema = z.object({\n  dataKey: z.string().optional().nullable(),\n  graphqlBody: z.string().min(1),\n  graphqlUrl: z.string().min(1).url(),\n})\n\nexport type IGraphqlHookConfig = z.infer<typeof GraphqlHookConfigSchema>\n","import { z } from 'zod'\nimport type { IGraphqlHookConfig } from './graphql'\nimport { GraphqlHookConfigSchema } from './graphql'\nimport type { IQueryPageHookConfig } from './page'\nimport { QueryPageHookConfigSchema } from './page'\nimport type { IQueryPagesHookConfig } from './pages'\nimport { QueryPagesHookConfigSchema } from './pages'\nimport type { IQueryConfigHookConfig } from './query-config'\nimport { QueryConfigHookConfigSchema } from './query-config'\nimport type { IQueryLambdaHookConfig } from './query-lambda'\nimport { QueryLambdaHookConfigSchema } from './query-lambda'\nimport type { IRecoilStateHookConfig } from './recoil'\nimport { RecoilStateHookConfigSchema } from './recoil'\n\nexport type IHookConfig =\n  | IGraphqlHookConfig\n  | IQueryConfigHookConfig\n  | IQueryLambdaHookConfig\n  | IQueryPageHookConfig\n  | IQueryPagesHookConfig\n  | IRecoilStateHookConfig\n\nexport const HookConfigSchema: z.ZodSchema<IHookConfig> = z.union([\n  GraphqlHookConfigSchema,\n  QueryConfigHookConfigSchema,\n  QueryPageHookConfigSchema,\n  QueryPagesHookConfigSchema,\n  RecoilStateHookConfigSchema,\n  QueryLambdaHookConfigSchema,\n])\n","export * from './query-page-hook-config.interface'\n","import { z } from 'zod'\n\nexport const QueryPageHookConfigSchema = z.object({\n  pageId: z.string().min(1),\n})\n\nexport type IQueryPageHookConfig = z.infer<typeof QueryPageHookConfigSchema>\n","export * from './query-pages-hook-config.interface'\n","import { z } from 'zod'\n\n// export interface IQueryPagesHookConfig {\n//   __typename: 'QueryPagesHookConfig'\n//   appId: string\n// }\n\nexport const QueryPagesHookConfigSchema = z.object({\n  appId: z.string().min(1),\n})\n\nexport type IQueryPagesHookConfig = z.infer<typeof QueryPagesHookConfigSchema>\n","export * from './query-config-hook.interface'\nexport * from './query-method.enum'\n","import { z } from 'zod'\nimport { QueryMethod } from './query-method.enum'\n\n// export interface IQueryHookConfig {\n//   __typename: 'QueryHookConfig'\n//   queryKey: string\n//   url?: string\n//   body?: string\n//   method?: QueryMethod\n//   lambdaId?: string\n// }\n\n/**\n * Either a lambdaId, or url/body/method are required\n *\n * Use simple type so we can implement\n */\nexport const QueryConfigHookConfigSchema = z.object({\n  body: z.string().optional().nullable(),\n  method: z.nativeEnum(QueryMethod).optional().nullable(),\n  queryKey: z.string().min(1),\n  url: z.string().url().optional().nullable(),\n})\n// z\n//   .object({\n//     queryKey: z.string().min(1),\n//   })\n//   .and(\n//     z\n//       .object({\n//         lambdaid: z.string().nullish(),\n//       })\n//       .or(\n//         z.object({\n//           url: z.string().url(),\n//           body: z.string().optional(),\n//           method: z.nativeEnum(QueryMethod),\n//         }),\n//       ),\n//   )\n\nexport type IQueryConfigHookConfig = z.infer<typeof QueryConfigHookConfigSchema>\n","export enum QueryMethod {\n  Delete = 'Delete',\n  Get = 'Get',\n  Head = 'Head',\n  Link = 'Link',\n  Options = 'Options',\n  Patch = 'Patch',\n  Post = 'Post',\n  Purge = 'Purge',\n  Put = 'Put',\n  Unlink = 'Unlink',\n}\n","export * from './query-lambda-hook-interface'\n","import { z } from 'zod'\n\nexport const QueryLambdaHookConfigSchema = z.object({\n  lambdaId: z.string(),\n  queryKey: z.string().min(1),\n})\n\nexport type IQueryLambdaHookConfig = z.infer<typeof QueryLambdaHookConfigSchema>\n","export * from './persistence-type.enum'\nexport * from './recoil-state-hook-config.interface'\n","export enum PersistenceType {\n  LocalStorage = 'LocalStorage',\n  NotPersisted = 'NotPersisted',\n  SessionStorage = 'SessionStorage',\n}\n","import { z } from 'zod'\nimport { PersistenceType } from './persistence-type.enum'\n\n// export interface IRecoilStateHookConfig {\n//   __typename: 'RecoilStateHookConfig'\n//   stateKey: string\n//   defaultValue?: string\n//   persisted: PersistenceType\n// }\n\nexport const RecoilStateHookConfigSchema = z.object({\n  defaultValue: z.string().optional().nullable(),\n  persisted: z.nativeEnum(PersistenceType),\n  stateKey: z.string().min(1),\n})\n\nexport type IRecoilStateHookConfig = z.infer<typeof RecoilStateHookConfigSchema>\n","export * from './router-hook-config.interface'\n","import { z } from 'zod'\n\nexport const RouterConfigSchema = z.object({})\n\nexport type IRouterHookConfig = z.infer<typeof RouterConfigSchema>\n","/**\n * Used as __typename to discriminate between types\n */\nexport enum HookDiscriminator {\n  GraphqlHookConfig = 'GraphqlHookConfig',\n  QueryHookConfig = 'QueryHookConfig',\n  QueryPageHookConfig = 'QueryPageHookConfig',\n  QueryPagesHookConfig = 'QueryPagesHookConfig',\n  RecoilStateHookConfig = 'RecoilStateHookConfig',\n  RouterHookConfig = 'RouterHookConfig',\n}\n","import type { HookFragment } from './hook.fragment.graphql.gen'\n\nexport type IHookDTO = HookFragment\n","import type { IAtomType } from '@codelab/shared/abstract/core'\nimport type { IProp } from '../prop'\n\nexport interface IHook {\n  config: IProp\n  id: string\n  type: IAtomType\n}\n","export * from './lambda.interface'\n","import { z } from 'zod'\n\nexport const LambdaSchema = z.object({\n  body: z.string(),\n  id: z.string().default(''),\n  name: z.string(),\n  ownerId: z.string(),\n})\n\nexport type ILambda = z.infer<typeof LambdaSchema>\n","export * from './prop.data.interface'\nexport * from './prop.model.interface'\nexport * from './prop.ref'\nexport * from './prop.repo.interface'\nexport * from './prop.service.interface'\n","import type { IPropDTO } from '@codelab/shared/abstract/core'\n\nexport type ICreatePropData = IPropDTO\n\nexport type IUpdatePropData = IPropDTO\n","import type {\n  PropCreateInput,\n  PropUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IPropDTO } from '@codelab/shared/abstract/core'\nimport type { Nullable } from '@codelab/shared/abstract/types'\nimport type { Frozen, Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IElement } from '../element'\nimport type { IModel } from '../model.interface'\nimport type { IInterfaceType } from '../type'\n\nexport interface IProp\n  extends Omit<IModel<PropCreateInput, PropUpdateInput, void>, 'toDeleteInput'>,\n    ICacheService<IPropDTO, IProp> {\n  api?: Nullable<Ref<IInterfaceType>>\n  data: Frozen<Nullable<IPropData>>\n  id: string\n  jsonString: string\n  values: IPropData\n\n  clone(): IProp\n  delete(key: string): void\n  get(key: string): unknown\n  set(key: string, value: boolean | object | string): void\n  setMany(data: IPropData): void\n  setSilently(key: string, value: object): void\n  toCreateInput(): PropCreateInput\n  toUpdateInput(): PropUpdateInput\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type IPropData = Record<string, any>\n\nexport interface IPropDataByElementId {\n  [id: IElement['id']]: IPropData\n}\n\nexport interface IPropsFieldContext {\n  autocomplete?: IPropData\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IProp } from './prop.model.interface'\n\nexport const propRef = rootRef<IProp>('@codelab/PropRef', {\n  onResolvedValueChange: (ref, newProp, oldProp) => {\n    if (oldProp && !newProp) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  PropFragment,\n  PropOptions,\n  PropWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IProp } from './prop.model.interface'\n\nexport type IPropRepository = IRepository<\n  IProp,\n  PropFragment,\n  PropWhere,\n  PropOptions\n>\n","import type { IPropDTO } from '@codelab/shared/abstract/core'\nimport type { ICRUDService } from '../../service'\nimport type { ICreatePropData, IUpdatePropData } from './prop.data.interface'\nimport type { IProp } from './prop.model.interface'\nimport type { IPropRepository } from './prop.repo.interface'\n\nexport interface IPropService\n  extends ICRUDService<IProp, ICreatePropData, IUpdatePropData> {\n  propRepository: IPropRepository\n  add(propDTO: IPropDTO): IProp\n}\n","export * from './render.interface'\nexport * from './render.service.context'\nexport * from './render.service.interface'\nexport * from './renderer.model.interface'\nexport * from './renderer.ref'\nexport * from './runtime.props.model.interface'\n","import type { IAtomType } from '@codelab/shared/abstract/core'\nimport type { ArrayOrSingle } from 'ts-essentials'\nimport type { IComponentService } from '../component'\nimport type { IElement, IElementService } from '../element'\nimport type { IPropData, IPropDataByElementId } from '../prop'\nimport type { IRenderer } from './renderer.model.interface'\n\nexport enum RendererTab {\n  Component = 'Component',\n  Page = 'Page',\n}\n\n/**\n * This is the intermediate output from rendering a single Element\n */\nexport interface IRenderOutput {\n  atomType?: IAtomType\n  /** This is the element which this RenderOutput was rendered from */\n  element: IElement\n  /** Any props that should get passed to descendants of this element, mapped by id */\n  globalProps?: IPropDataByElementId\n  props?: IPropData\n}\n\nexport interface IBaseRenderPipe {\n  componentService: IComponentService\n  elementService: IElementService\n  id: string\n  renderer: IRenderer\n}\n\nexport interface IRenderPipe extends IBaseRenderPipe {\n  next?: IRenderPipe\n  render(element: IElement, props: IPropData): ArrayOrSingle<IRenderOutput>\n}\n","import { createContext } from 'mobx-keystone'\nimport type { IRenderService } from './render.service.interface'\n\nexport const renderServiceContext = createContext<IRenderService>()\n\nexport const getRenderService = (self: object) => {\n  const renderService = renderServiceContext.get(self)\n\n  if (!renderService) {\n    throw new Error('renderServiceContext is not defined')\n  }\n\n  return renderService\n}\n","import type { Nullable } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type { IBuilderService } from '../builder/builder.service.interface'\nimport type { IElementTree } from '../element'\nimport type { IRenderer, RendererType } from './renderer.model.interface'\n\nexport interface RendererProps {\n  /**\n   * This is the elementTree we are rendering, could be a page tree or a component tree\n   */\n  elementTree: IElementTree\n  // Renderer id, could be page id or component id etc\n  id: string\n  /**\n   * Optional provider tree to wrap the element tree. If we render a page we'll need this provider tree.\n   *\n   * But if we render a component, we don't need it\n   */\n  providerTree?: Nullable<IElementTree>\n  rendererType: RendererType\n  setSelectedNode?: IBuilderService['setSelectedNode']\n}\n\nexport interface IRenderService {\n  activeRenderer: Nullable<Ref<IRenderer>>\n  renderers: ObjectMap<IRenderer>\n  addRenderer(props: RendererProps): IRenderer\n  setActiveRenderer(renderer: Ref<IRenderer>): void\n}\n","import type { Nullable } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type { ReactElement, ReactNode } from 'react'\nimport type { ArrayOrSingle } from 'ts-essentials'\nimport type { IExpressionTransformer } from '../builder'\nimport type { IElement, IElementTree } from '../element'\nimport type { IPageNode, IPageNodeRef } from '../page'\nimport type { IRenderOutput } from './render.interface'\nimport type {\n  IComponentRuntimeProp,\n  IElementRuntimeProp,\n  IRuntimeProp,\n  ITypedPropTransformer,\n} from './runtime.props.model.interface'\n\nexport const enum RendererType {\n  ComponentBuilder = 'component-builder',\n  PageBuilder = 'page-builder',\n  Preview = 'preview',\n}\nexport interface IRenderer {\n  debugMode: boolean\n  elementTree: Ref<IElementTree>\n  expressionTransformer: IExpressionTransformer\n  id: string\n  providerTree: Nullable<Ref<IElementTree>>\n  rendererType: RendererType\n  runtimeProps: ObjectMap<IRuntimeProp<IPageNode>>\n  typedPropTransformers: ObjectMap<ITypedPropTransformer>\n\n  addRuntimeProps(\n    nodeRef: IPageNodeRef,\n  ): IComponentRuntimeProp | IElementRuntimeProp\n  logRendered(element: IElement, rendered: ArrayOrSingle<IRenderOutput>): void\n  renderChildren(parentOutput: IRenderOutput): ArrayOrSingle<ReactNode>\n  renderElement(element: IElement): ReactElement\n  renderIntermediateElement(element: IElement): ArrayOrSingle<IRenderOutput>\n  renderRoot(): ReactElement | null\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IRenderer } from './renderer.model.interface'\n\nexport const getRendererId = (id: string) => `${id}.renderer`\n\nexport const rendererRef = rootRef<IRenderer>('@codelab/RendererRef', {\n  onResolvedValueChange: (ref, newRenderer, oldRenderer) => {\n    if (oldRenderer && !newRenderer) {\n      detach(ref)\n    }\n  },\n})\n","import type { Maybe } from '@graphql-tools/utils'\nimport type { Ref } from 'mobx-keystone'\nimport type { IComponent } from '../component'\nimport type { IElement } from '../element'\nimport type { IPageNode } from '../page'\nimport type { IPropData } from '../prop/prop.model.interface'\nimport type { TypedProp } from '../type'\nimport type { IBaseRenderPipe } from '.'\n\n/**\n * Transforms a typed prop to a specific value\n */\nexport interface ITypedPropTransformer extends IBaseRenderPipe {\n  transform(prop: TypedProp, node: IPageNode): unknown\n}\n\nexport interface IRuntimeProp<T extends IPageNode> {\n  /**\n   * Final output after rendering typedProps\n   */\n  evaluatedProps: IPropData\n  /**\n   * Props after applying `propTransformationJs` and substituting state expression\n   * used for form validation\n   */\n  evaluatedPropsBeforeRender: IPropData\n  /**\n   * Ref for node that holds the props either element or component\n   */\n  nodeRef: Ref<T>\n  /**\n   * Props in initial state before any transformation\n   */\n  props: IPropData\n}\n\nexport type IElementRuntimeProp = IRuntimeProp<IElement>\nexport interface IComponentRuntimeProp extends IRuntimeProp<IComponent> {\n  /**\n   * merge component.props evaluation with instance element props evaluation\n   */\n  componentEvaluatedProps: IPropData\n\n  /**\n   * Runtime props for component instance\n   */\n  instanceElementProps: Maybe<IElementRuntimeProp>\n}\n","export * from './resource.dto.interface'\nexport * from './resource.model.interface'\nexport * from './resource.ref'\nexport * from './resource.repo.interface'\nexport * from './resource.service.interface'\n","import type { IOwner, IResourceType } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\n\nexport interface IBaseResourceConfigData {\n  headers: string\n  url: string\n}\n\nexport interface IResourceDTO extends IOwner {\n  // ref to prop of IResourceConfigData\n  config: IEntity\n  id: string\n  name: string\n  type: IResourceType\n}\n\nexport type ICreateResourceData = Omit<IResourceDTO, 'config'> & {\n  config: IBaseResourceConfigData\n}\n\nexport type IUpdateResourceData = ICreateResourceData\n","import type {\n  ResourceCreateInput,\n  ResourceUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IOwner, IResourceType } from '@codelab/shared/abstract/core'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IModel } from '../model.interface'\nimport type { IProp } from '../prop'\nimport type { IResourceDTO } from './resource.dto.interface'\n\nexport interface IResource\n  extends Omit<\n      IModel<ResourceCreateInput, ResourceUpdateInput, void>,\n      'toDeleteInput'\n    >,\n    ICacheService<IResourceDTO, IResource>,\n    IOwner {\n  // TODO: should add typing to prop\n  config: Ref<IProp>\n  id: string\n  name: string\n  type: IResourceType\n}\n\nexport type IResourceRef = string\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IResource } from './resource.model.interface'\n\nexport const resourceRef = rootRef<IResource>('@codelab/ResourceRef', {\n  onResolvedValueChange: (ref, newResource, oldResource) => {\n    if (oldResource && !newResource) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  ResourceFragment,\n  ResourceOptions,\n  ResourceWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IResource } from './resource.model.interface'\n\nexport type IResourceRepository = IRepository<\n  IResource,\n  ResourceFragment,\n  ResourceWhere,\n  ResourceOptions\n>\n","import type {\n  ResourceOptions,\n  ResourceWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IResourceType } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IEntityModalService,\n  IQueryService,\n} from '../../service'\nimport type {\n  ICreateResourceData,\n  IResourceDTO,\n  IUpdateResourceData,\n} from './resource.dto.interface'\nimport type { IResource, IResourceRef } from './resource.model.interface'\n\nexport interface CreateResourceData {\n  type?: IResourceType\n}\n\nexport interface CreateResourceProperties {\n  type?: IResourceType\n}\nexport interface IResourceService\n  extends ICRUDService<IResource, ICreateResourceData, IUpdateResourceData>,\n    IQueryService<IResource, ResourceWhere, ResourceOptions>,\n    Omit<\n      ICRUDModalService<Ref<IResource>, { resource: Maybe<IResource> }>,\n      'createModal'\n    > {\n  createModal: IEntityModalService<CreateResourceData, { type?: IResourceType }>\n  resourceList: Array<IResource>\n\n  add(resource: IResourceDTO): IResource\n  load(resources: Array<IResourceDTO>): void\n  resource(resource: IResourceRef): Maybe<IResource>\n}\n","export * from './store.data.interface'\nexport * from './store.model.interface'\nexport * from './store.ref'\nexport * from './store.repo.interface'\nexport * from './store.service.interface'\n","import type { IOwner, IStoreDTO } from '@codelab/shared/abstract/core'\n\n// Owner is used for interface creation\nexport type ICreateStoreData = IOwner & IStoreDTO\n\nexport type IUpdateStoreData = IStoreDTO\n","import type {\n  StoreCreateInput,\n  StoreDeleteInput,\n  StoreUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IStoreDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullable } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IAction } from '../action'\nimport type { IComponent } from '../component'\nimport type { IModel } from '../model.interface'\nimport type { IPage } from '../page'\nimport type { IPropData } from '../prop'\nimport type { IInterfaceType } from '../type'\n\nexport interface IStore\n  extends IModel<StoreCreateInput, StoreUpdateInput, StoreDeleteInput>,\n    ICacheService<IStoreDTO, IStore> {\n  actions: Array<Ref<IAction>>\n  api: Ref<IInterfaceType>\n  component: Nullable<Ref<IComponent>>\n  id: string\n  jsonString: string\n  name: string\n  page: Nullable<Ref<IPage>>\n  source: Nullable<IEntity>\n  state: IPropData\n\n  clone(componentId: string): IStore\n  setComponent(componentRef: Ref<IComponent>): void\n}\n\nexport type IStoreRef = string\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IStore } from './store.model.interface'\n\nexport const storeRef = rootRef<IStore>('@codelab/StoreRef', {\n  onResolvedValueChange: (ref, newStore, oldStore) => {\n    if (oldStore && !newStore) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  StoreFragment,\n  StoreOptions,\n  StoreWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { IStore } from './store.model.interface'\n\nexport type IStoreRepository = IRepository<\n  IStore,\n  StoreFragment,\n  StoreWhere,\n  StoreOptions\n>\n","import type {\n  StoreFragment,\n  StoreOptions,\n  StoreWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IStoreDTO } from '@codelab/shared/abstract/core'\nimport type { Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IQueryService,\n} from '../../service'\nimport type { IUpdateStoreData } from './store.data.interface'\nimport type { IStore } from './store.model.interface'\nimport type { IStoreRepository } from './store.repo.interface'\n\nexport interface IStoreService\n  extends ICRUDService<IStore, IStoreDTO, IUpdateStoreData>,\n    IQueryService<IStore, StoreWhere, StoreOptions>,\n    ICRUDModalService<Ref<IStore>, { store: Maybe<IStore> }> {\n  storeRepository: IStoreRepository\n  stores: ObjectMap<IStore>\n\n  add(storeDTO: IStoreDTO): IStore\n  load(stores: Array<StoreFragment>): Array<IStore>\n  store(id: string): Maybe<IStore>\n}\n","export * from './tag.data.interface'\nexport type { TagFragment } from './tag.fragment.graphql.gen'\nexport * from './tag.model.interface'\nexport * from './tag.repo.interface'\nexport * from './tag.service.interface'\nexport * from './tag-tree.service.interface'\n","import type { IOwner } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\n\nexport interface ICreateTagData extends IOwner {\n  id: string\n  name: string\n  parent?: IEntity\n}\n\nexport type IUpdateTagData = Omit<ICreateTagData, 'owner'>\n","import type {\n  TagCreateInput,\n  TagUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAuth0Owner, ITagDTO } from '@codelab/shared/abstract/core'\nimport type { DataNode } from 'antd/lib/tree'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../service'\nimport type { IModel } from '../model.interface'\n\nexport interface ITag\n  extends Omit<IModel<TagCreateInput, TagUpdateInput, void>, 'toDeleteInput'>,\n    ICacheService<ITagDTO, ITag> {\n  antdNode: DataNode\n  children: Array<Ref<ITag>>\n  descendants: Array<Ref<ITag>>\n  id: string\n  isRoot: boolean\n  name: string\n  owner: IAuth0Owner\n}\n\nexport type ITagRef = string\n","import type {\n  TagFragment,\n  TagOptions,\n  TagWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { ITag } from './tag.model.interface'\n\nexport type ITagRepository = IRepository<\n  ITag,\n  TagFragment,\n  TagWhere,\n  TagOptions\n>\n","import type { TagOptions, TagWhere } from '@codelab/shared/abstract/codegen'\nimport type { ITagDTO } from '@codelab/shared/abstract/core'\nimport type { Maybe, Nullish } from '@codelab/shared/abstract/types'\nimport type { LabeledValue } from 'antd/es/select'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IEntityModalService,\n  IQueryService,\n} from '../../service'\nimport type { ICreateTagData, IUpdateTagData } from './tag.data.interface'\nimport type { ITag } from './tag.model.interface'\nimport type { ITagTreeService } from './tag-tree.service.interface'\n\nexport interface ITagService\n  extends Omit<ICRUDService<ITag, ICreateTagData, IUpdateTagData>, 'delete'>,\n    Omit<IQueryService<ITag, TagWhere, TagOptions>, 'getOne'>,\n    Omit<ICRUDModalService<Ref<ITag>, { tag: Maybe<ITag> }>, 'deleteModal'> {\n  checkedTags: Array<Ref<ITag>>\n  deleteManyModal: IEntityModalService<Array<Ref<ITag>>, { tags: Array<ITag> }>\n  selectedOption: LabeledValue\n  tags: ObjectMap<ITag>\n  tagsList: Array<ITag>\n  tagsSelectOptions: Array<LabeledValue>\n  treeService: ITagTreeService\n\n  add(tagDTO: ITagDTO): ITag\n  delete(ids: Array<string>): Promise<number>\n  deleteCheckedTags(): void\n  loadTagTree(): void\n  setCheckedTags(tags: Array<Ref<ITag>>): void\n  setSelectedTag(tag: Nullish<Ref<ITag>>): void\n  tag(id: string): Maybe<ITag>\n}\n","import type { DataNode } from 'antd/lib/tree'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type { ITag } from './tag.model.interface'\n\nexport interface ITagTreeService {\n  antdTreeData: Array<DataNode>\n  roots: ObjectMap<Ref<ITag>>\n\n  addRoots(tags: Array<ITag>): void\n}\n","export * from './field'\nexport * from './field.data.interface'\nexport * from './field.validation'\nexport * from './json-schema/typed-prop.interface'\nexport * from './type.data.interface'\nexport * from './type.input.interface'\nexport * from './type.record.interface'\nexport * from './type.ref'\nexport * from './type.repo.interface'\nexport * from './type.service.interface'\nexport * from './type.where.interface'\nexport * from './types'\n","export * from './field.interface'\nexport * from './field.record.interface'\nexport * from './field.ref'\nexport * from './field.repo.interface'\nexport * from './field.service.interface'\n","import type {\n  FieldCreateInput,\n  FieldDeleteInput,\n  FieldUpdateInput,\n} from '@codelab/shared/abstract/codegen'\nimport type { IFieldDTO } from '@codelab/shared/abstract/core'\nimport type { Nullish } from '@codelab/shared/abstract/types'\nimport type { Ref } from 'mobx-keystone'\nimport type { ICacheService } from '../../../service'\nimport type { IModel } from '../../model.interface'\nimport type { IValidationRules } from '../field.validation'\nimport type { IInterfaceType, IType } from '../types'\n\nexport type IFieldDefaultValue =\n  | Array<IFieldDefaultValue>\n  | boolean\n  | number\n  | string\n  | { [x: string]: IFieldDefaultValue }\nexport interface IField<T extends IType = IType>\n  extends Omit<\n      IModel<FieldCreateInput, FieldUpdateInput, FieldDeleteInput>,\n      'toDeleteInput'\n    >,\n    ICacheService<IFieldDTO, IField> {\n  api: Ref<IInterfaceType>\n  defaultValues: Nullish<IFieldDefaultValue>\n  description: Nullish<string>\n  id: string\n  key: string\n  /**\n   * Allows default to null\n   */\n  name: Nullish<string>\n  nextSibling?: Nullish<Ref<IField>>\n  prevSibling?: Nullish<Ref<IField>>\n  type: Ref<T>\n  validationRules: Nullish<IValidationRules>\n  attachAsNextSibling(sibling: IField): void\n  attachAsPrevSibling(sibling: IField): void\n  changePrev(sibling: IField): void\n  connectPrevToNextSibling(): void\n  detachPrevSibling(): void\n  toUpdateNodesInput(): Pick<FieldUpdateInput, 'nextSibling' | 'prevSibling'>\n}\n\nexport type IFieldRef = string\n","import type { IEntity, Nullish } from '@codelab/shared/abstract/types'\nimport type { ITypeRecord } from '../type.record.interface'\n\nexport interface ValidationRuleTag {\n  key: string\n  value: boolean | number | string\n}\n\nexport interface IFieldRecord {\n  dependentTypes: Array<ITypeRecord>\n  description: Nullish<string>\n  id: string\n  key: string\n  name: Nullish<string>\n  nextSibling?: IEntity | null\n  prevSibling?: IEntity | null\n  type?: {\n    id: string\n    kind: string\n    name: string\n  }\n  validationRules?: Array<ValidationRuleTag>\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IField } from './field.interface'\n\nexport const fieldRef = rootRef<IField>('@codelab/FieldRef', {\n  onResolvedValueChange: (ref, newType, oldType) => {\n    if (oldType && !newType) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  FieldFragment,\n  FieldOptions,\n  FieldWhere,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../../service'\nimport type { IField } from './field.interface'\n\nexport type IFieldRepository = IRepository<\n  IField,\n  FieldFragment,\n  FieldWhere,\n  FieldOptions\n>\n","import type { IFieldDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity, Maybe } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDFormService,\n  ICRUDModalService,\n  ICRUDService,\n  IEntityFormService,\n  IEntityModalService,\n} from '../../../service'\nimport type {\n  ICreateFieldData,\n  IUpdateFieldData,\n} from '../field.data.interface'\nimport type { FieldFragment } from '../fragments'\nimport type { IInterfaceType, IType } from '../types'\nimport type { IField } from './field.interface'\n\nexport interface IFieldService\n  extends Omit<\n      ICRUDService<IField, ICreateFieldData, IUpdateFieldData>,\n      'delete'\n    >,\n    Omit<\n      ICRUDModalService<Ref<IField>, { field: Maybe<IField> }>,\n      'createModal'\n    >,\n    Omit<\n      ICRUDFormService<Ref<IField>, { field: Maybe<IField> }>,\n      'createForm'\n    > {\n  createForm: IEntityFormService<\n    Ref<IInterfaceType>,\n    { interface: Maybe<IInterfaceType> }\n  >\n  createModal: IEntityModalService<\n    Ref<IInterfaceType>,\n    { interface: Maybe<IInterfaceType> }\n  >\n  fields: ObjectMap<IField>\n  add(fieldDTO: IFieldDTO): IField\n  delete(fields: Array<IField>): Promise<number>\n  getField(id: string): Maybe<IField<IType>>\n  load(fields: Array<FieldFragment>): void\n  moveFieldAsNextSibling(props: {\n    field: IEntity\n    targetField: IEntity\n  }): Promise<void>\n  moveFieldAsPrevSibling(props: {\n    field: IEntity\n    targetField: IEntity\n  }): Promise<void>\n}\n","import type { Nullish } from '@codelab/shared/abstract/types'\nimport type { IFieldDefaultValue, IFieldRef } from './field'\nimport type { IValidationRules } from './field.validation'\nimport type { IInterfaceTypeRef, ITypeRef } from './types'\n\nexport interface ICreateFieldData {\n  defaultValues?: Nullish<IFieldDefaultValue>\n  description?: Nullish<string>\n  // Type of field specified by a type id\n  // TODO: Refactor fieldType to take in `{ id: string }`\n  fieldType: ITypeRef\n  id: IFieldRef\n  interfaceTypeId: IInterfaceTypeRef\n  key: string\n  name?: Nullish<string>\n  validationRules?: Nullish<IValidationRules>\n}\n\nexport type IUpdateFieldData = ICreateFieldData\n","import type { PrimitiveTypeKind } from '@codelab/shared/abstract/codegen'\nimport type { Nullish } from '@codelab/shared/abstract/types'\n\nexport enum GeneralValidationRules {\n  Nullable = 'nullable',\n}\n\nexport enum StringValidationRules {\n  MaxLength = 'maxLength',\n  MinLength = 'minLength',\n  Pattern = 'pattern',\n}\n\nexport enum NumberValidationRules {\n  ExclusiveMaximum = 'exclusiveMaximum',\n  ExclusiveMinimum = 'exclusiveMinimum',\n  Maximum = 'maximum',\n  Minimum = 'minimum',\n  MultipleOf = 'multipleOf',\n}\n\nexport interface IGeneralValidationRules {\n  [GeneralValidationRules.Nullable]?: Nullish<boolean>\n}\n\nexport interface IStringValidationRules {\n  [StringValidationRules.MaxLength]?: Nullish<number>\n  [StringValidationRules.MinLength]?: Nullish<number>\n  [StringValidationRules.Pattern]?: Nullish<string>\n}\n\nexport interface INumberValidationRules {\n  [NumberValidationRules.ExclusiveMaximum]?: Nullish<number>\n  [NumberValidationRules.ExclusiveMinimum]?: Nullish<number>\n  [NumberValidationRules.Maximum]?: Nullish<number>\n  [NumberValidationRules.Minimum]?: Nullish<number>\n  [NumberValidationRules.MultipleOf]?: Nullish<number>\n}\n\nexport interface IValidationRules {\n  [PrimitiveTypeKind.Integer]?: Nullish<INumberValidationRules>\n  [PrimitiveTypeKind.Number]?: Nullish<INumberValidationRules>\n  [PrimitiveTypeKind.String]?: Nullish<IStringValidationRules>\n  general?: Nullish<IGeneralValidationRules>\n}\n","import isPlainObject from 'lodash/isPlainObject'\nimport isString from 'lodash/isString'\nimport type { IPropData } from '../../prop'\n\n/**\n * Used to represent a value that has a specific type.\n * Useful for handling the same value in a different way\n * depending on its selected Type.\n *\n * Example: React Node Type and Render Props Type both represent\n * an element id, but they are hydrated in different ways in the render pipeline.\n */\nexport interface TypedProp {\n  type: string\n  value: string\n}\n\nexport const isTypedProp = (prop: IPropData): prop is TypedProp => {\n  return isPlainObject(prop) && 'type' in prop && isString(prop['type'])\n}\n","import type {\n  ICodeMirrorLanguage,\n  IElementTypeKind,\n  IEnumTypeValueDTO,\n  IOwner,\n  IPrimitiveTypeKind,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\n/**\n * This keeps the form easier, and reduce the number of type services. However we get less fine-grained data validation with Zod in the backend during import/export.\n *\n * For the backend, we'll create a type for each sub-type.\n */\nexport interface ICreateTypeData extends IOwner {\n  allowedValues?: Array<IEnumTypeValueDTO>\n  arrayTypeId?: string\n  elementKind?: IElementTypeKind\n  id: string\n  kind: ITypeKind\n  language?: ICodeMirrorLanguage\n  name: string\n  primitiveKind?: IPrimitiveTypeKind\n  unionTypeIds?: Array<string>\n}\n\nexport type IUpdateTypeData = ICreateTypeData\n","import type * as cg from '@codelab/shared/abstract/codegen'\n\nexport interface IUpdateTypeArgs {\n  connect?: IConnectNodeInput\n  delete?: IDeleteTypeInput\n  disconnect?: IDisconnectNodeInput\n  update: IUpdateTypeInput\n  where: ITypeWhere\n}\n\ntype ITypeWhere =\n  | cg.ActionTypeWhere\n  | cg.AppTypeWhere\n  | cg.ArrayTypeWhere\n  | cg.CodeMirrorTypeWhere\n  | cg.ElementTypeWhere\n  | cg.EnumTypeWhere\n  | cg.InterfaceTypeWhere\n  | cg.LambdaTypeWhere\n  | cg.PageTypeWhere\n  | cg.PrimitiveTypeWhere\n  | cg.ReactNodeTypeWhere\n  | cg.RenderPropTypeWhere\n  | cg.UnionTypeWhere\n\nexport type IUpdateTypeVars =\n  | cg.UpdateActionTypesMutationVariables\n  | cg.UpdateAppTypesMutationVariables\n  | cg.UpdateArrayTypesMutationVariables\n  | cg.UpdateCodeMirrorTypesMutationVariables\n  | cg.UpdateElementTypesMutationVariables\n  | cg.UpdateEnumTypesMutationVariables\n  | cg.UpdateInterfaceTypesMutationVariables\n  | cg.UpdateLambdaTypesMutationVariables\n  | cg.UpdatePageTypesMutationVariables\n  | cg.UpdatePrimitiveTypesMutationVariables\n  | cg.UpdateReactNodeTypesMutationVariables\n  | cg.UpdateRenderPropTypesMutationVariables\n  | cg.UpdateUnionTypesMutationVariables\n\nexport type ICreateTypeInput =\n  | cg.ActionTypeCreateInput\n  | cg.AppTypeCreateInput\n  | cg.ArrayTypeCreateInput\n  | cg.CodeMirrorTypeCreateInput\n  | cg.ElementTypeCreateInput\n  | cg.EnumTypeCreateInput\n  | cg.InterfaceTypeCreateInput\n  | cg.LambdaTypeCreateInput\n  | cg.PageTypeCreateInput\n  | cg.PrimitiveTypeCreateInput\n  | cg.ReactNodeTypeCreateInput\n  | cg.RenderPropTypeCreateInput\n  | cg.UnionTypeCreateInput\n\nexport type IUpdateTypeInput =\n  | cg.AppTypeUpdateInput\n  | cg.ArrayTypeUpdateInput\n  | cg.CodeMirrorTypeUpdateInput\n  | cg.ElementTypeUpdateInput\n  | cg.EnumTypeUpdateInput\n  | cg.InterfaceTypeUpdateInput\n  | cg.LambdaTypeUpdateInput\n  | cg.PageTypeUpdateInput\n  | cg.PrimitiveTypeUpdateInput\n  | cg.ReactNodeTypeUpdateInput\n  | cg.RenderPropTypeUpdateInput\n  | cg.UnionTypeUpdateInput\n\n/**\n * Connect\n */\n\nexport type IConnectNodeInput =\n  | cg.AppTypeConnectInput\n  | cg.ArrayTypeConnectInput\n  | cg.CodeMirrorTypeConnectInput\n  | cg.ElementTypeConnectInput\n  | cg.EnumTypeConnectInput\n  | cg.InterfaceTypeConnectInput\n  | cg.LambdaTypeConnectInput\n  | cg.PageTypeConnectInput\n  | cg.PrimitiveTypeConnectInput\n  | cg.ReactNodeTypeConnectInput\n  | cg.RenderPropTypeConnectInput\n  | cg.UnionTypeConnectInput\n\n/**\n * Disconnect\n */\nexport type IDisconnectNodeInput =\n  | cg.AppTypeDisconnectInput\n  | cg.ArrayTypeDisconnectInput\n  | cg.CodeMirrorTypeDisconnectInput\n  | cg.ElementTypeDisconnectInput\n  | cg.EnumTypeDisconnectInput\n  | cg.InterfaceTypeDisconnectInput\n  | cg.LambdaTypeDisconnectInput\n  | cg.PageTypeDisconnectInput\n  | cg.PrimitiveTypeDisconnectInput\n  | cg.ReactNodeTypeDisconnectInput\n  | cg.RenderPropTypeDisconnectInput\n  | cg.UnionTypeDisconnectInput\n\n/**\n * Delete\n */\n\nexport type IDeleteTypeInput =\n  | cg.AppTypeDeleteInput\n  | cg.ArrayTypeDeleteInput\n  | cg.CodeMirrorTypeDeleteInput\n  | cg.ElementTypeDeleteInput\n  | cg.EnumTypeDeleteInput\n  | cg.InterfaceTypeDeleteInput\n  | cg.LambdaTypeDeleteInput\n  | cg.PageTypeDeleteInput\n  | cg.PrimitiveTypeDeleteInput\n  | cg.ReactNodeTypeDeleteInput\n  | cg.RenderPropTypeDeleteInput\n  | cg.UnionTypeDeleteInput\n","import type { ITypeKind } from '@codelab/shared/abstract/core'\n\nexport interface ITypeRecord {\n  id: string\n  kind: ITypeKind\n  name: string\n}\n\nexport interface IUnionTypeRecord {\n  id: string\n  kind: string\n  name: string\n}\n\nexport interface IEnumTypeRecord {\n  id: string\n  key: string\n  value: string\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IType } from './types'\n\nexport const typeRef = rootRef<IType>('@codelab/TypeRef', {\n  onResolvedValueChange: (ref, newType, oldType) => {\n    if (oldType && !newType) {\n      detach(ref)\n    }\n  },\n})\n","import type {\n  BaseTypeOptions,\n  BaseTypeWhere,\n  GetBaseTypesOptions,\n  TypeFragment,\n} from '@codelab/shared/abstract/codegen'\nimport type { IRepository } from '../../service'\nimport type { BaseType_BaseType_Fragment } from './fragments/base-type.fragment.graphql.gen'\nimport type { IType } from './types'\n\nexport type BaseTypesOptions = GetBaseTypesOptions\n\nexport type ITypeRepository = IRepository<\n  IType,\n  TypeFragment,\n  BaseTypeWhere,\n  BaseTypeOptions\n> & {\n  findDescendants(parentIds: Array<string>): Promise<Array<TypeFragment>>\n  findBaseTypes(options: BaseTypesOptions): Promise<{\n    items: Array<BaseType_BaseType_Fragment>\n    totalCount: number\n  }>\n  findOptions(): Promise<\n    Array<Pick<BaseType_BaseType_Fragment, 'id' | 'kind' | 'name'>>\n  >\n}\n","import type {\n  BaseTypeOptions,\n  BaseTypeWhere,\n  GetTypesQuery,\n  IBaseType,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IPrimitiveTypeKind,\n  ITypeDTO,\n} from '@codelab/shared/abstract/core'\nimport type { Maybe, Nullable } from '@codelab/shared/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  ICRUDModalService,\n  ICRUDService,\n  IPaginateable,\n  IQueryService,\n} from '../../service'\nimport type { ICreateTypeData, IUpdateTypeData } from './type.data.interface'\nimport type { ITypeRepository } from './type.repo.interface'\nimport type { IInterfaceType, IInterfaceTypeRef, IType } from './types'\n\nexport interface ITypeService\n  extends ICRUDService<IType, ICreateTypeData, IUpdateTypeData>,\n    Omit<IQueryService<IType, BaseTypeWhere, BaseTypeOptions>, 'getAll'>,\n    ICRUDModalService<Ref<IType>, { type: Maybe<IType> }>,\n    IPaginateable<IType, { name?: string }> {\n  typeRepository: ITypeRepository\n  types: ObjectMap<IType>\n  typesList: Array<IType>\n\n  add(type: ITypeDTO): IType\n  addInterface(data: ICreateTypeData): IInterfaceType\n  getAll(ids?: Array<string>): Promise<Array<IType>>\n  getInterface(id: IInterfaceTypeRef): Promise<IInterfaceType>\n  getOptions(): Promise<Array<Pick<IBaseType, 'id' | 'kind' | 'name'>>>\n  loadTypes(types: Partial<GetTypesQuery>): Array<IType>\n  primitiveKind(id: string): Nullable<IPrimitiveTypeKind>\n  type(id: string): Maybe<IType>\n}\n","import type * as cg from '@codelab/shared/abstract/codegen'\n\nexport type ITypeWhere = cg.ActionTypeWhere &\n  cg.AppTypeWhere &\n  cg.ArrayTypeWhere &\n  cg.CodeMirrorTypeWhere &\n  cg.ElementTypeWhere &\n  cg.EnumTypeWhere &\n  cg.InterfaceTypeWhere &\n  cg.LambdaTypeWhere &\n  cg.PageTypeWhere &\n  cg.PrimitiveTypeWhere &\n  cg.ReactNodeTypeWhere &\n  cg.RenderPropTypeWhere &\n  cg.UnionTypeWhere\n\n//\n// Get\n//\nexport type IAllTypesOptions = cg.AppTypeOptions &\n  cg.ArrayTypeOptions &\n  cg.CodeMirrorTypeOptions &\n  cg.ElementTypeOptions &\n  cg.EnumTypeOptions &\n  cg.InterfaceTypeOptions &\n  cg.LambdaTypeOptions &\n  cg.PageTypeOptions &\n  cg.PrimitiveTypeOptions &\n  cg.ReactNodeTypeOptions &\n  cg.RenderPropTypeOptions &\n  cg.UnionTypeOptions\n","export * from './action-type.interface'\nexport * from './app-type.interface'\nexport * from './array-type.interface'\nexport * from './base-type.interface'\nexport * from './code-mirror-type.interface'\nexport * from './element-type.interface'\nexport * from './enum-type.interface'\nexport * from './interface-type.interface'\nexport * from './lambda-type.interface'\nexport * from './page-type.interface'\nexport * from './primitive-type.interface'\nexport * from './react-node-type.interface'\nexport * from './render-prop-type.interface'\nexport * from './union-type.interface'\n","import type {\n  ActionTypeCreateInput,\n  UpdateActionTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { IActionTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows choosing an action from the list of actions.\n */\nexport interface IActionType\n  extends IBaseType<\n    IActionTypeDTO,\n    ActionTypeCreateInput,\n    UpdateActionTypesMutationVariables\n  > {\n  kind: ITypeKind.ActionType\n}\n","import type {\n  AppTypeCreateInput,\n  UpdateAppTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { IAppTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows choosing an app from the list of apps.\n */\nexport interface IAppType\n  extends IBaseType<\n    IAppTypeDTO,\n    AppTypeCreateInput,\n    UpdateAppTypesMutationVariables\n  > {\n  kind: ITypeKind.AppType\n}\n","import type {\n  ArrayTypeCreateInput,\n  UpdateArrayTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { IArrayTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { Ref } from 'mobx-keystone'\nimport type { IBaseType, IType } from './base-type.interface'\n\n/**\n * Allows defining a variable number of items of a given type.\n *\n * @property itemType - reference to the type of items in the array\n */\nexport interface IArrayType\n  extends IBaseType<\n    IArrayTypeDTO,\n    ArrayTypeCreateInput,\n    UpdateArrayTypesMutationVariables\n  > {\n  itemType?: Ref<IType> | null\n  kind: ITypeKind.ArrayType\n}\n","import type {\n  IBaseTypeDTO,\n  IOwner,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { ICacheService } from '../../../service'\nimport type { IModel } from '../../model.interface'\nimport type { IActionType } from './action-type.interface'\nimport type { IAppType } from './app-type.interface'\nimport type { IArrayType } from './array-type.interface'\nimport type { ICodeMirrorType } from './code-mirror-type.interface'\nimport type { IElementType } from './element-type.interface'\nimport type { IEnumType } from './enum-type.interface'\nimport type { IInterfaceType } from './interface-type.interface'\nimport type { ILambdaType } from './lambda-type.interface'\nimport type { IPageType } from './page-type.interface'\nimport type { IPrimitiveType } from './primitive-type.interface'\nimport type { IReactNodeType } from './react-node-type.interface'\nimport type { IRenderPropType } from './render-prop-type.interface'\nimport type { IUnionType } from './union-type.interface'\n\nexport interface IBaseType<DTO extends IBaseTypeDTO, CreateInput, UpdateInput>\n  extends Omit<IModel<CreateInput, UpdateInput, void>, 'toDeleteInput'>,\n    ICacheService<DTO, IBaseType<DTO, CreateInput, UpdateInput>>,\n    IOwner {\n  id: string\n  kind: ITypeKind\n  name: string\n}\n\nexport type IType =\n  | IActionType\n  | IAppType\n  | IArrayType\n  | ICodeMirrorType\n  | IElementType\n  | IEnumType\n  | IInterfaceType\n  | ILambdaType\n  | IPageType\n  | IPrimitiveType\n  | IReactNodeType\n  | IRenderPropType\n  | IUnionType\n\nexport type ITypeRef = string\n\nexport type ITypeOf<TKind extends ITypeKind> = IType extends {\n  typeKind: TKind\n}\n  ? IType\n  : never\n","import type {\n  CodeMirrorLanguage,\n  CodeMirrorTypeCreateInput,\n  UpdateCodeMirrorTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  ICodeMirrorTypeDTO,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\nexport interface ICodeMirrorType\n  extends IBaseType<\n    ICodeMirrorTypeDTO,\n    CodeMirrorTypeCreateInput,\n    UpdateCodeMirrorTypesMutationVariables\n  > {\n  kind: ITypeKind.CodeMirrorType\n  language: CodeMirrorLanguage\n}\n","import type {\n  ElementTypeCreateInput,\n  UpdateElementTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IElementTypeDTO,\n  IElementTypeKind,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows picking an element from the current tree\n * Is passed to the rendered element as a React node\n *\n * Prop values for this type have the shape of {@see TypedProp} in order to\n * be distinguished from other element types.\n *\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it `(props) => ReactNode` value\n * - ReactNodeType: Component select box, results it `ReactNode` value\n * - ElementType: Current tree element select box, results it `ReactNode` value\n *\n * @property {ElementTypeKind} elementKind Allows scoping the type of element to only descendants, children or all elements\n *\n */\nexport interface IElementType\n  extends IBaseType<\n    IElementTypeDTO,\n    ElementTypeCreateInput,\n    UpdateElementTypesMutationVariables\n  > {\n  elementKind: IElementTypeKind\n  kind: ITypeKind.ElementType\n}\n","import type {\n  EnumTypeCreateInput,\n  UpdateEnumTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { IEnumTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\nexport interface IEnumTypeValue {\n  id: string\n  key: string\n  label: string\n  value: string\n}\n\n/**\n * Allows choosing one of a set of allowed values.\n * The value gets passed to the render pipe as a Enum Type Value id.\n * The actual value must be de-referenced by the id.\n *\n * @property {IEnumTypeValue[]} allowedValues - The list of allowed values.\n */\nexport interface IEnumType\n  extends IBaseType<\n    IEnumTypeDTO,\n    EnumTypeCreateInput,\n    UpdateEnumTypesMutationVariables\n  > {\n  allowedValues: Array<IEnumTypeValue>\n  kind: ITypeKind.EnumType\n}\n","import type {\n  InterfaceTypeCreateInput,\n  UpdateInterfaceTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IInterfaceTypeDTO,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IPropData } from '../../prop'\nimport type { IField } from '../field'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Represent an object type with multiple fields\n *\n * @property fields {@link IField[]} - Fields of the object type\n */\nexport interface IInterfaceType\n  extends IBaseType<\n    IInterfaceTypeDTO,\n    InterfaceTypeCreateInput,\n    UpdateInterfaceTypesMutationVariables\n  > {\n  defaultValues: IPropData\n  fields: Array<IField>\n  kind: ITypeKind.InterfaceType\n}\n\nexport type IInterfaceTypeRef = string\n","import type {\n  LambdaTypeCreateInput,\n  UpdateLambdaTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { ILambdaTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows picking a lambda\n */\nexport interface ILambdaType\n  extends IBaseType<\n    ILambdaTypeDTO,\n    LambdaTypeCreateInput,\n    UpdateLambdaTypesMutationVariables\n  > {\n  kind: ITypeKind.LambdaType\n}\n","import type {\n  PageTypeCreateInput,\n  UpdatePageTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { IPageTypeDTO, ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows picking an existing page from the list of pages.\n */\nexport interface IPageType\n  extends IBaseType<\n    IPageTypeDTO,\n    PageTypeCreateInput,\n    UpdatePageTypesMutationVariables\n  > {\n  kind: ITypeKind.PageType\n}\n","import type {\n  PrimitiveTypeCreateInput,\n  UpdatePrimitiveTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IPrimitiveTypeDTO,\n  IPrimitiveTypeKind,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Base atomic building block of the type system.\n * Represents primitive types - String, Integer, Float, Boolean\n *\n * @property {PrimitiveTypeKind} primitiveKind - concrete primitive kind\n */\nexport interface IPrimitiveType\n  extends IBaseType<\n    IPrimitiveTypeDTO,\n    PrimitiveTypeCreateInput,\n    UpdatePrimitiveTypesMutationVariables\n  > {\n  kind: ITypeKind.PrimitiveType\n  primitiveKind: IPrimitiveTypeKind\n}\n","import type {\n  ReactNodeTypeCreateInput,\n  UpdateReactNodeTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IReactNodeTypeDTO,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Allows picking a Component from the list of components.\n *\n * Prop values for this type have the shape of {@see TypedProp} in order to\n * be distinguished from other element types.\n *\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it `(props) => ReactNode` value\n * - ReactNodeType: Component select box, results it `ReactNode` value\n * - ElementType: Current tree element select box, results it `ReactNode` value\n */\nexport interface IReactNodeType\n  extends IBaseType<\n    IReactNodeTypeDTO,\n    ReactNodeTypeCreateInput,\n    UpdateReactNodeTypesMutationVariables\n  > {\n  kind: ITypeKind.ReactNodeType\n}\n","import type {\n  RenderPropTypeCreateInput,\n  UpdateRenderPropTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type {\n  IRenderPropTypeDTO,\n  ITypeKind,\n} from '@codelab/shared/abstract/core'\nimport type { IBaseType } from './base-type.interface'\n\n/**\n * Prop values for this type have the shape of {@see TypedProp} in order to\n * be distinguished from other element types.\n *\n * Comparison between different element types:\n * - RenderPropType: Component select box, results it `(props) => ReactNode` value\n * - ReactNodeType: Component select box, results it `ReactNode` value\n * - ElementType: Current tree element select box, results it `ReactNode` value\n */\nexport interface IRenderPropType\n  extends IBaseType<\n    IRenderPropTypeDTO,\n    RenderPropTypeCreateInput,\n    UpdateRenderPropTypesMutationVariables\n  > {\n  kind: ITypeKind.RenderPropType\n}\n","import type {\n  UnionTypeCreateInput,\n  UpdateUnionTypesMutationVariables,\n} from '@codelab/shared/abstract/codegen'\nimport type { ITypeKind, IUnionTypeDTO } from '@codelab/shared/abstract/core'\nimport type { Ref } from 'mobx-keystone'\nimport type { IBaseType, IType } from './base-type.interface'\n\nexport interface IUnionType\n  extends IBaseType<\n    IUnionTypeDTO,\n    UnionTypeCreateInput,\n    UpdateUnionTypesMutationVariables\n  > {\n  kind: ITypeKind.UnionType\n  typesOfUnionType: Array<Ref<IType>>\n}\n","export * from './roles'\nexport * from './user.interface'\nexport * from './user.ref'\nexport * from './user.service.context'\nexport * from './user.service.interface'\n","import type { Auth0SessionUser } from '@codelab/shared/abstract/core'\nimport { IRole, JWT_CLAIMS } from '@codelab/shared/abstract/core'\nimport type { Nullish } from '@codelab/shared/abstract/types'\nimport type { IUser } from './user.interface'\n\nexport const isAdmin = (user: Nullish<IUser>): user is IUser & boolean => {\n  return Boolean(user && user.roles.includes(IRole.Admin))\n}\n\nexport const isAdminSession = (session: Auth0SessionUser) => {\n  return session[JWT_CLAIMS].roles.includes(IRole.Admin)\n}\n\nexport const isUser = (user: Nullish<IUser>): user is IUser & boolean => {\n  return Boolean(user && user.roles.includes(IRole.User))\n}\n","import type { IRole } from '@codelab/shared/abstract/core'\n\nexport interface IUser {\n  auth0Id: string\n  id: string\n  roles: Array<IRole>\n  username: string\n\n  setId(id: string): void\n}\n","import { detach, rootRef } from 'mobx-keystone'\nimport type { IUser } from './user.interface'\n\nexport const userRef = rootRef<IUser>('@codelab/UserRef', {\n  onResolvedValueChange: (ref, newUser, oldUser) => {\n    if (oldUser && !newUser) {\n      detach(ref)\n    }\n  },\n})\n","import { createContext } from 'mobx-keystone'\nimport type { IUserService } from './user.service.interface'\n\nexport const userServiceContext = createContext<IUserService>()\n\nexport const getUserService = (self: object) => {\n  const userService = userServiceContext.get(self)\n\n  if (!userService) {\n    throw new Error('userServiceContext is not defined')\n  }\n\n  return userService\n}\n","import type { Nullable } from '@codelab/shared/abstract/types'\nimport type { ObjectMap } from 'mobx-keystone'\nimport type { IUser } from './user.interface'\n\nexport interface IUserService {\n  auth0Id: string\n  user: IUser\n  users: ObjectMap<IUser>\n\n  setUser(user: Nullable<IUser>): void\n}\n","export * from './vercel.service.interface'\n","export interface IVercelService {\n  create(name: string): Promise<unknown>\n  delete(name: string): Promise<unknown>\n  update(oldName: string, name: string): Promise<unknown>\n}\n","export * from './component'\n","/**\n * This is our representation of what kind of ReactComponent to use\n */\n\nimport type { Nullable } from '@codelab/shared/abstract/types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type IComponentType = Nullable<string> | React.ComponentType<any>\n","export * from './params.interface'\n","export const APP_ID = 'appId'\nexport const PAGE_ID = 'pageId'\n\nexport type APP_ID = typeof APP_ID\nexport type PAGE_ID = typeof PAGE_ID\n\nexport interface UrlParams {\n  [APP_ID]: string\n  [PAGE_ID]: string\n}\n\nexport type WithUrlParams<T extends keyof UrlParams> = {\n  [K in T]: string\n}\n","export * from './pagination.service.interface'\nexport * from './repository.interface'\nexport * from './root-store.interface'\nexport * from './service.interface'\n","import type { PageType } from '@codelab/frontend/abstract/types'\nimport type { ObjectMap, Ref } from 'mobx-keystone'\nimport type {\n  IAtom,\n  IAtomService,\n  IComponent,\n  IComponentService,\n  IType,\n  ITypeService,\n} from '../domain'\n\nexport interface Filterables {\n  [x: string]: Array<string> | boolean | number | string | undefined\n}\n\nexport type SupportedPaginationModel = IAtom | IComponent | IType\n\nexport type SupportedPaginationModelPage =\n  | PageType.Atoms\n  | PageType.Components\n  | PageType.Type\n\nexport type SupportedPaginationModelService =\n  | IAtomService\n  | IComponentService\n  | ITypeService\n\nexport interface IPaginationService<\n  T extends SupportedPaginationModel,\n  U extends Filterables | void,\n> {\n  currentPage: number\n  data: Array<T>\n  dataRefs: ObjectMap<Ref<T>>\n  filter: U\n  isLoading: boolean\n  pageSize: number\n  totalItems: number\n\n  getData(): Promise<Array<T>>\n  getDataFn(\n    page: number,\n    pageSize: number,\n    filter: U,\n  ): Promise<{ items: Array<T>; totalItems: number }>\n  setCurrentPage(page: number): void\n  setFilter(filter: U): void\n  setPageSize(size: number): void\n}\n\nexport interface IPaginateable<\n  T extends SupportedPaginationModel,\n  U extends Filterables | void,\n> {\n  paginationService: IPaginationService<T, U>\n}\n","import type { IEntity } from '@codelab/shared/abstract/types'\nimport type { ArrayOrSingle } from 'ts-essentials'\n\n/**\n * We have a repository for the frontend and the backend. The frontend repository should handle nested creates and updates. Since frontend API calls are more costly, we want to be able to update a graph of data in a single call\n *\n * This is not required for backend as we can more easily call the API without delay. Backend just connects the relationships\n *\n * @template Model is our working model's interface\n * @template ModelFragment is the GraphQL fragment return type, we don't actually use this value though. Since we use optimistic update by modifying mobx model cache before calling the API\n * @template Where where clause, at least need to implement ID\n */\nexport interface IRepository<\n  Model extends IEntity,\n  ModelFragment,\n  Where extends { id?: number | string | null },\n  Option extends { limit?: number | null; offset?: number | null },\n> {\n  add(model: Model): Promise<IEntity | undefined>\n  addMany?(models: Array<Model>): Promise<Array<IEntity>>\n  delete(models: ArrayOrSingle<Model>): Promise<number>\n  find(\n    where?: Where,\n    options?: Option,\n  ): Promise<{ items: Array<ModelFragment>; aggregate: { count: number } }>\n  findOne?(where: Where): Promise<ModelFragment | undefined>\n  update(model: Model, where: Where): Promise<IEntity | undefined>\n}\n","import type { IUserDTO } from '@codelab/shared/abstract/core'\nimport type {\n  IActionService,\n  IAdminService,\n  IAppService,\n  IAtomService,\n  IBuilderService,\n  IComponentService,\n  IDomainService,\n  IElementService,\n  IFieldService,\n  IPageService,\n  IPropService,\n  IRenderService,\n  IResourceService,\n  IStoreService,\n  ITagService,\n  ITypeService,\n  IUserService,\n} from '../domain'\n\n/**\n * Initial data to be injected into store\n */\nexport interface RootStoreData {\n  init?: boolean\n  servicesFromSnapshot?: unknown\n  user?: IUserDTO\n}\n\nexport interface IRootStore {\n  actionService: IActionService\n  adminService: IAdminService\n  appService: IAppService\n  atomService: IAtomService\n  builderService: IBuilderService\n  componentService: IComponentService\n  domainService: IDomainService\n  elementService: IElementService\n  fieldService: IFieldService\n  pageService: IPageService\n  propService: IPropService\n  renderService: IRenderService\n  resourceService: IResourceService\n  storeService: IStoreService\n  tagService: ITagService\n  typeService: ITypeService\n  userService: IUserService\n}\n","import type { IEntity, Maybe } from '@codelab/shared/abstract/types'\n\nexport interface ICRUDService<\n  Entity extends IEntity,\n  CreateData,\n  UpdateData extends IEntity,\n> {\n  create(data: CreateData): Promise<Entity>\n  /**\n   * Array<Entity> makes the function more complicated, we can create a separate deleteMany() for services that require it\n   *\n   * We only accept id here, since we delete only on id's\n   */\n  delete(entity: Entity): Promise<Entity>\n  update(data: UpdateData): Promise<Entity>\n}\n\nexport interface ICacheService<CreateDTO, Entity> {\n  /**\n   * Allows an existing model to update its cache\n   */\n  writeCache(data: Partial<CreateDTO>): Entity\n}\n\nexport interface IQueryService<Entity, EntityWhere, EntityOptions> {\n  getAll(where?: EntityWhere, options?: EntityOptions): Promise<Array<Entity>>\n  getOne(id: string): Promise<Maybe<Entity>>\n}\n\nexport interface ICRUDModalService<\n  Metadata = never,\n  Properties extends object = never,\n> {\n  createModal: IEntityModalService\n  deleteModal: IEntityModalService<Metadata, Properties>\n  updateModal: IEntityModalService<Metadata, Properties>\n}\nexport interface ICRUDFormService<\n  Metadata = never,\n  Properties extends object = never,\n> {\n  createForm: IEntityModalService\n  updateForm: IEntityModalService<Metadata, Properties>\n}\n/**\n * Used for base modal, since a class can only implement an object type or intersection of object types with statically known members\n */\nexport interface IModalService<Metadata = never> {\n  isOpen: boolean\n  metadata?: Metadata | null\n\n  close(): void\n  open(...args: Metadata extends never ? [] : [Metadata]): void\n}\n\nexport type IEntityModalService<\n  Metadata = never,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Properties extends object = Record<string, any>,\n> = IModalService<Metadata> & {\n  /**\n   * All properties must be partial, since we don't know whether user has opened (and set) the metadata yet\n   */\n  [K in keyof Properties]?: Properties[K]\n}\n\nexport type IEntityFormService<\n  Metadata = never,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Properties extends object = Record<string, any>,\n> = IModalService<Metadata> & {\n  /**\n   * All properties must be partial, since we don't know whether user has opened (and set) the metadata yet\n   */\n  [K in keyof Properties]?: Properties[K]\n}\n","export * from './nextjs.interface'\nexport * from './tree.interface'\n","import type { Auth0SessionUser } from '@codelab/shared/abstract/core'\nimport type { AppProps } from 'next/app'\nimport type { Overwrite } from 'utility-types'\n\n/**\n * Used by `_app.tsx`\n */\nexport type IAppProps<T = object> = Overwrite<\n  AppProps<T>,\n  {\n    pageProps: T\n  }\n>\n\n/**\n * The `props` used by each page component\n */\nexport interface IPageProps {\n  // storeSnapshot?: SnapshotOutOfModel<any>\n  user?: Auth0SessionUser\n  // data returned by user after running code inside getServerSideProps\n  // getServerSidePropsData?: IPropData\n  // snapshot?: {\n  // rootStore: SnapshotOutOfModel<any>\n  // appService: SnapshotOutOfModel<any>\n  // pageService: SnapshotOutOfModel<any>\n  // atomService: SnapshotOutOfModel<any>\n  // elementService: SnapshotOutOfModel<any>\n  // pageElementTree: SnapshotOutOfModel<any>\n  // builderService: SnapshotOutOfModel<any>\n  // }\n}\n","import type * as React from 'react'\nimport type { IPageNode } from '../domain'\n\nexport interface IElementTreeViewDataNode {\n  children?: Array<IElementTreeViewDataNode>\n  // This is the id\n  key: number | string\n  /**\n   * We require our own node type, this is used for polymorphism.\n   *\n   * - Context menus (different for element vs component)\n   */\n  node: IPageNode | null\n  primaryTitle?: string\n  rootKey: string | null\n  secondaryTitle?: string\n  selectable?: boolean\n  tags?: React.ReactNode\n  title?: string\n  toolbar?: React.ReactNode\n}\n","export const throwIfUndefined = <T>(value: T | undefined) => {\n  if (value === undefined) {\n    throw new Error('Value should not be undefined')\n  }\n\n  /**\n   * Cast away undefined\n   */\n  return value!\n}\n","import type { Nullish } from '@codelab/shared/abstract/types'\n\nexport const tryParse = (str: Nullish<string>) => {\n  try {\n    return JSON.parse(str || '{}')\n  } catch (error) {\n    console.log(error)\n\n    return str\n  }\n}\n","export const tryStringify = (object: unknown) => {\n  try {\n    return JSON.stringify(object || {})\n  } catch (error) {\n    console.log(error)\n\n    return object\n  }\n}\n","export type DeepNonNullable<T> = {\n  [P in keyof T]: T[P] extends Record<string, unknown>\n    ? DeepNonNullable<T[P]>\n    : NonNullable<T[P]>\n}\n\nexport const isNotNull = <T extends Record<string, unknown>>(\n  input: T | null,\n): input is T => {\n  return input !== null\n}\n","import type { Maybe } from '@codelab/shared/abstract/types'\nimport type { Dispatch, SetStateAction } from 'react'\nimport { useEffect, useState } from 'react'\n\nexport const useDebouncedState = <T>(\n  delay: number,\n  initialValue: Maybe<T> = undefined,\n): [T, Dispatch<SetStateAction<T>>] => {\n  // State and setters for debounced value\n  const [value, setValue] = useState<T>(initialValue as T)\n  const [debouncedValue, setDebouncedValue] = useState<T>(initialValue as T)\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    // Only re-call effect if value or delay changes\n    [value, delay],\n  )\n\n  return [debouncedValue, setValue]\n}\n","import type { DependencyList, RefObject } from 'react'\nimport { useCallback, useEffect } from 'react'\n\ntype OnClickHandler = (event: MouseEvent | TouchEvent) => void\n\nexport const useOnClickOutside = (\n  ref: RefObject<HTMLElement>,\n  handler: OnClickHandler,\n  deps: DependencyList,\n) => {\n  // Ensure that the handler won't change each render\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handlerCb = useCallback(handler, deps)\n\n  useEffect(() => {\n    const listener: OnClickHandler = (error) => {\n      if (!ref.current || ref.current.contains(error.target as Node)) {\n        return\n      }\n\n      handlerCb(error)\n    }\n\n    document.addEventListener('mousedown', listener, true)\n    document.addEventListener('touchstart', listener, true)\n\n    return () => {\n      document.removeEventListener('mousedown', listener)\n      document.removeEventListener('touchstart', listener)\n    }\n  }, [ref, handlerCb])\n}\n","// https://usehooks.com/usePrevious/\nimport { useEffect, useRef } from 'react'\n\nexport const usePrevious = <T>(value: T) => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>()\n  // Store current value in ref\n  useEffect(\n    () => {\n      ref.current = value\n    },\n    // Only re-run if value changes\n    [value],\n  )\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n","/**\n * useScroll React custom hook\n * Usage:\n *    const { scrollX, scrollY, scrollDirection } = useScroll();\n * Original Source: https://gist.github.com/joshuacerbito/ea318a6a7ca4336e9fadb9ae5bbb87f4\n */\nimport { isServer } from '@codelab/shared/utils'\nimport { useEffect, useState } from 'react'\n\ninterface SSRRect {\n  bottom: number\n  height: number\n  left: number\n  right: number\n  top: number\n  width: number\n  x: number\n  y: number\n}\n\nconst EmptySSRRect: SSRRect = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n  x: 0,\n  y: 0,\n}\n\nconst useScroll = () => {\n  const [lastScrollTop, setLastScrollTop] = useState<number>(0)\n\n  const [bodyOffset, setBodyOffset] = useState<DOMRect | SSRRect>(\n    isServer ? EmptySSRRect : document.body.getBoundingClientRect(),\n  )\n\n  const [scrollY, setScrollY] = useState<number>(bodyOffset.top)\n  const [scrollX, setScrollX] = useState<number>(bodyOffset.left)\n\n  const [scrollDirection, setScrollDirection] = useState<\n    'down' | 'up' | undefined\n  >()\n\n  const listener = () => {\n    setBodyOffset(\n      isServer ? EmptySSRRect : document.body.getBoundingClientRect(),\n    )\n    setScrollY(-bodyOffset.top)\n    setScrollX(bodyOffset.left)\n    setScrollDirection(lastScrollTop > -bodyOffset.top ? 'down' : 'up')\n    setLastScrollTop(-bodyOffset.top)\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', listener, true)\n\n    return () => {\n      window.removeEventListener('scroll', listener, true)\n    }\n  })\n\n  return {\n    scrollDirection,\n    scrollX,\n    scrollY,\n  }\n}\n\nexport { useScroll }\n","import type { AntDesignApi } from '@codelab/backend/abstract/core'\nimport { AntDesignApiSchema } from '@codelab/backend/abstract/core'\nimport fs from 'fs'\nimport path from 'path'\n\nexport const readAntDesignApis = async (\n  folder: string,\n): Promise<Array<AntDesignApi>> => {\n  const jsonFiles = fs.readdirSync(folder)\n  const apis: Array<AntDesignApi> = []\n\n  for (const file of jsonFiles) {\n    const filePath = path.resolve(folder, file)\n    const fileContent = fs.readFileSync(filePath, 'utf8')\n    const apisData: Array<AntDesignApi> = JSON.parse(fileContent)\n\n    apisData.forEach((data) => AntDesignApiSchema.parse(data))\n\n    apis.push(...apisData)\n  }\n\n  return apis\n}\n","export * from './export/admin.interface'\nexport * from './export/app.interface'\nexport * from './export/component.interface'\nexport * from './export/domain.interface'\nexport * from './export/page.interface'\nexport * from './export/resource.interface'\nexport * from './export/store.interface'\nexport * from './export/type.interface'\nexport * from './export/user.interface'\nexport * from './seed/atom.interface'\nexport * from './seed/field.interface'\nexport * from './seed/tag'\nexport * from './seed/type.interface'\nexport * from './type'\n","import type { ITagDTO } from '@codelab/shared/abstract/core'\nimport type { IAtomExport } from '../seed/atom.interface'\nimport type { IComponentExportData } from './component.interface'\nimport type { ITypesExport } from './type.interface'\n\n/**\n * When we export data, we should keep a file for each atom, this way it makes it easier to look at diff.\n *\n * Each atoms should also contain the interface type within the same file, along with any other referenced types & referenced tags.\n *\n * We should make it such that an atom can only reference types that belong to it. This way we make each atom more isolated.\n *\n * However, we still need to export all tags to a single file, since this contains the tag tree relationship\n *\n * We should also export system types such as primitive to a single file, since these are unchanged.\n */\n\n/**\n * This is the final complete data that is passed into our import function\n */\nexport interface IAdminDataExport {\n  atoms: Array<IAtomExport>\n  components: Array<IComponentExportData>\n  // resources: Array<IResourceExport>\n  systemTypes: ITypesExport\n  tags: Array<ITagDTO>\n}\n","import type { App } from '@codelab/backend/abstract/codegen'\nimport type { IDomainExport } from './domain.interface'\nimport type { IPageExport } from './page.interface'\n\nexport type IAppExport = Pick<App, 'id' | 'name' | 'slug'> & {\n  domains: Array<IDomainExport>\n  pages: Array<IPageExport>\n  // store: IStoreExport\n}\n\nexport interface ExportAppData {\n  app: IAppExport\n}\n","import type { Component, Element } from '@codelab/backend/abstract/codegen'\nimport type { ITypesExport } from './type.interface'\n\nexport type IComponentExport = Component\n\nexport interface IExportComponents {\n  components: Array<Component>\n}\n\n/**\n * This type is used for exporting components individually\n * We need to export the types and descendant elements as well\n */\nexport type IComponentExportData = ITypesExport & {\n  component: Component\n  descendantElements: Array<Element>\n}\n","export interface IDomainExport {\n  app: {\n    id: string\n  }\n  id: string\n  name: string\n}\n","import type { Element, Page } from '@codelab/backend/abstract/codegen'\nimport type { IElementExport } from './element.interface'\n\nexport type IPageExport = Pick<\n  Page,\n  'id' | 'kind' | 'name' | 'pageContentContainer' | 'store' | 'url'\n> & {\n  elements: Array<Element>\n  rootElement: Pick<IElementExport, 'id' | 'name'>\n}\n","import type { Resource } from '@codelab/backend/abstract/codegen'\n\nexport type IResourceExport = Resource\n","import type {\n  ApiAction,\n  CodeAction,\n  Store,\n} from '@codelab/backend/abstract/codegen'\n\nexport type IStoreExport = Omit<Store, 'actions'> & {\n  actions: Array<IActionExport>\n}\n\nexport type IActionExport = ApiAction | CodeAction\n","import type { IFieldDTO, ITypeDTO } from '@codelab/shared/abstract/core'\n\nexport interface ITypesExport {\n  fields: Array<IFieldDTO>\n  types: Array<ITypeDTO>\n}\n","import type { IAppExport } from './app.interface'\nimport type { IComponentExport } from './component.interface'\nimport type { IResourceExport } from './resource.interface'\nimport type { ITypesExport } from './type.interface'\n\nexport type IUserDataExport = ITypesExport & {\n  apps: Array<IAppExport>\n  resources: Array<IResourceExport>\n  components: Array<IComponentExport>\n}\n","import type {\n  IAtomBaseRecords,\n  IAtomDTO,\n  IAtomType,\n  IInterfaceTypeDTO,\n} from '@codelab/shared/abstract/core'\nimport type { ITypesExport } from '../export/type.interface'\n\n/**\n * This is the single file that we export. We'll read all the single files and aggregate them into `IAdminData`\n */\nexport type IAtomExport = ITypesExport & {\n  api: IInterfaceTypeDTO\n  atom: IAtomDTO\n}\n\nexport type IAtomRecords = IAtomBaseRecords<IAtomData>\n\nexport type IAntdAtomRecords = IAtomBaseRecords<IAtomData, 'AntDesign'>\n\nexport type IHtmlAtomRecords = IAtomBaseRecords<IAtomData, 'Html'>\n\nexport type IReactAtomRecords = IAtomBaseRecords<IAtomData, 'React'>\n\nexport interface IAtomData {\n  /**\n   * File name of the CSV file containing the scraped API data for the Ant Design component\n   */\n  file: string | null\n\n  /**\n   * Name of the icon file\n   */\n  icon?: string | null\n  /**\n   * Which atoms are suggested to be used as children\n   */\n  suggestedChildren?: Array<IAtomType>\n  /**\n   * Name of the tag to assign\n   */\n  tag: string\n}\n","import { z } from 'zod'\n\nexport const AntDesignFieldSchema = z.object({\n  defaultValue: z.string(),\n  description: z.string(),\n  property: z.string(),\n  type: z.string(),\n  version: z.string(),\n})\n\nexport type AntDesignField = z.infer<typeof AntDesignFieldSchema>\n\n/**\n * This is field of chatgpt generated data\n */\nexport interface HtmlField {\n  key: string\n  type: string\n}\n","export * from './antd-category-tag.interface'\nexport * from './html-category-tag.interface'\nexport * from './react-category-tag.interface'\nexport * from './tag.interface'\n","/**\n * This is a flat list to have a central place to refer to the label\n */\nexport enum IAntdCategoryTag {\n  AntDesignGeneral = 'AntDesignGeneral',\n  AntDesignTypography = 'AntDesignTypography',\n  AntDesignLayout = 'AntDesignLayout',\n  AntDesignGrid = 'AntDesignGrid',\n  AntDesignNavigation = 'AntDesignNavigation',\n  AntDesignDataEntry = 'Data Entry',\n  AntDesignDataDisplay = 'Data Display',\n  AntDesignFeedback = 'AntDesignFeedback',\n  AntDesignOther = 'AntDesignOther',\n}\n","/**\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories\n *\n * We separate the category tags from the actual HTML for better separation, we can create the relationship in the tree\n */\nexport enum IHtmlCategoryTag {\n  HtmlFlow = 'HtmlFlow',\n  HtmlHeading = 'HtmlHeading',\n  HtmlSectioning = 'HtmlSectioning',\n  HtmlEmbedded = 'HtmlEmbedded',\n  HtmlPhrasing = 'HtmlPhrasing',\n  HtmlInteractive = 'HtmlInteractive',\n  HtmlMetadata = 'HtmlMetadata',\n}\n","export enum IReactCategoryTag {\n  ReactFragment = 'React.Fragment',\n}\n","import type {\n  IAntdAtomRecords,\n  IHtmlAtomRecords,\n  IReactAtomRecords,\n} from '../atom.interface'\nimport type { IAntdCategoryTag } from './antd-category-tag.interface'\nimport type { IHtmlCategoryTag } from './html-category-tag.interface'\nimport type { IReactCategoryTag } from './react-category-tag.interface'\n\n/**\n * This is the node within a tag tree, allows for hierarchical data in json format\n *\n * A `string` allows no children, while an object allows for children\n */\n// export type TagNode<T extends AntdTag | HtmlTag | ReactTag> =\n//   | T\n//   | {\n//       readonly [K in T]: ReadonlyArray<TagNode<T>>\n//     }\n\nexport type AllTags =\n  | IAntdCategoryTag\n  | IHtmlCategoryTag\n  | IReactCategoryTag\n  | keyof IAntdAtomRecords\n  | keyof IHtmlAtomRecords\n  | keyof IReactAtomRecords\n\nexport type TagNode<T extends AllTags = AllTags> =\n  | T\n  | {\n      readonly [K in T]?: ReadonlyArray<TagNode<T>>\n    }\n\n// export type TagNode = string | { [key: string]: Array<TagNode> }\n\n/**\n * This is the flattened node data\n */\nexport interface TagNodeData {\n  children: Array<TagNodeData>\n  name: string\n  parent: string | null\n}\n","import { z } from 'zod'\nimport { AntDesignFieldSchema } from './field.interface'\n\n/**\n * An atom can have more than one api\n */\nexport const AntDesignApiSchema = z.object({\n  /**\n   * This is the AntDesign components\n   */\n  atom: z.object({\n    api: z.string(),\n    name: z.string(),\n  }),\n  fields: z.array(AntDesignFieldSchema),\n})\n\nexport type AntDesignApi = z.infer<typeof AntDesignApiSchema>\n","export * from './type.interface'\n","import type {\n  ActionType,\n  ActionTypeWhere,\n  ArrayType,\n  ArrayTypeWhere,\n  EnumType,\n  EnumTypeWhere,\n  InterfaceType,\n  InterfaceTypeWhere,\n  PrimitiveType,\n  PrimitiveTypeWhere,\n  ReactNodeType,\n  ReactNodeTypeWhere,\n  RenderPropType,\n  RenderPropTypeWhere,\n  UnionType,\n  UnionTypeWhere,\n} from '@codelab/backend/abstract/codegen'\n\nexport type TypeRef = {\n  existingId: string\n} | null\n\nexport type ITypeWhere =\n  | ActionTypeWhere\n  | ArrayTypeWhere\n  | EnumTypeWhere\n  | InterfaceTypeWhere\n  | PrimitiveTypeWhere\n  | ReactNodeTypeWhere\n  | RenderPropTypeWhere\n  | UnionTypeWhere\n\nexport type IType =\n  | ActionType\n  | ArrayType\n  | EnumType\n  | InterfaceType\n  | PrimitiveType\n  | ReactNodeType\n  | RenderPropType\n  | UnionType\n","export * from './extract-html-fields.service'\n","import type { HtmlField } from '@codelab/backend/abstract/core'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport {\n  Field,\n  FieldRepository,\n  TypeFactory,\n} from '@codelab/backend/domain/type'\nimport type { IAtomDTO, IFieldDTO } from '@codelab/shared/abstract/core'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\nimport { readFileSync } from 'fs'\nimport path from 'path'\nimport { v4 } from 'uuid'\nimport { HtmlTypeAdapterService } from '../../type-adapter/html-type-adapter/html-type-adapter.service'\n\nexport type HtmlData = Record<string, Array<HtmlField>>\n\nexport class ExtractHtmlFieldsService extends AuthUseCase<\n  Array<IAtomDTO>,\n  Array<IFieldDTO>\n> {\n  private htmlDataFolder = `${process.cwd()}/data/html/`\n\n  fieldRepository = new FieldRepository()\n\n  async _execute(atoms: Array<IAtomDTO>) {\n    const htmlAttributesByName = JSON.parse(\n      readFileSync(path.resolve(this.htmlDataFolder, 'html.json'), 'utf8'),\n    ) as HtmlData\n\n    return atoms.reduce(async (accFieldsPromise, atom) => {\n      // Convert HtmlA to a\n      const htmlName = atom.name.toLowerCase().replace('html', '')\n      const htmlFields = htmlAttributesByName[htmlName]\n\n      if (!htmlFields) {\n        console.log(htmlName)\n\n        process.exit(0)\n\n        return await accFieldsPromise\n      }\n\n      const fields = await this.transformFields(atom, htmlFields)\n\n      return [...(await accFieldsPromise), ...fields]\n    }, Promise.resolve([] as Array<IFieldDTO>))\n  }\n\n  private async transformFields(atom: IAtomDTO, fields: Array<HtmlField>) {\n    return fields.reduce<Promise<Array<IFieldDTO>>>(\n      async (accFields, field) => {\n        const existingOrNewField = await this.createOrUpdateField(atom, field)\n\n        if (!existingOrNewField) {\n          return [...(await accFields)]\n        }\n\n        return [...(await accFields), existingOrNewField]\n      },\n      Promise.resolve([]),\n    )\n  }\n\n  private async createOrUpdateField(\n    atom: IAtomDTO,\n    field: HtmlField,\n  ): Promise<IFieldDTO | undefined> {\n    const existingField = await this.fieldRepository.findOne({\n      api: {\n        id: atom.api.id,\n      },\n      key: field.key,\n    })\n\n    if (existingField) {\n      return existingField\n    }\n\n    const fieldTypeDTO = await new HtmlTypeAdapterService({\n      atom,\n      field: {\n        key: field.key,\n      },\n      owner: this.owner,\n    }).execute({ type: field.type })\n\n    if (!fieldTypeDTO) {\n      return undefined\n    }\n\n    const type = await TypeFactory.save(\n      {\n        ...fieldTypeDTO,\n        owner: this.owner,\n      },\n      { name: fieldTypeDTO.name },\n    )\n\n    return Field.create({\n      api: { id: atom.api.id },\n      defaultValues: null,\n      description: '',\n      fieldType: type,\n      id: v4(),\n      key: field.key,\n      name: compoundCaseToTitleCase(field.key),\n    })\n  }\n}\n","import { DefaultTypeAdapterService } from '../default-type-adapter/default-type-adapter.service'\n\nexport class HtmlTypeAdapterService extends DefaultTypeAdapterService {\n  //\n}\n","export * from './seed-empty-api.service'\n","import { AuthUseCase } from '@codelab/backend/application/service'\nimport {\n  InterfaceType,\n  InterfaceTypeRepository,\n} from '@codelab/backend/domain/type'\nimport type { IAtomType } from '@codelab/shared/abstract/core'\n\n/**\n * Seed empty API from atom names\n */\nexport class SeedEmptyApiService extends AuthUseCase<Array<IAtomType>, void> {\n  interfaceTypeRepository: InterfaceTypeRepository =\n    new InterfaceTypeRepository()\n\n  /**\n   * Create empty interfaces from Ant Design atom name\n   */\n  async _execute(atoms: Array<IAtomType>) {\n    const existingInterfaceTypes = new Map(\n      (await this.interfaceTypeRepository.find()).map((interfaceType) => [\n        interfaceType.name,\n        interfaceType,\n      ]),\n    )\n\n    await Promise.all(\n      atoms.map(async (name) => {\n        // Want to get atom api y atom name\n        const interfaceType = InterfaceType.createFromAtomName(name, this.owner)\n\n        // Search existing interface type\n        const existingInterfaceType = existingInterfaceTypes.get(\n          interfaceType.name,\n        )\n\n        // Keep same ID if exists\n        if (existingInterfaceType) {\n          interfaceType.id = existingInterfaceType.id\n        }\n\n        await this.interfaceTypeRepository.save({\n          ...interfaceType,\n          owner: this.owner,\n        })\n      }),\n    )\n  }\n}\n","export * from './tag'\n","export * from './antd'\nexport * from './html'\nexport * from './react'\n","export * from './antd-tag-tree.data'\n","import type { IAntdAtomRecords, TagNode } from '@codelab/backend/abstract/core'\nimport { IAntdCategoryTag } from '@codelab/backend/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\n\n/**\n * This contains hierarchical tag data for Ant Design\n */\nexport const antdTagTree: TagNode<IAntdCategoryTag | keyof IAntdAtomRecords> = {\n  [IAntdCategoryTag.AntDesignGeneral]: [\n    IAtomType.AntDesignButton,\n    IAtomType.AntDesignIcon,\n    {\n      [IAntdCategoryTag.AntDesignTypography]: [\n        IAtomType.AntDesignTypographyText,\n        IAtomType.AntDesignTypographyTitle,\n        IAtomType.AntDesignTypographyParagraph,\n      ],\n    },\n  ],\n  [IAntdCategoryTag.AntDesignLayout]: [\n    IAtomType.AntDesignDivider,\n    {\n      [IAntdCategoryTag.AntDesignGrid]: [\n        IAtomType.AntDesignGridRow,\n        IAtomType.AntDesignGridCol,\n      ],\n    },\n    {\n      [IAtomType.AntDesignLayout]: [\n        IAtomType.AntDesignLayoutContent,\n        IAtomType.AntDesignLayoutFooter,\n        IAtomType.AntDesignLayoutHeader,\n        IAtomType.AntDesignLayoutSider,\n      ],\n    },\n    IAtomType.AntDesignSpace,\n  ],\n  [IAntdCategoryTag.AntDesignNavigation]: [\n    IAtomType.AntDesignAffix,\n    {\n      [IAtomType.AntDesignBreadcrumb]: [\n        IAtomType.AntDesignBreadcrumbItem,\n        IAtomType.AntDesignBreadcrumbSeparator,\n      ],\n    },\n    { [IAtomType.AntDesignDropdown]: [IAtomType.AntDesignDropdownButton] },\n    IAtomType.AntDesignMenu,\n    IAtomType.AntDesignPagination,\n    { [IAtomType.AntDesignSteps]: [IAtomType.AntDesignStepsStep] },\n  ],\n  [IAntdCategoryTag.AntDesignDataEntry]: [\n    IAtomType.AntDesignAutoComplete,\n    IAtomType.AntDesignCascader,\n    { [IAtomType.AntDesignCheckbox]: [IAtomType.AntDesignCheckboxGroup] },\n    IAtomType.AntDesignDatePicker,\n    {\n      [IAtomType.AntDesignForm]: [\n        IAtomType.AntDesignFormItem,\n        IAtomType.AntDesignFormList,\n        IAtomType.AntDesignFormErrorList,\n        IAtomType.AntDesignFormProvider,\n      ],\n    },\n    IAtomType.AntDesignInput,\n    IAtomType.AntDesignInputNumber,\n    { [IAtomType.AntDesignMentions]: [IAtomType.AntDesignMentionsOption] },\n    { [IAtomType.AntDesignRadio]: [IAtomType.AntDesignRadioGroup] },\n    IAtomType.AntDesignRate,\n    { [IAtomType.AntDesignSelect]: [IAtomType.AntDesignSelectOption] },\n    IAtomType.AntDesignSlider,\n    IAtomType.AntDesignSwitch,\n    IAtomType.AntDesignTimePicker,\n    IAtomType.AntDesignTransfer,\n    IAtomType.AntDesignTreeSelect,\n    IAtomType.AntDesignUpload,\n  ],\n  [IAntdCategoryTag.AntDesignDataDisplay]: [\n    IAtomType.AntDesignAvatar,\n    IAtomType.AntDesignBadge,\n    IAtomType.AntDesignComment,\n    { [IAtomType.AntDesignCollapse]: [IAtomType.AntDesignCollapsePanel] },\n    IAtomType.AntDesignCarousel,\n    {\n      [IAtomType.AntDesignCard]: [\n        IAtomType.AntDesignCardGrid,\n        IAtomType.AntDesignCardMeta,\n      ],\n    },\n    IAtomType.AntDesignCalendar,\n    {\n      [IAtomType.AntDesignDescriptions]: [IAtomType.AntDesignDescriptionsItem],\n    },\n    IAtomType.AntDesignEmpty,\n    IAtomType.AntDesignImage,\n    {\n      [IAtomType.AntDesignList]: [\n        { [IAtomType.AntDesignListItem]: [IAtomType.AntDesignListItemMeta] },\n      ],\n    },\n    IAtomType.AntDesignPopover,\n    IAtomType.AntDesignSegmented,\n    IAtomType.AntDesignStatistic,\n    IAtomType.AntDesignTree,\n    IAtomType.AntDesignTooltip,\n    { [IAtomType.AntDesignTimeline]: [IAtomType.AntDesignTimelineItem] },\n    IAtomType.AntDesignTag,\n    { [IAtomType.AntDesignTabs]: [IAtomType.AntDesignTabsTabPane] },\n    IAtomType.AntDesignTable,\n  ],\n  [IAntdCategoryTag.AntDesignFeedback]: [\n    IAtomType.AntDesignAlert,\n    IAtomType.AntDesignDrawer,\n    IAtomType.AntDesignModal,\n    IAtomType.AntDesignMessage,\n    IAtomType.AntDesignNotification,\n    IAtomType.AntDesignProgress,\n    IAtomType.AntDesignPopconfirm,\n    IAtomType.AntDesignResult,\n    IAtomType.AntDesignSpin,\n    IAtomType.AntDesignSkeleton,\n  ],\n  [IAntdCategoryTag.AntDesignOther]: [\n    { [IAtomType.AntDesignAnchor]: [IAtomType.AntDesignAnchorLink] },\n    IAtomType.AntDesignBackTop,\n    IAtomType.AntDesignConfigProvider,\n  ],\n}\n","export * from './html-tag-tree.data'\n","import type { IHtmlAtomRecords, TagNode } from '@codelab/backend/abstract/core'\nimport { IHtmlCategoryTag } from '@codelab/backend/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\n\n/**\n * Taken from here https://developer.mozilla.org/en-US/docs/Web/HTML/Content_categories\n */\nexport const htmlTagTree: TagNode<IHtmlCategoryTag | keyof IHtmlAtomRecords> = {\n  [IHtmlCategoryTag.HtmlSectioning]: [\n    IAtomType.HtmlArticle,\n    IAtomType.HtmlAside,\n    IAtomType.HtmlNav,\n    IAtomType.HtmlSection,\n  ],\n  [IHtmlCategoryTag.HtmlHeading]: [\n    IAtomType.HtmlH1,\n    IAtomType.HtmlH2,\n    IAtomType.HtmlH3,\n    IAtomType.HtmlH4,\n    IAtomType.HtmlH5,\n    IAtomType.HtmlH6,\n  ],\n  [IHtmlCategoryTag.HtmlPhrasing]: [\n    IAtomType.HtmlAbbr,\n    IAtomType.HtmlB,\n    IAtomType.HtmlBdo,\n    IAtomType.HtmlBr,\n    IAtomType.HtmlCanvas,\n    IAtomType.HtmlCite,\n    IAtomType.HtmlCode,\n    IAtomType.HtmlData,\n    IAtomType.HtmlDatalist,\n    IAtomType.HtmlDfn,\n    IAtomType.HtmlEm,\n    IAtomType.HtmlEmbed,\n    IAtomType.HtmlI,\n    IAtomType.HtmlIframe,\n    IAtomType.HtmlInput,\n    IAtomType.HtmlKbd,\n    IAtomType.HtmlLabel,\n    IAtomType.HtmlMark,\n    IAtomType.HtmlMath,\n    IAtomType.HtmlMeter,\n    IAtomType.HtmlNoscript,\n    IAtomType.HtmlObject,\n    IAtomType.HtmlOutput,\n    IAtomType.HtmlPicture,\n    IAtomType.HtmlProgress,\n    IAtomType.HtmlQ,\n    IAtomType.HtmlRuby,\n    IAtomType.HtmlS,\n    IAtomType.HtmlSamp,\n    IAtomType.HtmlScript,\n    IAtomType.HtmlSelect,\n    IAtomType.HtmlSmall,\n    IAtomType.HtmlSpan,\n    IAtomType.HtmlStrong,\n    IAtomType.HtmlSub,\n    IAtomType.HtmlSup,\n    IAtomType.HtmlSvg,\n    IAtomType.HtmlTextarea,\n    IAtomType.HtmlTime,\n    IAtomType.HtmlU,\n    IAtomType.HtmlVar,\n    IAtomType.HtmlVideo,\n    IAtomType.HtmlWbr,\n  ],\n  [IHtmlCategoryTag.HtmlEmbedded]: [\n    IAtomType.HtmlAudio,\n    IAtomType.HtmlCanvas,\n    IAtomType.HtmlEmbed,\n    IAtomType.HtmlIframe,\n    IAtomType.HtmlImg,\n    IAtomType.HtmlMath,\n    IAtomType.HtmlObject,\n    IAtomType.HtmlPicture,\n    IAtomType.HtmlSvg,\n    IAtomType.HtmlVideo,\n  ],\n  [IHtmlCategoryTag.HtmlInteractive]: [\n    IAtomType.HtmlA,\n    IAtomType.HtmlButton,\n    IAtomType.HtmlDetails,\n    IAtomType.HtmlEmbed,\n    IAtomType.HtmlIframe,\n    IAtomType.HtmlLabel,\n    IAtomType.HtmlSelect,\n    IAtomType.HtmlTextarea,\n  ],\n  [IHtmlCategoryTag.HtmlMetadata]: [\n    IAtomType.HtmlBase,\n    IAtomType.HtmlHead,\n    IAtomType.HtmlLink,\n    IAtomType.HtmlMeta,\n    IAtomType.HtmlStyle,\n    IAtomType.HtmlTitle,\n  ],\n  // Treat this as `Other`\n  [IHtmlCategoryTag.HtmlFlow]: [\n    IAtomType.HtmlArea,\n    IAtomType.HtmlDl,\n    IAtomType.HtmlDialog,\n    IAtomType.HtmlDiv,\n    IAtomType.HtmlFieldset,\n    IAtomType.HtmlFooter,\n    IAtomType.HtmlForm,\n    IAtomType.HtmlHeader,\n    IAtomType.HtmlHr,\n    IAtomType.HtmlLegend,\n    IAtomType.HtmlLi,\n    IAtomType.HtmlMain,\n    IAtomType.HtmlMap,\n    IAtomType.HtmlOl,\n    IAtomType.HtmlOptgroup,\n    IAtomType.HtmlOption,\n    IAtomType.HtmlP,\n    IAtomType.HtmlPre,\n    IAtomType.HtmlParam,\n    IAtomType.HtmlBlockquote,\n    IAtomType.HtmlSource,\n    IAtomType.HtmlTable,\n    IAtomType.HtmlCaption,\n    IAtomType.HtmlTd,\n    IAtomType.HtmlTh,\n    IAtomType.HtmlTr,\n    IAtomType.HtmlTemplate,\n    IAtomType.HtmlTrack,\n    IAtomType.HtmlUl,\n  ],\n}\n","export * from './react-tag-tree.data'\n","import type { TagNode } from '@codelab/backend/abstract/core'\nimport { IReactCategoryTag } from '@codelab/backend/abstract/core'\n\nexport const reactTagTree: TagNode<IReactCategoryTag> = {\n  [IReactCategoryTag.ReactFragment]: [],\n}\n","export * from './atoms'\n","export * from './antd-atom.data'\nexport * from './atoms.data'\nexport * from './html-atom.data'\nexport * from './react-atom.data'\n","import type { IAntdAtomRecords } from '@codelab/backend/abstract/core'\nimport { IAntdCategoryTag } from '@codelab/backend/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\n\n/**\n * Assign all data that is related to the atom here\n */\n// TODO: remove the partial in key\n// https://www.learn-codes.net/javascript/typescript-typescript-types-key-value-enum/\nexport const antdAtomData: IAntdAtomRecords = {\n  //\n  // Antd:\n  //\n  [IAtomType.AntDesignAffix]: {\n    file: 'Affix',\n    icon: IAtomType.AntDesignAffix,\n    tag: IAtomType.AntDesignAffix,\n  },\n  [IAtomType.AntDesignAlert]: {\n    file: 'Alert--Alert.ErrorBoundary',\n    icon: IAtomType.AntDesignAlert,\n    tag: IAtomType.AntDesignAlert,\n  },\n  [IAtomType.AntDesignAnchor]: {\n    file: 'Anchor--Anchor Props',\n    icon: IAtomType.AntDesignAnchor,\n    tag: IAtomType.AntDesignAnchor,\n  },\n  [IAtomType.AntDesignAnchorLink]: {\n    file: 'Anchor--Link Props',\n    icon: IAtomType.AntDesignAnchorLink,\n    tag: IAtomType.AntDesignAnchorLink,\n  },\n  [IAtomType.AntDesignAvatar]: {\n    file: 'Avatar',\n    icon: IAtomType.AntDesignAvatar,\n    tag: IAtomType.AntDesignAvatar,\n  },\n  // 'Avatar--Avatar.Group (4.5.0+)': IAtomType.AntDesignAvatar,\n  [IAtomType.AntDesignBackTop]: {\n    file: 'BackTop',\n    icon: IAtomType.AntDesignBackTop,\n    tag: IAtomType.AntDesignBackTop,\n  },\n  [IAtomType.AntDesignBadge]: {\n    file: 'Badge',\n    icon: IAtomType.AntDesignBadge,\n    tag: IAtomType.AntDesignBadge,\n  },\n  // 'Badge--Badge.Ribbon (4.5.0+)': IAtomType.AntDesignBadge,\n  [IAtomType.AntDesignBreadcrumb]: {\n    file: 'Breadcrumb',\n    icon: IAtomType.AntDesignBreadcrumb,\n    tag: IAtomType.AntDesignBreadcrumb,\n  },\n  [IAtomType.AntDesignBreadcrumbItem]: {\n    file: 'Breadcrumb--Breadcrumb.Item',\n    icon: IAtomType.AntDesignBreadcrumb,\n    tag: IAtomType.AntDesignBreadcrumbItem,\n  },\n  [IAtomType.AntDesignBreadcrumbSeparator]: {\n    // file: 'Breadcrumb--Breadcrumb.Separator',\n    file: null,\n    icon: IAtomType.AntDesignBreadcrumb,\n    tag: IAtomType.AntDesignBreadcrumbSeparator,\n  },\n  [IAtomType.AntDesignButton]: {\n    file: 'Button',\n    icon: IAtomType.AntDesignButton,\n    tag: IAtomType.AntDesignButton,\n  },\n  [IAtomType.AntDesignCalendar]: {\n    file: 'Calendar',\n    icon: IAtomType.AntDesignCalendar,\n    tag: IAtomType.AntDesignCalendar,\n  },\n  [IAtomType.AntDesignCard]: {\n    file: 'Card',\n    icon: IAtomType.AntDesignCard,\n    tag: IAtomType.AntDesignCard,\n  },\n  [IAtomType.AntDesignCardGrid]: {\n    file: 'Card--Card.Grid',\n    icon: IAtomType.AntDesignCard,\n    tag: IAtomType.AntDesignCardGrid,\n  },\n  [IAtomType.AntDesignCardMeta]: {\n    file: 'Card--Card.Meta',\n    icon: IAtomType.AntDesignCard,\n    tag: IAtomType.AntDesignCardMeta,\n  },\n  [IAtomType.AntDesignAutoComplete]: {\n    file: null,\n    icon: IAtomType.AntDesignAutoComplete,\n    tag: IAtomType.AntDesignAutoComplete,\n  },\n  [IAtomType.AntDesignCascader]: {\n    // file: Cascader--showSearch',\n    file: null,\n    icon: IAtomType.AntDesignCascader,\n    tag: IAtomType.AntDesignCascader,\n  },\n  [IAtomType.AntDesignCheckbox]: {\n    file: 'Checkbox--Props',\n    icon: IAtomType.AntDesignCheckbox,\n    tag: IAtomType.AntDesignCheckbox,\n  },\n  [IAtomType.AntDesignCheckboxGroup]: {\n    file: 'Checkbox--Props',\n    icon: IAtomType.AntDesignCheckbox,\n    tag: IAtomType.AntDesignCheckboxGroup,\n  },\n  [IAtomType.AntDesignCarousel]: {\n    file: null,\n    icon: IAtomType.AntDesignCarousel,\n    tag: IAtomType.AntDesignCarousel,\n  },\n  [IAtomType.AntDesignCollapse]: {\n    file: 'Collapse',\n    icon: IAtomType.AntDesignCollapse,\n    tag: IAtomType.AntDesignCollapse,\n  },\n  [IAtomType.AntDesignCollapsePanel]: {\n    file: 'Collapse--Collapse.Panel',\n    icon: IAtomType.AntDesignCollapse,\n    tag: IAtomType.AntDesignCollapsePanel,\n  },\n  [IAtomType.AntDesignComment]: {\n    file: 'Comment',\n    icon: IAtomType.AntDesignComment,\n    tag: IAtomType.AntDesignComment,\n  },\n  [IAtomType.AntDesignConfigProvider]: {\n    file: 'ConfigProvider',\n    icon: IAtomType.AntDesignConfigProvider,\n    tag: IAtomType.AntDesignConfigProvider,\n  },\n  [IAtomType.AntDesignDatePicker]: {\n    file: 'DatePicker',\n    icon: IAtomType.AntDesignDatePicker,\n    tag: IAtomType.AntDesignDatePicker,\n  },\n  // 'DatePicker--Common API': IAtomType.AntDesignDatePicker,\n  // 'DatePicker--DatePicker[picker=month]': IAtomType.AntDesignDatePicker,\n  // 'DatePicker--DatePicker[picker=quarter]': IAtomType.AntDesignDatePicker,\n  // 'DatePicker--DatePicker[picker=week]': IAtomType.AntDesignDatePicker,\n  // 'DatePicker--DatePicker[picker=year]': IAtomType.AntDesignDatePicker,\n  // 'DatePicker--RangePicker': IAtomType.AntDesignDatePicker,\n  [IAtomType.AntDesignDescriptions]: {\n    file: 'Descriptions',\n    icon: IAtomType.AntDesignDescriptions,\n    tag: IAtomType.AntDesignDescriptions,\n  },\n  [IAtomType.AntDesignDescriptionsItem]: {\n    file: 'Descriptions--DescriptionItem',\n    icon: IAtomType.AntDesignDescriptions,\n    tag: IAtomType.AntDesignDescriptionsItem,\n  },\n  [IAtomType.AntDesignDivider]: {\n    file: 'Divider',\n    icon: IAtomType.AntDesignDivider,\n    tag: IAtomType.AntDesignDivider,\n  },\n  [IAtomType.AntDesignDrawer]: {\n    file: 'Drawer',\n    icon: IAtomType.AntDesignDrawer,\n    tag: IAtomType.AntDesignDrawer,\n  },\n  [IAtomType.AntDesignMessage]: {\n    file: null,\n    icon: IAtomType.AntDesignMessage,\n    tag: IAtomType.AntDesignMessage,\n  },\n  [IAtomType.AntDesignDropdown]: {\n    file: 'Dropdown',\n    icon: IAtomType.AntDesignDropdown,\n    tag: IAtomType.AntDesignDropdown,\n  },\n  [IAtomType.AntDesignDropdownButton]: {\n    // file: 'Dropdown--Dropdown.Button',\n    file: null,\n    icon: IAtomType.AntDesignDropdown,\n    tag: IAtomType.AntDesignDropdown,\n  },\n  [IAtomType.AntDesignEmpty]: {\n    file: 'Empty',\n    icon: IAtomType.AntDesignEmpty,\n    tag: IAtomType.AntDesignEmpty,\n  },\n  [IAtomType.AntDesignForm]: {\n    file: 'Form',\n    icon: IAtomType.AntDesignForm,\n    suggestedChildren: [IAtomType.AntDesignFormItem],\n    tag: IAtomType.AntDesignForm,\n  },\n  [IAtomType.AntDesignFormItem]: {\n    file: 'Form--Item',\n    icon: IAtomType.AntDesignForm,\n    suggestedChildren: [\n      IAtomType.AntDesignInput,\n      IAtomType.AntDesignButton,\n      IAtomType.AntDesignCheckbox,\n      IAtomType.AntDesignRadioGroup,\n    ],\n    tag: IAtomType.AntDesignFormItem,\n  },\n  [IAtomType.AntDesignFormList]: {\n    file: null,\n    icon: IAtomType.AntDesignForm,\n    tag: IAtomType.AntDesignFormList,\n  },\n  [IAtomType.AntDesignFormErrorList]: {\n    file: null,\n    icon: IAtomType.AntDesignForm,\n    tag: IAtomType.AntDesignFormErrorList,\n  },\n  [IAtomType.AntDesignFormProvider]: {\n    file: null,\n    icon: IAtomType.AntDesignForm,\n    tag: IAtomType.AntDesignFormProvider,\n  },\n  // 'Form--FormInstance': IAtomType.AntDesignForm,\n  [IAtomType.AntDesignGridCol]: {\n    file: 'Grid--Col',\n    icon: 'Grid',\n    tag: IAtomType.AntDesignGridCol,\n  },\n  [IAtomType.AntDesignGridRow]: {\n    file: 'Grid--Row',\n    icon: 'Grid',\n    tag: IAtomType.AntDesignGridRow,\n  },\n  [IAtomType.AntDesignIcon]: {\n    file: 'Icon--Common Icon',\n    icon: IAtomType.AntDesignIcon,\n    tag: IAtomType.AntDesignIcon,\n  },\n  // 'Icon--Custom Icon': IAtomType.AntDesignIcon,\n  // Image: IAtomType.AntDesignImage,\n  [IAtomType.AntDesignInput]: {\n    file: 'Input',\n    icon: IAtomType.AntDesignInput,\n    tag: IAtomType.AntDesignInput,\n  },\n  [IAtomType.AntDesignInputNumber]: {\n    file: null,\n    icon: IAtomType.AntDesignInputNumber,\n    tag: IAtomType.AntDesignInputNumber,\n  },\n  // 'Input--Input.TextArea': IAtomType.AntDesignInput,\n  [IAtomType.AntDesignLayout]: {\n    file: 'Layout',\n    icon: IAtomType.AntDesignLayout,\n    tag: IAtomType.AntDesignLayout,\n  },\n  [IAtomType.AntDesignLayoutFooter]: {\n    file: null,\n    icon: IAtomType.AntDesignLayout,\n    tag: IAtomType.AntDesignLayoutFooter,\n  },\n  [IAtomType.AntDesignLayoutHeader]: {\n    file: null,\n    icon: IAtomType.AntDesignLayout,\n    tag: IAtomType.AntDesignLayoutHeader,\n  },\n  [IAtomType.AntDesignLayoutContent]: {\n    file: null,\n    icon: IAtomType.AntDesignLayoutContent,\n    tag: IAtomType.AntDesignLayoutContent,\n  },\n  [IAtomType.AntDesignLayoutSider]: {\n    file: 'Layout--Layout.Sider',\n    icon: IAtomType.AntDesignLayout,\n    tag: IAtomType.AntDesignLayoutSider,\n  },\n  [IAtomType.AntDesignList]: {\n    file: 'List',\n    icon: IAtomType.AntDesignList,\n    tag: IAtomType.AntDesignList,\n  },\n  [IAtomType.AntDesignListItem]: {\n    file: 'List--List.Item',\n    icon: IAtomType.AntDesignList,\n    tag: IAtomType.AntDesignListItem,\n  },\n  [IAtomType.AntDesignListItemMeta]: {\n    file: 'List--List.Item.Meta',\n    icon: IAtomType.AntDesignList,\n    tag: IAtomType.AntDesignListItemMeta,\n  },\n  // 'List--List grid props': IAtomType.AntDesignList,\n  // 'List--pagination': IAtomType.AntDesignList,\n  [IAtomType.AntDesignMentions]: {\n    file: 'Mentions--Mention',\n    icon: IAtomType.AntDesignMentions,\n    tag: IAtomType.AntDesignMentions,\n  },\n  [IAtomType.AntDesignMentionsOption]: {\n    file: 'Mentions--Option',\n    icon: IAtomType.AntDesignMentions,\n    tag: IAtomType.AntDesignMentionsOption,\n  },\n  [IAtomType.AntDesignMenu]: {\n    file: 'Menu',\n    icon: IAtomType.AntDesignMenu,\n    tag: IAtomType.AntDesignMenu,\n  },\n  [IAtomType.AntDesignPagination]: {\n    file: 'Pagination',\n    icon: IAtomType.AntDesignPagination,\n    tag: IAtomType.AntDesignPagination,\n  },\n  [IAtomType.AntDesignPopconfirm]: {\n    file: 'Popconfirm',\n    icon: IAtomType.AntDesignPopconfirm,\n    tag: IAtomType.AntDesignPopconfirm,\n  },\n  [IAtomType.AntDesignPopover]: {\n    file: 'Popover',\n    icon: IAtomType.AntDesignPopover,\n    tag: IAtomType.AntDesignPopover,\n  },\n  [IAtomType.AntDesignSegmented]: {\n    file: 'Popover',\n    icon: IAtomType.AntDesignSegmented,\n    tag: IAtomType.AntDesignSegmented,\n  },\n  [IAtomType.AntDesignStatistic]: {\n    file: null,\n    icon: IAtomType.AntDesignStatistic,\n    tag: IAtomType.AntDesignStatistic,\n  },\n  [IAtomType.AntDesignProgress]: {\n    file: 'Progress--type=circle',\n    icon: IAtomType.AntDesignProgress,\n    tag: IAtomType.AntDesignProgress,\n  },\n  [IAtomType.AntDesignRadio]: {\n    file: 'Radio--Radio_Radio.Button',\n    icon: IAtomType.AntDesignRadio,\n    tag: IAtomType.AntDesignRadio,\n  },\n  [IAtomType.AntDesignRadioGroup]: {\n    file: 'Radio--RadioGroup',\n    icon: IAtomType.AntDesignRadio,\n    tag: IAtomType.AntDesignRadioGroup,\n  },\n  [IAtomType.AntDesignRate]: {\n    file: null,\n    icon: IAtomType.AntDesignRate,\n    tag: IAtomType.AntDesignRate,\n  },\n  [IAtomType.AntDesignResult]: {\n    file: 'Result',\n    icon: IAtomType.AntDesignResult,\n    tag: IAtomType.AntDesignResult,\n  },\n  // 'Select--OptGroup props': IAtomType.AntDesignSelect,\n  [IAtomType.AntDesignSelect]: {\n    file: 'Select--Select props',\n    icon: IAtomType.AntDesignSelect,\n    tag: IAtomType.AntDesignSelect,\n  },\n  [IAtomType.AntDesignSelectOption]: {\n    file: 'Select--Option props',\n    icon: IAtomType.AntDesignSelect,\n    tag: IAtomType.AntDesignSelectOption,\n  },\n  [IAtomType.AntDesignSkeleton]: {\n    file: 'Skeleton',\n    icon: IAtomType.AntDesignSkeleton,\n    tag: IAtomType.AntDesignSkeleton,\n  },\n  [IAtomType.AntDesignSlider]: {\n    file: 'Slider--range',\n    icon: IAtomType.AntDesignSlider,\n    tag: IAtomType.AntDesignSlider,\n  },\n  [IAtomType.AntDesignSwitch]: {\n    file: null,\n    icon: IAtomType.AntDesignSwitch,\n    tag: IAtomType.AntDesignSwitch,\n  },\n  [IAtomType.AntDesignTimePicker]: {\n    file: null,\n    icon: IAtomType.AntDesignTimePicker,\n    tag: IAtomType.AntDesignTimePicker,\n  },\n  [IAtomType.AntDesignTransfer]: {\n    file: null,\n    icon: IAtomType.AntDesignTransfer,\n    tag: IAtomType.AntDesignTransfer,\n  },\n  [IAtomType.AntDesignSpace]: {\n    file: 'Space',\n    icon: IAtomType.AntDesignSpace,\n    tag: IAtomType.AntDesignSpace,\n  },\n  [IAtomType.AntDesignSpin]: {\n    file: 'Spin',\n    icon: IAtomType.AntDesignSpin,\n    tag: IAtomType.AntDesignSpin,\n  },\n  [IAtomType.AntDesignSteps]: {\n    file: 'Steps',\n    icon: IAtomType.AntDesignSteps,\n    tag: IAtomType.AntDesignSteps,\n  },\n  [IAtomType.AntDesignStepsStep]: {\n    file: 'Steps--Steps.Step',\n    icon: IAtomType.AntDesignSteps,\n    tag: IAtomType.AntDesignStepsStep,\n  },\n  [IAtomType.AntDesignTable]: {\n    file: 'Table',\n    icon: IAtomType.AntDesignTable,\n    tag: IAtomType.AntDesignTable,\n  },\n  // 'Table--Column': IAtomType.AntDesignTable,\n  // 'Table--ColumnGroup': IAtomType.AntDesignTable,\n  // 'Table--expandable': IAtomType.AntDesignTable,\n  // 'Table--pagination': IAtomType.AntDesignTable,\n  // 'Table--rowSelection': IAtomType.AntDesignTable,\n  // 'Table--scroll': IAtomType.AntDesignTable,\n  // 'Table--selection': IAtomType.AntDesignTable,\n  [IAtomType.AntDesignTabs]: {\n    file: 'Tabs',\n    icon: IAtomType.AntDesignTabs,\n    tag: IAtomType.AntDesignTabs,\n  },\n  [IAtomType.AntDesignTabsTabPane]: {\n    file: 'Tabs--Tabs.TabPane',\n    icon: IAtomType.AntDesignTabs,\n    tag: IAtomType.AntDesignTabsTabPane,\n  },\n  [IAtomType.AntDesignTag]: {\n    file: 'Tag',\n    icon: IAtomType.AntDesignTag,\n    tag: IAtomType.AntDesignTag,\n  },\n  // 'Tag--Tag.CheckableTag': IAtomType.AntDesignTag,\n  [IAtomType.AntDesignTimeline]: {\n    file: 'Timeline',\n    icon: IAtomType.AntDesignTimeline,\n    tag: IAtomType.AntDesignTimeline,\n  },\n  [IAtomType.AntDesignTimelineItem]: {\n    file: 'Timeline--Timeline.Item',\n    icon: IAtomType.AntDesignTimeline,\n    tag: IAtomType.AntDesignTimelineItem,\n  },\n  // 'TimePicker--RangePicker': IAtomType.AntDesignTimePicker,\n  [IAtomType.AntDesignTooltip]: {\n    file: 'Tooltip--Common API',\n    icon: IAtomType.AntDesignTooltip,\n    tag: IAtomType.AntDesignTooltip,\n  },\n  // 'Transfer--Render Props': IAtomType.AntDesignTransfer,\n  // 'Tree--DirectoryTree props': IAtomType.AntDesignTree,\n  [IAtomType.AntDesignTree]: {\n    file: 'Tree--Tree props',\n    icon: IAtomType.AntDesignTree,\n    tag: IAtomType.AntDesignTree,\n  },\n  [IAtomType.AntDesignTreeSelect]: {\n    file: 'TreeSelect--Tree props',\n    icon: IAtomType.AntDesignTreeSelect,\n    tag: IAtomType.AntDesignTreeSelect,\n  },\n  // 'Typography--copyable': IAtomType.AntDesignTypography,\n  // 'Typography--editable': IAtomType.AntDesignTypography,\n  // 'Typography--ellipsis': IAtomType.AntDesignTypography,\n  [IAtomType.AntDesignTypographyParagraph]: {\n    file: 'Typography--Typography.Paragraph',\n    icon: IAntdCategoryTag.AntDesignTypography,\n    tag: IAtomType.AntDesignTypographyParagraph,\n  },\n  [IAtomType.AntDesignTypographyText]: {\n    file: 'Typography--Typography.Text',\n    icon: IAntdCategoryTag.AntDesignTypography,\n    tag: IAtomType.AntDesignTypographyText,\n  },\n  [IAtomType.AntDesignTypographyTitle]: {\n    file: 'Typography--Typography.Title',\n    icon: IAntdCategoryTag.AntDesignTypography,\n    tag: IAtomType.AntDesignTypographyText,\n  },\n  [IAtomType.AntDesignUpload]: {\n    file: 'Upload--UploadFile',\n    icon: IAtomType.AntDesignUpload,\n    tag: IAtomType.AntDesignUpload,\n  },\n  [IAtomType.AntDesignImage]: {\n    file: 'Image',\n    icon: IAtomType.AntDesignImage,\n    tag: IAtomType.AntDesignImage,\n  },\n  [IAtomType.AntDesignModal]: {\n    file: 'Modal',\n    icon: IAtomType.AntDesignModal,\n    tag: IAtomType.AntDesignModal,\n  },\n  [IAtomType.AntDesignNotification]: {\n    file: null,\n    icon: IAtomType.AntDesignNotification,\n    tag: IAtomType.AntDesignNotification,\n  },\n\n  //\n  // Custom components:\n  //\n  // [IAtomType.Query]: {\n  //   file: 'Query',\n  //   tag: null,\n  //   icon: null,\n  // },\n  // [IAtomType.TextList]: {\n  //   file: 'TextList',\n  //   tag: null,\n  //   icon: null,\n  // },\n  // [IAtomType.Text]: {\n  //   file: 'Text',\n  //   tag: null,\n  //   icon: null,\n  // },\n  // [IAtomType.State]: {\n  //   file: 'State',\n  //   tag: null,\n  //   icon: null,\n  // },\n}\n","import { antdAtomData } from './antd-atom.data'\nimport { htmlAtomData } from './html-atom.data'\nimport { reactAtomData } from './react-atom.data'\n\n// Colocate here\nexport const atomsData = { ...htmlAtomData, ...antdAtomData, ...reactAtomData }\n","import type { IHtmlAtomRecords } from '@codelab/backend/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\n\nexport const htmlAtomData: IHtmlAtomRecords = {\n  [IAtomType.HtmlA]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlA,\n  },\n  [IAtomType.HtmlArea]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlArea,\n  },\n  [IAtomType.HtmlAside]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlAside,\n  },\n  [IAtomType.HtmlAudio]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlAudio,\n  },\n  [IAtomType.HtmlBase]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlBase,\n  },\n  [IAtomType.HtmlBr]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlBr,\n  },\n  [IAtomType.HtmlButton]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlButton,\n  },\n  [IAtomType.HtmlCanvas]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlCanvas,\n  },\n  [IAtomType.HtmlCode]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlCode,\n  },\n  [IAtomType.HtmlCol]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlCol,\n  },\n  [IAtomType.HtmlDl]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDl,\n  },\n  [IAtomType.HtmlData]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlData,\n  },\n  [IAtomType.HtmlDatalist]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDatalist,\n  },\n  [IAtomType.HtmlDetails]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDetails,\n  },\n  [IAtomType.HtmlDialog]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDialog,\n  },\n  [IAtomType.HtmlDiv]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDiv,\n  },\n  [IAtomType.HtmlEm]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlEm,\n  },\n  [IAtomType.HtmlEmbed]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlEmbed,\n  },\n  [IAtomType.HtmlFieldset]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlFieldset,\n  },\n  [IAtomType.HtmlFooter]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlFooter,\n  },\n  [IAtomType.HtmlForm]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlForm,\n  },\n  [IAtomType.HtmlH1]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH1,\n  },\n  [IAtomType.HtmlH2]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH2,\n  },\n  [IAtomType.HtmlH3]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH3,\n  },\n  [IAtomType.HtmlH4]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH4,\n  },\n  [IAtomType.HtmlH5]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH5,\n  },\n  [IAtomType.HtmlH6]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlH6,\n  },\n  [IAtomType.HtmlHead]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlHead,\n  },\n  [IAtomType.HtmlHeader]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlHeader,\n  },\n  [IAtomType.HtmlHr]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlHr,\n  },\n  [IAtomType.HtmlI]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlI,\n  },\n  [IAtomType.HtmlIframe]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlIframe,\n  },\n  [IAtomType.HtmlImg]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlImg,\n  },\n  [IAtomType.HtmlInput]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlInput,\n  },\n  [IAtomType.HtmlLabel]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlLabel,\n  },\n  [IAtomType.HtmlLegend]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlLegend,\n  },\n  [IAtomType.HtmlLi]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlLi,\n  },\n  [IAtomType.HtmlLink]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlLink,\n  },\n  [IAtomType.HtmlMain]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMain,\n  },\n  [IAtomType.HtmlMap]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMap,\n  },\n  [IAtomType.HtmlMeta]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMeta,\n  },\n  [IAtomType.HtmlMeter]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMeter,\n  },\n  [IAtomType.HtmlNav]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlNav,\n  },\n  [IAtomType.HtmlOl]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlOl,\n  },\n  [IAtomType.HtmlObject]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlObject,\n  },\n  [IAtomType.HtmlOptgroup]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlOptgroup,\n  },\n  [IAtomType.HtmlOption]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlOption,\n  },\n  [IAtomType.HtmlOutput]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlOutput,\n  },\n  [IAtomType.HtmlP]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlP,\n  },\n  [IAtomType.HtmlParam]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlParam,\n  },\n  [IAtomType.HtmlPicture]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlPicture,\n  },\n  [IAtomType.HtmlPre]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlPre,\n  },\n  [IAtomType.HtmlProgress]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlProgress,\n  },\n  [IAtomType.HtmlBlockquote]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlBlockquote,\n  },\n  [IAtomType.HtmlS]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlS,\n  },\n  [IAtomType.HtmlSection]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSection,\n  },\n  [IAtomType.HtmlSelect]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSelect,\n  },\n  [IAtomType.HtmlSmall]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSmall,\n  },\n  [IAtomType.HtmlSource]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSource,\n  },\n  [IAtomType.HtmlSpan]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSpan,\n  },\n  [IAtomType.HtmlStrong]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlStrong,\n  },\n  [IAtomType.HtmlStyle]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlStyle,\n  },\n  [IAtomType.HtmlSub]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSub,\n  },\n  [IAtomType.HtmlSup]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSup,\n  },\n  [IAtomType.HtmlTable]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTable,\n  },\n  [IAtomType.HtmlCaption]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlCaption,\n  },\n  [IAtomType.HtmlTd]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTd,\n  },\n  [IAtomType.HtmlTh]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTh,\n  },\n  [IAtomType.HtmlTr]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTr,\n  },\n  [IAtomType.HtmlTemplate]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTemplate,\n  },\n  [IAtomType.HtmlTextarea]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTextarea,\n  },\n  [IAtomType.HtmlTime]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTime,\n  },\n  [IAtomType.HtmlTitle]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTitle,\n  },\n  [IAtomType.HtmlTrack]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlTrack,\n  },\n  [IAtomType.HtmlUl]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlUl,\n  },\n  [IAtomType.HtmlVideo]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlVideo,\n  },\n  [IAtomType.HtmlAbbr]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlAbbr,\n  },\n  [IAtomType.HtmlArticle]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlArticle,\n  },\n  [IAtomType.HtmlB]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlB,\n  },\n  [IAtomType.HtmlBdo]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlBdo,\n  },\n  [IAtomType.HtmlCite]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlCite,\n  },\n  [IAtomType.HtmlDfn]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlDfn,\n  },\n  [IAtomType.HtmlKbd]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlKbd,\n  },\n  [IAtomType.HtmlMark]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMark,\n  },\n  [IAtomType.HtmlMath]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlMath,\n  },\n  [IAtomType.HtmlNoscript]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlNoscript,\n  },\n  [IAtomType.HtmlQ]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlQ,\n  },\n  [IAtomType.HtmlRuby]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlRuby,\n  },\n  [IAtomType.HtmlSamp]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSamp,\n  },\n  [IAtomType.HtmlScript]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlScript,\n  },\n  [IAtomType.HtmlSvg]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlSvg,\n  },\n  [IAtomType.HtmlU]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlU,\n  },\n  [IAtomType.HtmlVar]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlVar,\n  },\n  [IAtomType.HtmlWbr]: {\n    file: null,\n    icon: null,\n    tag: IAtomType.HtmlWbr,\n  },\n}\n","import type { IReactAtomRecords } from '@codelab/backend/abstract/core'\nimport { IReactCategoryTag } from '@codelab/backend/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\n\n/**\n * Assign all data that is related to react atoms here\n */\nexport const reactAtomData: IReactAtomRecords = {\n  [IAtomType.ReactFragment]: {\n    file: 'ReactFragment',\n    tag: IReactCategoryTag.ReactFragment,\n  },\n}\n","export * from './export-admin-data.service'\nexport * from './import-admin-data'\nexport * from './scrape'\nexport * from './seed-framework'\n","import type { ComponentWhere } from '@codelab/backend/abstract/codegen'\nimport type {\n  IAdminDataExport,\n  IComponentExportData,\n} from '@codelab/backend/abstract/core'\nimport { exportAtoms } from '@codelab/backend/application/atom'\nimport { exportComponents } from '@codelab/backend/application/component'\nimport { UseCase } from '@codelab/backend/application/service'\nimport { exportTags } from '@codelab/backend/application/tag'\nimport {\n  exportAdminTypes,\n  exportAtomApis,\n  exportSystemTypes,\n} from '@codelab/backend/application/type'\nimport { saveFormattedFile } from '@codelab/backend/shared/util'\nimport type { IInterfaceTypeDTO } from '@codelab/shared/abstract/core'\nimport filter from 'lodash/filter'\nimport find from 'lodash/find'\nimport path from 'path'\nimport { DataPaths } from '../data-paths'\n\n/**\n * This service should save the files as well, since admin data is all located in the same location\n */\nexport class ExportAdminDataService extends UseCase<\n  void,\n  ExportAdminDataService\n> {\n  dataPaths: DataPaths\n\n  private declare exportData: IAdminDataExport\n\n  constructor(\n    // Allow base directory override for testing purpose\n    DATA_EXPORT_PATH = path.resolve('./data/export'),\n  ) {\n    super()\n    this.dataPaths = new DataPaths(DATA_EXPORT_PATH)\n  }\n\n  async _execute() {\n    const systemTypes = await exportSystemTypes()\n    const atoms = await this.extractAtomsData()\n    const tags = await exportTags()\n    const components = await this.extractComponentsData()\n\n    const exportData = {\n      atoms,\n      components,\n      systemTypes,\n      tags,\n    }\n\n    this.exportData = exportData\n\n    return this\n  }\n\n  getData() {\n    return {\n      atoms: this.exportData.atoms,\n      systemTypes: this.exportData.systemTypes,\n      tags: this.exportData.tags,\n    }\n  }\n\n  /**\n   * Allows us to save to filesystem if we choose to\n   *\n   * (await new ExportAdminDataService().execute()).save()\n   */\n  saveAsFiles() {\n    for (const { api, atom, fields, types } of this.exportData.atoms) {\n      saveFormattedFile(\n        path.resolve(this.dataPaths.ATOMS_PATH, `${atom.name}.json`),\n        {\n          api,\n          atom,\n          fields,\n          types,\n        },\n      )\n    }\n\n    saveFormattedFile(this.dataPaths.TAGS_FILE_PATH, this.exportData.tags)\n\n    saveFormattedFile(\n      this.dataPaths.SYSTEM_TYPES_FILE_PATH,\n      this.exportData.systemTypes,\n    )\n\n    for (const componentData of this.exportData.components) {\n      this.saveComponentAsFile(componentData)\n    }\n\n    return this.getData()\n  }\n\n  private async extractAtomsData() {\n    const atoms = await exportAtoms()\n    const apis = await exportAtomApis()\n\n    return Promise.all(\n      atoms.map(async (atom) => {\n        /**\n         * Get the interface by id\n         */\n        const api = find(apis.types, { id: atom.api.id }) as\n          | IInterfaceTypeDTO\n          | undefined\n\n        const apiFields = filter(apis.fields, { api: { id: atom.api.id } })\n\n        const { fields = [], types } = await exportAdminTypes({\n          apiFields,\n          apiId: atom.api.id,\n        })\n\n        if (!api) {\n          throw new Error('Missing api')\n        }\n\n        return {\n          api,\n          atom,\n          fields: [...apiFields, ...fields],\n          types,\n        }\n      }),\n    )\n  }\n\n  private async extractComponentsData(where?: ComponentWhere) {\n    const componentsData = await exportComponents(where)\n    const apis = await exportAtomApis()\n\n    return Promise.all(\n      componentsData.map(async (componentData) => {\n        const api = find(apis.types, { id: componentData.component.api.id }) as\n          | IInterfaceTypeDTO\n          | undefined\n\n        if (!api) {\n          throw new Error('Missing api')\n        }\n\n        const apiFields = filter(apis.fields, {\n          api: { id: componentData.component.api.id },\n        })\n\n        const { fields = [], types } = await exportAdminTypes({\n          apiFields,\n          apiId: componentData.component.api.id,\n        })\n\n        return {\n          component: componentData.component,\n          descendantElements: componentData.descendantElements,\n          fields,\n          types,\n        }\n      }),\n    )\n  }\n\n  async exportComponent(id: string) {\n    const componentsData = await this.extractComponentsData({ id })\n\n    if (componentsData[0]) {\n      this.saveComponentAsFile(componentsData[0])\n    }\n  }\n\n  saveComponentAsFile(componentData: IComponentExportData) {\n    const { component, descendantElements, fields, types } = componentData\n    // Component name can have spaces, which can cause issues with file names\n    const name = component.name.replace(/ /g, '')\n\n    saveFormattedFile(\n      path.resolve(this.dataPaths.COMPONENTS_PATH, `${name}.json`),\n      {\n        component,\n        descendantElements,\n        fields,\n        types,\n      },\n    )\n  }\n}\n","export * from './use-case'\n","export * from './export-atoms'\nexport * from './import-atoms/import-atoms.service'\nexport * from './seed-atoms'\n","import type { AtomWhere } from '@codelab/backend/abstract/codegen'\nimport { SortDirection } from '@codelab/backend/abstract/codegen'\nimport {\n  exportAtomSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\n\ninterface ExportAtomsProps {\n  where?: AtomWhere\n}\n\nexport const exportAtoms = async (\n  props: ExportAtomsProps = {},\n): Promise<Array<IAtomDTO>> => {\n  const Atom = await Repository.instance.Atom\n\n  return (\n    (\n      await Atom.find({\n        options: {\n          sort: [{ name: SortDirection.Asc }],\n        },\n        selectionSet: exportAtomSelectionSet,\n        where: props.where,\n      })\n    )\n      // Sort nested properties, since we can't do this with OGM\n      .map((atom) => ({\n        ...atom,\n        suggestedChildren: atom.suggestedChildren.sort((a, b) =>\n          a.name.localeCompare(b.name),\n        ),\n        tags: atom.tags.map((tag) => ({\n          ...tag,\n          children: tag.children.sort((a, b) => a.name.localeCompare(b.name)),\n        })),\n      }))\n  )\n}\n","import { UseCase } from '@codelab/backend/application/service'\nimport { AtomRepository } from '@codelab/backend/domain/atom'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport { logSection } from '@codelab/shared/utils'\n\nexport class ImportAtomsService extends UseCase<Array<IAtomDTO>, void> {\n  atomRepository: AtomRepository = new AtomRepository()\n\n  async _execute(atoms: Array<IAtomDTO>) {\n    logSection('Importing Atoms')\n\n    /**\n     * Create all atoms but omit `suggestedChildren`, since that is required\n     */\n    await Promise.all(\n      atoms.map(\n        // Omit `suggestedChildren`, since it requires all atoms to be added first\n        async ({ suggestedChildren, ...atom }) =>\n          await this.atomRepository.save(atom),\n      ),\n    )\n\n    /**\n     * Here we assign  suggestedChildren, since all atoms must be created first\n     */\n    await Promise.all(\n      atoms.map(async (atom) => await this.atomRepository.save(atom)),\n    )\n  }\n}\n","export * from './model'\nexport * from './repository'\n","export * from './atom.model'\n","import type {\n  IAtomDTO,\n  IAtomType,\n  IAuth0Owner,\n} from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\n\nexport class Atom implements IAtomDTO {\n  icon?: string | null | undefined\n\n  id: string\n\n  name: string\n\n  externalCssSource: string | null | undefined\n\n  externalJsSource: string | null | undefined\n\n  externalSourceType: string | null | undefined\n\n  type: IAtomType\n\n  api: IEntity\n\n  tags: Array<IEntity>\n\n  requiredParents: Array<IEntity>\n\n  suggestedChildren: Array<IEntity>\n\n  owner: IAuth0Owner\n\n  constructor({\n    api,\n    externalCssSource,\n    externalJsSource,\n    externalSourceType,\n    icon,\n    id,\n    name,\n    owner,\n    requiredParents = [],\n    suggestedChildren = [],\n    tags = [],\n    type,\n  }: IAtomDTO) {\n    this.id = id\n    this.externalJsSource = externalJsSource\n    this.externalCssSource = externalCssSource\n    this.externalSourceType = externalSourceType\n    this.name = name\n    this.icon = icon\n    this.type = type\n    this.api = api\n    this.tags = tags\n    this.requiredParents = requiredParents\n    this.suggestedChildren = suggestedChildren\n    this.owner = owner\n  }\n}\n","export * from './atom.repo'\n","import type { Atom, AtomWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  atomSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeId,\n  connectNodeIds,\n  reconnectNodeId,\n  reconnectNodeIds,\n  whereNodeIds,\n} from '@codelab/shared/domain/mapper'\n\nexport class AtomRepository extends AbstractRepository<\n  IAtomDTO,\n  Atom,\n  AtomWhere\n> {\n  private Atom = Repository.instance.Atom\n\n  async _find(where: AtomWhere = {}) {\n    return await (\n      await this.Atom\n    ).find({\n      selectionSet: atomSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(atoms: Array<IAtomDTO>) {\n    return (\n      await (\n        await this.Atom\n      ).create({\n        input: atoms.map(\n          ({\n            api,\n            owner,\n            requiredParents = [],\n            suggestedChildren = [],\n            tags,\n            ...atom\n          }) => ({\n            ...atom,\n            api: connectNodeId(api.id),\n            owner: connectAuth0Owner(owner),\n            requiredParents: connectNodeIds(\n              requiredParents.map((parent) => parent.id),\n            ),\n            suggestedChildren: connectNodeIds(\n              suggestedChildren.map((child) => child.id),\n            ),\n            tags: connectNodeIds(tags?.map((tag) => tag.id)),\n          }),\n        ),\n      })\n    ).atoms\n  }\n\n  protected async _update(\n    {\n      api,\n      id,\n      owner,\n      requiredParents = [],\n      suggestedChildren = [],\n      tags,\n      ...atom\n    }: IAtomDTO,\n    where: AtomWhere,\n  ) {\n    return (\n      await (\n        await this.Atom\n      ).update({\n        update: {\n          ...atom,\n          api: reconnectNodeId(api.id),\n          requiredParents: whereNodeIds(\n            requiredParents.map((parent) => parent.id),\n          ),\n          suggestedChildren: whereNodeIds(\n            suggestedChildren.map((child) => child.id),\n          ),\n          tags: reconnectNodeIds(tags?.map((tag) => tag.id)),\n        },\n        where,\n      })\n    ).atoms[0]\n  }\n}\n","export * from './seed-atoms.service'\n","import type { IAtomRecords } from '@codelab/backend/abstract/core'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport { AtomRepository } from '@codelab/backend/domain/atom'\nimport { TagRepository } from '@codelab/backend/domain/tag'\nimport {\n  InterfaceType,\n  InterfaceTypeRepository,\n} from '@codelab/backend/domain/type'\nimport type { IAtomDTO } from '@codelab/shared/abstract/core'\nimport { IAtomType } from '@codelab/shared/abstract/core'\nimport { ObjectTyped } from 'object-typed'\nimport { v4 } from 'uuid'\n\nexport class SeedAtomsService extends AuthUseCase<\n  Partial<IAtomRecords>,\n  Array<IAtomDTO>\n> {\n  atomRepository: AtomRepository = new AtomRepository()\n\n  interfaceTypeRepository: InterfaceTypeRepository =\n    new InterfaceTypeRepository()\n\n  tagRepository: TagRepository = new TagRepository()\n\n  async _execute(data: IAtomRecords) {\n    const atoms = await this.createAtomsData(data)\n\n    /**\n     * Create all atoms but omit `suggestedChildren`, since that is required\n     */\n    await Promise.all(\n      atoms.map(\n        // Omit `suggestedChildren`, since it requires all atoms to be added first\n        async ({ suggestedChildren, ...atom }) =>\n          await this.atomRepository.save(atom, { name: atom.name }),\n      ),\n    )\n\n    /**\n     * Here we assign suggestedChildren, since all atoms must be created first\n     */\n    await Promise.all(\n      atoms.map(\n        async (atom) =>\n          await this.atomRepository.save(atom, { name: atom.name }),\n      ),\n    )\n\n    return atoms\n  }\n\n  /**\n   * Assume all tags have already been created\n   */\n  async createAtomsData(data: IAtomRecords): Promise<Array<IAtomDTO>> {\n    const existingInterfaceTypes = new Map(\n      (await this.interfaceTypeRepository.find()).map((interfaceType) => [\n        interfaceType.name,\n        interfaceType,\n      ]),\n    )\n\n    return await Promise.all(\n      ObjectTyped.entries(data).map(async ([atomType, atomData]) => {\n        // Search api by name\n        const existingApi = existingInterfaceTypes.get(\n          InterfaceType.getApiName({ name: atomType }),\n        )\n\n        if (!existingApi) {\n          console.log(atomData)\n          throw new Error('Atom API should exist already')\n        }\n\n        // Get tags by name, they always match up\n        const existingTag = await this.tagRepository.findOne({\n          name: atomData.tag,\n        })\n\n        if (!existingTag) {\n          console.log(atomData)\n          throw new Error('Tag should exist already')\n        }\n\n        return {\n          api: existingApi,\n          icon: atomData.icon,\n          id: v4(),\n          name: atomType,\n          owner: this.owner,\n          tags: [existingTag],\n          type: IAtomType[atomType],\n        }\n      }),\n    )\n  }\n}\n","export * from './model'\nexport * from './repository'\n","export * from './tag.model'\n","import type { IAuth0Owner, ITagDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\n\nexport class Tag implements ITagDTO {\n  declare id: string\n\n  declare name: string\n\n  owner: IAuth0Owner\n\n  children: Array<IEntity>\n\n  parent?: IEntity | null\n\n  descendants: Array<IEntity>\n\n  constructor({\n    children = [],\n    descendants = [],\n    id,\n    name,\n    owner,\n    parent = null,\n  }: ITagDTO) {\n    this.id = id\n    this.name = name\n    this.children = children\n    this.parent = parent\n    this.owner = owner\n    this.descendants = descendants\n  }\n}\n","export * from './tag.repo'\n","import type { Tag, TagWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  Repository,\n  tagSelectionSet,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { ITagDTO } from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeId,\n  connectNodeIds,\n  reconnectNodeId,\n} from '@codelab/shared/domain/mapper'\n\nexport class TagRepository extends AbstractRepository<ITagDTO, Tag, TagWhere> {\n  private Tag = Repository.instance.Tag\n\n  async _find(where: TagWhere = {}) {\n    return await (\n      await this.Tag\n    ).find({\n      selectionSet: tagSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * If parent or children exists, then we should connect them\n   */\n  protected async _add(tags: Array<ITagDTO>) {\n    return (\n      await (\n        await this.Tag\n      ).create({\n        input: tags.map(({ descendants, owner, ...tag }) => ({\n          ...tag,\n          children: connectNodeIds(tag.children.map((child) => child.id)),\n          owner: connectAuth0Owner(owner),\n          parent: connectNodeId(tag.parent?.id),\n        })),\n      })\n    ).tags\n  }\n\n  protected async _update(\n    { children, descendants, id, owner, parent, ...tag }: ITagDTO,\n    where: TagWhere,\n  ) {\n    // Get existing tag so we know what to connect/disconnect\n    const existing = await this.findOne(where)\n\n    if (!existing) {\n      return undefined\n    }\n\n    /**\n     * Parent\n     */\n    const parentTagToConnect = parent?.id\n    const childrenTagsToConnect = children.map((_tag) => _tag.id)\n\n    return (\n      await (\n        await this.Tag\n      ).update({\n        update: {\n          ...tag,\n          parent: reconnectNodeId(parentTagToConnect),\n          /**\n           * This causes a bug where some nodes aren't connected, can't figure out why maybe race condition\n           *\n           * It is also unnecessary to have both.\n           */\n          // children: reconnectNodeIds(childrenTagsToConnect),\n        },\n        where,\n      })\n    ).tags[0]\n  }\n}\n","export * from './use-case'\n","export * from './export-component'\n","import type { ComponentWhere } from '@codelab/backend/abstract/codegen'\nimport { getElementWithDescendants } from '@codelab/backend/domain/element'\nimport {\n  exportComponentSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\n\nexport const exportComponents = async (where?: ComponentWhere) => {\n  const Component = await Repository.instance.Component\n\n  const components = await Component.find({\n    selectionSet: exportComponentSelectionSet,\n    where,\n  })\n\n  return Promise.all(\n    components.map(async (component) => {\n      const descendantElements = await getElementWithDescendants(\n        component.rootElement.id,\n      )\n\n      return {\n        component,\n        descendantElements,\n      }\n    }),\n  )\n}\n","export * from './model'\nexport * from './repository'\n","export * from './element.model'\n","import type { IElementDTO, RenderType } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullable } from '@codelab/shared/abstract/types'\n\nexport class Element implements IElementDTO {\n  customCss?: Nullable<string> | undefined\n\n  firstChild?: IEntity | null | undefined\n\n  guiCss?: Nullable<string> | undefined\n\n  id: string\n\n  name: string\n\n  nextSibling?: IEntity | null | undefined\n\n  page?: IEntity | null | undefined\n\n  parent?: IEntity | null | undefined\n\n  parentComponent?: IEntity | null | undefined\n\n  postRenderAction?: IEntity | null | undefined\n\n  preRenderAction?: IEntity | null | undefined\n\n  prevSibling?: IEntity | null | undefined\n\n  propTransformationJs?: Nullable<string> | undefined\n\n  props: IEntity\n\n  renderForEachPropKey?: Nullable<string> | undefined\n\n  renderIfExpression?: Nullable<string> | undefined\n\n  renderType?: Nullable<RenderType> | undefined\n\n  constructor({ id, name, props }: IElementDTO) {\n    this.id = id\n    this.name = name\n    this.props = props\n  }\n}\n","export * from './element.repo'\nexport * from './element.repo.old'\nexport * from './get-descendants'\n","import type { Element, ElementWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  elementSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IElementDTO } from '@codelab/shared/abstract/core'\nimport { connectNodeId, reconnectNodeId } from '@codelab/shared/domain/mapper'\n\nexport class ElementRepository extends AbstractRepository<\n  IElementDTO,\n  Element,\n  ElementWhere\n> {\n  private Element = Repository.instance.Element\n\n  async _find(where: ElementWhere = {}) {\n    return await (\n      await this.Element\n    ).find({\n      selectionSet: elementSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(elements: Array<IElementDTO>) {\n    return (\n      await (\n        await this.Element\n      ).create({\n        input: elements.map(({ id, name, props }) => ({\n          id,\n          name,\n          props: connectNodeId(props.id),\n        })),\n      })\n    ).elements\n  }\n\n  protected async _update(\n    { id, name, props }: IElementDTO,\n    where: ElementWhere,\n  ) {\n    return (\n      await (\n        await this.Element\n      ).update({\n        update: {\n          id,\n          name,\n          props: reconnectNodeId(props.id),\n        },\n        where,\n      })\n    ).elements[0]\n  }\n}\n","import type { Element } from '@codelab/backend/abstract/codegen'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport { connectNodeId } from '@codelab/shared/domain/mapper'\nimport { compoundCaseToTitleCase } from '@codelab/shared/utils'\n\n/**\n * Creates the element without prop map bindings and without parent/children connections\n */\n\nconst label = (element: Element) =>\n  element.name ||\n  element.renderAtomType?.name ||\n  (element.renderAtomType\n    ? compoundCaseToTitleCase(element.renderAtomType.type)\n    : undefined) ||\n  element.parentComponent?.name ||\n  element.renderComponentType?.name\n\nexport const importElementInitial = async (\n  element: Element,\n): Promise<Element> => {\n  const Element = await Repository.instance.Element\n\n  const existing = await Element.find({\n    where: {\n      id: element.id,\n    },\n  })\n\n  if (!existing.length) {\n    console.log(`Creating ${label(element)}`)\n\n    const {\n      elements: [newElement],\n    } = await Element.create({\n      input: [\n        {\n          customCss: element.customCss,\n          guiCss: element.guiCss,\n          id: element.id,\n          name: element.name,\n          postRenderAction: connectNodeId(element.postRenderAction?.id),\n          preRenderAction: connectNodeId(element.preRenderAction?.id),\n          props: {\n            create: {\n              node: { data: element.props.data, id: element.props.id },\n            },\n          },\n          propTransformationJs: element.propTransformationJs,\n          renderAtomType: element.renderAtomType\n            ? {\n                connect: {\n                  where: {\n                    node: {\n                      OR: [\n                        { id: element.renderAtomType.id },\n                        { name: element.renderAtomType.name },\n                      ],\n                    },\n                  },\n                },\n              }\n            : undefined,\n          renderForEachPropKey: element.renderForEachPropKey,\n          renderIfExpression: element.renderIfExpression,\n        },\n      ],\n    })\n\n    if (!newElement) {\n      throw new Error('Element not created')\n    }\n\n    return newElement\n  }\n\n  // console.log(`Updating ${label(element)}`)\n\n  const {\n    elements: [newElement],\n  } = await Element.update({\n    update: {\n      name: element.name,\n    },\n    where: {\n      id: element.id,\n    },\n  })\n\n  if (!newElement) {\n    throw new Error('Element not created')\n  }\n\n  return newElement\n}\n\n/**\n * Updates the imported element with prop map bindings, parent/children connections and props after we have imported all the elements, so we can reference them\n */\n// TODO: update CLI to support the new elment-parent structure\nexport const updateImportedElement = async (\n  element: Element,\n): Promise<void> => {\n  const Element = await Repository.instance.Element\n\n  // if (element.props) {\n  // replace all references in props\n  // for (const [key, value] of idMap.entries()) {\n  //   element.props.data = element.props.data.replace(\n  //     new RegExp(key, 'g'),\n  //     value,\n  //   )\n  // }\n  // }\n\n  await Element.update({\n    update: {\n      firstChild: connectNodeId(element.firstChild?.id),\n      nextSibling: connectNodeId(element.nextSibling?.id),\n      parent: connectNodeId(element.parent?.id),\n      parentComponent: connectNodeId(element.parentComponent?.id),\n      prevSibling: connectNodeId(element.prevSibling?.id),\n      props: {\n        update: { node: { data: element.props.data } },\n      },\n      renderComponentType: connectNodeId(element.renderComponentType?.id),\n    },\n    where: { id: element.id },\n  })\n}\n","import {\n  exportElementSelectionSet,\n  getDescendantsCypher,\n  Repository,\n  withReadTransaction,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport type { Node } from 'neo4j-driver'\n\nexport const getElementWithDescendants = (rootId: string) =>\n  withReadTransaction(async (txn) => {\n    const Element = await Repository.instance.Element\n    const { records } = await txn.run(getDescendantsCypher, { rootId })\n    const descendants = records[0]?.get(0)\n\n    const descendantIds = descendants.map(\n      ({ properties }: Node) => properties.id,\n    )\n\n    return await Element.find({\n      selectionSet: exportElementSelectionSet,\n      where: { id_IN: [rootId, ...descendantIds] },\n    })\n  })\n","export * from './use-case'\n","export * from './export-tags'\nexport * from './seed-tags/seed-tags.service'\n","import type { TagWhere } from '@codelab/backend/abstract/codegen'\nimport { SortDirection } from '@codelab/backend/abstract/codegen'\nimport {\n  exportTagSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\n\ninterface ExportTagsProps {\n  where?: TagWhere\n}\n\nexport const exportTags = async (props: ExportTagsProps = {}) => {\n  const Tag = await Repository.instance.Tag\n\n  return (\n    (\n      await Tag.find({\n        options: {\n          sort: [{ name: SortDirection.Asc }],\n        },\n        selectionSet: exportTagSelectionSet,\n        where: props.where,\n      })\n    )\n      // Sort children values\n      .map((tag) => ({\n        ...tag,\n        children: tag.children.sort((a, b) => a.name.localeCompare(b.name)),\n      }))\n  )\n}\n","import type { TagNode, TagNodeData } from '@codelab/backend/abstract/core'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport { TagRepository } from '@codelab/backend/domain/tag'\nimport type { ITagDTO } from '@codelab/shared/abstract/core'\nimport uniqBy from 'lodash/uniqBy'\nimport { ObjectTyped } from 'object-typed'\nimport { v4 } from 'uuid'\n\nexport class SeedTagsService extends AuthUseCase<TagNode, void> {\n  tagRepository: TagRepository = new TagRepository()\n\n  async _execute(tagTree: TagNode) {\n    const tags = uniqBy(await this.createTagsData(tagTree), (tag) => tag.name)\n\n    /**\n     * Omit parent and children since they need to be created first\n     */\n    await Promise.all(\n      tags.map(\n        async ({ children, parent, ...tag }) =>\n          await this.tagRepository.save(\n            { ...tag, children: [], owner: this.owner },\n            { name: tag.name },\n          ),\n      ),\n    )\n\n    /**\n     * set parent and children after all tags are created\n     */\n    await Promise.all(\n      tags.map(\n        async (tag) => await this.tagRepository.save(tag, { name: tag.name }),\n      ),\n    )\n  }\n\n  /**\n   * Here we want to flatten the hierarchical data\n   */\n  private async createTagsData(tagTree: TagNode): Promise<Array<ITagDTO>> {\n    const existingTags = new Map(\n      (await this.tagRepository.find()).map((tag) => [tag.name, tag]),\n    )\n\n    const tagData: Array<TagNodeData & { id: string }> = await Promise.all(\n      SeedTagsService.createTagTreeData(tagTree)\n        .flatMap((node) => SeedTagsService.flattenTagTree(node))\n        .map(async (node) => {\n          const existingTag = existingTags.get(node.name)\n\n          return { ...node, id: existingTag?.id ?? v4() }\n        }),\n    )\n\n    const tagDataMap = new Map(tagData.map((tag) => [tag.name, tag]))\n\n    return tagData.map((tag) => {\n      const parent = tag.parent ? tagDataMap.get(tag.parent) : null\n\n      return {\n        children: tag.children.map((child) => {\n          const childTag = tagDataMap.get(child.name)\n\n          if (!childTag) {\n            throw new Error('Missing child tag')\n          }\n\n          return {\n            id: childTag.id,\n            name: childTag.name,\n          }\n        }),\n        descendants: [],\n        id: tag.id,\n        name: tag.name,\n        owner: this.owner,\n        parent: parent ? { id: parent.id, name: parent.name } : undefined,\n      }\n    })\n  }\n\n  /**\n   * Generate parent/children by inference via object nested relationship\n   */\n  static createTagTreeData = (tagTreeData: TagNode): Array<TagNodeData> =>\n    Object.entries(tagTreeData).flatMap(([tagKey, tagNode]) => [\n      SeedTagsService.parseTagNode({ [tagKey]: tagNode }, null),\n    ])\n\n  /**\n   * Function to parse our custom tag structure that is optimized for easy manual editing\n   */\n  static parseTagNode = (node: TagNode, parent: string | null): TagNodeData => {\n    // if (!node) {\n    //   throw new Error('Missing node')\n    // }\n\n    // Meaning have children\n    if (node instanceof Object) {\n      const tagNode = ObjectTyped.entries(node)[0]\n\n      if (!tagNode) {\n        throw new Error('Tag node invalid')\n      }\n\n      const [name, values] = tagNode\n\n      return {\n        children: (values ?? []).map((value) => this.parseTagNode(value, name)),\n        name,\n        parent,\n      }\n    }\n\n    // No children\n    return {\n      children: [],\n      name: node,\n      parent,\n    }\n  }\n\n  static flattenTagTree = (node: TagNodeData): Array<TagNodeData> => {\n    return node.children.map(this.flattenTagTree).reduce(\n      (tagTree: Array<TagNodeData>, tagNodes: Array<TagNodeData>) => {\n        return [...tagTree, ...tagNodes]\n      },\n      [\n        {\n          children: node.children,\n          name: node.name,\n          parent: node.parent,\n        },\n      ],\n    )\n  }\n}\n","module.exports = require(\"lodash/uniqBy\");","export * from './file/save-formatted-file'\n","import fs from 'fs'\nimport { EOL } from 'os'\nimport * as path from 'path'\n\nexport const saveFormattedFile = (outputFilePath: string, data: object) => {\n  if (!outputFilePath.endsWith('.json')) {\n    throw new Error('Output path must end with .json')\n  }\n\n  const json = JSON.stringify(data, null, 2)\n  const exportPath = path.resolve('./', outputFilePath)\n\n  fs.mkdirSync(path.dirname(exportPath), { recursive: true })\n  fs.writeFileSync(exportPath, json)\n  fs.appendFileSync(exportPath, EOL, 'utf8')\n}\n","module.exports = require(\"os\");","module.exports = require(\"lodash/filter\");","import path from 'path'\n\nexport class DataPaths {\n  constructor(\n    // Allow base directory override for testing purpose\n    private readonly DATA_PATH = path.resolve('./data/export'),\n  ) {}\n\n  get SYSTEM_TYPES_FILE_PATH() {\n    return path.resolve(this.DATA_PATH, './system/types/system-types.json')\n  }\n\n  get ATOMS_PATH() {\n    return path.resolve(this.DATA_PATH, './admin/atoms')\n  }\n\n  get TAGS_FILE_PATH() {\n    return path.resolve(this.DATA_PATH, './admin/tags/tags.json')\n  }\n\n  get COMPONENTS_PATH() {\n    return path.resolve(this.DATA_PATH, './admin/components')\n  }\n}\n","export * from './import-admin-data.service'\n","import type {\n  IAdminDataExport,\n  IAtomExport,\n  IComponentExportData,\n  IType,\n  ITypesExport,\n} from '@codelab/backend/abstract/core'\nimport { UseCase } from '@codelab/backend/application/service'\nimport { createComponents } from '@codelab/backend/domain/app'\nimport { AtomRepository } from '@codelab/backend/domain/atom'\nimport { importElementInitial } from '@codelab/backend/domain/element'\nimport { TagRepository } from '@codelab/backend/domain/tag'\nimport {\n  FieldRepository,\n  InterfaceTypeRepository,\n  TypeFactory,\n} from '@codelab/backend/domain/type'\nimport type {\n  IAuth0Owner,\n  ITagDTO,\n  ITypeDTO,\n} from '@codelab/shared/abstract/core'\nimport { withTracing } from '@codelab/shared/infra/otel'\nimport { InjectQueue } from '@nestjs/bull'\nimport { Injectable } from '@nestjs/common'\nimport { Queue } from 'bull'\nimport fs from 'fs'\nimport pick from 'lodash/pick'\nimport path from 'path'\nimport { DataPaths } from '../../data-paths'\n\n/**\n * During `save`, we'll want to replace the owner with the current\n */\n@Injectable()\nexport class ImportAdminDataService extends UseCase<IAuth0Owner, void> {\n  // tagRepository = new TagRepository()\n\n  // atomRepository = new AtomRepository()\n\n  // fieldRepository = new FieldRepository()\n\n  // interfaceTypeRepository = new InterfaceTypeRepository()\n\n  dataPaths: DataPaths\n\n  exportedAdminData: IAdminDataExport\n\n  DATA_PATH = path.resolve('./data/export')\n\n  constructor(\n    // Allow base directory override for testing purpose\n    @InjectQueue('import-admin-data') private importQueue: Queue,\n  ) {\n    super()\n    this.dataPaths = new DataPaths(this.DATA_PATH)\n    this.exportedAdminData = this.getMergedData\n  }\n\n  protected async _execute(owner: IAuth0Owner) {\n    /**\n     * System types must be seeded first, so other types can reference it\n     */\n    await withTracing('import-system-types', () =>\n      this.importSystemTypes(owner),\n    )()\n    // await withTracing('import-tags', () => this.importTags(owner))()\n    // await withTracing('import-atoms', () => this.importAtoms(owner))()\n    // await withTracing('import-components', () => this.importComponents(owner))()\n  }\n\n  private async importSystemTypes(owner: IAuth0Owner) {\n    const { types } = JSON.parse(\n      fs.readFileSync(this.dataPaths.SYSTEM_TYPES_FILE_PATH, 'utf8'),\n    ) as ITypesExport\n\n    for await (const type of types) {\n      const data: ITypeDTO = { ...type, owner }\n      console.log('import queue')\n\n      const job = await this.importQueue.add(data)\n      // await TypeFactory.save({ ...type, owner })\n    }\n  }\n\n  private async importAtoms(owner: IAuth0Owner) {\n    for await (const atomData of this.exportedAdminData.atoms) {\n      await withTracing(\n        'import-atom',\n        () => this.importAtom(atomData, owner),\n        (span) => {\n          const attributes = pick(atomData.atom, ['name'])\n          span.setAttributes(attributes)\n        },\n      )()\n    }\n  }\n\n  private async importAtom(\n    { api, atom, fields, types }: IAtomExport,\n    owner: IAuth0Owner,\n  ) {\n    // Create types first so they can be referenced\n    for await (const type of types) {\n      await TypeFactory.save({ ...type, owner })\n    }\n\n    // Then api's\n    await TypeFactory.save({ ...api, owner })\n\n    // Finally fields\n    for await (const field of fields) {\n      // await this.fieldRepository.save(field)\n    }\n\n    // await this.atomRepository.save({ ...atom, owner })\n  }\n\n  private async importTags(owner: IAuth0Owner) {\n    for await (const tag of this.exportedAdminData.tags) {\n      // await this.tagRepository.save({ ...tag, owner })\n    }\n  }\n\n  async importComponents(owner: IAuth0Owner) {\n    const componentsExportData = this.exportedAdminData.components\n\n    for await (const {\n      descendantElements,\n      fields,\n      types,\n    } of componentsExportData) {\n      for await (const type of types) {\n        // await TypeFactory.save({ ...type, owner })\n      }\n\n      for await (const field of fields) {\n        // await this.fieldRepository.save(field)\n      }\n\n      for await (const element of descendantElements) {\n        // await importElementInitial(element)\n      }\n    }\n\n    const components = componentsExportData.map((item) => item.component)\n    await createComponents(components, owner)\n  }\n\n  /**\n   * Extract all the api's from atom file\n   */\n  get getMergedData(): IAdminDataExport {\n    const atomFilenames = fs\n      .readdirSync(this.dataPaths.ATOMS_PATH)\n      .filter((filename) => path.extname(filename) === '.json')\n\n    const componentFilenames = fs\n      .readdirSync(this.dataPaths.COMPONENTS_PATH)\n      .filter((filename) => path.extname(filename) === '.json')\n\n    // T ag data is all in single file\n    const tags = JSON.parse(\n      fs.readFileSync(this.dataPaths.TAGS_FILE_PATH, 'utf8'),\n    ) as Array<ITagDTO>\n\n    const systemTypes = JSON.parse(\n      fs.readFileSync(this.dataPaths.SYSTEM_TYPES_FILE_PATH, 'utf8'),\n    ) as ITypesExport\n\n    const components = componentFilenames.map((filename) => {\n      const content = fs.readFileSync(\n        path.resolve(this.dataPaths.COMPONENTS_PATH, filename),\n        'utf8',\n      )\n\n      return JSON.parse(content) as IComponentExportData\n    })\n\n    return atomFilenames.reduce(\n      (adminData, filename) => {\n        const content = fs.readFileSync(\n          `${this.dataPaths.ATOMS_PATH}/${filename}`,\n          'utf8',\n        )\n\n        const atomExport = JSON.parse(content.toString()) as IAtomExport\n\n        adminData.atoms.push(atomExport)\n\n        return adminData\n      },\n      { atoms: [] as Array<IAtomExport>, components, systemTypes, tags },\n    )\n  }\n}\n","export * from './model'\nexport * from './repository'\n","export * from './app.model'\n","import type { IAppDTO, IAuth0Owner } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\n\nexport class App implements IAppDTO {\n  domains?: Array<IEntity> | undefined\n\n  id: string\n\n  name: string\n\n  pages?: Array<IEntity> | undefined\n\n  owner: IAuth0Owner\n\n  constructor({ domains, id, name, owner, pages }: IAppDTO) {\n    this.id = id\n    this.name = name\n    this.owner = owner\n    this.domains = domains\n    this.pages = pages\n  }\n}\n","export * from './app.repo'\nexport * from './validate'\n","import type { App, AppWhere } from '@codelab/backend/abstract/codegen'\nimport type {\n  IAppExport,\n  IComponentExport,\n  IExportComponents,\n} from '@codelab/backend/abstract/core'\nimport {\n  createComponent,\n  findComponent,\n} from '@codelab/backend/domain/component'\nimport {\n  importElementInitial,\n  updateImportedElement,\n} from '@codelab/backend/domain/element'\nimport { getPageData, PageRepository } from '@codelab/backend/domain/page'\nimport { PropRepository } from '@codelab/backend/domain/prop'\nimport { StoreRepository } from '@codelab/backend/domain/store'\nimport {\n  FieldRepository,\n  InterfaceTypeRepository,\n} from '@codelab/backend/domain/type'\nimport {\n  appSelectionSet,\n  exportPageSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IAppDTO, IAuth0Owner } from '@codelab/shared/abstract/core'\nimport {\n  connectAuth0Owner,\n  connectNodeIds,\n  reconnectNodeIds,\n} from '@codelab/shared/domain/mapper'\nimport { cLog, createUniqueName } from '@codelab/shared/utils'\nimport flatMap from 'lodash/flatMap'\nimport map from 'lodash/map'\nimport omit from 'lodash/omit'\nimport { validate } from './validate'\n\nexport class AppRepository extends AbstractRepository<IAppDTO, App, AppWhere> {\n  private App = Repository.instance.App\n\n  async _find(where: AppWhere = {}) {\n    return await (\n      await this.App\n    ).find({\n      selectionSet: appSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(apps: Array<IAppDTO>) {\n    return (\n      await (\n        await this.App\n      ).create({\n        input: apps.map(({ id, name, owner, pages }) => ({\n          _compoundName: createUniqueName(name, owner.auth0Id),\n          id,\n          owner: connectAuth0Owner(owner),\n          pages: connectNodeIds(pages?.map((page) => page.id)),\n        })),\n      })\n    ).apps\n  }\n\n  protected async _update({ name, owner, pages }: IAppDTO, where: AppWhere) {\n    return (\n      await (\n        await this.App\n      ).update({\n        update: {\n          _compoundName: createUniqueName(name, owner.auth0Id),\n          pages: reconnectNodeIds(pages?.map((page) => page.id)).map(\n            (input) => ({\n              ...input,\n              // overriding disconnect from reconnectNodeIds because it disconnects everythin\n              // including the pages connected in previous items of the input array. This causes\n              // the transaction to register only the last page being connected in the input array\n              // TODO: Check it it's the case for other places using reconnectNodeIds and if so update it.\n              disconnect: [\n                {\n                  where: {\n                    NOT: {\n                      node: {\n                        id_IN: pages?.map((page) => page.id),\n                      },\n                    },\n                  },\n                },\n              ],\n            }),\n          ),\n        },\n        where,\n      })\n    ).apps[0]\n  }\n}\n\nexport const createApp = async (app: IAppExport, owner: IAuth0Owner) => {\n  cLog(omit(app, ['pages']))\n\n  const fieldRepository = new FieldRepository()\n  const storeRepository = new StoreRepository()\n  const interfaceTypeRepository = new InterfaceTypeRepository()\n  const pageRepository = new PageRepository()\n  const appRepository = new AppRepository()\n  const App = await Repository.instance.App\n  const { pages } = app\n  await validate(pages)\n\n  const existing = await appRepository.findOne({ id: app.id })\n\n  if (existing) {\n    console.log('Deleting app/pages before re-creating...')\n    await App.delete({\n      delete: {\n        pages: [{ where: {} }],\n      },\n      where: {\n        id: app.id,\n      },\n    })\n  }\n\n  for (const { elements, store } of pages) {\n    for (const element of elements) {\n      await importElementInitial(element)\n    }\n\n    for (const element of elements) {\n      await updateImportedElement(element)\n    }\n\n    const interfaceTypeExist = await interfaceTypeRepository.findOne({\n      id: store.api.id,\n    })\n\n    interfaceTypeExist\n      ? await interfaceTypeRepository.update(\n          { ...store.api, fields: [] },\n          { id: store.api.id },\n        )\n      : await interfaceTypeRepository.add([{ ...store.api, fields: [], owner }])\n\n    for (const field of store.api.fields) {\n      const fieldExist = await fieldRepository.findOne({ id: field.id })\n      fieldExist\n        ? await fieldRepository.update(field, { id: field.id })\n        : await fieldRepository.add([field])\n    }\n\n    await storeRepository\n      .add([store])\n      .catch(() => storeRepository.update(store, { id: store.id }))\n  }\n\n  const pagesData = app.pages.map(({ elements, ...props }) => ({\n    ...props,\n    app: { id: app.id },\n  }))\n\n  console.log('Creating new app...')\n\n  await appRepository.add([{ ...app, owner, pages: [] }])\n  await pageRepository.add(pagesData)\n\n  console.log('Creating actions...')\n\n  // await importActions(app.store.actions, app.store.id)\n\n  return app\n}\n\nexport const createComponents = async (\n  components: Array<IComponentExport>,\n  owner: IAuth0Owner,\n) => {\n  const fieldRepository = new FieldRepository()\n  const propRepository = new PropRepository()\n  const storeRepository = new StoreRepository()\n  const interfaceTypeRepository = new InterfaceTypeRepository()\n\n  for (const component of components) {\n    const isExist = findComponent({ id: component.id })\n\n    if ((await isExist).length > 0) {\n      return\n    } else {\n      await interfaceTypeRepository.add([\n        { ...component.store.api, fields: [], owner },\n        { ...component.api, fields: [], owner },\n      ])\n\n      await fieldRepository.add(component.api.fields)\n      await fieldRepository.add(component.store.api.fields)\n      await storeRepository.add([component.store])\n      await propRepository.add([component.props])\n      await createComponent(component, owner)\n    }\n  }\n}\n/**\n * Gather all pages, elements and components\n */\n\nexport const getAppPages = async (app: App) => {\n  const Page = await Repository.instance.Page\n\n  const pages = await Page.find({\n    selectionSet: exportPageSelectionSet,\n    where: { app: { id: app.id } },\n  })\n\n  const pagesData = await Promise.all(\n    pages.map(async (page) => {\n      const { elements } = await getPageData(page)\n\n      const { id, kind, name, pageContentContainer, rootElement, store, url } =\n        page\n\n      return {\n        elements,\n        id: id,\n        kind: kind,\n        name: name,\n        rootElement: {\n          id: rootElement.id,\n          name: rootElement.name,\n        },\n        store,\n        url,\n        ...(pageContentContainer ? { pageContentContainer } : {}),\n      }\n    }),\n  )\n\n  return pagesData\n}\n\n// export component of the app\n\nexport const getAppComponents = async (\n  app: App,\n): Promise<IExportComponents> => {\n  const pageRepository = new PageRepository()\n  const pages = await pageRepository.find({ app: { id: app.id } })\n\n  const componentPromises = map(pages, async (page) => {\n    const { components } = await getPageData(page)\n\n    return components\n  })\n\n  const components = await Promise.all(componentPromises).then((result) =>\n    flatMap(result),\n  )\n\n  return { components }\n}\n","export * from './repository'\n","export * from './component.repo'\n","import type {\n  Component,\n  ComponentWhere,\n} from '@codelab/backend/abstract/codegen'\nimport {\n  componentSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner, connectNodeId } from '@codelab/shared/domain/mapper'\n\nexport const createComponent = async (\n  component: Component,\n  owner: IAuth0Owner,\n): Promise<Component> => {\n  const Component = await Repository.instance.Component\n\n  const {\n    components: [newComponent],\n  } = await Component.create({\n    input: [\n      {\n        api: connectNodeId(component.api.id),\n        childrenContainerElement: connectNodeId(\n          component.childrenContainerElement.id,\n        ),\n        id: component.id,\n        name: component.name,\n        owner: connectAuth0Owner(owner),\n        props: connectNodeId(component.props.id),\n        rootElement: connectNodeId(component.rootElement.id),\n        store: connectNodeId(component.store.id),\n      },\n    ],\n  })\n\n  if (!newComponent) {\n    throw new Error('Component not created')\n  }\n\n  return newComponent\n}\n\nexport const findComponent = async (where: ComponentWhere) => {\n  const Component = await Repository.instance.Component\n\n  const components = await Component.find({\n    selectionSet: componentSelectionSet,\n    where,\n  })\n\n  return components\n}\n","export * from './model'\nexport * from './repository'\n","export * from './page.model'\n","import type { PageKind } from '@codelab/shared/abstract/codegen'\nimport type { IPageDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullish } from '@codelab/shared/abstract/types'\n\nexport class Page implements IPageDTO {\n  app: IEntity\n\n  // descendentElements?: Array<IEntity> | undefined\n  id: string\n\n  kind: PageKind\n\n  name: string\n\n  pageContentContainer?: Nullish<IEntity>\n\n  rootElement: IEntity\n\n  store: IEntity\n\n  url: string\n\n  constructor({\n    app,\n    // descendentElements,\n    id,\n    kind,\n    name,\n    pageContentContainer,\n    rootElement,\n    store,\n    url,\n  }: IPageDTO) {\n    this.id = id\n    this.app = app\n    // this.descendentElements = descendentElements\n    this.kind = kind\n    this.name = name\n    this.pageContentContainer = pageContentContainer\n    this.rootElement = rootElement\n    this.store = store\n    this.url = url\n  }\n}\n","export * from './page.repo'\n","import type { Page, PageWhere } from '@codelab/backend/abstract/codegen'\nimport { getElementWithDescendants } from '@codelab/backend/domain/element'\nimport {\n  exportComponentSelectionSet,\n  pageSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IPageDTO } from '@codelab/shared/abstract/core'\nimport { connectNodeId, reconnectNodeId } from '@codelab/shared/domain/mapper'\nimport { createUniqueName, uuidRegex } from '@codelab/shared/utils'\nimport flatMap from 'lodash/flatMap'\n\nexport class PageRepository extends AbstractRepository<\n  IPageDTO,\n  Page,\n  PageWhere\n> {\n  private Page = Repository.instance.Page\n\n  async _find(where: PageWhere = {}) {\n    return await (\n      await this.Page\n    ).find({\n      selectionSet: pageSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(pages: Array<IPageDTO>) {\n    return (\n      await (\n        await this.Page\n      ).create({\n        input: pages.map(\n          ({\n            app,\n            id,\n            kind,\n            name,\n            pageContentContainer,\n            rootElement,\n            store,\n            url,\n          }) => ({\n            _compoundName: createUniqueName(name, app.id),\n            app: connectNodeId(app.id),\n            id,\n            kind,\n            pageContentContainer: connectNodeId(pageContentContainer?.id),\n            rootElement: connectNodeId(rootElement.id),\n            store: connectNodeId(store.id),\n            url,\n          }),\n        ),\n      })\n    ).pages\n  }\n\n  protected async _update(\n    { app, name, pageContentContainer, rootElement, url }: IPageDTO,\n    where: PageWhere,\n  ) {\n    return (\n      await (\n        await this.Page\n      ).update({\n        update: {\n          _compoundName: createUniqueName(name, app.id),\n          app: reconnectNodeId(app.id),\n          pageContentContainer: reconnectNodeId(pageContentContainer?.id),\n          rootElement: reconnectNodeId(rootElement.id),\n          url,\n        },\n        where,\n      })\n    ).pages[0]\n  }\n}\n\nexport const getPageData = async (page: Page) => {\n  const Component = await Repository.instance.Component\n  const elements = await getElementWithDescendants(page.rootElement.id)\n\n  const componentIds = flatMap(elements, (element) => [\n    element.parentComponent?.id,\n    element.renderComponentType?.id,\n    ...(element.props.data.match(uuidRegex) || []),\n  ]).filter((element): element is string => Boolean(element))\n\n  const components = await Component.find({\n    selectionSet: exportComponentSelectionSet,\n    where: { id_IN: componentIds },\n  })\n\n  for (const { rootElement } of components) {\n    const componentDescendants = await getElementWithDescendants(rootElement.id)\n\n    elements.push(...componentDescendants)\n  }\n\n  return { components, elements }\n}\n","module.exports = require(\"lodash/flatMap\");","export * from './model'\nexport * from './repository'\n","export * from './prop.model'\n","import type { IPropDTO } from '@codelab/shared/abstract/core'\nimport type { IEntity, Nullable } from '@codelab/shared/abstract/types'\n\nexport class Prop implements IPropDTO {\n  api?: Nullable<IEntity> | undefined\n\n  data?: string | undefined\n\n  id: string\n\n  constructor({ api, data, id }: IPropDTO) {\n    this.id = id\n    this.api = api\n    this.data = data\n  }\n}\n","export * from './prop.repo'\n","import type { Prop, PropWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  propSelectionSet,\n  Repository,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IPropDTO } from '@codelab/shared/abstract/core'\n\nexport class PropRepository extends AbstractRepository<\n  IPropDTO,\n  Prop,\n  PropWhere\n> {\n  private Prop = Repository.instance.Prop\n\n  async _find(where: PropWhere = {}) {\n    return await (\n      await this.Prop\n    ).find({\n      selectionSet: propSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(apps: Array<IPropDTO>) {\n    return (\n      await (\n        await this.Prop\n      ).create({\n        input: apps.map(({ data = '', id }) => ({\n          data,\n          id,\n        })),\n      })\n    ).props\n  }\n\n  protected async _update({ data, id }: IPropDTO, where: PropWhere) {\n    return (\n      await (\n        await this.Prop\n      ).update({\n        update: {\n          data,\n        },\n        where,\n      })\n    ).props[0]\n  }\n}\n","export * from './model'\nexport * from './repository'\n","export * from './store.model'\n","import { InterfaceType } from '@codelab/backend/domain/type'\nimport type { IAuth0Owner, IStoreDTO } from '@codelab/shared/abstract/core'\nimport { ITypeKind } from '@codelab/shared/abstract/core'\nimport type { IEntity } from '@codelab/shared/abstract/types'\nimport { v4 } from 'uuid'\n\nexport class Store implements IStoreDTO {\n  actions?: Array<IEntity> | undefined\n\n  api: IEntity\n\n  id: string\n\n  name: string\n\n  constructor({ api, id, name }: IStoreDTO) {\n    this.api = api\n    this.id = id\n    this.name = name\n  }\n\n  static create(owner: IAuth0Owner, name: string) {\n    const api = new InterfaceType({\n      fields: [] as Array<IEntity>,\n      id: v4(),\n      kind: ITypeKind.InterfaceType,\n      name: `${name} API`,\n      owner,\n    })\n\n    return new Store({\n      api,\n      id: v4(),\n      name,\n    })\n  }\n}\n","export * from './store.repo'\n","import type { Store, StoreWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  Repository,\n  storeSelectionSet,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IStoreDTO } from '@codelab/shared/abstract/core'\nimport { connectNodeId } from '@codelab/shared/domain/mapper'\n\nexport class StoreRepository extends AbstractRepository<\n  IStoreDTO,\n  Store,\n  StoreWhere\n> {\n  private Store = Repository.instance.Store\n\n  async _find(where: StoreWhere = {}) {\n    return await (\n      await this.Store\n    ).find({\n      selectionSet: storeSelectionSet,\n      where,\n    })\n  }\n\n  /**\n   * We only deal with connecting/disconnecting relationships, actual items should exist already\n   */\n  protected async _add(stores: Array<IStoreDTO>) {\n    return (\n      await (\n        await this.Store\n      ).create({\n        input: stores.map(({ api, id, name }) => ({\n          api: connectNodeId(api.id),\n          id,\n          name,\n        })),\n      })\n    ).stores\n  }\n\n  protected async _update({ api, id, name }: IStoreDTO, where: StoreWhere) {\n    return (\n      await (\n        await this.Store\n      ).update({\n        update: {\n          name,\n        },\n        where,\n      })\n    ).stores[0]\n  }\n}\n","module.exports = require(\"lodash/omit\");","import type { IPageExport } from '@codelab/backend/abstract/core'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport flatMap from 'lodash/flatMap'\n\nexport const validate = async (pages: Array<IPageExport>) => {\n  const Atoms = await Repository.instance.Atom\n\n  let allAtomIds = flatMap(\n    pages,\n    (page) =>\n      page.elements\n        .map((element) => element.renderAtomType?.id)\n        .filter(Boolean) as Array<string>,\n  )\n\n  let allAtomNames = flatMap(\n    pages,\n    (page) =>\n      page.elements\n        .map((element) => element.renderAtomType?.name)\n        .filter(Boolean) as Array<string>,\n  )\n\n  allAtomIds = [...new Set(allAtomIds)]\n  allAtomNames = [...new Set(allAtomNames)]\n\n  const foundAtoms = await Atoms.find({\n    where: { OR: [{ id_IN: allAtomIds }, { name_IN: allAtomNames }] },\n  })\n\n  if (foundAtoms.length !== allAtomIds.length) {\n    const foundAtomsSet = new Set(foundAtoms.map((atom) => atom.name))\n    const notFound = allAtomNames.filter((name) => !foundAtomsSet.has(name))\n\n    throw new Error(`Can't find Atoms with names \"${notFound.join('\", \"')}\"`)\n  }\n}\n","module.exports = require(\"bull\");","module.exports = require(\"lodash/pick\");","export * from './scrape-ant-design-data'\n","import 'jquery'\nimport type { AntDesignApi } from '@codelab/backend/abstract/core'\nimport { saveFormattedFile } from '@codelab/backend/shared/util'\nimport path from 'path'\nimport type { Browser } from 'puppeteer'\nimport puppeteer from 'puppeteer'\n\ndeclare const $: JQueryStatic\n\nconst BASE_URL = 'https://ant.design/components/'\nconst outputDirectory = './data/antd-v5'\n\nconst getComponentApiData = async (\n  browser: Browser,\n  component: string,\n): Promise<Array<AntDesignApi>> => {\n  const componentUrl = `${BASE_URL}${component}`\n  const componentPage = await browser.newPage()\n\n  await componentPage.goto(componentUrl)\n\n  // Inject jQuery into the page\n  await componentPage.addScriptTag({\n    path: 'node_modules/jquery/dist/jquery.min.js',\n  })\n\n  return await componentPage.evaluate((name) => {\n    const apiTables = Array.from($('table.component-api-table'))\n\n    return apiTables.map((table) => {\n      const apiTitle = $(table)\n        .closest('.dumi-default-table')\n        .prev('h3, h4')\n        .text()\n\n      const rows = Array.from($(table).find('tbody tr'))\n\n      const fields = rows.map((row) => {\n        const rowData = Array.from($(row).find('td')).map(\n          (cell) => cell.textContent,\n        )\n\n        return {\n          defaultValue: rowData[4] ?? '',\n          description: rowData[1] ?? '',\n          property: rowData[0] ?? '',\n          type: rowData[2] ?? '',\n          version: rowData[3] ?? '',\n        }\n      })\n\n      return {\n        atom: {\n          api: apiTitle,\n          name,\n        },\n        fields,\n      }\n    })\n  }, component)\n}\n\nexport const scrapeAntDesignData = async () => {\n  const browser = await puppeteer.launch({ headless: 'new' })\n  const overviewPage = await browser.newPage()\n\n  await overviewPage.goto(`${BASE_URL}overview`, { waitUntil: 'networkidle2' })\n\n  // Inject jQuery into the page\n  await overviewPage.addScriptTag({\n    path: 'node_modules/jquery/dist/jquery.min.js',\n  })\n\n  overviewPage.on('console', (msg) => console.log('PAGE LOG:', msg.text()))\n\n  const components = await overviewPage.evaluate(() => {\n    const sidebarLinks = Array.from(\n      $('section.main-menu-inner .ant-menu-item a'),\n    )\n\n    return sidebarLinks\n      .map((link) => $(link).attr('href')?.replace('/components/', '') || '')\n      .filter((link) => link !== 'overview')\n    // .slice(0, 3)\n  })\n\n  for (const [index, component] of components.entries()) {\n    console.log(\n      `Fetching component data: ${component} (${index + 1}/${\n        components.length\n      })...`,\n    )\n\n    const apiData = await getComponentApiData(browser, component)\n\n    saveFormattedFile(path.join(outputDirectory, `${component}.json`), apiData)\n  }\n\n  await browser.close()\n\n  console.log(\n    'Scraping completed. The data has been saved to the \"data/antd-v5\" directory.',\n  )\n}\n","module.exports = require(\"jquery\");","module.exports = require(\"puppeteer\");","export * from './seed-framework.service'\n","import type { IAtomRecords, TagNode } from '@codelab/backend/abstract/core'\nimport { SeedAtomsService } from '@codelab/backend/application/atom'\nimport { AuthUseCase } from '@codelab/backend/application/service'\nimport { SeedTagsService } from '@codelab/backend/application/tag'\nimport {\n  SeedEmptyApiService,\n  systemTypesData,\n  TypeSeederService,\n} from '@codelab/backend/application/type'\nimport type {\n  IAtomDTO,\n  IAtomType,\n  IFieldDTO,\n} from '@codelab/shared/abstract/core'\nimport { ObjectTyped } from 'object-typed'\n\ninterface FrameworkData {\n  atoms: Partial<IAtomRecords>\n  tags: TagNode\n\n  // This is a callback since we require atom data for fields to connect\n  fields(atoms: Array<IAtomDTO>): Promise<Array<IFieldDTO>>\n}\n\n/**\n * A framework is like Ant Design,  Material UI, or even HTML itself.\n *\n * It contains atoms, api's, tags\n */\nexport class SeedFrameworkService extends AuthUseCase<FrameworkData, void> {\n  seeder = new TypeSeederService()\n\n  async _execute(data: FrameworkData) {\n    await this.seedSystemTypes()\n\n    await this.seedTags(data.tags)\n\n    await this.seedEmptyApi(ObjectTyped.keys(data.atoms))\n\n    const atoms = await this.seedAtoms(data.atoms)\n\n    await this.seedFields(await data.fields(atoms))\n  }\n\n  private async seedSystemTypes() {\n    const types = Object.values(systemTypesData(this.owner))\n\n    return await this.seeder.seedTypes(types, this.owner)\n  }\n\n  private async seedAtoms(atoms: FrameworkData['atoms']) {\n    return new SeedAtomsService(this.owner).execute(atoms)\n  }\n\n  private async seedTags(tags: FrameworkData['tags']) {\n    return new SeedTagsService(this.owner).execute(tags)\n  }\n\n  private async seedEmptyApi(atoms: Array<IAtomType>) {\n    return new SeedEmptyApiService(this.owner).execute(atoms)\n  }\n\n  private async seedFields(fields: Array<IFieldDTO>) {\n    return this.seeder.seedFields(fields)\n  }\n}\n","export * from './commands'\n","export * from './codegen/codegen'\nexport * from './export/export.command'\nexport * from './import/import.service'\nexport * from './reset/reset.command'\nexport * from './scrape/scrape-antd.command'\nexport * from './scrape/scrape-html.command'\nexport * from './seed/seed.command'\nexport * from './tasks/tasks.command'\nexport * from './terraform/terraform.service'\n","import { codegen } from '@graphql-codegen/core'\nimport * as typescriptPlugin from '@graphql-codegen/typescript'\nimport * as typescriptOperationsPlugin from '@graphql-codegen/typescript-operations'\nimport { GraphQLFileLoader } from '@graphql-tools/graphql-file-loader'\nimport { loadDocuments, loadSchema } from '@graphql-tools/load'\nimport { UrlLoader } from '@graphql-tools/url-loader'\nimport fs from 'fs'\nimport { parse, printSchema } from 'graphql'\nimport { documentFiles } from './matched-files'\n\nexport const graphqlCodegen = async () => {\n  // Schema\n  const schema = await loadSchema('http://127.0.0.1:3000/api/graphql', {\n    loaders: [new UrlLoader()],\n  })\n\n  // const schema = await loadSchema('your-schema.graphql', {\n  //   loaders: [new GraphQLFileLoader()],\n  // })\n\n  // Documents - this is an example, you might need to adjust according to your file structure\n  const documents = await loadDocuments(await documentFiles(), {\n    loaders: [new GraphQLFileLoader()],\n  })\n\n  console.log(documents)\n\n  // Call the codegen function\n  const output = await codegen({\n    config: {\n      defaultScalarType: 'unknown',\n      gqlImport: 'graphql-tag#gql',\n      inlineFragmentTypes: 'combine',\n      namingConvention: {\n        enumValues: 'keep',\n      },\n      scalars: {\n        _Any: 'any',\n        DateTime: 'string',\n        Int64: 'number',\n        JSON: 'Record<string, any>',\n        JSONObject: 'Record<string, any>',\n        uuid: 'string',\n        Void: 'void',\n      },\n      skipTypename: true,\n      strictScalars: true,\n    },\n    documents,\n    filename: 'graphql.gen.ts',\n    pluginMap: {\n      typescript: typescriptPlugin,\n      typescriptOperations: typescriptOperationsPlugin,\n      // typescriptGraphqlRequest: typescriptGraphqlRequestPlugin,\n    },\n    plugins: [\n      { typescript: {} },\n      { typescriptOperations: {} },\n      // { typescriptGraphqlRequestPlugin: {} },\n    ],\n    schema: parse(printSchema(schema)),\n  })\n\n  // Write output to a file\n  fs.writeFileSync('API.ts', output)\n  // console.log(out)\n}\n","module.exports = require(\"@graphql-codegen/core\");","module.exports = require(\"@graphql-codegen/typescript\");","module.exports = require(\"@graphql-codegen/typescript-operations\");","module.exports = require(\"@graphql-tools/graphql-file-loader\");","module.exports = require(\"@graphql-tools/load\");","module.exports = require(\"@graphql-tools/url-loader\");","import globby from 'globby'\n\nexport const documentFiles = () =>\n  globby.sync('**/*.graphql', { gitignore: true })\n","module.exports = require(\"globby\");","import { ExportAdminDataService } from '@codelab/backend/application/admin'\nimport { exportUserData } from '@codelab/backend/application/user'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport { saveFormattedFile } from '@codelab/backend/shared/util'\nimport inquirer from 'inquirer'\nimport type { CommandModule } from 'yargs'\nimport yargs from 'yargs'\nimport { getStageOptions, loadStageMiddleware } from '../../shared/command'\nimport type { ExportProps } from '../../shared/path-args'\nimport {\n  seedDataPathOption,\n  skipSeedDataOption,\n  skipUserDataOption,\n  userDataPathOption,\n} from '../../shared/path-args'\nimport { selectUserPrompt } from '../../shared/prompts/select-user'\nimport { Stage } from '../../shared/utils/stage'\n\n/**\n * Entry point for all export. Show users a list of questions such as\n *\n * - Which apps to export, can select none as well\n * - Whether to include types\n *\n */\nexport const exportCommand: CommandModule<ExportProps, ExportProps> = {\n  builder: (argv) =>\n    argv\n      .options({\n        ...skipUserDataOption,\n        ...skipSeedDataOption,\n        ...userDataPathOption,\n        ...seedDataPathOption,\n        ...getStageOptions([Stage.Dev, Stage.Test]),\n      })\n      .middleware([loadStageMiddleware]),\n  command: 'export',\n  describe: 'Export user data',\n  handler: async ({\n    seedDataPath,\n    skipSeedData,\n    skipUserData,\n    userDataPath,\n  }) => {\n    const App = await Repository.instance.App\n    const apps = await App.find()\n\n    const shouldSkipSeedData: boolean =\n      skipSeedData !== undefined\n        ? skipSeedData\n        : !(\n            await inquirer.prompt([\n              {\n                default: false,\n                message: 'Would you like to export seed data?',\n                name: 'confirm',\n                type: 'confirm',\n              },\n            ])\n          ).confirm\n\n    const shouldSkipUserData: boolean =\n      skipUserData !== undefined\n        ? skipUserData\n        : !(\n            await inquirer.prompt([\n              {\n                default: false,\n                message: 'Would you like to export user data?',\n                name: 'confirm',\n                type: 'confirm',\n              },\n            ])\n          ).confirm\n\n    // Exit early if no apps to export\n    if (!shouldSkipUserData && !apps.length) {\n      console.log('No app exists')\n      yargs.exit(0, null!)\n    }\n\n    if (!shouldSkipSeedData) {\n      ;(await new ExportAdminDataService().execute()).saveAsFiles()\n    }\n\n    if (!shouldSkipUserData) {\n      const { selectedAppId, selectedAuth0Id } = await inquirer.prompt([\n        await selectUserPrompt(),\n        {\n          choices: apps.map((app) => ({\n            name: app.name,\n            value: app.id,\n          })),\n          message: 'Select which app to export',\n          name: 'selectedApp',\n          type: 'list',\n        },\n      ])\n\n      const exportedUserData = await exportUserData({\n        id: selectedAppId,\n      })\n\n      await saveFormattedFile(\n        `${selectedAuth0Id}-${Date.now()}.json`,\n        exportedUserData,\n      )\n    }\n\n    yargs.exit(0, null!)\n  },\n}\n","export * from './use-case'\n","export * from './export-user-data'\nexport * from './import-user-data'\n","import type { AppWhere } from '@codelab/backend/abstract/codegen'\nimport type { IUserDataExport } from '@codelab/backend/abstract/core'\nimport { exportApps, exportComponents } from '@codelab/backend/application/app'\nimport { exportResources } from '@codelab/backend/application/resource'\nimport { exportUserTypes } from '@codelab/backend/application/type'\n\nexport const exportUserData = async (where: AppWhere) => {\n  const appsData = await exportApps(where)\n  // TODO: Need to export only types used by app\n  const typesData = await exportUserTypes()\n  const resourcesData = await exportResources()\n  const components = await exportComponents(where)\n\n  const exportData: IUserDataExport = {\n    apps: appsData,\n    components,\n    resources: resourcesData,\n    ...typesData,\n  }\n\n  return exportData\n}\n","export * from './use-case'\n","export * from './export-apps'\nexport * from './export-components'\nexport * from './import-apps'\nexport * from './import-components'\n","import type { AppWhere } from '@codelab/backend/abstract/codegen'\nimport type { IAppExport } from '@codelab/backend/abstract/core'\nimport { AppRepository, getAppPages } from '@codelab/backend/domain/app'\n\nexport const exportApps = async (where: AppWhere) => {\n  const appRepository = new AppRepository()\n  const apps = await appRepository.find(where)\n\n  return apps.reduce(async (appsData, app) => {\n    const pagesData = await getAppPages(app)\n\n    const appExport = {\n      domains: app.domains,\n      id: app.id,\n      name: app.name,\n      pages: pagesData,\n      slug: app.slug,\n    }\n\n    return [...(await appsData), appExport]\n  }, Promise.resolve<Array<IAppExport>>([]))\n}\n","import type { AppWhere } from '@codelab/backend/abstract/codegen'\nimport { AppRepository, getAppComponents } from '@codelab/backend/domain/app'\nimport flatMap from 'lodash/flatMap'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const exportComponents = async (where: AppWhere) => {\n  const appRepository = new AppRepository()\n  const apps = await appRepository.find(where)\n\n  const components = await Promise.all(\n    apps.map(async (app) => {\n      return (await getAppComponents(app)).components\n    }),\n  )\n\n  const uniqueComponents = uniqBy(flatMap(components), 'id')\n\n  return uniqueComponents\n}\n","import type { IAppExport } from '@codelab/backend/abstract/core'\nimport { importDomains } from '@codelab/backend/application/domain'\nimport { createApp } from '@codelab/backend/domain/app'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { logSection, logTask } from '@codelab/shared/utils'\n\nexport const importApps = async (\n  apps: Array<IAppExport> = [],\n  owner: IAuth0Owner,\n) => {\n  logSection('Importing App')\n\n  for (const app of apps) {\n    const importedApp = await createApp(app, owner)\n\n    logTask('Imported App', importedApp.name)\n\n    for await (const domain of app.domains) {\n      await importDomains(domain)\n    }\n  }\n}\n","export * from './use-case'\n","export * from './import-domains'\n","import type { IDomainExport } from '@codelab/backend/abstract/core'\nimport {\n  addVercelDomain,\n  createDomainIfNotExist,\n} from '@codelab/backend/domain/domain'\nimport { logSection } from '@codelab/shared/utils'\n\nexport const importDomains = async (domain: IDomainExport) => {\n  logSection('Importing Domains')\n\n  const newDomainAdded = await addVercelDomain(domain)\n\n  if (!newDomainAdded) {\n    console.log(`No domain information was found for domain: ${domain}`)\n\n    return\n  }\n\n  /**\n   * Create inside our own database\n   */\n  return await createDomainIfNotExist(domain)\n}\n","export * from './repository'\n","export * from './domain.repo'\n","import type { IDomainExport } from '@codelab/backend/abstract/core'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport {\n  PROJECT_NOT_FOUND,\n  vercelApis,\n} from '@codelab/backend/infra/adapter/vercel'\nimport { connectNodeId } from '@codelab/shared/domain/mapper'\nimport { logTask } from '@codelab/shared/utils'\n\n/**\n * If response is 200, we log error & return false\n */\nexport const logAPIError = async (\n  res: Response,\n  requestName: string,\n): Promise<boolean> => {\n  if (res.status !== 200) {\n    let parsedBody = {}\n\n    try {\n      parsedBody = await res.json()\n      // eslint-disable-next-line no-empty\n    } catch {}\n\n    console.error(\n      `[${requestName}] Fail to make request. Response: ${JSON.stringify(\n        parsedBody,\n        null,\n        2,\n      )}`,\n    )\n\n    return false\n  }\n\n  return true\n}\n\n/**\n * Add Vercel domain if doesn't already exist.\n *\n * @return throws if due to error\n */\nexport const addVercelDomain = async (\n  domain: IDomainExport,\n): Promise<boolean> => {\n  const getProjectDomainResponse = await vercelApis.domain.getProjectDomain(\n    domain.name,\n  )\n\n  /**\n   * Add domain if project not found\n   */\n  if (getProjectDomainResponse.status === PROJECT_NOT_FOUND) {\n    const addDomainResponse = await vercelApis.domain.addDomain(domain.name)\n\n    return await logAPIError(addDomainResponse, 'addDomain')\n  }\n\n  return await logAPIError(getProjectDomainResponse, 'getProjectDomain')\n}\n\nexport const createDomainIfNotExist = async (domain: IDomainExport) => {\n  const Domain = await Repository.instance.Domain\n\n  const idExisting = await Domain.find({\n    where: {\n      name: domain.name,\n    },\n  })\n\n  if (idExisting.length) {\n    console.error(`Domain ${domain.name} already exists`)\n\n    return\n  }\n\n  logTask('Create Domain', domain.name, domain)\n\n  await Domain.create({\n    input: [\n      {\n        app: connectNodeId(domain.app.id),\n        id: domain.id,\n        name: domain.name,\n      },\n    ],\n  })\n}\n","import type {\n  IAppExport,\n  IComponentExport,\n} from '@codelab/backend/abstract/core'\nimport { createComponents } from '@codelab/backend/domain/app'\nimport { updateImportedElement } from '@codelab/backend/domain/element'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { logSection } from '@codelab/shared/utils'\n\nexport const importComponents = async (\n  components: Array<IComponentExport>,\n  apps: Array<IAppExport>,\n  owner: IAuth0Owner,\n) => {\n  logSection('Importing components')\n  await createComponents(components, owner)\n\n  // after all the components and elements are created,\n  // we can link the element's renderComponentType\n  for (const app of apps) {\n    for (const page of app.pages) {\n      for (const element of page.elements) {\n        if (element.renderComponentType === null) {\n          continue\n        }\n\n        await updateImportedElement(element)\n      }\n    }\n  }\n}\n","export * from './use-case'\n","export * from './export-resources'\nexport * from './import-resources'\n","import type { IResourceExport } from '@codelab/backend/abstract/core'\nimport {\n  Repository,\n  resourceSelectionSet,\n} from '@codelab/backend/infra/adapter/neo4j'\n\nexport const exportResources = async (): Promise<Array<IResourceExport>> => {\n  const Resource = await Repository.instance.Resource\n\n  return await Resource.find({\n    selectionSet: resourceSelectionSet,\n  })\n}\n","import type { IResourceExport } from '@codelab/backend/abstract/core'\nimport { createResource } from '@codelab/backend/domain/resource'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { logSection, logTask } from '@codelab/shared/utils'\n\nexport const importResources = async (\n  resources: Array<IResourceExport> = [],\n  owner: IAuth0Owner,\n) => {\n  logSection('Importing Resource')\n\n  for (const resource of resources) {\n    const importedResource = await createResource(resource, owner)\n\n    logTask('Imported Resource', resource.name)\n\n    console.info(`Imported resource with id ${importedResource?.id}`)\n  }\n}\n","export * from './repository'\n","export * from './resource.repo'\n","import type { IResourceExport } from '@codelab/backend/abstract/core'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { connectAuth0Owner } from '@codelab/shared/domain/mapper'\n\nexport const createResource = async (\n  resource: IResourceExport,\n  owner: IAuth0Owner,\n) => {\n  const Resource = await Repository.instance.Resource\n\n  const existing = await Resource.find({\n    where: { id: resource.id },\n  })\n\n  if (existing.length) {\n    console.log('Deleting resource before re-creating...')\n\n    await Resource.delete({\n      where: { id: resource.id },\n    })\n  }\n\n  const input = {\n    config: {\n      create: { node: { data: resource.config.data, id: resource.config.id } },\n    },\n    id: resource.id,\n    name: resource.name,\n    owner: connectAuth0Owner(owner),\n    type: resource.type,\n  }\n\n  const {\n    resources: [createdResource],\n  } = await Resource.create({\n    input: [input],\n  })\n\n  return createdResource\n}\n","import 'isomorphic-fetch'\nimport type { IUserDataExport } from '@codelab/backend/abstract/core'\nimport { importApps, importComponents } from '@codelab/backend/application/app'\nimport { importResources } from '@codelab/backend/application/resource'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\n\nexport const importUserData = async (\n  data: IUserDataExport,\n  owner: IAuth0Owner,\n) => {\n  const { apps, components, resources } = data\n\n  await importResources(resources, owner)\n\n  await importApps(apps, owner)\n\n  await importComponents(components, apps, owner)\n}\n","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"inquirer\");","module.exports = require(\"yargs\");","import { getEnv } from '@codelab/shared/config'\nimport dotenv from 'dotenv'\nimport type { MiddlewareFunction, Options } from 'yargs'\nimport { Stage } from './utils/stage'\n\ntype GetStageOptions = (stages: Array<Stage>) => {\n  stage: Options\n}\n\n/**\n * Options used locally\n */\nexport const getStageOptions: GetStageOptions = (stages) => ({\n  stage: {\n    choices: stages,\n    default: Stage.Dev,\n    demandOption: true,\n    describe: 'Stage used to load proper `.env`',\n    type: 'string',\n  },\n})\n\n/**\n * Used locally to load env for other stages\n */\nexport const loadStageMiddleware: MiddlewareFunction = async ({ stage }) => {\n  if (getEnv().circleci.ci) {\n    return\n  }\n\n  // Load prod env only if not CI\n  if (stage === Stage.Prod) {\n    dotenv.config({ override: true, path: '.env.prod' })\n  }\n\n  if (stage === Stage.Dev) {\n    dotenv.config({ override: true, path: '.env' })\n  }\n\n  if (stage === Stage.Test) {\n    dotenv.config({ override: true, path: '.env.test' })\n  }\n}\n","module.exports = require(\"dotenv\");","/**\n * This is the script environment for running processes like CI/CD\n */\nexport enum Stage {\n  // Remote on CircleCi\n  CI = 'ci',\n\n  // Local using primary port\n  Dev = 'dev',\n\n  // Vercel remote\n  Prod = 'prod',\n\n  // Local using secondary port\n  Test = 'test',\n}\n","import { Role } from '@codelab/backend/abstract/codegen'\nimport { User, UserRepository } from '@codelab/backend/domain/user'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport { getEnv } from '@codelab/shared/config'\nimport inquirer from 'inquirer'\nimport { v4 } from 'uuid'\nimport type { MiddlewareFunction, Options } from 'yargs'\nimport { selectUserPrompt } from './prompts/select-user'\nimport { Stage } from './utils/stage'\n\nexport interface ExportProps {\n  seedDataPath?: string\n  skipSeedData?: boolean\n  skipUserData?: boolean\n  userDataPath?: string\n}\n\nexport const seedDataPathOption: { [key: string]: Options } = {\n  seedDataPath: {\n    alias: 'seed',\n    describe: 'File path of the seed data to be exported',\n    // demandOption: true,\n    type: 'string',\n    // default: defaultSeedFilePath,\n  },\n}\n\nexport const userDataPathOption: { [key: string]: Options } = {\n  userDataPath: {\n    alias: 'user',\n    describe: 'File path of the user data to be exported',\n    // demandOption: true,\n    type: 'string',\n  },\n}\n\nexport const skipUserDataOption: { [key: string]: Options } = {\n  skipUserData: {\n    // alias: 's',\n    describe: 'Skip user data',\n    type: 'boolean',\n  },\n}\n\nexport const skipSeedDataOption: { [key: string]: Options } = {\n  skipSeedData: {\n    // alias: 's',\n    describe: 'Skip seed data',\n    type: 'boolean',\n  },\n}\n\nexport const assignUserOption: { email: Options } = {\n  email: {\n    alias: 'e',\n    describe: 'Email of the user to assign to',\n    type: 'string',\n  },\n}\n\nexport const upsertUserMiddleware: MiddlewareFunction = async ({ stage }) => {\n  /**\n   * This may cause errors. The auth0Id may not match up\n   *\n   * Perform upsert here\n   */\n  if (stage === Stage.Dev) {\n    const userRepository: UserRepository = new UserRepository()\n\n    const user = new User({\n      auth0Id: v4(),\n      email: getEnv().auth0.cypressUsername!,\n      id: v4(),\n      roles: [Role.Admin],\n      username: 'Codelab',\n    })\n\n    await userRepository.save(user, { email: user.email })\n  }\n}\n\nexport const selectUser: MiddlewareFunction = async (argv) => {\n  const email = argv['email'] as string\n  const userRepository = new UserRepository()\n\n  const selectedAuth0Id = email\n    ? (await userRepository.findOne({ email }))?.auth0Id\n    : (await inquirer.prompt([await selectUserPrompt()])).selectedAuth0Id\n\n  if (!selectedAuth0Id) {\n    throw new Error('User not found!')\n  }\n\n  const user: IAuth0Owner = { auth0Id: selectedAuth0Id }\n\n  argv['user'] = user\n}\n","export * from './model'\nexport * from './repository'\n","export * from './user.model'\n","import { Role } from '@codelab/backend/abstract/codegen'\nimport type {\n  Auth0SessionUser,\n  IRole,\n  IUserDTO,\n} from '@codelab/shared/abstract/core'\nimport { JWT_CLAIMS } from '@codelab/shared/abstract/core'\nimport { v4 } from 'uuid'\n\nexport class User implements IUserDTO {\n  id: string\n\n  auth0Id: string\n\n  email: string\n\n  username: string\n\n  roles: Array<IRole>\n\n  constructor({ auth0Id, email, id, roles = [], username }: IUserDTO) {\n    this.id = id\n    this.auth0Id = auth0Id\n    this.email = email\n    this.roles = roles\n    this.username = username\n  }\n\n  static fromSession({ email, nickname, sub, ...session }: Auth0SessionUser) {\n    const auth0Id = sub\n    const roles = session[JWT_CLAIMS].roles\n\n    return new User({\n      auth0Id,\n      email,\n      id: v4(),\n      roles: [Role.Admin],\n\n      username: nickname,\n    })\n  }\n}\n\nexport type IUserModel = typeof User\n","export * from './user.repo'\n","import type { User, UserWhere } from '@codelab/backend/abstract/codegen'\nimport {\n  Repository,\n  userSelectionSet,\n} from '@codelab/backend/infra/adapter/neo4j'\nimport { AbstractRepository } from '@codelab/backend/infra/core'\nimport type { IUserDTO } from '@codelab/shared/abstract/core'\n\nexport class UserRepository extends AbstractRepository<\n  IUserDTO,\n  User,\n  UserWhere\n> {\n  private User = Repository.instance.User\n\n  async _find(where: UserWhere) {\n    return await (\n      await this.User\n    ).find({\n      selectionSet: userSelectionSet,\n      where,\n    })\n  }\n\n  protected async _add(users: Array<IUserDTO>) {\n    return (\n      await (\n        await this.User\n      ).create({\n        input: users.map(({ apps, ...user }) => ({\n          ...user,\n        })),\n      })\n    ).users\n  }\n\n  protected async _update({ apps, id, ...user }: IUserDTO, where: UserWhere) {\n    return (\n      await (\n        await this.User\n      ).update({\n        update: {\n          ...user,\n          // apps: apps.map((app) => connectNodeId(app.id)),\n        },\n        where,\n      })\n    ).users[0]\n  }\n}\n\nexport type IUserRepository = typeof UserRepository\n","import { Repository } from '@codelab/backend/infra/adapter/neo4j'\n\nexport interface SelectUserAnswer {\n  selectedAuth0Id: string\n}\n\nexport const selectUserPrompt = async () => {\n  const User = await Repository.instance.User\n  const users = await User.find()\n\n  return {\n    choices: users.map((user) => ({\n      name: user.email,\n      value: user.auth0Id,\n    })),\n    message: 'Select which user to be owner of the app',\n    name: 'selectedAuth0Id',\n    type: 'list',\n  }\n}\n","import type { IUserDataExport } from '@codelab/backend/abstract/core'\nimport { ImportAdminDataService } from '@codelab/backend/application/admin'\nimport { importUserData } from '@codelab/backend/application/user'\nimport { Repository } from '@codelab/backend/infra/adapter/neo4j'\nimport type { PromiseCallback } from '@codelab/shared/abstract/types'\nimport { InjectQueue } from '@nestjs/bull'\nimport { Injectable } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { Queue } from 'bull'\nimport fs from 'fs'\nimport inquirer from 'inquirer'\nimport path from 'path'\nimport type {\n  ArgumentsCamelCase,\n  Argv,\n  CommandBuilder,\n  CommandModule,\n} from 'yargs'\nimport { getStageOptions, loadStageMiddleware } from '../../shared/command'\nimport type { ExportProps } from '../../shared/path-args'\nimport {\n  assignUserOption,\n  seedDataPathOption,\n  skipSeedDataOption,\n  skipUserDataOption,\n  upsertUserMiddleware,\n  userDataPathOption,\n} from '../../shared/path-args'\nimport { selectUserPrompt } from '../../shared/prompts/select-user'\nimport { Stage } from '../../shared/utils/stage'\n\nexport type ImportProps = ExportProps & {\n  email?: string\n}\n\n@Injectable()\nexport class ImportService implements CommandModule<unknown, ImportProps> {\n  constructor(\n    private readonly importAdminDataService: ImportAdminDataService,\n  ) {}\n\n  command = 'import'\n\n  describe = 'Import user data'\n\n  builder(argv: Argv<ImportProps>) {\n    return argv\n      .options({\n        ...assignUserOption,\n        ...skipUserDataOption,\n        ...skipSeedDataOption,\n        ...userDataPathOption,\n        ...seedDataPathOption,\n        ...getStageOptions([Stage.Dev, Stage.Test]),\n      })\n      .middleware([\n        loadStageMiddleware,\n        upsertUserMiddleware,\n        // Issue with inferring option\n      ]) as Argv<ImportProps>\n  }\n\n  handler = this.execute\n  // handler = this.execute.bind(this)\n\n  async execute({\n    email,\n    seedDataPath,\n    skipSeedData,\n    skipUserData,\n  }: ArgumentsCamelCase<ImportProps>) {\n    const User = await Repository.instance.User\n\n    const selectedAuth0Id = email\n      ? (await User.find({ where: { email } }))[0]?.auth0Id\n      : (await inquirer.prompt([await selectUserPrompt()])).selectedAuth0Id\n\n    const shouldSkipSeedData: boolean =\n      skipSeedData !== undefined\n        ? skipSeedData\n        : !(\n            await inquirer.prompt([\n              {\n                default: false,\n                message: 'Would you like to import seed data?',\n                name: 'confirm',\n                type: 'confirm',\n              },\n            ])\n          ).confirm\n\n    const shouldSkipUserData: boolean =\n      skipUserData !== undefined\n        ? skipUserData\n        : !(\n            await inquirer.prompt([\n              {\n                default: false,\n                message: 'Would you like to import user data?',\n                name: 'confirm',\n                type: 'confirm',\n              },\n            ])\n          ).confirm\n\n    /**\n     * Seed atoms & types for the project\n     */\n    if (!shouldSkipSeedData) {\n      await this.importAdminDataService.execute({ auth0Id: selectedAuth0Id })\n    }\n\n    // If we specified a file for import\n    if (!shouldSkipUserData) {\n      const inputFilePath =\n        seedDataPath !== undefined\n          ? seedDataPath\n          : (\n              await inquirer.prompt([\n                {\n                  message: 'Enter a path to import from, relative to ./',\n                  name: 'inputFilePath',\n                  type: 'input',\n                },\n              ])\n            ).inputFilePath\n\n      const json = fs.readFileSync(\n        path.resolve(process.cwd(), inputFilePath),\n        'utf8',\n      )\n\n      const userData = JSON.parse(json) as IUserDataExport\n      console.log('import user data')\n      // await importUserData(userData, { auth0Id: selectedAuth0Id })\n    }\n  }\n}\n","import { AdminService } from '@codelab/backend/domain/admin'\nimport { getDriver } from '@codelab/backend/infra/adapter/neo4j'\nimport type { CommandModule } from 'yargs'\nimport { getStageOptions, loadStageMiddleware } from '../../shared/command'\nimport { Stage } from '../../shared/utils/stage'\n\nexport const resetCommand: CommandModule<unknown, unknown> = {\n  builder: (argv) =>\n    argv\n      .options({\n        ...getStageOptions([\n          Stage.Dev,\n          Stage.Test,\n          // Stage.Prod\n        ]),\n      })\n      .middleware([loadStageMiddleware]),\n  command: 'reset',\n  describe: 'Reset database',\n  handler: async () => {\n    return await new AdminService(getDriver()).reset({ close: true })\n  },\n}\n","export * from './service'\n","export * from './admin.service'\n","// import { getDriver } from '@codelab/backend/infra/adapter/neo4j'\nimport type { Driver } from 'neo4j-driver'\n\nexport class AdminService {\n  constructor(private readonly driver: Driver) {}\n\n  async reset({ close }: { close: boolean } = { close: false }) {\n    const driver = this.driver\n    const session = driver.session()\n\n    try {\n      /**\n       * https://aura.support.neo4j.com/hc/en-us/articles/4412131924883-How-to-wipe-out-delete-all-the-content-in-a-Neo4j-AuraDB-Instance-\n       */\n      const result = await session.executeWrite((tx) =>\n        tx.run('MATCH (n) DETACH DELETE n'),\n      )\n\n      // console.log('result', result)\n    } finally {\n      await session.close()\n    }\n\n    // Don't close since it doesn't work for jest specs\n    if (close) {\n      return await driver.close()\n    }\n  }\n}\n\nexport type IAdminService = typeof AdminService\n","import { scrapeAntDesignData } from '@codelab/backend/application/admin'\nimport type { CommandModule } from 'yargs'\n\nexport const scrapeAntdCommand: CommandModule<unknown, unknown> = {\n  command: 'antd',\n  describe: 'Scrape props data from Ant Design as CSV files',\n  handler: async () => {\n    await scrapeAntDesignData()\n  },\n}\n","import { scrapeAntDesignData } from '@codelab/backend/application/admin'\nimport type { CommandModule } from 'yargs'\n\nexport const scrapeHtmlCommand: CommandModule<unknown, unknown> = {\n  command: 'html',\n  describe:\n    'Scrape html data from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes',\n  handler: async () => {\n    await scrapeAntDesignData()\n  },\n}\n","import { AdminSeederService } from '@codelab/backend/application/admin'\nimport type { IAuth0Owner } from '@codelab/shared/abstract/core'\nimport type { CommandModule } from 'yargs'\nimport { getStageOptions, loadStageMiddleware } from '../../shared/command'\nimport {\n  assignUserOption,\n  selectUser,\n  upsertUserMiddleware,\n} from '../../shared/path-args'\nimport { Stage } from '../../shared/utils/stage'\n\nexport interface SeedCommandOptions {\n  // email: string\n  // stage: Stage\n  user: IAuth0Owner\n}\n\nexport const seedCommand: CommandModule = {\n  builder: (argv) =>\n    argv\n      .options({\n        ...getStageOptions([Stage.Dev, Stage.Test]),\n        ...assignUserOption,\n      })\n      .middleware([loadStageMiddleware, upsertUserMiddleware, selectUser])\n      .command(\n        'antd',\n        'Seed Ant Design framework',\n        (_argv) => _argv,\n        async ({ user }) => {\n          const owner = user as IAuth0Owner\n\n          await new AdminSeederService(owner).seedAntDesign()\n\n          process.exit(0)\n        },\n      )\n      .command(\n        'html',\n        'Seed html',\n        (_argv) => _argv,\n        async ({ user }) => {\n          const owner = user as IAuth0Owner\n\n          await new AdminSeederService(owner).seedHtml()\n\n          process.exit(0)\n        },\n      )\n      .demandCommand(),\n  command: 'seed',\n  describe:\n    'Parse Ant Design scraped CSV files and seed to application as types',\n  handler: async ({ email }) => {\n    // await new SeedDataService().execute(user)\n  },\n}\n","import { generateOgmTypes } from '@codelab/backend/infra/adapter/neo4j'\nimport { execCommand } from '@codelab/backend/infra/adapter/shell'\nimport { spawn } from 'child_process'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport gitChangedFiles from 'git-changed-files'\nimport isPortReachable from 'is-port-reachable'\nimport path from 'path'\nimport type { CommandModule } from 'yargs'\nimport { getStageOptions } from '../../shared/command'\nimport { Stage } from '../../shared/utils/stage'\nimport { Tasks } from '../../shared/utils/tasks'\n\n/**\n * We require this since execCommand creates a new process and any env set before that doesn't apply\n */\nconst NX_TEST = 'npx env-cmd -f .env.test nx'\n\nexport const tasksCommand: CommandModule<unknown, unknown> = {\n  builder: (yargv) =>\n    yargv\n      .options(getStageOptions([Stage.Dev, Stage.Test, Stage.CI]))\n      .command(\n        Tasks.Build,\n        'Build projects',\n        (argv) => argv,\n        ({ stage }) => {\n          if (stage === Stage.Test) {\n            // Added since many times can't find production build of next during push\n            // Maybe related? https://github.com/nrwl/nx/issues/2839\n            execCommand(`${NX_TEST} build platform -c test`)\n          }\n\n          if (stage === Stage.CI) {\n            execCommand(`nx build platform -c ci`)\n          }\n        },\n      )\n      .command(\n        Tasks.Unit,\n        'Run unit tests',\n        (argv) => argv,\n        ({ stage }) => {\n          if (stage === Stage.Test) {\n            // Added since many times can't find production build of next during push\n            // Maybe related? https://github.com/nrwl/nx/issues/2839\n            // execCommand(`${NX_TEST} build platform -c test`)\n            execCommand(\n              `${NX_TEST} affected --target=test --testPathPattern=\"[^i].spec.ts\" --memoryLimit=8192 --color`,\n            )\n          }\n\n          if (stage === Stage.CI) {\n            execCommand(\n              'npx nx affected --target=test --testPathPattern=\"[^i].spec.ts\" --color --parallel=3 --verbose --reporters=default --reporters=jest-junit',\n            )\n          }\n        },\n      )\n      .command(\n        Tasks.Int,\n        'Run integration tests',\n        (argv) => argv,\n        ({ stage }) => {\n          if (stage === Stage.Test) {\n            execCommand(\n              `${NX_TEST} affected --target=test --testPathPattern=\"[i].spec.ts\" --memoryLimit=8192 --color`,\n            )\n          }\n\n          if (stage === Stage.CI) {\n            execCommand(\n              'npx nx affected --target=test --testPathPattern=\"[i].spec.ts\" --color --parallel=4 --reporters=default --reporters=jest-junit --verbose',\n            )\n          }\n        },\n      )\n      .command(\n        Tasks.Codegen,\n        'Run codegen',\n        (argv) => argv.fail((msg, err) => console.log(msg, err)),\n        async ({ stage }) => {\n          if (stage === Stage.Dev) {\n            if (!(await isPortReachable(3000, { host: '127.0.0.1' }))) {\n              console.error('Please start server!')\n              process.exit(0)\n            }\n\n            execCommand('yarn graphql-codegen')\n            // await graphqlCodegen()\n            await generateOgmTypes()\n\n            process.exit(0)\n          }\n\n          if (stage === Stage.CI) {\n            const startServer = `nx serve-test platform -c ci`\n            const runSpecs = `npx wait-on 'http://127.0.0.1:3000' && yarn graphql-codegen && exit 0`\n\n            const runSpecsChildProcess = spawn(runSpecs, {\n              detached: true,\n              shell: true,\n              stdio: 'inherit',\n            })\n\n            const startServerChildProcess = spawn(startServer, {\n              detached: true,\n              shell: true,\n              stdio: 'inherit',\n            })\n\n            runSpecsChildProcess.on('exit', async (code: number) => {\n              if (startServerChildProcess.pid) {\n                await generateOgmTypes()\n\n                try {\n                  process.kill(-startServerChildProcess.pid, 'SIGINT')\n                } catch (error) {\n                  console.error(error)\n                }\n              }\n\n              const { unCommittedFiles } = await gitChangedFiles()\n\n              console.log('Un-committed files', unCommittedFiles)\n\n              const containsGeneratedFiles = unCommittedFiles.reduce(\n                (_matches: boolean, file: string) => {\n                  const filename = path.basename(file)\n\n                  return (\n                    _matches ||\n                    filename.includes('.gen.ts') ||\n                    filename === 'schema.graphql'\n                  )\n                },\n                false,\n              )\n\n              if (containsGeneratedFiles) {\n                execCommand('git diff')\n                console.error('Please run codegen!')\n                process.exit(1)\n              }\n            })\n          }\n        },\n      )\n      .command(\n        Tasks.E2e,\n        'Run e2e tests',\n        (argv) => argv,\n        ({ stage }) => {\n          if (stage === Stage.Test) {\n            execCommand(`${NX_TEST} run platform-e2e:e2e:test `)\n          }\n\n          if (stage === Stage.Dev) {\n            execCommand(`${NX_TEST} run platform-e2e:e2e:dev`)\n          }\n\n          if (stage === Stage.CI) {\n            // Using `affected` here causes CircleCI parallel specs to not work\n            // execCommand(`npx nx affected --target=e2e -c ci`)\n            execCommand(`npx nx run platform-e2e:e2e:ci --verbose`)\n          }\n        },\n      )\n      .command(\n        Tasks.Lint,\n        'Lint projects',\n        (argv) => argv,\n        ({ stage }) => {\n          if (stage === Stage.Test) {\n            execCommand(`yarn cross-env TIMING=1 lint-staged`)\n            execCommand(`npx ls-lint`)\n          }\n\n          if (stage === Stage.CI) {\n            execCommand(\n              `npx nx affected --target=lint --parallel=3 --verbose -c ci`,\n            )\n            // https://github.com/nrwl/nx/discussions/8769\n            execCommand(`npx prettier --check \"./**/*.{graphql,yaml,json}\"`)\n            // execCommand(\n            //   `yarn madge --circular apps libs --extensions ts,tsx,js,jsx`,\n            // )\n            execCommand(`npx ls-lint`)\n          }\n        },\n      )\n      .command(\n        `${Tasks.Commitlint} [edit]`,\n        'Commitlint projects',\n        (argv) => argv,\n        ({ edit, stage }) => {\n          if (stage === Stage.Test) {\n            execCommand(`npx --no-install commitlint --edit ${edit}`)\n          }\n\n          if (stage === Stage.CI) {\n            execCommand(`./scripts/lint/commitlint-ci.sh`)\n          }\n        },\n      )\n\n      .demandCommand(1, 'Please provide a task'),\n  command: 'tasks',\n  describe: 'Run tasks',\n  handler: () => {\n    //\n  },\n}\n","export * from './exec-command'\n","import execa from 'execa'\n\nexport const execCommand = (command: string) => {\n  try {\n    execa.commandSync(command, {\n      shell: true,\n      stdio: 'inherit',\n    })\n  } catch (error) {\n    console.error(error)\n    process.exit(1)\n  }\n}\n","module.exports = require(\"execa\");","module.exports = require(\"child_process\");","module.exports = require(\"git-changed-files\");","module.exports = require(\"is-port-reachable\");","export enum Tasks {\n  Build = 'build',\n  Codegen = 'codegen',\n  Commitlint = 'commitlint',\n  E2e = 'e2e',\n  Int = 'int',\n  Lint = 'lint',\n  Unit = 'unit',\n}\n","import { execCommand } from '@codelab/backend/infra/adapter/shell'\nimport { Injectable } from '@nestjs/common'\nimport type { Argv, CommandModule } from 'yargs'\nimport { getStageOptions } from '../../shared/command'\nimport { Stage } from '../../shared/utils/stage'\n\n@Injectable()\nexport class TerraformService implements CommandModule<unknown, unknown> {\n  builder(yargv: Argv<unknown>) {\n    return yargv\n      .options({\n        ...getStageOptions([Stage.Dev, Stage.CI, Stage.Prod, Stage.Test]),\n      })\n      .command(\n        'init',\n        'terraform init',\n        (argv) => argv,\n        ({ stage }) => {\n          execCommand(`cd terraform/environments/${stage} && ./symlink.sh`)\n          execCommand(`cd terraform/modules && ./symlink.sh`)\n\n          return execCommand(\n            `cd terraform; export TF_WORKSPACE=${stage}; terraform -chdir=environments/${stage} init;`,\n          )\n        },\n      )\n      .command(\n        'plan',\n        'terraform plan',\n        (argv) => argv,\n        ({ stage }) => {\n          return execCommand(\n            `cd terraform; export TF_WORKSPACE=${stage}; terraform -chdir=environments/${stage} plan`,\n          )\n        },\n      )\n      .command(\n        'apply',\n        'terraform apply',\n        (argv) => argv,\n        ({ stage }) => {\n          const autoApprove = stage === Stage.Prod ? '-auto-approve' : ''\n\n          return execCommand(\n            `cd terraform; export TF_WORKSPACE=${stage}; terraform -chdir=environments/${stage} apply ${autoApprove}`,\n          )\n        },\n      )\n      .command(\n        'validate',\n        'terraform validate',\n        (argv) => argv,\n        ({ stage }) => {\n          return execCommand(\n            `cd terraform; export TF_WORKSPACE=${stage}; terraform -chdir=environments/${stage} validate`,\n          )\n        },\n      )\n      .command(\n        'destroy',\n        'terraform destroy',\n        (argv) => argv,\n        ({ stage }) => {\n          return execCommand(\n            `cd terraform; export TF_WORKSPACE=${stage}; terraform -chdir=environments/${stage} destroy`,\n          )\n        },\n      )\n      .demandCommand(1, 'Please provide a task')\n  }\n\n  command = 'terraform'\n\n  describe = 'Terraform commands'\n\n  handler() {\n    //\n  }\n}\n","import {\n  exportCommand,\n  ImportService,\n  resetCommand,\n  scrapeAntdCommand,\n  scrapeHtmlCommand,\n  seedCommand,\n  tasksCommand,\n  TerraformService,\n} from '@codelab/backend/infra/adapter/cli'\nimport { Global, Injectable } from '@nestjs/common'\nimport type { Argv } from 'yargs'\nimport yargs, { CommandModule, scriptName } from 'yargs'\nimport { hideBin } from 'yargs/helpers'\n\n@Injectable()\nexport class CommandService {\n  constructor(\n    private readonly importService: ImportService,\n    private readonly terraformService: TerraformService,\n  ) {}\n\n  exec() {\n    // this.importService.execute.bind(this)\n\n    void yargs(hideBin(process.argv))\n      .scriptName('cli')\n      /**\n       * These scripts could act on different deployment environment, so we group under `data`\n       */\n      .command(seedCommand)\n      .command(resetCommand)\n      .command(this.importService)\n      .command(exportCommand)\n      /**\n       * These scripts don't require env to be explicitly set\n       */\n      .command(tasksCommand)\n      /**\n       * This uses puppeteer to scrape the API documentation as CSV file\n       */\n      // .command(scrapeCommand)\n      .command('scrape', 'Antd / Html', (argv) =>\n        argv.command(scrapeAntdCommand).command(scrapeHtmlCommand),\n      )\n\n      /**\n       * Terraform\n       */\n      .command(this.terraformService)\n      .demandCommand(1, 'Please provide a command')\n      // Must add this to throw error for unknown arguments\n      .strict().argv\n\n    console.log('Done! Please press Ctrl+C')\n  }\n}\n","module.exports = require(\"yargs/helpers\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Must be imported first\n// eslint-disable-next-line simple-import-sort/imports\nimport { otelSDK } from '@codelab/backend/infra/adapter/otel'\nimport { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\nimport { AppModule } from './app/app.module'\nimport { CommandModule } from './commands/command.module'\nimport { CommandService } from './commands/command.service'\nimport { command } from 'yargs'\nimport type { MicroserviceOptions } from '@nestjs/microservices'\nimport { Transport } from '@nestjs/microservices'\n\nconst bootstrap = async () => {\n  await otelSDK.start()\n\n  const app = await NestFactory.createApplicationContext(AppModule, {\n    // logger: false,\n  })\n\n  await app.init()\n  // await app.close()\n}\n\nvoid bootstrap()\n"],"names":[],"sourceRoot":""}