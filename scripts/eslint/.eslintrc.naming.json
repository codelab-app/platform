{
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {}
    },
    {
      "plugins": ["react"],
      "files": ["*.tsx"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "cases": {
              "camelCase": false,
              "pascalCase": true
            },
            "ignore": [
              ".*\\.hook\\.tsx?$",
              ".*\\.stories\\.tsx?$",
              "preview.tsx"
            ]
          }
        ]
      }
    },
    {
      "files": ["*.hook.ts", "*.hook.tsx"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "cases": {
              "camelCase": true,
              "pascalCase": false
            }
          }
        ]
      }
    },
    {
      "files": ["*.ts"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "cases": {
              "camelCase": false,
              "pascalCase": false,
              "kebabCase": true
            },
            "ignore": [".*\\.hook\\.tsx?$"]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": ["typeProperty"],
            "format": ["camelCase", "PascalCase"],
            "filter": {
              "regex": "^data-",
              "match": false
            },
            "leadingUnderscore": "allowSingleOrDouble"
          },
          // DTO should be Dto
          {
            "selector": ["variable", "typeAlias"],
            "format": ["PascalCase"],
            "filter": {
              "regex": "DTO",
              "match": true
            },
            "custom": {
              "regex": "^[A-Z].*DTO.*",
              "match": false
            }
          }
        ]
      }
    }
  ]
}
