overwrite: true
#hooks:
#  afterAllFileWrite:
#    - yarn prettier --write
#    - yarn eslint --ext ts --fix

schema: schema.api.graphql
config:
  # defaultBaseOptions:
  #   operationName: 'dgraph'
  scalars:
    uuid: string
    json: Record<string, any>
    jsonb: Record<string, any>
    DateTime: string
    Int64: number
    _Any: any
    Void: void

generates:
  libs/shared/codegen/graphql/src/types.api.graphql.gen.ts:
    documents:
      - libs/**/*.{web,api,fragment}.graphql
      - apps/**/*.{web,api,fragment}.graphql
    plugins:
      - typescript
  ./:
    documents:
      - '{apps,libs}/**/*.{web,fragment}.graphql'
    preset: near-operation-file
    presetConfig:
      extension: .graphql.gen.ts
      baseTypesPath: ~@codelab/shared/codegen/graphql
    plugins:
      - typescript-operations
      - typescript-react-apollo
    #      - typescript-document-nodes
    # Switch off if have deeply nested issues
    config:
      inlineFragmentTypes: combine
      documentVariableSuffix: Gql
      gqlImport: '@apollo/client#gql'
      skipTypename: true
      strictScalars: true
      defaultScalarType: unknown
      withRefetchFn: true
  # We allow backend to import fragments from frontend
  ./libs/backend/:
    documents:
      - '**/*.{api,fragment}.graphql'
    preset: near-operation-file
    presetConfig:
      extension: .graphql.gen.ts
      baseTypesPath: ~@codelab/shared/codegen/graphql
    plugins:
      - typescript-operations
      - typescript-react-apollo
    #      - typescript-document-nodes
    # Switch off if have deeply nested issues
    config:
      inlineFragmentTypes: combine
      documentVariableSuffix: Gql
      gqlImport: '@apollo/client#gql'
      skipTypename: true
      strictScalars: true
      defaultScalarType: unknown
      withRefetchFn: true
