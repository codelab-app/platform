overwrite: true
hooks:
  afterAllFileWrite:
    # - yarn eslint --fix
    - yarn prettier --write

# If you're in the bind of not being able to run the app because of a codegen error
# but you can't run codegen because you can't run the app - uncomment this, run codegen and comment it back
# schema: schema.api.v2.graphql
schema: http://127.0.0.1:3000/api/graphql
config:
  scalars:
    uuid: string
    JSON: Record<string, any>
    JSONObject: Record<string, any>
    DateTime: string
    Int64: number
    _Any: any
    Void: void

generates:
  schema.api.v2.graphql:
    plugins:
      - schema-ast
  # Generate Typescript types to be imported by other generators
  libs/shared/abstract/codegen-v2/src/types.api.v2.graphql.gen.ts:
    documents:
      - '{apps,libs}/**/*.v2.graphql'
    plugins:
      - typescript
    config:
      namingConvention:
        enumValues: keep

  ./libs/:
    documents:
      - '**/*.{endpoints,fragment}.v2.1.graphql'
    preset: near-operation-file
    presetConfig:
      extension: .graphql.gen.ts
      baseTypesPath: ~@codelab/shared/abstract/codegen-v2
    plugins:
      - typescript-operations
      - typescript-graphql-request

  ./libs/frontend/:
    documents:
      - '**/*.{endpoints,fragment}.v2.graphql'
    preset: near-operation-file
    presetConfig:
      extension: .graphql.gen.ts
      baseTypesPath: ~@codelab/shared/abstract/codegen-v2
    plugins:
      - typescript-operations
      - dist/libs/tools/rtk-query:
          importBaseApiFrom: '@codelab/frontend/model/infra/redux'
          exportHooks: true
          extraOptions:
            context:
              env: 'v2'
    config:
      inlineFragmentTypes: combine
      documentVariableSuffix: Gql
      gqlImport: 'graphql-request#gql'
      skipTypename: true
      strictScalars: true
      defaultScalarType: unknown
      withRefetchFn: true
