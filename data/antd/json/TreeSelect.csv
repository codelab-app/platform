"property;description;type;default;version\nallowClear;Whether allow clear;boolean;false;\nautoClearSearchValue;If auto clear search input value when multiple select is selected/deselected;boolean;true;\nbordered;Whether has border style;boolean;true;\ndefaultValue;To set the initial selected treeNode(s);string | string[];-;\ndisabled;Disabled or not;boolean;false;\ndropdownClassName;The className of dropdown menu;string;-;\ndropdownMatchSelectWidth;Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll;boolean | number;true;\ndropdownRender;Customize dropdown content;(originNode: ReactNode, props) => ReactNode;-;\ndropdownStyle;To set the style of the dropdown menu;CSSProperties;-;\nfilterTreeNode;Whether to filter treeNodes by input value. The value of treeNodeFilterProp is used for filtering by default;boolean | function(inputValue: string, treeNode: TreeNode) (should return boolean);function;\ngetPopupContainer;To set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative reposition. example;function(triggerNode);() => document.body;\nlabelInValue;Whether to embed label in value, turn the format of value from string to {value: string, label: ReactNode, halfChecked: string[]};boolean;false;\nlistHeight;Config popup height;number;256;\nloadData;Load data asynchronously;function(node);-;\nmaxTagCount;Max tag count to show. responsive will cost render performance;number | responsive;-;responsive: 4.10\nmaxTagPlaceholder;Placeholder for not showing tags;ReactNode | function(omittedValues);-;\nmultiple;Support multiple or not, will be true when enable treeCheckable;boolean;false;\nplaceholder;Placeholder of the select input;string;-;\nsearchValue;Work with onSearch to make search value controlled;string;-;\nshowArrow;Whether to show the suffixIconï¼Œwhen single selection mode, default true;boolean;-;\nshowCheckedStrategy;The way show selected item in box when treeCheckable set. Default: just show child nodes. TreeSelect.SHOW_ALL: show all checked treeNodes (include parent treeNode). TreeSelect.SHOW_PARENT: show checked treeNodes (just show parent treeNode);TreeSelect.SHOW_ALL | TreeSelect.SHOW_PARENT | TreeSelect.SHOW_CHILD;TreeSelect.SHOW_CHILD;\nshowSearch;Support search or not;boolean;single: false | multiple: true;\nsize;To set the size of the select input;large | middle | small;-;\nsuffixIcon;The custom suffix icon,you must set showArrow to true manually in multiple selection mode;ReactNode;-;\nswitcherIcon;customize collapse | expand icon of tree node;ReactNode;-;\ntreeCheckable;Whether to show checkbox on the treeNodes;boolean;false;\ntreeCheckStrictly;Whether to check nodes precisely (in the checkable mode), means parent and child nodes are not associated, and it will make labelInValue be true;boolean;false;\ntreeData;Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value);array<{ value, title, children, [disabled, disableCheckbox, selectable, checkable] }>;[];\ntreeDataSimpleMode;Enable simple mode of treeData. Changes the treeData schema to: [{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id). It is possible to replace the default id and pId keys by providing object to treeDataSimpleMode;boolean | object<{ id: string, pId: string, rootPId: string }>;false;\ntreeDefaultExpandAll;Whether to expand all treeNodes by default;boolean;false;\ntreeDefaultExpandedKeys;Default expanded treeNodes;string[];-;\ntreeExpandedKeys;Set expanded keys;string[];-;\ntreeIcon;Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to true;boolean;false;\ntreeNodeFilterProp;Will be used for filtering if filterTreeNode returns true;string;value;\ntreeNodeLabelProp;Will render as content of select;string;title;\nvalue;To set the current selected treeNode(s);string | string[];-;\nvirtual;Disable virtual scroll when set to false;boolean;true;4.1.0\nonChange;A callback function, can be executed when selected treeNodes or input value change;function(value, label, extra);-;\nonDropdownVisibleChange;Called when dropdown open;function(open);-;\nonSearch;A callback function, can be executed when the search input changes;function(value: string);-;\nonSelect;A callback function, can be executed when you select a treeNode;function(value, node, extra);-;\nonTreeExpand;A callback function, can be executed when treeNode expanded;function(expandedKeys);-;"