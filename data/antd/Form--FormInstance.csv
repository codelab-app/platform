"property","description","type","default","version","isEnum"
"getFieldError","Get the error messages by the field name","(name: NamePath) => string[]","",,false
"getFieldInstance","Get field instance","(name: NamePath) => any","4.4.0",,false
"getFieldsError","Get the error messages by the fields name. Return as an array","(nameList?: NamePath[]) => FieldError[]","",,false
"getFieldsValue","Get values by a set of field names. Return according to the corresponding structure. Default return mounted field value, but you can use getFieldsValue(true) to get all values","(nameList?: NamePath[], filterFunc?: (meta: { touched: boolean, validating: boolean }) => boolean) => any","",,false
"getFieldValue","Get the value by the field name","(name: NamePath) => any","",,false
"isFieldsTouched","Check if fields have been operated. Check if all fields is touched when allTouched is true","(nameList?: NamePath[], allTouched?: boolean) => boolean","",,false
"isFieldTouched","Check if a field has been operated","(name: NamePath) => boolean","",,false
"isFieldValidating","Check field if is in validating","(name: NamePath) => boolean","",,false
"resetFields","Reset fields to initialValues","(fields?: FieldData[]) => void","",,false
"scrollToField","Scroll to field position","(name: NamePath, options: [ScrollOptions]) => void","",,false
"setFields","Set fields status","(fields: FieldData[]) => void","",,false
"setFieldsValue","Set fields value","(values) => void","",,false
"submit","Submit the form. It's same as click submit button","() => void","",,false
"validateFields","Validate fields","(nameList?: NamePath[]) => Promise","",,false