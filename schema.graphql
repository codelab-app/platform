enum ActionKind {
  """Action responsible for fetching data from a resource"""
  ApiAction

  """Action with custom code"""
  CodeAction
}

"""Allows picking a action from the list of actions"""
type ActionType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): ActionTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ActionTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type ActionTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ActionTypeConnectInput {
  fieldRefs: [ActionTypeFieldRefsConnectFieldInput!]
  owner: ActionTypeOwnerConnectFieldInput
}

input ActionTypeConnectWhere {
  node: ActionTypeWhere!
}

input ActionTypeCreateInput {
  fieldRefs: ActionTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = ActionType
  name: String!
  owner: ActionTypeOwnerFieldInput
}

type ActionTypeCreatedEvent {
  createdActionType: ActionTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ActionTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type ActionTypeDeletedEvent {
  deletedActionType: ActionTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ActionTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type ActionTypeEdge {
  cursor: String!
  node: ActionType!
}

type ActionTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type ActionTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: ActionTypeFieldFieldRefsNodeAggregateSelection
}

type ActionTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input ActionTypeFieldRefsAggregateInput {
  AND: [ActionTypeFieldRefsAggregateInput!]
  NOT: ActionTypeFieldRefsAggregateInput
  OR: [ActionTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ActionTypeFieldRefsNodeAggregationWhereInput
}

input ActionTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input ActionTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input ActionTypeFieldRefsFieldInput {
  connect: [ActionTypeFieldRefsConnectFieldInput!]
  create: [ActionTypeFieldRefsCreateFieldInput!]
}

input ActionTypeFieldRefsNodeAggregationWhereInput {
  AND: [ActionTypeFieldRefsNodeAggregationWhereInput!]
  NOT: ActionTypeFieldRefsNodeAggregationWhereInput
  OR: [ActionTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input ActionTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input ActionTypeFieldRefsUpdateFieldInput {
  connect: [ActionTypeFieldRefsConnectFieldInput!]
  create: [ActionTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: ActionTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input ActionTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ActionTypeSort objects to sort ActionTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ActionTypeSort!]
}

input ActionTypeOwnerAggregateInput {
  AND: [ActionTypeOwnerAggregateInput!]
  NOT: ActionTypeOwnerAggregateInput
  OR: [ActionTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ActionTypeOwnerNodeAggregationWhereInput
}

input ActionTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ActionTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ActionTypeOwnerFieldInput {
  connect: ActionTypeOwnerConnectFieldInput
  create: ActionTypeOwnerCreateFieldInput
}

input ActionTypeOwnerNodeAggregationWhereInput {
  AND: [ActionTypeOwnerNodeAggregationWhereInput!]
  NOT: ActionTypeOwnerNodeAggregationWhereInput
  OR: [ActionTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ActionTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ActionTypeOwnerUpdateFieldInput {
  connect: ActionTypeOwnerConnectFieldInput
  create: ActionTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: ActionTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort ActionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ActionTypeSort object.
"""
input ActionTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input ActionTypeSubscriptionWhere {
  AND: [ActionTypeSubscriptionWhere!]
  NOT: ActionTypeSubscriptionWhere
  OR: [ActionTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input ActionTypeUpdateInput {
  fieldRefs: [ActionTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: ActionTypeOwnerUpdateFieldInput
}

type ActionTypeUpdatedEvent {
  event: EventType!
  previousState: ActionTypeEventPayload!
  timestamp: Float!
  updatedActionType: ActionTypeEventPayload!
}

type ActionTypeUserOwnerAggregationSelection {
  count: Int!
  node: ActionTypeUserOwnerNodeAggregateSelection
}

type ActionTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ActionTypeWhere {
  AND: [ActionTypeWhere!]
  NOT: ActionTypeWhere
  OR: [ActionTypeWhere!]
  fieldRefsAggregate: ActionTypeFieldRefsAggregateInput

  """
  Return ActionTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return ActionTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ActionTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ActionTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return ActionTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return ActionTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return ActionTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return ActionTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: ActionTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type ActionTypesConnection {
  edges: [ActionTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

union AnyAction = ApiAction | CodeAction

input AnyActionWhere {
  ApiAction: ApiActionWhere
  CodeAction: CodeActionWhere
}

union AnyType = ActionType | AppType | ArrayType | CodeMirrorType | ElementType | EnumType | InterfaceType | LambdaType | PageType | PrimitiveType | ReactNodeType | RenderPropType | RichTextType | UnionType | UnknownType

input AnyTypeWhere {
  ActionType: ActionTypeWhere
  AppType: AppTypeWhere
  ArrayType: ArrayTypeWhere
  CodeMirrorType: CodeMirrorTypeWhere
  ElementType: ElementTypeWhere
  EnumType: EnumTypeWhere
  InterfaceType: InterfaceTypeWhere
  LambdaType: LambdaTypeWhere
  PageType: PageTypeWhere
  PrimitiveType: PrimitiveTypeWhere
  ReactNodeType: ReactNodeTypeWhere
  RenderPropType: RenderPropTypeWhere
  RichTextType: RichTextTypeWhere
  UnionType: UnionTypeWhere
  UnknownType: UnknownTypeWhere
}

type ApiAction implements BaseAction {
  config(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  configAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): ApiActionPropConfigAggregationSelection
  configConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ApiActionConfigConnectionSort!], where: ApiActionConfigConnectionWhere): ApiActionConfigConnection!
  errorAction(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyActionWhere): AnyAction
  errorActionConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, where: ApiActionErrorActionConnectionWhere): ApiActionErrorActionConnection!
  id: ID!
  name: String!
  postRenderElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  postRenderElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ApiActionElementPostRenderElementAggregationSelection
  postRenderElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionPostRenderElementConnectionSort!], where: BaseActionPostRenderElementConnectionWhere): BaseActionPostRenderElementConnection!
  preRenderElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  preRenderElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ApiActionElementPreRenderElementAggregationSelection
  preRenderElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionPreRenderElementConnectionSort!], where: BaseActionPreRenderElementConnectionWhere): BaseActionPreRenderElementConnection!

  """Resource to fetch data from"""
  resource(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ResourceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ResourceSort!], where: ResourceWhere): Resource!
  resourceAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ResourceWhere): ApiActionResourceResourceAggregationSelection
  resourceConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ApiActionResourceConnectionSort!], where: ApiActionResourceConnectionWhere): ApiActionResourceConnection!
  store(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): Store!
  storeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: StoreWhere): ApiActionStoreStoreAggregationSelection
  storeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionStoreConnectionSort!], where: BaseActionStoreConnectionWhere): BaseActionStoreConnection!

  """Response handlers"""
  successAction(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyActionWhere): AnyAction
  successActionConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, where: ApiActionSuccessActionConnectionWhere): ApiActionSuccessActionConnection!
  type: ActionKind!
}

type ApiActionAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ApiActionConfigAggregateInput {
  AND: [ApiActionConfigAggregateInput!]
  NOT: ApiActionConfigAggregateInput
  OR: [ApiActionConfigAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ApiActionConfigNodeAggregationWhereInput
}

input ApiActionConfigConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type ApiActionConfigConnection {
  edges: [ApiActionConfigRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ApiActionConfigConnectionSort {
  node: PropSort
}

input ApiActionConfigConnectionWhere {
  AND: [ApiActionConfigConnectionWhere!]
  NOT: ApiActionConfigConnectionWhere
  OR: [ApiActionConfigConnectionWhere!]
  node: PropWhere
}

input ApiActionConfigCreateFieldInput {
  node: PropCreateInput!
}

input ApiActionConfigDeleteFieldInput {
  where: ApiActionConfigConnectionWhere
}

input ApiActionConfigDisconnectFieldInput {
  where: ApiActionConfigConnectionWhere
}

input ApiActionConfigFieldInput {
  connect: ApiActionConfigConnectFieldInput
  create: ApiActionConfigCreateFieldInput
}

input ApiActionConfigNodeAggregationWhereInput {
  AND: [ApiActionConfigNodeAggregationWhereInput!]
  NOT: ApiActionConfigNodeAggregationWhereInput
  OR: [ApiActionConfigNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ApiActionConfigRelationship {
  cursor: String!
  node: Prop!
}

input ApiActionConfigUpdateConnectionInput {
  node: PropUpdateInput
}

input ApiActionConfigUpdateFieldInput {
  connect: ApiActionConfigConnectFieldInput
  create: ApiActionConfigCreateFieldInput
  delete: ApiActionConfigDeleteFieldInput
  disconnect: ApiActionConfigDisconnectFieldInput
  update: ApiActionConfigUpdateConnectionInput
  where: ApiActionConfigConnectionWhere
}

input ApiActionConnectInput {
  config: ApiActionConfigConnectFieldInput
  errorAction: ApiActionErrorActionConnectInput
  postRenderElement: [ApiActionPostRenderElementConnectFieldInput!]
  preRenderElement: [ApiActionPreRenderElementConnectFieldInput!]
  resource: ApiActionResourceConnectFieldInput
  store: ApiActionStoreConnectFieldInput
  successAction: ApiActionSuccessActionConnectInput
}

input ApiActionConnectWhere {
  node: ApiActionWhere!
}

input ApiActionCreateInput {
  config: ApiActionConfigFieldInput
  errorAction: ApiActionErrorActionCreateInput
  id: ID!
  name: String!
  postRenderElement: ApiActionPostRenderElementFieldInput
  preRenderElement: ApiActionPreRenderElementFieldInput
  resource: ApiActionResourceFieldInput
  store: ApiActionStoreFieldInput
  successAction: ApiActionSuccessActionCreateInput
  type: ActionKind! = ApiAction
}

type ApiActionCreatedEvent {
  createdApiAction: ApiActionEventPayload!
  event: EventType!
  timestamp: Float!
}

input ApiActionDeleteInput {
  config: ApiActionConfigDeleteFieldInput
  errorAction: ApiActionErrorActionDeleteInput
  postRenderElement: [BaseActionPostRenderElementDeleteFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDeleteFieldInput!]
  resource: ApiActionResourceDeleteFieldInput
  store: BaseActionStoreDeleteFieldInput
  successAction: ApiActionSuccessActionDeleteInput
}

type ApiActionDeletedEvent {
  deletedApiAction: ApiActionEventPayload!
  event: EventType!
  timestamp: Float!
}

input ApiActionDisconnectInput {
  config: ApiActionConfigDisconnectFieldInput
  errorAction: ApiActionErrorActionDisconnectInput
  postRenderElement: [BaseActionPostRenderElementDisconnectFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDisconnectFieldInput!]
  resource: ApiActionResourceDisconnectFieldInput
  store: BaseActionStoreDisconnectFieldInput
  successAction: ApiActionSuccessActionDisconnectInput
}

type ApiActionEdge {
  cursor: String!
  node: ApiAction!
}

type ApiActionElementPostRenderElementAggregationSelection {
  count: Int!
  node: ApiActionElementPostRenderElementNodeAggregateSelection
}

type ApiActionElementPostRenderElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ApiActionElementPreRenderElementAggregationSelection {
  count: Int!
  node: ApiActionElementPreRenderElementNodeAggregateSelection
}

type ApiActionElementPreRenderElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

input ApiActionErrorActionApiActionConnectFieldInput {
  connect: ApiActionConnectInput
  where: ApiActionConnectWhere
}

input ApiActionErrorActionApiActionConnectionWhere {
  AND: [ApiActionErrorActionApiActionConnectionWhere!]
  NOT: ApiActionErrorActionApiActionConnectionWhere
  OR: [ApiActionErrorActionApiActionConnectionWhere!]
  node: ApiActionWhere
}

input ApiActionErrorActionApiActionCreateFieldInput {
  node: ApiActionCreateInput!
}

input ApiActionErrorActionApiActionDeleteFieldInput {
  delete: ApiActionDeleteInput
  where: ApiActionErrorActionApiActionConnectionWhere
}

input ApiActionErrorActionApiActionDisconnectFieldInput {
  disconnect: ApiActionDisconnectInput
  where: ApiActionErrorActionApiActionConnectionWhere
}

input ApiActionErrorActionApiActionFieldInput {
  connect: ApiActionErrorActionApiActionConnectFieldInput
  create: ApiActionErrorActionApiActionCreateFieldInput
}

input ApiActionErrorActionApiActionUpdateConnectionInput {
  node: ApiActionUpdateInput
}

input ApiActionErrorActionApiActionUpdateFieldInput {
  connect: ApiActionErrorActionApiActionConnectFieldInput
  create: ApiActionErrorActionApiActionCreateFieldInput
  delete: ApiActionErrorActionApiActionDeleteFieldInput
  disconnect: ApiActionErrorActionApiActionDisconnectFieldInput
  update: ApiActionErrorActionApiActionUpdateConnectionInput
  where: ApiActionErrorActionApiActionConnectionWhere
}

input ApiActionErrorActionCodeActionConnectFieldInput {
  connect: CodeActionConnectInput
  where: CodeActionConnectWhere
}

input ApiActionErrorActionCodeActionConnectionWhere {
  AND: [ApiActionErrorActionCodeActionConnectionWhere!]
  NOT: ApiActionErrorActionCodeActionConnectionWhere
  OR: [ApiActionErrorActionCodeActionConnectionWhere!]
  node: CodeActionWhere
}

input ApiActionErrorActionCodeActionCreateFieldInput {
  node: CodeActionCreateInput!
}

input ApiActionErrorActionCodeActionDeleteFieldInput {
  delete: CodeActionDeleteInput
  where: ApiActionErrorActionCodeActionConnectionWhere
}

input ApiActionErrorActionCodeActionDisconnectFieldInput {
  disconnect: CodeActionDisconnectInput
  where: ApiActionErrorActionCodeActionConnectionWhere
}

input ApiActionErrorActionCodeActionFieldInput {
  connect: ApiActionErrorActionCodeActionConnectFieldInput
  create: ApiActionErrorActionCodeActionCreateFieldInput
}

input ApiActionErrorActionCodeActionUpdateConnectionInput {
  node: CodeActionUpdateInput
}

input ApiActionErrorActionCodeActionUpdateFieldInput {
  connect: ApiActionErrorActionCodeActionConnectFieldInput
  create: ApiActionErrorActionCodeActionCreateFieldInput
  delete: ApiActionErrorActionCodeActionDeleteFieldInput
  disconnect: ApiActionErrorActionCodeActionDisconnectFieldInput
  update: ApiActionErrorActionCodeActionUpdateConnectionInput
  where: ApiActionErrorActionCodeActionConnectionWhere
}

input ApiActionErrorActionConnectInput {
  ApiAction: ApiActionErrorActionApiActionConnectFieldInput
  CodeAction: ApiActionErrorActionCodeActionConnectFieldInput
}

type ApiActionErrorActionConnection {
  edges: [ApiActionErrorActionRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ApiActionErrorActionConnectionWhere {
  ApiAction: ApiActionErrorActionApiActionConnectionWhere
  CodeAction: ApiActionErrorActionCodeActionConnectionWhere
}

input ApiActionErrorActionCreateInput {
  ApiAction: ApiActionErrorActionApiActionFieldInput
  CodeAction: ApiActionErrorActionCodeActionFieldInput
}

input ApiActionErrorActionDeleteInput {
  ApiAction: ApiActionErrorActionApiActionDeleteFieldInput
  CodeAction: ApiActionErrorActionCodeActionDeleteFieldInput
}

input ApiActionErrorActionDisconnectInput {
  ApiAction: ApiActionErrorActionApiActionDisconnectFieldInput
  CodeAction: ApiActionErrorActionCodeActionDisconnectFieldInput
}

type ApiActionErrorActionRelationship {
  cursor: String!
  node: AnyAction!
}

input ApiActionErrorActionUpdateInput {
  ApiAction: ApiActionErrorActionApiActionUpdateFieldInput
  CodeAction: ApiActionErrorActionCodeActionUpdateFieldInput
}

type ApiActionEventPayload {
  id: ID!
  name: String!
  type: ActionKind!
}

input ApiActionOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ApiActionSort objects to sort ApiActions by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ApiActionSort!]
}

input ApiActionPostRenderElementAggregateInput {
  AND: [ApiActionPostRenderElementAggregateInput!]
  NOT: ApiActionPostRenderElementAggregateInput
  OR: [ApiActionPostRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ApiActionPostRenderElementNodeAggregationWhereInput
}

input ApiActionPostRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

input ApiActionPostRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input ApiActionPostRenderElementFieldInput {
  connect: [ApiActionPostRenderElementConnectFieldInput!]
  create: [ApiActionPostRenderElementCreateFieldInput!]
}

input ApiActionPostRenderElementNodeAggregationWhereInput {
  AND: [ApiActionPostRenderElementNodeAggregationWhereInput!]
  NOT: ApiActionPostRenderElementNodeAggregationWhereInput
  OR: [ApiActionPostRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

input ApiActionPostRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input ApiActionPostRenderElementUpdateFieldInput {
  connect: [ApiActionPostRenderElementConnectFieldInput!]
  create: [ApiActionPostRenderElementCreateFieldInput!]
  delete: [BaseActionPostRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPostRenderElementDisconnectFieldInput!]
  update: ApiActionPostRenderElementUpdateConnectionInput
  where: BaseActionPostRenderElementConnectionWhere
}

input ApiActionPreRenderElementAggregateInput {
  AND: [ApiActionPreRenderElementAggregateInput!]
  NOT: ApiActionPreRenderElementAggregateInput
  OR: [ApiActionPreRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ApiActionPreRenderElementNodeAggregationWhereInput
}

input ApiActionPreRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

input ApiActionPreRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input ApiActionPreRenderElementFieldInput {
  connect: [ApiActionPreRenderElementConnectFieldInput!]
  create: [ApiActionPreRenderElementCreateFieldInput!]
}

input ApiActionPreRenderElementNodeAggregationWhereInput {
  AND: [ApiActionPreRenderElementNodeAggregationWhereInput!]
  NOT: ApiActionPreRenderElementNodeAggregationWhereInput
  OR: [ApiActionPreRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

input ApiActionPreRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input ApiActionPreRenderElementUpdateFieldInput {
  connect: [ApiActionPreRenderElementConnectFieldInput!]
  create: [ApiActionPreRenderElementCreateFieldInput!]
  delete: [BaseActionPreRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPreRenderElementDisconnectFieldInput!]
  update: ApiActionPreRenderElementUpdateConnectionInput
  where: BaseActionPreRenderElementConnectionWhere
}

type ApiActionPropConfigAggregationSelection {
  count: Int!
  node: ApiActionPropConfigNodeAggregateSelection
}

type ApiActionPropConfigNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input ApiActionResourceAggregateInput {
  AND: [ApiActionResourceAggregateInput!]
  NOT: ApiActionResourceAggregateInput
  OR: [ApiActionResourceAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ApiActionResourceNodeAggregationWhereInput
}

input ApiActionResourceConnectFieldInput {
  connect: ResourceConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ResourceConnectWhere
}

type ApiActionResourceConnection {
  edges: [ApiActionResourceRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ApiActionResourceConnectionSort {
  node: ResourceSort
}

input ApiActionResourceConnectionWhere {
  AND: [ApiActionResourceConnectionWhere!]
  NOT: ApiActionResourceConnectionWhere
  OR: [ApiActionResourceConnectionWhere!]
  node: ResourceWhere
}

input ApiActionResourceCreateFieldInput {
  node: ResourceCreateInput!
}

input ApiActionResourceDeleteFieldInput {
  delete: ResourceDeleteInput
  where: ApiActionResourceConnectionWhere
}

input ApiActionResourceDisconnectFieldInput {
  disconnect: ResourceDisconnectInput
  where: ApiActionResourceConnectionWhere
}

input ApiActionResourceFieldInput {
  connect: ApiActionResourceConnectFieldInput
  create: ApiActionResourceCreateFieldInput
}

input ApiActionResourceNodeAggregationWhereInput {
  AND: [ApiActionResourceNodeAggregationWhereInput!]
  NOT: ApiActionResourceNodeAggregationWhereInput
  OR: [ApiActionResourceNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ApiActionResourceRelationship {
  cursor: String!
  node: Resource!
}

type ApiActionResourceResourceAggregationSelection {
  count: Int!
  node: ApiActionResourceResourceNodeAggregateSelection
}

type ApiActionResourceResourceNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ApiActionResourceUpdateConnectionInput {
  node: ResourceUpdateInput
}

input ApiActionResourceUpdateFieldInput {
  connect: ApiActionResourceConnectFieldInput
  create: ApiActionResourceCreateFieldInput
  delete: ApiActionResourceDeleteFieldInput
  disconnect: ApiActionResourceDisconnectFieldInput
  update: ApiActionResourceUpdateConnectionInput
  where: ApiActionResourceConnectionWhere
}

"""
Fields to sort ApiActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one ApiActionSort object.
"""
input ApiActionSort {
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input ApiActionStoreAggregateInput {
  AND: [ApiActionStoreAggregateInput!]
  NOT: ApiActionStoreAggregateInput
  OR: [ApiActionStoreAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ApiActionStoreNodeAggregationWhereInput
}

input ApiActionStoreConnectFieldInput {
  connect: StoreConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: StoreConnectWhere
}

input ApiActionStoreCreateFieldInput {
  node: StoreCreateInput!
}

input ApiActionStoreFieldInput {
  connect: ApiActionStoreConnectFieldInput
  create: ApiActionStoreCreateFieldInput
}

input ApiActionStoreNodeAggregationWhereInput {
  AND: [ApiActionStoreNodeAggregationWhereInput!]
  NOT: ApiActionStoreNodeAggregationWhereInput
  OR: [ApiActionStoreNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ApiActionStoreStoreAggregationSelection {
  count: Int!
  node: ApiActionStoreStoreNodeAggregateSelection
}

type ApiActionStoreStoreNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ApiActionStoreUpdateConnectionInput {
  node: StoreUpdateInput
}

input ApiActionStoreUpdateFieldInput {
  connect: ApiActionStoreConnectFieldInput
  create: ApiActionStoreCreateFieldInput
  delete: BaseActionStoreDeleteFieldInput
  disconnect: BaseActionStoreDisconnectFieldInput
  update: ApiActionStoreUpdateConnectionInput
  where: BaseActionStoreConnectionWhere
}

input ApiActionSubscriptionWhere {
  AND: [ApiActionSubscriptionWhere!]
  NOT: ApiActionSubscriptionWhere
  OR: [ApiActionSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  type: ActionKind @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ActionKind
  type_IN: [ActionKind!]
}

input ApiActionSuccessActionApiActionConnectFieldInput {
  connect: ApiActionConnectInput
  where: ApiActionConnectWhere
}

input ApiActionSuccessActionApiActionConnectionWhere {
  AND: [ApiActionSuccessActionApiActionConnectionWhere!]
  NOT: ApiActionSuccessActionApiActionConnectionWhere
  OR: [ApiActionSuccessActionApiActionConnectionWhere!]
  node: ApiActionWhere
}

input ApiActionSuccessActionApiActionCreateFieldInput {
  node: ApiActionCreateInput!
}

input ApiActionSuccessActionApiActionDeleteFieldInput {
  delete: ApiActionDeleteInput
  where: ApiActionSuccessActionApiActionConnectionWhere
}

input ApiActionSuccessActionApiActionDisconnectFieldInput {
  disconnect: ApiActionDisconnectInput
  where: ApiActionSuccessActionApiActionConnectionWhere
}

input ApiActionSuccessActionApiActionFieldInput {
  connect: ApiActionSuccessActionApiActionConnectFieldInput
  create: ApiActionSuccessActionApiActionCreateFieldInput
}

input ApiActionSuccessActionApiActionUpdateConnectionInput {
  node: ApiActionUpdateInput
}

input ApiActionSuccessActionApiActionUpdateFieldInput {
  connect: ApiActionSuccessActionApiActionConnectFieldInput
  create: ApiActionSuccessActionApiActionCreateFieldInput
  delete: ApiActionSuccessActionApiActionDeleteFieldInput
  disconnect: ApiActionSuccessActionApiActionDisconnectFieldInput
  update: ApiActionSuccessActionApiActionUpdateConnectionInput
  where: ApiActionSuccessActionApiActionConnectionWhere
}

input ApiActionSuccessActionCodeActionConnectFieldInput {
  connect: CodeActionConnectInput
  where: CodeActionConnectWhere
}

input ApiActionSuccessActionCodeActionConnectionWhere {
  AND: [ApiActionSuccessActionCodeActionConnectionWhere!]
  NOT: ApiActionSuccessActionCodeActionConnectionWhere
  OR: [ApiActionSuccessActionCodeActionConnectionWhere!]
  node: CodeActionWhere
}

input ApiActionSuccessActionCodeActionCreateFieldInput {
  node: CodeActionCreateInput!
}

input ApiActionSuccessActionCodeActionDeleteFieldInput {
  delete: CodeActionDeleteInput
  where: ApiActionSuccessActionCodeActionConnectionWhere
}

input ApiActionSuccessActionCodeActionDisconnectFieldInput {
  disconnect: CodeActionDisconnectInput
  where: ApiActionSuccessActionCodeActionConnectionWhere
}

input ApiActionSuccessActionCodeActionFieldInput {
  connect: ApiActionSuccessActionCodeActionConnectFieldInput
  create: ApiActionSuccessActionCodeActionCreateFieldInput
}

input ApiActionSuccessActionCodeActionUpdateConnectionInput {
  node: CodeActionUpdateInput
}

input ApiActionSuccessActionCodeActionUpdateFieldInput {
  connect: ApiActionSuccessActionCodeActionConnectFieldInput
  create: ApiActionSuccessActionCodeActionCreateFieldInput
  delete: ApiActionSuccessActionCodeActionDeleteFieldInput
  disconnect: ApiActionSuccessActionCodeActionDisconnectFieldInput
  update: ApiActionSuccessActionCodeActionUpdateConnectionInput
  where: ApiActionSuccessActionCodeActionConnectionWhere
}

input ApiActionSuccessActionConnectInput {
  ApiAction: ApiActionSuccessActionApiActionConnectFieldInput
  CodeAction: ApiActionSuccessActionCodeActionConnectFieldInput
}

type ApiActionSuccessActionConnection {
  edges: [ApiActionSuccessActionRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ApiActionSuccessActionConnectionWhere {
  ApiAction: ApiActionSuccessActionApiActionConnectionWhere
  CodeAction: ApiActionSuccessActionCodeActionConnectionWhere
}

input ApiActionSuccessActionCreateInput {
  ApiAction: ApiActionSuccessActionApiActionFieldInput
  CodeAction: ApiActionSuccessActionCodeActionFieldInput
}

input ApiActionSuccessActionDeleteInput {
  ApiAction: ApiActionSuccessActionApiActionDeleteFieldInput
  CodeAction: ApiActionSuccessActionCodeActionDeleteFieldInput
}

input ApiActionSuccessActionDisconnectInput {
  ApiAction: ApiActionSuccessActionApiActionDisconnectFieldInput
  CodeAction: ApiActionSuccessActionCodeActionDisconnectFieldInput
}

type ApiActionSuccessActionRelationship {
  cursor: String!
  node: AnyAction!
}

input ApiActionSuccessActionUpdateInput {
  ApiAction: ApiActionSuccessActionApiActionUpdateFieldInput
  CodeAction: ApiActionSuccessActionCodeActionUpdateFieldInput
}

input ApiActionUpdateInput {
  config: ApiActionConfigUpdateFieldInput
  errorAction: ApiActionErrorActionUpdateInput
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  postRenderElement: [ApiActionPostRenderElementUpdateFieldInput!]
  preRenderElement: [ApiActionPreRenderElementUpdateFieldInput!]
  resource: ApiActionResourceUpdateFieldInput
  store: ApiActionStoreUpdateFieldInput
  successAction: ApiActionSuccessActionUpdateInput
  type: ActionKind @deprecated(reason: "Please use the explicit _SET field")
  type_SET: ActionKind
}

type ApiActionUpdatedEvent {
  event: EventType!
  previousState: ApiActionEventPayload!
  timestamp: Float!
  updatedApiAction: ApiActionEventPayload!
}

input ApiActionWhere {
  AND: [ApiActionWhere!]
  NOT: ApiActionWhere
  OR: [ApiActionWhere!]
  config: PropWhere
  configAggregate: ApiActionConfigAggregateInput
  configConnection: ApiActionConfigConnectionWhere
  errorAction: AnyActionWhere
  errorActionConnection: ApiActionErrorActionConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  postRenderElementAggregate: ApiActionPostRenderElementAggregateInput

  """
  Return ApiActions where all of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_ALL: BaseActionPostRenderElementConnectionWhere

  """
  Return ApiActions where none of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_NONE: BaseActionPostRenderElementConnectionWhere

  """
  Return ApiActions where one of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SINGLE: BaseActionPostRenderElementConnectionWhere

  """
  Return ApiActions where some of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SOME: BaseActionPostRenderElementConnectionWhere

  """Return ApiActions where all of the related Elements match this filter"""
  postRenderElement_ALL: ElementWhere

  """Return ApiActions where none of the related Elements match this filter"""
  postRenderElement_NONE: ElementWhere

  """Return ApiActions where one of the related Elements match this filter"""
  postRenderElement_SINGLE: ElementWhere

  """Return ApiActions where some of the related Elements match this filter"""
  postRenderElement_SOME: ElementWhere
  preRenderElementAggregate: ApiActionPreRenderElementAggregateInput

  """
  Return ApiActions where all of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_ALL: BaseActionPreRenderElementConnectionWhere

  """
  Return ApiActions where none of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_NONE: BaseActionPreRenderElementConnectionWhere

  """
  Return ApiActions where one of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SINGLE: BaseActionPreRenderElementConnectionWhere

  """
  Return ApiActions where some of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SOME: BaseActionPreRenderElementConnectionWhere

  """Return ApiActions where all of the related Elements match this filter"""
  preRenderElement_ALL: ElementWhere

  """Return ApiActions where none of the related Elements match this filter"""
  preRenderElement_NONE: ElementWhere

  """Return ApiActions where one of the related Elements match this filter"""
  preRenderElement_SINGLE: ElementWhere

  """Return ApiActions where some of the related Elements match this filter"""
  preRenderElement_SOME: ElementWhere
  resource: ResourceWhere
  resourceAggregate: ApiActionResourceAggregateInput
  resourceConnection: ApiActionResourceConnectionWhere
  store: StoreWhere
  storeAggregate: ApiActionStoreAggregateInput
  storeConnection: BaseActionStoreConnectionWhere
  successAction: AnyActionWhere
  successActionConnection: ApiActionSuccessActionConnectionWhere
  type: ActionKind @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ActionKind
  type_IN: [ActionKind!]
}

type ApiActionsConnection {
  edges: [ApiActionEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type App implements WithOwner {
  compositeKey: String!
  domains(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: DomainOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [DomainSort!], where: DomainWhere): [Domain!]!
  domainsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: DomainWhere): AppDomainDomainsAggregationSelection
  domainsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AppDomainsConnectionSort!], where: AppDomainsConnectionWhere): AppDomainsConnection!
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): AppUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  pages(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PageOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageSort!], where: PageWhere): [Page!]!
  pagesAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PageWhere): AppPagePagesAggregationSelection
  pagesConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AppPagesConnectionSort!], where: AppPagesConnectionWhere): AppPagesConnection!
  slug: String!
}

type AppAggregateSelection {
  compositeKey: StringAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input AppConnectInput {
  domains: [AppDomainsConnectFieldInput!]
  owner: AppOwnerConnectFieldInput
  pages: [AppPagesConnectFieldInput!]
}

input AppConnectWhere {
  node: AppWhere!
}

input AppCreateInput {
  compositeKey: String!
  domains: AppDomainsFieldInput
  id: ID!
  owner: AppOwnerFieldInput
  pages: AppPagesFieldInput
}

type AppCreatedEvent {
  createdApp: AppEventPayload!
  event: EventType!
  timestamp: Float!
}

input AppDeleteInput {
  domains: [AppDomainsDeleteFieldInput!]
  owner: WithOwnerOwnerDeleteFieldInput
  pages: [AppPagesDeleteFieldInput!]
}

type AppDeletedEvent {
  deletedApp: AppEventPayload!
  event: EventType!
  timestamp: Float!
}

input AppDisconnectInput {
  domains: [AppDomainsDisconnectFieldInput!]
  owner: WithOwnerOwnerDisconnectFieldInput
  pages: [AppPagesDisconnectFieldInput!]
}

type AppDomainDomainsAggregationSelection {
  count: Int!
  node: AppDomainDomainsNodeAggregateSelection
}

type AppDomainDomainsNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AppDomainsAggregateInput {
  AND: [AppDomainsAggregateInput!]
  NOT: AppDomainsAggregateInput
  OR: [AppDomainsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AppDomainsNodeAggregationWhereInput
}

input AppDomainsConnectFieldInput {
  connect: [DomainConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: DomainConnectWhere
}

type AppDomainsConnection {
  edges: [AppDomainsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AppDomainsConnectionSort {
  node: DomainSort
}

input AppDomainsConnectionWhere {
  AND: [AppDomainsConnectionWhere!]
  NOT: AppDomainsConnectionWhere
  OR: [AppDomainsConnectionWhere!]
  node: DomainWhere
}

input AppDomainsCreateFieldInput {
  node: DomainCreateInput!
}

input AppDomainsDeleteFieldInput {
  delete: DomainDeleteInput
  where: AppDomainsConnectionWhere
}

input AppDomainsDisconnectFieldInput {
  disconnect: DomainDisconnectInput
  where: AppDomainsConnectionWhere
}

input AppDomainsFieldInput {
  connect: [AppDomainsConnectFieldInput!]
  create: [AppDomainsCreateFieldInput!]
}

input AppDomainsNodeAggregationWhereInput {
  AND: [AppDomainsNodeAggregationWhereInput!]
  NOT: AppDomainsNodeAggregationWhereInput
  OR: [AppDomainsNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AppDomainsRelationship {
  cursor: String!
  node: Domain!
}

input AppDomainsUpdateConnectionInput {
  node: DomainUpdateInput
}

input AppDomainsUpdateFieldInput {
  connect: [AppDomainsConnectFieldInput!]
  create: [AppDomainsCreateFieldInput!]
  delete: [AppDomainsDeleteFieldInput!]
  disconnect: [AppDomainsDisconnectFieldInput!]
  update: AppDomainsUpdateConnectionInput
  where: AppDomainsConnectionWhere
}

type AppEdge {
  cursor: String!
  node: App!
}

type AppEventPayload {
  compositeKey: String!
  id: ID!
}

input AppOptions {
  limit: Int
  offset: Int

  """
  Specify one or more AppSort objects to sort Apps by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [AppSort!]
}

input AppOwnerAggregateInput {
  AND: [AppOwnerAggregateInput!]
  NOT: AppOwnerAggregateInput
  OR: [AppOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AppOwnerNodeAggregationWhereInput
}

input AppOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input AppOwnerCreateFieldInput {
  node: UserCreateInput!
}

input AppOwnerFieldInput {
  connect: AppOwnerConnectFieldInput
  create: AppOwnerCreateFieldInput
}

input AppOwnerNodeAggregationWhereInput {
  AND: [AppOwnerNodeAggregationWhereInput!]
  NOT: AppOwnerNodeAggregationWhereInput
  OR: [AppOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input AppOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input AppOwnerUpdateFieldInput {
  connect: AppOwnerConnectFieldInput
  create: AppOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: AppOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

type AppPagePagesAggregationSelection {
  count: Int!
  node: AppPagePagesNodeAggregateSelection
}

type AppPagePagesNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern: StringAggregateSelection!
}

input AppPagesAggregateInput {
  AND: [AppPagesAggregateInput!]
  NOT: AppPagesAggregateInput
  OR: [AppPagesAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AppPagesNodeAggregationWhereInput
}

input AppPagesConnectFieldInput {
  connect: [PageConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PageConnectWhere
}

type AppPagesConnection {
  edges: [AppPagesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AppPagesConnectionSort {
  node: PageSort
}

input AppPagesConnectionWhere {
  AND: [AppPagesConnectionWhere!]
  NOT: AppPagesConnectionWhere
  OR: [AppPagesConnectionWhere!]
  node: PageWhere
}

input AppPagesCreateFieldInput {
  node: PageCreateInput!
}

input AppPagesDeleteFieldInput {
  delete: PageDeleteInput
  where: AppPagesConnectionWhere
}

input AppPagesDisconnectFieldInput {
  disconnect: PageDisconnectInput
  where: AppPagesConnectionWhere
}

input AppPagesFieldInput {
  connect: [AppPagesConnectFieldInput!]
  create: [AppPagesCreateFieldInput!]
}

input AppPagesNodeAggregationWhereInput {
  AND: [AppPagesNodeAggregationWhereInput!]
  NOT: AppPagesNodeAggregationWhereInput
  OR: [AppPagesNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern_AVERAGE_LENGTH_EQUAL: Float
  urlPattern_AVERAGE_LENGTH_GT: Float
  urlPattern_AVERAGE_LENGTH_GTE: Float
  urlPattern_AVERAGE_LENGTH_LT: Float
  urlPattern_AVERAGE_LENGTH_LTE: Float
  urlPattern_LONGEST_LENGTH_EQUAL: Int
  urlPattern_LONGEST_LENGTH_GT: Int
  urlPattern_LONGEST_LENGTH_GTE: Int
  urlPattern_LONGEST_LENGTH_LT: Int
  urlPattern_LONGEST_LENGTH_LTE: Int
  urlPattern_SHORTEST_LENGTH_EQUAL: Int
  urlPattern_SHORTEST_LENGTH_GT: Int
  urlPattern_SHORTEST_LENGTH_GTE: Int
  urlPattern_SHORTEST_LENGTH_LT: Int
  urlPattern_SHORTEST_LENGTH_LTE: Int
}

type AppPagesRelationship {
  cursor: String!
  node: Page!
}

input AppPagesUpdateConnectionInput {
  node: PageUpdateInput
}

input AppPagesUpdateFieldInput {
  connect: [AppPagesConnectFieldInput!]
  create: [AppPagesCreateFieldInput!]
  delete: [AppPagesDeleteFieldInput!]
  disconnect: [AppPagesDisconnectFieldInput!]
  update: AppPagesUpdateConnectionInput
  where: AppPagesConnectionWhere
}

"""
Fields to sort Apps by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppSort object.
"""
input AppSort {
  compositeKey: SortDirection
  id: SortDirection
}

input AppSubscriptionWhere {
  AND: [AppSubscriptionWhere!]
  NOT: AppSubscriptionWhere
  OR: [AppSubscriptionWhere!]
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
}

"""Allows picking a app from the list of apps"""
type AppType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): AppTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): AppTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type AppTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AppTypeConnectInput {
  fieldRefs: [AppTypeFieldRefsConnectFieldInput!]
  owner: AppTypeOwnerConnectFieldInput
}

input AppTypeConnectWhere {
  node: AppTypeWhere!
}

input AppTypeCreateInput {
  fieldRefs: AppTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = AppType
  name: String!
  owner: AppTypeOwnerFieldInput
}

type AppTypeCreatedEvent {
  createdAppType: AppTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input AppTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type AppTypeDeletedEvent {
  deletedAppType: AppTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input AppTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type AppTypeEdge {
  cursor: String!
  node: AppType!
}

type AppTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type AppTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: AppTypeFieldFieldRefsNodeAggregateSelection
}

type AppTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input AppTypeFieldRefsAggregateInput {
  AND: [AppTypeFieldRefsAggregateInput!]
  NOT: AppTypeFieldRefsAggregateInput
  OR: [AppTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AppTypeFieldRefsNodeAggregationWhereInput
}

input AppTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input AppTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input AppTypeFieldRefsFieldInput {
  connect: [AppTypeFieldRefsConnectFieldInput!]
  create: [AppTypeFieldRefsCreateFieldInput!]
}

input AppTypeFieldRefsNodeAggregationWhereInput {
  AND: [AppTypeFieldRefsNodeAggregationWhereInput!]
  NOT: AppTypeFieldRefsNodeAggregationWhereInput
  OR: [AppTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input AppTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input AppTypeFieldRefsUpdateFieldInput {
  connect: [AppTypeFieldRefsConnectFieldInput!]
  create: [AppTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: AppTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input AppTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more AppTypeSort objects to sort AppTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [AppTypeSort!]
}

input AppTypeOwnerAggregateInput {
  AND: [AppTypeOwnerAggregateInput!]
  NOT: AppTypeOwnerAggregateInput
  OR: [AppTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AppTypeOwnerNodeAggregationWhereInput
}

input AppTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input AppTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input AppTypeOwnerFieldInput {
  connect: AppTypeOwnerConnectFieldInput
  create: AppTypeOwnerCreateFieldInput
}

input AppTypeOwnerNodeAggregationWhereInput {
  AND: [AppTypeOwnerNodeAggregationWhereInput!]
  NOT: AppTypeOwnerNodeAggregationWhereInput
  OR: [AppTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input AppTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input AppTypeOwnerUpdateFieldInput {
  connect: AppTypeOwnerConnectFieldInput
  create: AppTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: AppTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort AppTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one AppTypeSort object.
"""
input AppTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input AppTypeSubscriptionWhere {
  AND: [AppTypeSubscriptionWhere!]
  NOT: AppTypeSubscriptionWhere
  OR: [AppTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input AppTypeUpdateInput {
  fieldRefs: [AppTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: AppTypeOwnerUpdateFieldInput
}

type AppTypeUpdatedEvent {
  event: EventType!
  previousState: AppTypeEventPayload!
  timestamp: Float!
  updatedAppType: AppTypeEventPayload!
}

type AppTypeUserOwnerAggregationSelection {
  count: Int!
  node: AppTypeUserOwnerNodeAggregateSelection
}

type AppTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input AppTypeWhere {
  AND: [AppTypeWhere!]
  NOT: AppTypeWhere
  OR: [AppTypeWhere!]
  fieldRefsAggregate: AppTypeFieldRefsAggregateInput

  """
  Return AppTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return AppTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return AppTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return AppTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return AppTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return AppTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return AppTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return AppTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: AppTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type AppTypesConnection {
  edges: [AppTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AppUpdateInput {
  compositeKey: String @deprecated(reason: "Please use the explicit _SET field")
  compositeKey_SET: String
  domains: [AppDomainsUpdateFieldInput!]
  owner: AppOwnerUpdateFieldInput
  pages: [AppPagesUpdateFieldInput!]
}

type AppUpdatedEvent {
  event: EventType!
  previousState: AppEventPayload!
  timestamp: Float!
  updatedApp: AppEventPayload!
}

type AppUserOwnerAggregationSelection {
  count: Int!
  node: AppUserOwnerNodeAggregateSelection
}

type AppUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input AppWhere {
  AND: [AppWhere!]
  NOT: AppWhere
  OR: [AppWhere!]
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  domainsAggregate: AppDomainsAggregateInput

  """
  Return Apps where all of the related AppDomainsConnections match this filter
  """
  domainsConnection_ALL: AppDomainsConnectionWhere

  """
  Return Apps where none of the related AppDomainsConnections match this filter
  """
  domainsConnection_NONE: AppDomainsConnectionWhere

  """
  Return Apps where one of the related AppDomainsConnections match this filter
  """
  domainsConnection_SINGLE: AppDomainsConnectionWhere

  """
  Return Apps where some of the related AppDomainsConnections match this filter
  """
  domainsConnection_SOME: AppDomainsConnectionWhere

  """Return Apps where all of the related Domains match this filter"""
  domains_ALL: DomainWhere

  """Return Apps where none of the related Domains match this filter"""
  domains_NONE: DomainWhere

  """Return Apps where one of the related Domains match this filter"""
  domains_SINGLE: DomainWhere

  """Return Apps where some of the related Domains match this filter"""
  domains_SOME: DomainWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  owner: UserWhere
  ownerAggregate: AppOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  pagesAggregate: AppPagesAggregateInput

  """
  Return Apps where all of the related AppPagesConnections match this filter
  """
  pagesConnection_ALL: AppPagesConnectionWhere

  """
  Return Apps where none of the related AppPagesConnections match this filter
  """
  pagesConnection_NONE: AppPagesConnectionWhere

  """
  Return Apps where one of the related AppPagesConnections match this filter
  """
  pagesConnection_SINGLE: AppPagesConnectionWhere

  """
  Return Apps where some of the related AppPagesConnections match this filter
  """
  pagesConnection_SOME: AppPagesConnectionWhere

  """Return Apps where all of the related Pages match this filter"""
  pages_ALL: PageWhere

  """Return Apps where none of the related Pages match this filter"""
  pages_NONE: PageWhere

  """Return Apps where one of the related Pages match this filter"""
  pages_SINGLE: PageWhere

  """Return Apps where some of the related Pages match this filter"""
  pages_SOME: PageWhere
}

type AppsConnection {
  edges: [AppEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
ArrayType Allows defining a variable number of items of a given type.
Contains a reference to another type which is the array item type.
"""
type ArrayType implements IBaseType & WithDescendants {
  descendantTypesIds: [ID!]!
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): ArrayTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  itemType(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: IBaseTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [IBaseTypeSort!], where: IBaseTypeWhere): IBaseType!
  itemTypeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: IBaseTypeWhere): ArrayTypeIBaseTypeItemTypeAggregationSelection
  itemTypeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ArrayTypeItemTypeConnectionSort!], where: ArrayTypeItemTypeConnectionWhere): ArrayTypeItemTypeConnection!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ArrayTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type ArrayTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ArrayTypeConnectInput {
  fieldRefs: [ArrayTypeFieldRefsConnectFieldInput!]
  itemType: ArrayTypeItemTypeConnectFieldInput
  owner: ArrayTypeOwnerConnectFieldInput
}

input ArrayTypeConnectWhere {
  node: ArrayTypeWhere!
}

input ArrayTypeCreateInput {
  fieldRefs: ArrayTypeFieldRefsFieldInput
  id: ID!
  itemType: ArrayTypeItemTypeFieldInput
  kind: TypeKind! = ArrayType
  name: String!
  owner: ArrayTypeOwnerFieldInput
}

type ArrayTypeCreatedEvent {
  createdArrayType: ArrayTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ArrayTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  itemType: ArrayTypeItemTypeDeleteFieldInput
  owner: IBaseTypeOwnerDeleteFieldInput
}

type ArrayTypeDeletedEvent {
  deletedArrayType: ArrayTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ArrayTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  itemType: ArrayTypeItemTypeDisconnectFieldInput
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type ArrayTypeEdge {
  cursor: String!
  node: ArrayType!
}

type ArrayTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type ArrayTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: ArrayTypeFieldFieldRefsNodeAggregateSelection
}

type ArrayTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input ArrayTypeFieldRefsAggregateInput {
  AND: [ArrayTypeFieldRefsAggregateInput!]
  NOT: ArrayTypeFieldRefsAggregateInput
  OR: [ArrayTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ArrayTypeFieldRefsNodeAggregationWhereInput
}

input ArrayTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input ArrayTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input ArrayTypeFieldRefsFieldInput {
  connect: [ArrayTypeFieldRefsConnectFieldInput!]
  create: [ArrayTypeFieldRefsCreateFieldInput!]
}

input ArrayTypeFieldRefsNodeAggregationWhereInput {
  AND: [ArrayTypeFieldRefsNodeAggregationWhereInput!]
  NOT: ArrayTypeFieldRefsNodeAggregationWhereInput
  OR: [ArrayTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input ArrayTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input ArrayTypeFieldRefsUpdateFieldInput {
  connect: [ArrayTypeFieldRefsConnectFieldInput!]
  create: [ArrayTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: ArrayTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

type ArrayTypeIBaseTypeItemTypeAggregationSelection {
  count: Int!
  node: ArrayTypeIBaseTypeItemTypeNodeAggregateSelection
}

type ArrayTypeIBaseTypeItemTypeNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ArrayTypeItemTypeAggregateInput {
  AND: [ArrayTypeItemTypeAggregateInput!]
  NOT: ArrayTypeItemTypeAggregateInput
  OR: [ArrayTypeItemTypeAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ArrayTypeItemTypeNodeAggregationWhereInput
}

input ArrayTypeItemTypeConnectFieldInput {
  connect: IBaseTypeConnectInput
  where: IBaseTypeConnectWhere
}

type ArrayTypeItemTypeConnection {
  edges: [ArrayTypeItemTypeRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ArrayTypeItemTypeConnectionSort {
  node: IBaseTypeSort
}

input ArrayTypeItemTypeConnectionWhere {
  AND: [ArrayTypeItemTypeConnectionWhere!]
  NOT: ArrayTypeItemTypeConnectionWhere
  OR: [ArrayTypeItemTypeConnectionWhere!]
  node: IBaseTypeWhere
}

input ArrayTypeItemTypeCreateFieldInput {
  node: IBaseTypeCreateInput!
}

input ArrayTypeItemTypeDeleteFieldInput {
  delete: IBaseTypeDeleteInput
  where: ArrayTypeItemTypeConnectionWhere
}

input ArrayTypeItemTypeDisconnectFieldInput {
  disconnect: IBaseTypeDisconnectInput
  where: ArrayTypeItemTypeConnectionWhere
}

input ArrayTypeItemTypeFieldInput {
  connect: ArrayTypeItemTypeConnectFieldInput
  create: ArrayTypeItemTypeCreateFieldInput
}

input ArrayTypeItemTypeNodeAggregationWhereInput {
  AND: [ArrayTypeItemTypeNodeAggregationWhereInput!]
  NOT: ArrayTypeItemTypeNodeAggregationWhereInput
  OR: [ArrayTypeItemTypeNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ArrayTypeItemTypeRelationship {
  cursor: String!
  node: IBaseType!
}

input ArrayTypeItemTypeUpdateConnectionInput {
  node: IBaseTypeUpdateInput
}

input ArrayTypeItemTypeUpdateFieldInput {
  connect: ArrayTypeItemTypeConnectFieldInput
  create: ArrayTypeItemTypeCreateFieldInput
  delete: ArrayTypeItemTypeDeleteFieldInput
  disconnect: ArrayTypeItemTypeDisconnectFieldInput
  update: ArrayTypeItemTypeUpdateConnectionInput
  where: ArrayTypeItemTypeConnectionWhere
}

input ArrayTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ArrayTypeSort objects to sort ArrayTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ArrayTypeSort!]
}

input ArrayTypeOwnerAggregateInput {
  AND: [ArrayTypeOwnerAggregateInput!]
  NOT: ArrayTypeOwnerAggregateInput
  OR: [ArrayTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ArrayTypeOwnerNodeAggregationWhereInput
}

input ArrayTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ArrayTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ArrayTypeOwnerFieldInput {
  connect: ArrayTypeOwnerConnectFieldInput
  create: ArrayTypeOwnerCreateFieldInput
}

input ArrayTypeOwnerNodeAggregationWhereInput {
  AND: [ArrayTypeOwnerNodeAggregationWhereInput!]
  NOT: ArrayTypeOwnerNodeAggregationWhereInput
  OR: [ArrayTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ArrayTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ArrayTypeOwnerUpdateFieldInput {
  connect: ArrayTypeOwnerConnectFieldInput
  create: ArrayTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: ArrayTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort ArrayTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ArrayTypeSort object.
"""
input ArrayTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input ArrayTypeSubscriptionWhere {
  AND: [ArrayTypeSubscriptionWhere!]
  NOT: ArrayTypeSubscriptionWhere
  OR: [ArrayTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input ArrayTypeUpdateInput {
  fieldRefs: [ArrayTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  itemType: ArrayTypeItemTypeUpdateFieldInput
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: ArrayTypeOwnerUpdateFieldInput
}

type ArrayTypeUpdatedEvent {
  event: EventType!
  previousState: ArrayTypeEventPayload!
  timestamp: Float!
  updatedArrayType: ArrayTypeEventPayload!
}

type ArrayTypeUserOwnerAggregationSelection {
  count: Int!
  node: ArrayTypeUserOwnerNodeAggregateSelection
}

type ArrayTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ArrayTypeWhere {
  AND: [ArrayTypeWhere!]
  NOT: ArrayTypeWhere
  OR: [ArrayTypeWhere!]
  fieldRefsAggregate: ArrayTypeFieldRefsAggregateInput

  """
  Return ArrayTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return ArrayTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ArrayTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ArrayTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return ArrayTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return ArrayTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return ArrayTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return ArrayTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  itemType: IBaseTypeWhere
  itemTypeAggregate: ArrayTypeItemTypeAggregateInput
  itemTypeConnection: ArrayTypeItemTypeConnectionWhere
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: ArrayTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type ArrayTypesConnection {
  edges: [ArrayTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Atom implements WithOwner {
  api(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: InterfaceTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): InterfaceType!
  apiAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: InterfaceTypeWhere): AtomInterfaceTypeApiAggregationSelection
  apiConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AtomApiConnectionSort!], where: AtomApiConnectionWhere): AtomApiConnection!
  elements(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  elementsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): AtomElementElementsAggregationSelection
  elementsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AtomElementsConnectionSort!], where: AtomElementsConnectionWhere): AtomElementsConnection!
  externalCssSource: String
  externalJsSource: String
  externalSourceType: String
  icon: String
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): AtomUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  requiredParents(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  requiredParentsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AtomWhere): AtomAtomRequiredParentsAggregationSelection
  requiredParentsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AtomRequiredParentsConnectionSort!], where: AtomRequiredParentsConnectionWhere): AtomRequiredParentsConnection!
  suggestedChildren(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  suggestedChildrenAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AtomWhere): AtomAtomSuggestedChildrenAggregationSelection
  suggestedChildrenConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AtomSuggestedChildrenConnectionSort!], where: AtomSuggestedChildrenConnectionWhere): AtomSuggestedChildrenConnection!
  tags(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: TagOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TagSort!], where: TagWhere): [Tag!]!
  tagsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: TagWhere): AtomTagTagsAggregationSelection
  tagsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AtomTagsConnectionSort!], where: AtomTagsConnectionWhere): AtomTagsConnection!
  type: AtomType!
}

type AtomAggregateSelection {
  count: Int!
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AtomApiAggregateInput {
  AND: [AtomApiAggregateInput!]
  NOT: AtomApiAggregateInput
  OR: [AtomApiAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomApiNodeAggregationWhereInput
}

input AtomApiConnectFieldInput {
  connect: InterfaceTypeConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: InterfaceTypeConnectWhere
}

type AtomApiConnection {
  edges: [AtomApiRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AtomApiConnectionSort {
  node: InterfaceTypeSort
}

input AtomApiConnectionWhere {
  AND: [AtomApiConnectionWhere!]
  NOT: AtomApiConnectionWhere
  OR: [AtomApiConnectionWhere!]
  node: InterfaceTypeWhere
}

input AtomApiCreateFieldInput {
  node: InterfaceTypeCreateInput!
}

input AtomApiDeleteFieldInput {
  delete: InterfaceTypeDeleteInput
  where: AtomApiConnectionWhere
}

input AtomApiDisconnectFieldInput {
  disconnect: InterfaceTypeDisconnectInput
  where: AtomApiConnectionWhere
}

input AtomApiFieldInput {
  connect: AtomApiConnectFieldInput
  create: AtomApiCreateFieldInput
}

input AtomApiNodeAggregationWhereInput {
  AND: [AtomApiNodeAggregationWhereInput!]
  NOT: AtomApiNodeAggregationWhereInput
  OR: [AtomApiNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AtomApiRelationship {
  cursor: String!
  node: InterfaceType!
}

input AtomApiUpdateConnectionInput {
  node: InterfaceTypeUpdateInput
}

input AtomApiUpdateFieldInput {
  connect: AtomApiConnectFieldInput
  create: AtomApiCreateFieldInput
  delete: AtomApiDeleteFieldInput
  disconnect: AtomApiDisconnectFieldInput
  update: AtomApiUpdateConnectionInput
  where: AtomApiConnectionWhere
}

type AtomAtomRequiredParentsAggregationSelection {
  count: Int!
  node: AtomAtomRequiredParentsNodeAggregateSelection
}

type AtomAtomRequiredParentsNodeAggregateSelection {
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

type AtomAtomSuggestedChildrenAggregationSelection {
  count: Int!
  node: AtomAtomSuggestedChildrenNodeAggregateSelection
}

type AtomAtomSuggestedChildrenNodeAggregateSelection {
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AtomConnectInput {
  api: AtomApiConnectFieldInput
  elements: [AtomElementsConnectFieldInput!]
  owner: AtomOwnerConnectFieldInput
  requiredParents: [AtomRequiredParentsConnectFieldInput!]
  suggestedChildren: [AtomSuggestedChildrenConnectFieldInput!]
  tags: [AtomTagsConnectFieldInput!]
}

input AtomConnectWhere {
  node: AtomWhere!
}

input AtomCreateInput {
  api: AtomApiFieldInput
  elements: AtomElementsFieldInput
  externalCssSource: String
  externalJsSource: String
  externalSourceType: String
  icon: String
  id: ID!
  name: String!
  owner: AtomOwnerFieldInput
  requiredParents: AtomRequiredParentsFieldInput
  suggestedChildren: AtomSuggestedChildrenFieldInput
  tags: AtomTagsFieldInput
  type: AtomType!
}

type AtomCreatedEvent {
  createdAtom: AtomEventPayload!
  event: EventType!
  timestamp: Float!
}

input AtomDeleteInput {
  api: AtomApiDeleteFieldInput
  elements: [AtomElementsDeleteFieldInput!]
  owner: WithOwnerOwnerDeleteFieldInput
  requiredParents: [AtomRequiredParentsDeleteFieldInput!]
  suggestedChildren: [AtomSuggestedChildrenDeleteFieldInput!]
  tags: [AtomTagsDeleteFieldInput!]
}

type AtomDeletedEvent {
  deletedAtom: AtomEventPayload!
  event: EventType!
  timestamp: Float!
}

input AtomDisconnectInput {
  api: AtomApiDisconnectFieldInput
  elements: [AtomElementsDisconnectFieldInput!]
  owner: WithOwnerOwnerDisconnectFieldInput
  requiredParents: [AtomRequiredParentsDisconnectFieldInput!]
  suggestedChildren: [AtomSuggestedChildrenDisconnectFieldInput!]
  tags: [AtomTagsDisconnectFieldInput!]
}

type AtomEdge {
  cursor: String!
  node: Atom!
}

type AtomElementElementsAggregationSelection {
  count: Int!
  node: AtomElementElementsNodeAggregateSelection
}

type AtomElementElementsNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

input AtomElementsAggregateInput {
  AND: [AtomElementsAggregateInput!]
  NOT: AtomElementsAggregateInput
  OR: [AtomElementsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomElementsNodeAggregationWhereInput
}

input AtomElementsConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type AtomElementsConnection {
  edges: [AtomElementsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AtomElementsConnectionSort {
  node: ElementSort
}

input AtomElementsConnectionWhere {
  AND: [AtomElementsConnectionWhere!]
  NOT: AtomElementsConnectionWhere
  OR: [AtomElementsConnectionWhere!]
  node: ElementWhere
}

input AtomElementsCreateFieldInput {
  node: ElementCreateInput!
}

input AtomElementsDeleteFieldInput {
  delete: ElementDeleteInput
  where: AtomElementsConnectionWhere
}

input AtomElementsDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: AtomElementsConnectionWhere
}

input AtomElementsFieldInput {
  connect: [AtomElementsConnectFieldInput!]
  create: [AtomElementsCreateFieldInput!]
}

input AtomElementsNodeAggregationWhereInput {
  AND: [AtomElementsNodeAggregationWhereInput!]
  NOT: AtomElementsNodeAggregationWhereInput
  OR: [AtomElementsNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type AtomElementsRelationship {
  cursor: String!
  node: Element!
}

input AtomElementsUpdateConnectionInput {
  node: ElementUpdateInput
}

input AtomElementsUpdateFieldInput {
  connect: [AtomElementsConnectFieldInput!]
  create: [AtomElementsCreateFieldInput!]
  delete: [AtomElementsDeleteFieldInput!]
  disconnect: [AtomElementsDisconnectFieldInput!]
  update: AtomElementsUpdateConnectionInput
  where: AtomElementsConnectionWhere
}

type AtomEventPayload {
  externalCssSource: String
  externalJsSource: String
  externalSourceType: String
  icon: String
  id: ID!
  name: String!
  type: AtomType!
}

type AtomInterfaceTypeApiAggregationSelection {
  count: Int!
  node: AtomInterfaceTypeApiNodeAggregateSelection
}

type AtomInterfaceTypeApiNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AtomOptions {
  limit: Int
  offset: Int

  """
  Specify one or more AtomSort objects to sort Atoms by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [AtomSort!]
}

input AtomOwnerAggregateInput {
  AND: [AtomOwnerAggregateInput!]
  NOT: AtomOwnerAggregateInput
  OR: [AtomOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomOwnerNodeAggregationWhereInput
}

input AtomOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input AtomOwnerCreateFieldInput {
  node: UserCreateInput!
}

input AtomOwnerFieldInput {
  connect: AtomOwnerConnectFieldInput
  create: AtomOwnerCreateFieldInput
}

input AtomOwnerNodeAggregationWhereInput {
  AND: [AtomOwnerNodeAggregationWhereInput!]
  NOT: AtomOwnerNodeAggregationWhereInput
  OR: [AtomOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input AtomOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input AtomOwnerUpdateFieldInput {
  connect: AtomOwnerConnectFieldInput
  create: AtomOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: AtomOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

input AtomRequiredParentsAggregateInput {
  AND: [AtomRequiredParentsAggregateInput!]
  NOT: AtomRequiredParentsAggregateInput
  OR: [AtomRequiredParentsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomRequiredParentsNodeAggregationWhereInput
}

input AtomRequiredParentsConnectFieldInput {
  connect: [AtomConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AtomConnectWhere
}

type AtomRequiredParentsConnection {
  edges: [AtomRequiredParentsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AtomRequiredParentsConnectionSort {
  node: AtomSort
}

input AtomRequiredParentsConnectionWhere {
  AND: [AtomRequiredParentsConnectionWhere!]
  NOT: AtomRequiredParentsConnectionWhere
  OR: [AtomRequiredParentsConnectionWhere!]
  node: AtomWhere
}

input AtomRequiredParentsCreateFieldInput {
  node: AtomCreateInput!
}

input AtomRequiredParentsDeleteFieldInput {
  delete: AtomDeleteInput
  where: AtomRequiredParentsConnectionWhere
}

input AtomRequiredParentsDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: AtomRequiredParentsConnectionWhere
}

input AtomRequiredParentsFieldInput {
  connect: [AtomRequiredParentsConnectFieldInput!]
  create: [AtomRequiredParentsCreateFieldInput!]
}

input AtomRequiredParentsNodeAggregationWhereInput {
  AND: [AtomRequiredParentsNodeAggregationWhereInput!]
  NOT: AtomRequiredParentsNodeAggregationWhereInput
  OR: [AtomRequiredParentsNodeAggregationWhereInput!]
  externalCssSource_AVERAGE_LENGTH_EQUAL: Float
  externalCssSource_AVERAGE_LENGTH_GT: Float
  externalCssSource_AVERAGE_LENGTH_GTE: Float
  externalCssSource_AVERAGE_LENGTH_LT: Float
  externalCssSource_AVERAGE_LENGTH_LTE: Float
  externalCssSource_LONGEST_LENGTH_EQUAL: Int
  externalCssSource_LONGEST_LENGTH_GT: Int
  externalCssSource_LONGEST_LENGTH_GTE: Int
  externalCssSource_LONGEST_LENGTH_LT: Int
  externalCssSource_LONGEST_LENGTH_LTE: Int
  externalCssSource_SHORTEST_LENGTH_EQUAL: Int
  externalCssSource_SHORTEST_LENGTH_GT: Int
  externalCssSource_SHORTEST_LENGTH_GTE: Int
  externalCssSource_SHORTEST_LENGTH_LT: Int
  externalCssSource_SHORTEST_LENGTH_LTE: Int
  externalJsSource_AVERAGE_LENGTH_EQUAL: Float
  externalJsSource_AVERAGE_LENGTH_GT: Float
  externalJsSource_AVERAGE_LENGTH_GTE: Float
  externalJsSource_AVERAGE_LENGTH_LT: Float
  externalJsSource_AVERAGE_LENGTH_LTE: Float
  externalJsSource_LONGEST_LENGTH_EQUAL: Int
  externalJsSource_LONGEST_LENGTH_GT: Int
  externalJsSource_LONGEST_LENGTH_GTE: Int
  externalJsSource_LONGEST_LENGTH_LT: Int
  externalJsSource_LONGEST_LENGTH_LTE: Int
  externalJsSource_SHORTEST_LENGTH_EQUAL: Int
  externalJsSource_SHORTEST_LENGTH_GT: Int
  externalJsSource_SHORTEST_LENGTH_GTE: Int
  externalJsSource_SHORTEST_LENGTH_LT: Int
  externalJsSource_SHORTEST_LENGTH_LTE: Int
  externalSourceType_AVERAGE_LENGTH_EQUAL: Float
  externalSourceType_AVERAGE_LENGTH_GT: Float
  externalSourceType_AVERAGE_LENGTH_GTE: Float
  externalSourceType_AVERAGE_LENGTH_LT: Float
  externalSourceType_AVERAGE_LENGTH_LTE: Float
  externalSourceType_LONGEST_LENGTH_EQUAL: Int
  externalSourceType_LONGEST_LENGTH_GT: Int
  externalSourceType_LONGEST_LENGTH_GTE: Int
  externalSourceType_LONGEST_LENGTH_LT: Int
  externalSourceType_LONGEST_LENGTH_LTE: Int
  externalSourceType_SHORTEST_LENGTH_EQUAL: Int
  externalSourceType_SHORTEST_LENGTH_GT: Int
  externalSourceType_SHORTEST_LENGTH_GTE: Int
  externalSourceType_SHORTEST_LENGTH_LT: Int
  externalSourceType_SHORTEST_LENGTH_LTE: Int
  icon_AVERAGE_LENGTH_EQUAL: Float
  icon_AVERAGE_LENGTH_GT: Float
  icon_AVERAGE_LENGTH_GTE: Float
  icon_AVERAGE_LENGTH_LT: Float
  icon_AVERAGE_LENGTH_LTE: Float
  icon_LONGEST_LENGTH_EQUAL: Int
  icon_LONGEST_LENGTH_GT: Int
  icon_LONGEST_LENGTH_GTE: Int
  icon_LONGEST_LENGTH_LT: Int
  icon_LONGEST_LENGTH_LTE: Int
  icon_SHORTEST_LENGTH_EQUAL: Int
  icon_SHORTEST_LENGTH_GT: Int
  icon_SHORTEST_LENGTH_GTE: Int
  icon_SHORTEST_LENGTH_LT: Int
  icon_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AtomRequiredParentsRelationship {
  cursor: String!
  node: Atom!
}

input AtomRequiredParentsUpdateConnectionInput {
  node: AtomUpdateInput
}

input AtomRequiredParentsUpdateFieldInput {
  connect: [AtomRequiredParentsConnectFieldInput!]
  create: [AtomRequiredParentsCreateFieldInput!]
  delete: [AtomRequiredParentsDeleteFieldInput!]
  disconnect: [AtomRequiredParentsDisconnectFieldInput!]
  update: AtomRequiredParentsUpdateConnectionInput
  where: AtomRequiredParentsConnectionWhere
}

"""
Fields to sort Atoms by. The order in which sorts are applied is not guaranteed when specifying many fields in one AtomSort object.
"""
input AtomSort {
  externalCssSource: SortDirection
  externalJsSource: SortDirection
  externalSourceType: SortDirection
  icon: SortDirection
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input AtomSubscriptionWhere {
  AND: [AtomSubscriptionWhere!]
  NOT: AtomSubscriptionWhere
  OR: [AtomSubscriptionWhere!]
  externalCssSource: String @deprecated(reason: "Please use the explicit _EQ version")
  externalCssSource_CONTAINS: String
  externalCssSource_ENDS_WITH: String
  externalCssSource_EQ: String
  externalCssSource_IN: [String]
  externalCssSource_MATCHES: String
  externalCssSource_STARTS_WITH: String
  externalJsSource: String @deprecated(reason: "Please use the explicit _EQ version")
  externalJsSource_CONTAINS: String
  externalJsSource_ENDS_WITH: String
  externalJsSource_EQ: String
  externalJsSource_IN: [String]
  externalJsSource_MATCHES: String
  externalJsSource_STARTS_WITH: String
  externalSourceType: String @deprecated(reason: "Please use the explicit _EQ version")
  externalSourceType_CONTAINS: String
  externalSourceType_ENDS_WITH: String
  externalSourceType_EQ: String
  externalSourceType_IN: [String]
  externalSourceType_MATCHES: String
  externalSourceType_STARTS_WITH: String
  icon: String @deprecated(reason: "Please use the explicit _EQ version")
  icon_CONTAINS: String
  icon_ENDS_WITH: String
  icon_EQ: String
  icon_IN: [String]
  icon_MATCHES: String
  icon_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  type: AtomType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: AtomType
  type_IN: [AtomType!]
}

input AtomSuggestedChildrenAggregateInput {
  AND: [AtomSuggestedChildrenAggregateInput!]
  NOT: AtomSuggestedChildrenAggregateInput
  OR: [AtomSuggestedChildrenAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomSuggestedChildrenNodeAggregationWhereInput
}

input AtomSuggestedChildrenConnectFieldInput {
  connect: [AtomConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AtomConnectWhere
}

type AtomSuggestedChildrenConnection {
  edges: [AtomSuggestedChildrenRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AtomSuggestedChildrenConnectionSort {
  node: AtomSort
}

input AtomSuggestedChildrenConnectionWhere {
  AND: [AtomSuggestedChildrenConnectionWhere!]
  NOT: AtomSuggestedChildrenConnectionWhere
  OR: [AtomSuggestedChildrenConnectionWhere!]
  node: AtomWhere
}

input AtomSuggestedChildrenCreateFieldInput {
  node: AtomCreateInput!
}

input AtomSuggestedChildrenDeleteFieldInput {
  delete: AtomDeleteInput
  where: AtomSuggestedChildrenConnectionWhere
}

input AtomSuggestedChildrenDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: AtomSuggestedChildrenConnectionWhere
}

input AtomSuggestedChildrenFieldInput {
  connect: [AtomSuggestedChildrenConnectFieldInput!]
  create: [AtomSuggestedChildrenCreateFieldInput!]
}

input AtomSuggestedChildrenNodeAggregationWhereInput {
  AND: [AtomSuggestedChildrenNodeAggregationWhereInput!]
  NOT: AtomSuggestedChildrenNodeAggregationWhereInput
  OR: [AtomSuggestedChildrenNodeAggregationWhereInput!]
  externalCssSource_AVERAGE_LENGTH_EQUAL: Float
  externalCssSource_AVERAGE_LENGTH_GT: Float
  externalCssSource_AVERAGE_LENGTH_GTE: Float
  externalCssSource_AVERAGE_LENGTH_LT: Float
  externalCssSource_AVERAGE_LENGTH_LTE: Float
  externalCssSource_LONGEST_LENGTH_EQUAL: Int
  externalCssSource_LONGEST_LENGTH_GT: Int
  externalCssSource_LONGEST_LENGTH_GTE: Int
  externalCssSource_LONGEST_LENGTH_LT: Int
  externalCssSource_LONGEST_LENGTH_LTE: Int
  externalCssSource_SHORTEST_LENGTH_EQUAL: Int
  externalCssSource_SHORTEST_LENGTH_GT: Int
  externalCssSource_SHORTEST_LENGTH_GTE: Int
  externalCssSource_SHORTEST_LENGTH_LT: Int
  externalCssSource_SHORTEST_LENGTH_LTE: Int
  externalJsSource_AVERAGE_LENGTH_EQUAL: Float
  externalJsSource_AVERAGE_LENGTH_GT: Float
  externalJsSource_AVERAGE_LENGTH_GTE: Float
  externalJsSource_AVERAGE_LENGTH_LT: Float
  externalJsSource_AVERAGE_LENGTH_LTE: Float
  externalJsSource_LONGEST_LENGTH_EQUAL: Int
  externalJsSource_LONGEST_LENGTH_GT: Int
  externalJsSource_LONGEST_LENGTH_GTE: Int
  externalJsSource_LONGEST_LENGTH_LT: Int
  externalJsSource_LONGEST_LENGTH_LTE: Int
  externalJsSource_SHORTEST_LENGTH_EQUAL: Int
  externalJsSource_SHORTEST_LENGTH_GT: Int
  externalJsSource_SHORTEST_LENGTH_GTE: Int
  externalJsSource_SHORTEST_LENGTH_LT: Int
  externalJsSource_SHORTEST_LENGTH_LTE: Int
  externalSourceType_AVERAGE_LENGTH_EQUAL: Float
  externalSourceType_AVERAGE_LENGTH_GT: Float
  externalSourceType_AVERAGE_LENGTH_GTE: Float
  externalSourceType_AVERAGE_LENGTH_LT: Float
  externalSourceType_AVERAGE_LENGTH_LTE: Float
  externalSourceType_LONGEST_LENGTH_EQUAL: Int
  externalSourceType_LONGEST_LENGTH_GT: Int
  externalSourceType_LONGEST_LENGTH_GTE: Int
  externalSourceType_LONGEST_LENGTH_LT: Int
  externalSourceType_LONGEST_LENGTH_LTE: Int
  externalSourceType_SHORTEST_LENGTH_EQUAL: Int
  externalSourceType_SHORTEST_LENGTH_GT: Int
  externalSourceType_SHORTEST_LENGTH_GTE: Int
  externalSourceType_SHORTEST_LENGTH_LT: Int
  externalSourceType_SHORTEST_LENGTH_LTE: Int
  icon_AVERAGE_LENGTH_EQUAL: Float
  icon_AVERAGE_LENGTH_GT: Float
  icon_AVERAGE_LENGTH_GTE: Float
  icon_AVERAGE_LENGTH_LT: Float
  icon_AVERAGE_LENGTH_LTE: Float
  icon_LONGEST_LENGTH_EQUAL: Int
  icon_LONGEST_LENGTH_GT: Int
  icon_LONGEST_LENGTH_GTE: Int
  icon_LONGEST_LENGTH_LT: Int
  icon_LONGEST_LENGTH_LTE: Int
  icon_SHORTEST_LENGTH_EQUAL: Int
  icon_SHORTEST_LENGTH_GT: Int
  icon_SHORTEST_LENGTH_GTE: Int
  icon_SHORTEST_LENGTH_LT: Int
  icon_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AtomSuggestedChildrenRelationship {
  cursor: String!
  node: Atom!
}

input AtomSuggestedChildrenUpdateConnectionInput {
  node: AtomUpdateInput
}

input AtomSuggestedChildrenUpdateFieldInput {
  connect: [AtomSuggestedChildrenConnectFieldInput!]
  create: [AtomSuggestedChildrenCreateFieldInput!]
  delete: [AtomSuggestedChildrenDeleteFieldInput!]
  disconnect: [AtomSuggestedChildrenDisconnectFieldInput!]
  update: AtomSuggestedChildrenUpdateConnectionInput
  where: AtomSuggestedChildrenConnectionWhere
}

type AtomTagTagsAggregationSelection {
  count: Int!
  node: AtomTagTagsNodeAggregateSelection
}

type AtomTagTagsNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AtomTagsAggregateInput {
  AND: [AtomTagsAggregateInput!]
  NOT: AtomTagsAggregateInput
  OR: [AtomTagsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AtomTagsNodeAggregationWhereInput
}

input AtomTagsConnectFieldInput {
  connect: [TagConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: TagConnectWhere
}

type AtomTagsConnection {
  edges: [AtomTagsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AtomTagsConnectionSort {
  node: TagSort
}

input AtomTagsConnectionWhere {
  AND: [AtomTagsConnectionWhere!]
  NOT: AtomTagsConnectionWhere
  OR: [AtomTagsConnectionWhere!]
  node: TagWhere
}

input AtomTagsCreateFieldInput {
  node: TagCreateInput!
}

input AtomTagsDeleteFieldInput {
  delete: TagDeleteInput
  where: AtomTagsConnectionWhere
}

input AtomTagsDisconnectFieldInput {
  disconnect: TagDisconnectInput
  where: AtomTagsConnectionWhere
}

input AtomTagsFieldInput {
  connect: [AtomTagsConnectFieldInput!]
  create: [AtomTagsCreateFieldInput!]
}

input AtomTagsNodeAggregationWhereInput {
  AND: [AtomTagsNodeAggregationWhereInput!]
  NOT: AtomTagsNodeAggregationWhereInput
  OR: [AtomTagsNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AtomTagsRelationship {
  cursor: String!
  node: Tag!
}

input AtomTagsUpdateConnectionInput {
  node: TagUpdateInput
}

input AtomTagsUpdateFieldInput {
  connect: [AtomTagsConnectFieldInput!]
  create: [AtomTagsCreateFieldInput!]
  delete: [AtomTagsDeleteFieldInput!]
  disconnect: [AtomTagsDisconnectFieldInput!]
  update: AtomTagsUpdateConnectionInput
  where: AtomTagsConnectionWhere
}

enum AtomType {
  AntDesignAffix
  AntDesignAlert
  AntDesignAnchor
  AntDesignAutoComplete
  AntDesignAvatar
  AntDesignBackTop
  AntDesignBadge
  AntDesignBreadcrumb
  AntDesignButton
  AntDesignCalendar
  AntDesignCard
  AntDesignCardMeta
  AntDesignCarousel
  AntDesignCascader
  AntDesignCheckbox
  AntDesignCheckboxGroup
  AntDesignCollapse
  AntDesignConfigProvider
  AntDesignDatePicker
  AntDesignDescriptions
  AntDesignDivider
  AntDesignDrawer
  AntDesignDropdown
  AntDesignDropdownButton
  AntDesignEmpty
  AntDesignForm
  AntDesignFormErrorList
  AntDesignFormItem
  AntDesignFormList
  AntDesignFormProvider
  AntDesignGridCol
  AntDesignGridRow
  AntDesignIcon
  AntDesignImage
  AntDesignInput
  AntDesignInputNumber
  AntDesignInputSearch
  AntDesignInputTextArea
  AntDesignLayout
  AntDesignLayoutContent
  AntDesignLayoutFooter
  AntDesignLayoutHeader
  AntDesignLayoutSider
  AntDesignList
  AntDesignListItem
  AntDesignListItemMeta
  AntDesignMentions
  AntDesignMenu
  AntDesignMessage
  AntDesignModal
  AntDesignNotification
  AntDesignPagination
  AntDesignPopconfirm
  AntDesignPopover
  AntDesignProgress
  AntDesignRadioGroup
  AntDesignRate
  AntDesignResult
  AntDesignSegmented
  AntDesignSelect
  AntDesignSkeleton
  AntDesignSlider
  AntDesignSpace
  AntDesignSpin
  AntDesignStatistic
  AntDesignSteps
  AntDesignSwitch
  AntDesignTable
  AntDesignTabs
  AntDesignTag
  AntDesignTimePicker
  AntDesignTimeline
  AntDesignTooltip
  AntDesignTransfer
  AntDesignTree
  AntDesignTreeSelect
  AntDesignTypographyParagraph
  AntDesignTypographyText
  AntDesignTypographyTitle
  AntDesignUpload
  ExternalComponent
  GridLayout
  HookGraphqlMutation
  HookGraphqlQuery
  HookQueryConfig
  HookQueryLambda
  HookQueryPage
  HookQueryPages
  HookRouter
  HtmlA
  HtmlAbbr
  HtmlArea
  HtmlArticle
  HtmlAside
  HtmlAudio
  HtmlB
  HtmlBase
  HtmlBdo
  HtmlBlockquote
  HtmlBr
  HtmlButton
  HtmlCanvas
  HtmlCaption
  HtmlCite
  HtmlCode
  HtmlCol
  HtmlData
  HtmlDatalist
  HtmlDetails
  HtmlDfn
  HtmlDialog
  HtmlDiv
  HtmlDl
  HtmlEm
  HtmlEmbed
  HtmlFieldset
  HtmlFooter
  HtmlForm
  HtmlH1
  HtmlH2
  HtmlH3
  HtmlH4
  HtmlH5
  HtmlH6
  HtmlHead
  HtmlHeader
  HtmlHr
  HtmlI
  HtmlIframe
  HtmlImg
  HtmlInput
  HtmlKbd
  HtmlLabel
  HtmlLegend
  HtmlLi
  HtmlLink
  HtmlMain
  HtmlMap
  HtmlMark
  HtmlMath
  HtmlMeta
  HtmlMeter
  HtmlNav
  HtmlNoscript
  HtmlObject
  HtmlOl
  HtmlOptgroup
  HtmlOption
  HtmlOutput
  HtmlP
  HtmlPicture
  HtmlPre
  HtmlProgress
  HtmlQ
  HtmlRuby
  HtmlS
  HtmlSamp
  HtmlScript
  HtmlSection
  HtmlSelect
  HtmlSmall
  HtmlSource
  HtmlSpan
  HtmlStrong
  HtmlStyle
  HtmlSub
  HtmlSup
  HtmlTable
  HtmlTd
  HtmlTextarea
  HtmlTh
  HtmlTime
  HtmlTitle
  HtmlTr
  HtmlTrack
  HtmlU
  HtmlUl
  HtmlVar
  HtmlVideo
  HtmlWbr
  LexicalEditor
  MuiAccordion
  MuiAccordionActions
  MuiAccordionDetails
  MuiAccordionSummary
  MuiAlert
  MuiAlertTitle
  MuiAppBar
  MuiAutocomplete
  MuiAvatar
  MuiAvatarGroup
  MuiBackdrop
  MuiBadge
  MuiBadgeUnstyled
  MuiBottomNavigation
  MuiBottomNavigationAction
  MuiBox
  MuiBreadcrumbs
  MuiButton
  MuiButtonBase
  MuiButtonGroup
  MuiButtonUnstyled
  MuiCalendarPicker
  MuiCalendarPickerSkeleton
  MuiCard
  MuiCardActionArea
  MuiCardActions
  MuiCardContent
  MuiCardHeader
  MuiCardMedia
  MuiCheckbox
  MuiChip
  MuiCircularProgress
  MuiClickAwayListener
  MuiClockPicker
  MuiCollapse
  MuiContainer
  MuiCssBaseline
  MuiDataGrid
  MuiDatePicker
  MuiDateRangePicker
  MuiDateRangePickerDay
  MuiDateTimePicker
  MuiDesktopDatePicker
  MuiDesktopDateRangePicker
  MuiDesktopDateTimePicker
  MuiDesktopTimePicker
  MuiDialog
  MuiDialogActions
  MuiDialogContent
  MuiDialogContentText
  MuiDialogTitle
  MuiDivider
  MuiDrawer
  MuiFab
  MuiFade
  MuiFilledInput
  MuiFormControl
  MuiFormControlLabel
  MuiFormControlUnstyled
  MuiFormGroup
  MuiFormHelperText
  MuiFormLabel
  MuiGlobalStyles
  MuiGrid
  MuiGridColDef
  MuiGrow
  MuiHidden
  MuiIcon
  MuiIconButton
  MuiImageList
  MuiImageListItem
  MuiImageListItemBar
  MuiInput
  MuiInputAdornment
  MuiInputBase
  MuiInputLabel
  MuiLinearProgress
  MuiLink
  MuiList
  MuiListItem
  MuiListItemAvatar
  MuiListItemButton
  MuiListItemIcon
  MuiListItemSecondaryAction
  MuiListItemText
  MuiListSubheader
  MuiLoadingButton
  MuiMasonry
  MuiMasonryItem
  MuiMenu
  MuiMenuItem
  MuiMenuList
  MuiMobileDatePicker
  MuiMobileDateRangePicker
  MuiMobileDateTimePicker
  MuiMobileStepper
  MuiMobileTimePicker
  MuiModal
  MuiModalUnstyled
  MuiMonthPicker
  MuiNativeSelect
  MuiNoSsr
  MuiOutlinedInput
  MuiPagination
  MuiPaginationItem
  MuiPaper
  MuiPickersDay
  MuiPopover
  MuiPopper
  MuiPortal
  MuiRadio
  MuiRadioGroup
  MuiRating
  MuiScopedCssBaseline
  MuiSelect
  MuiSkeleton
  MuiSlide
  MuiSlider
  MuiSliderUnstyled
  MuiSnackbar
  MuiSnackbarContent
  MuiSpeedDial
  MuiSpeedDialAction
  MuiSpeedDialIcon
  MuiStack
  MuiStaticDatePicker
  MuiStaticDateRangePicker
  MuiStaticDateTimePicker
  MuiStaticTimePicker
  MuiStep
  MuiStepButton
  MuiStepConnector
  MuiStepContent
  MuiStepIcon
  MuiStepLabel
  MuiStepper
  MuiSvgIcon
  MuiSwipeableDrawer
  MuiSwitch
  MuiSwitchUnstyled
  MuiTab
  MuiTabContext
  MuiTabList
  MuiTabPanel
  MuiTabScrollButton
  MuiTable
  MuiTableBody
  MuiTableCell
  MuiTableContainer
  MuiTableFooter
  MuiTableHead
  MuiTablePagination
  MuiTableRow
  MuiTableSortLabel
  MuiTabs
  MuiTextField
  MuiTextareaAutosize
  MuiTimePicker
  MuiTimeline
  MuiTimelineConnector
  MuiTimelineContent
  MuiTimelineDot
  MuiTimelineItem
  MuiTimelineOppositeContent
  MuiTimelineSeparator
  MuiToggleButton
  MuiToggleButtonGroup
  MuiToolbar
  MuiTooltip
  MuiTreeItem
  MuiTreeView
  MuiTypography
  MuiUnstableTrapFocus
  MuiYearPicker
  MuiZoom
  NextLink
  Query
  ReactFragment
  Script
  State
  Text
  TextList
}

input AtomUpdateInput {
  api: AtomApiUpdateFieldInput
  elements: [AtomElementsUpdateFieldInput!]
  externalCssSource: String @deprecated(reason: "Please use the explicit _SET field")
  externalCssSource_SET: String
  externalJsSource: String @deprecated(reason: "Please use the explicit _SET field")
  externalJsSource_SET: String
  externalSourceType: String @deprecated(reason: "Please use the explicit _SET field")
  externalSourceType_SET: String
  icon: String @deprecated(reason: "Please use the explicit _SET field")
  icon_SET: String
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: AtomOwnerUpdateFieldInput
  requiredParents: [AtomRequiredParentsUpdateFieldInput!]
  suggestedChildren: [AtomSuggestedChildrenUpdateFieldInput!]
  tags: [AtomTagsUpdateFieldInput!]
  type: AtomType @deprecated(reason: "Please use the explicit _SET field")
  type_SET: AtomType
}

type AtomUpdatedEvent {
  event: EventType!
  previousState: AtomEventPayload!
  timestamp: Float!
  updatedAtom: AtomEventPayload!
}

type AtomUserOwnerAggregationSelection {
  count: Int!
  node: AtomUserOwnerNodeAggregateSelection
}

type AtomUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input AtomWhere {
  AND: [AtomWhere!]
  NOT: AtomWhere
  OR: [AtomWhere!]
  api: InterfaceTypeWhere
  apiAggregate: AtomApiAggregateInput
  apiConnection: AtomApiConnectionWhere
  elementsAggregate: AtomElementsAggregateInput

  """
  Return Atoms where all of the related AtomElementsConnections match this filter
  """
  elementsConnection_ALL: AtomElementsConnectionWhere

  """
  Return Atoms where none of the related AtomElementsConnections match this filter
  """
  elementsConnection_NONE: AtomElementsConnectionWhere

  """
  Return Atoms where one of the related AtomElementsConnections match this filter
  """
  elementsConnection_SINGLE: AtomElementsConnectionWhere

  """
  Return Atoms where some of the related AtomElementsConnections match this filter
  """
  elementsConnection_SOME: AtomElementsConnectionWhere

  """Return Atoms where all of the related Elements match this filter"""
  elements_ALL: ElementWhere

  """Return Atoms where none of the related Elements match this filter"""
  elements_NONE: ElementWhere

  """Return Atoms where one of the related Elements match this filter"""
  elements_SINGLE: ElementWhere

  """Return Atoms where some of the related Elements match this filter"""
  elements_SOME: ElementWhere
  externalCssSource: String @deprecated(reason: "Please use the explicit _EQ version")
  externalCssSource_CONTAINS: String
  externalCssSource_ENDS_WITH: String
  externalCssSource_EQ: String
  externalCssSource_IN: [String]
  externalCssSource_MATCHES: String
  externalCssSource_STARTS_WITH: String
  externalJsSource: String @deprecated(reason: "Please use the explicit _EQ version")
  externalJsSource_CONTAINS: String
  externalJsSource_ENDS_WITH: String
  externalJsSource_EQ: String
  externalJsSource_IN: [String]
  externalJsSource_MATCHES: String
  externalJsSource_STARTS_WITH: String
  externalSourceType: String @deprecated(reason: "Please use the explicit _EQ version")
  externalSourceType_CONTAINS: String
  externalSourceType_ENDS_WITH: String
  externalSourceType_EQ: String
  externalSourceType_IN: [String]
  externalSourceType_MATCHES: String
  externalSourceType_STARTS_WITH: String
  icon: String @deprecated(reason: "Please use the explicit _EQ version")
  icon_CONTAINS: String
  icon_ENDS_WITH: String
  icon_EQ: String
  icon_IN: [String]
  icon_MATCHES: String
  icon_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: AtomOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  requiredParentsAggregate: AtomRequiredParentsAggregateInput

  """
  Return Atoms where all of the related AtomRequiredParentsConnections match this filter
  """
  requiredParentsConnection_ALL: AtomRequiredParentsConnectionWhere

  """
  Return Atoms where none of the related AtomRequiredParentsConnections match this filter
  """
  requiredParentsConnection_NONE: AtomRequiredParentsConnectionWhere

  """
  Return Atoms where one of the related AtomRequiredParentsConnections match this filter
  """
  requiredParentsConnection_SINGLE: AtomRequiredParentsConnectionWhere

  """
  Return Atoms where some of the related AtomRequiredParentsConnections match this filter
  """
  requiredParentsConnection_SOME: AtomRequiredParentsConnectionWhere

  """Return Atoms where all of the related Atoms match this filter"""
  requiredParents_ALL: AtomWhere

  """Return Atoms where none of the related Atoms match this filter"""
  requiredParents_NONE: AtomWhere

  """Return Atoms where one of the related Atoms match this filter"""
  requiredParents_SINGLE: AtomWhere

  """Return Atoms where some of the related Atoms match this filter"""
  requiredParents_SOME: AtomWhere
  suggestedChildrenAggregate: AtomSuggestedChildrenAggregateInput

  """
  Return Atoms where all of the related AtomSuggestedChildrenConnections match this filter
  """
  suggestedChildrenConnection_ALL: AtomSuggestedChildrenConnectionWhere

  """
  Return Atoms where none of the related AtomSuggestedChildrenConnections match this filter
  """
  suggestedChildrenConnection_NONE: AtomSuggestedChildrenConnectionWhere

  """
  Return Atoms where one of the related AtomSuggestedChildrenConnections match this filter
  """
  suggestedChildrenConnection_SINGLE: AtomSuggestedChildrenConnectionWhere

  """
  Return Atoms where some of the related AtomSuggestedChildrenConnections match this filter
  """
  suggestedChildrenConnection_SOME: AtomSuggestedChildrenConnectionWhere

  """Return Atoms where all of the related Atoms match this filter"""
  suggestedChildren_ALL: AtomWhere

  """Return Atoms where none of the related Atoms match this filter"""
  suggestedChildren_NONE: AtomWhere

  """Return Atoms where one of the related Atoms match this filter"""
  suggestedChildren_SINGLE: AtomWhere

  """Return Atoms where some of the related Atoms match this filter"""
  suggestedChildren_SOME: AtomWhere
  tagsAggregate: AtomTagsAggregateInput

  """
  Return Atoms where all of the related AtomTagsConnections match this filter
  """
  tagsConnection_ALL: AtomTagsConnectionWhere

  """
  Return Atoms where none of the related AtomTagsConnections match this filter
  """
  tagsConnection_NONE: AtomTagsConnectionWhere

  """
  Return Atoms where one of the related AtomTagsConnections match this filter
  """
  tagsConnection_SINGLE: AtomTagsConnectionWhere

  """
  Return Atoms where some of the related AtomTagsConnections match this filter
  """
  tagsConnection_SOME: AtomTagsConnectionWhere

  """Return Atoms where all of the related Tags match this filter"""
  tags_ALL: TagWhere

  """Return Atoms where none of the related Tags match this filter"""
  tags_NONE: TagWhere

  """Return Atoms where one of the related Tags match this filter"""
  tags_SINGLE: TagWhere

  """Return Atoms where some of the related Tags match this filter"""
  tags_SOME: TagWhere
  type: AtomType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: AtomType
  type_IN: [AtomType!]
}

type AtomsConnection {
  edges: [AtomEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type AuthGuard implements WithOwner {
  config(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  configAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): AuthGuardPropConfigAggregationSelection
  configConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AuthGuardConfigConnectionSort!], where: AuthGuardConfigConnectionWhere): AuthGuardConfigConnection!
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): AuthGuardUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  resource(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ResourceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ResourceSort!], where: ResourceWhere): Resource!
  resourceAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ResourceWhere): AuthGuardResourceResourceAggregationSelection
  resourceConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [AuthGuardResourceConnectionSort!], where: AuthGuardResourceConnectionWhere): AuthGuardResourceConnection!
  responseTransformer: String!
}

type AuthGuardAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  responseTransformer: StringAggregateSelection!
}

input AuthGuardConfigAggregateInput {
  AND: [AuthGuardConfigAggregateInput!]
  NOT: AuthGuardConfigAggregateInput
  OR: [AuthGuardConfigAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AuthGuardConfigNodeAggregationWhereInput
}

input AuthGuardConfigConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type AuthGuardConfigConnection {
  edges: [AuthGuardConfigRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AuthGuardConfigConnectionSort {
  node: PropSort
}

input AuthGuardConfigConnectionWhere {
  AND: [AuthGuardConfigConnectionWhere!]
  NOT: AuthGuardConfigConnectionWhere
  OR: [AuthGuardConfigConnectionWhere!]
  node: PropWhere
}

input AuthGuardConfigCreateFieldInput {
  node: PropCreateInput!
}

input AuthGuardConfigDeleteFieldInput {
  where: AuthGuardConfigConnectionWhere
}

input AuthGuardConfigDisconnectFieldInput {
  where: AuthGuardConfigConnectionWhere
}

input AuthGuardConfigFieldInput {
  connect: AuthGuardConfigConnectFieldInput
  create: AuthGuardConfigCreateFieldInput
}

input AuthGuardConfigNodeAggregationWhereInput {
  AND: [AuthGuardConfigNodeAggregationWhereInput!]
  NOT: AuthGuardConfigNodeAggregationWhereInput
  OR: [AuthGuardConfigNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type AuthGuardConfigRelationship {
  cursor: String!
  node: Prop!
}

input AuthGuardConfigUpdateConnectionInput {
  node: PropUpdateInput
}

input AuthGuardConfigUpdateFieldInput {
  connect: AuthGuardConfigConnectFieldInput
  create: AuthGuardConfigCreateFieldInput
  delete: AuthGuardConfigDeleteFieldInput
  disconnect: AuthGuardConfigDisconnectFieldInput
  update: AuthGuardConfigUpdateConnectionInput
  where: AuthGuardConfigConnectionWhere
}

input AuthGuardConnectInput {
  config: AuthGuardConfigConnectFieldInput
  owner: AuthGuardOwnerConnectFieldInput
  resource: AuthGuardResourceConnectFieldInput
}

input AuthGuardConnectWhere {
  node: AuthGuardWhere!
}

input AuthGuardCreateInput {
  config: AuthGuardConfigFieldInput
  id: ID!
  name: String!
  owner: AuthGuardOwnerFieldInput
  resource: AuthGuardResourceFieldInput
  responseTransformer: String!
}

type AuthGuardCreatedEvent {
  createdAuthGuard: AuthGuardEventPayload!
  event: EventType!
  timestamp: Float!
}

input AuthGuardDeleteInput {
  config: AuthGuardConfigDeleteFieldInput
  owner: WithOwnerOwnerDeleteFieldInput
  resource: AuthGuardResourceDeleteFieldInput
}

type AuthGuardDeletedEvent {
  deletedAuthGuard: AuthGuardEventPayload!
  event: EventType!
  timestamp: Float!
}

input AuthGuardDisconnectInput {
  config: AuthGuardConfigDisconnectFieldInput
  owner: WithOwnerOwnerDisconnectFieldInput
  resource: AuthGuardResourceDisconnectFieldInput
}

type AuthGuardEdge {
  cursor: String!
  node: AuthGuard!
}

type AuthGuardEventPayload {
  id: ID!
  name: String!
  responseTransformer: String!
}

input AuthGuardOptions {
  limit: Int
  offset: Int

  """
  Specify one or more AuthGuardSort objects to sort AuthGuards by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [AuthGuardSort!]
}

input AuthGuardOwnerAggregateInput {
  AND: [AuthGuardOwnerAggregateInput!]
  NOT: AuthGuardOwnerAggregateInput
  OR: [AuthGuardOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AuthGuardOwnerNodeAggregationWhereInput
}

input AuthGuardOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input AuthGuardOwnerCreateFieldInput {
  node: UserCreateInput!
}

input AuthGuardOwnerFieldInput {
  connect: AuthGuardOwnerConnectFieldInput
  create: AuthGuardOwnerCreateFieldInput
}

input AuthGuardOwnerNodeAggregationWhereInput {
  AND: [AuthGuardOwnerNodeAggregationWhereInput!]
  NOT: AuthGuardOwnerNodeAggregationWhereInput
  OR: [AuthGuardOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input AuthGuardOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input AuthGuardOwnerUpdateFieldInput {
  connect: AuthGuardOwnerConnectFieldInput
  create: AuthGuardOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: AuthGuardOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

type AuthGuardPropConfigAggregationSelection {
  count: Int!
  node: AuthGuardPropConfigNodeAggregateSelection
}

type AuthGuardPropConfigNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input AuthGuardResourceAggregateInput {
  AND: [AuthGuardResourceAggregateInput!]
  NOT: AuthGuardResourceAggregateInput
  OR: [AuthGuardResourceAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: AuthGuardResourceNodeAggregationWhereInput
}

input AuthGuardResourceConnectFieldInput {
  connect: ResourceConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ResourceConnectWhere
}

type AuthGuardResourceConnection {
  edges: [AuthGuardResourceRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input AuthGuardResourceConnectionSort {
  node: ResourceSort
}

input AuthGuardResourceConnectionWhere {
  AND: [AuthGuardResourceConnectionWhere!]
  NOT: AuthGuardResourceConnectionWhere
  OR: [AuthGuardResourceConnectionWhere!]
  node: ResourceWhere
}

input AuthGuardResourceCreateFieldInput {
  node: ResourceCreateInput!
}

input AuthGuardResourceDeleteFieldInput {
  delete: ResourceDeleteInput
  where: AuthGuardResourceConnectionWhere
}

input AuthGuardResourceDisconnectFieldInput {
  disconnect: ResourceDisconnectInput
  where: AuthGuardResourceConnectionWhere
}

input AuthGuardResourceFieldInput {
  connect: AuthGuardResourceConnectFieldInput
  create: AuthGuardResourceCreateFieldInput
}

input AuthGuardResourceNodeAggregationWhereInput {
  AND: [AuthGuardResourceNodeAggregationWhereInput!]
  NOT: AuthGuardResourceNodeAggregationWhereInput
  OR: [AuthGuardResourceNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type AuthGuardResourceRelationship {
  cursor: String!
  node: Resource!
}

type AuthGuardResourceResourceAggregationSelection {
  count: Int!
  node: AuthGuardResourceResourceNodeAggregateSelection
}

type AuthGuardResourceResourceNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input AuthGuardResourceUpdateConnectionInput {
  node: ResourceUpdateInput
}

input AuthGuardResourceUpdateFieldInput {
  connect: AuthGuardResourceConnectFieldInput
  create: AuthGuardResourceCreateFieldInput
  delete: AuthGuardResourceDeleteFieldInput
  disconnect: AuthGuardResourceDisconnectFieldInput
  update: AuthGuardResourceUpdateConnectionInput
  where: AuthGuardResourceConnectionWhere
}

"""
Fields to sort AuthGuards by. The order in which sorts are applied is not guaranteed when specifying many fields in one AuthGuardSort object.
"""
input AuthGuardSort {
  id: SortDirection
  name: SortDirection
  responseTransformer: SortDirection
}

input AuthGuardSubscriptionWhere {
  AND: [AuthGuardSubscriptionWhere!]
  NOT: AuthGuardSubscriptionWhere
  OR: [AuthGuardSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  responseTransformer: String @deprecated(reason: "Please use the explicit _EQ version")
  responseTransformer_CONTAINS: String
  responseTransformer_ENDS_WITH: String
  responseTransformer_EQ: String
  responseTransformer_IN: [String!]
  responseTransformer_MATCHES: String
  responseTransformer_STARTS_WITH: String
}

input AuthGuardUpdateInput {
  config: AuthGuardConfigUpdateFieldInput
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: AuthGuardOwnerUpdateFieldInput
  resource: AuthGuardResourceUpdateFieldInput
  responseTransformer: String @deprecated(reason: "Please use the explicit _SET field")
  responseTransformer_SET: String
}

type AuthGuardUpdatedEvent {
  event: EventType!
  previousState: AuthGuardEventPayload!
  timestamp: Float!
  updatedAuthGuard: AuthGuardEventPayload!
}

type AuthGuardUserOwnerAggregationSelection {
  count: Int!
  node: AuthGuardUserOwnerNodeAggregateSelection
}

type AuthGuardUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input AuthGuardWhere {
  AND: [AuthGuardWhere!]
  NOT: AuthGuardWhere
  OR: [AuthGuardWhere!]
  config: PropWhere
  configAggregate: AuthGuardConfigAggregateInput
  configConnection: AuthGuardConfigConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: AuthGuardOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  resource: ResourceWhere
  resourceAggregate: AuthGuardResourceAggregateInput
  resourceConnection: AuthGuardResourceConnectionWhere
  responseTransformer: String @deprecated(reason: "Please use the explicit _EQ version")
  responseTransformer_CONTAINS: String
  responseTransformer_ENDS_WITH: String
  responseTransformer_EQ: String
  responseTransformer_IN: [String!]
  responseTransformer_MATCHES: String
  responseTransformer_STARTS_WITH: String
}

type AuthGuardsConnection {
  edges: [AuthGuardEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

interface BaseAction {
  id: ID!
  name: String!
  postRenderElement(limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  postRenderElementConnection(after: String, first: Int, sort: [BaseActionPostRenderElementConnectionSort!], where: BaseActionPostRenderElementConnectionWhere): BaseActionPostRenderElementConnection!
  preRenderElement(limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  preRenderElementConnection(after: String, first: Int, sort: [BaseActionPreRenderElementConnectionSort!], where: BaseActionPreRenderElementConnectionWhere): BaseActionPreRenderElementConnection!
  store(limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): Store!
  storeConnection(after: String, first: Int, sort: [BaseActionStoreConnectionSort!], where: BaseActionStoreConnectionWhere): BaseActionStoreConnection!
  type: ActionKind!
}

type BaseActionAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input BaseActionConnectInput {
  postRenderElement: [BaseActionPostRenderElementConnectFieldInput!]
  preRenderElement: [BaseActionPreRenderElementConnectFieldInput!]
  store: BaseActionStoreConnectFieldInput
}

input BaseActionConnectWhere {
  node: BaseActionWhere!
}

input BaseActionCreateInput {
  ApiAction: ApiActionCreateInput
  CodeAction: CodeActionCreateInput
}

input BaseActionDeleteInput {
  postRenderElement: [BaseActionPostRenderElementDeleteFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDeleteFieldInput!]
  store: BaseActionStoreDeleteFieldInput
}

input BaseActionDisconnectInput {
  postRenderElement: [BaseActionPostRenderElementDisconnectFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDisconnectFieldInput!]
  store: BaseActionStoreDisconnectFieldInput
}

type BaseActionEdge {
  cursor: String!
  node: BaseAction!
}

enum BaseActionImplementation {
  ApiAction
  CodeAction
}

input BaseActionOptions {
  limit: Int
  offset: Int

  """
  Specify one or more BaseActionSort objects to sort BaseActions by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [BaseActionSort!]
}

input BaseActionPostRenderElementAggregateInput {
  AND: [BaseActionPostRenderElementAggregateInput!]
  NOT: BaseActionPostRenderElementAggregateInput
  OR: [BaseActionPostRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: BaseActionPostRenderElementNodeAggregationWhereInput
}

input BaseActionPostRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type BaseActionPostRenderElementConnection {
  edges: [BaseActionPostRenderElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input BaseActionPostRenderElementConnectionSort {
  node: ElementSort
}

input BaseActionPostRenderElementConnectionWhere {
  AND: [BaseActionPostRenderElementConnectionWhere!]
  NOT: BaseActionPostRenderElementConnectionWhere
  OR: [BaseActionPostRenderElementConnectionWhere!]
  node: ElementWhere
}

input BaseActionPostRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input BaseActionPostRenderElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: BaseActionPostRenderElementConnectionWhere
}

input BaseActionPostRenderElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: BaseActionPostRenderElementConnectionWhere
}

input BaseActionPostRenderElementNodeAggregationWhereInput {
  AND: [BaseActionPostRenderElementNodeAggregationWhereInput!]
  NOT: BaseActionPostRenderElementNodeAggregationWhereInput
  OR: [BaseActionPostRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type BaseActionPostRenderElementRelationship {
  cursor: String!
  node: Element!
}

input BaseActionPostRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input BaseActionPostRenderElementUpdateFieldInput {
  connect: [BaseActionPostRenderElementConnectFieldInput!]
  create: [BaseActionPostRenderElementCreateFieldInput!]
  delete: [BaseActionPostRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPostRenderElementDisconnectFieldInput!]
  update: BaseActionPostRenderElementUpdateConnectionInput
  where: BaseActionPostRenderElementConnectionWhere
}

input BaseActionPreRenderElementAggregateInput {
  AND: [BaseActionPreRenderElementAggregateInput!]
  NOT: BaseActionPreRenderElementAggregateInput
  OR: [BaseActionPreRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: BaseActionPreRenderElementNodeAggregationWhereInput
}

input BaseActionPreRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type BaseActionPreRenderElementConnection {
  edges: [BaseActionPreRenderElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input BaseActionPreRenderElementConnectionSort {
  node: ElementSort
}

input BaseActionPreRenderElementConnectionWhere {
  AND: [BaseActionPreRenderElementConnectionWhere!]
  NOT: BaseActionPreRenderElementConnectionWhere
  OR: [BaseActionPreRenderElementConnectionWhere!]
  node: ElementWhere
}

input BaseActionPreRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input BaseActionPreRenderElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: BaseActionPreRenderElementConnectionWhere
}

input BaseActionPreRenderElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: BaseActionPreRenderElementConnectionWhere
}

input BaseActionPreRenderElementNodeAggregationWhereInput {
  AND: [BaseActionPreRenderElementNodeAggregationWhereInput!]
  NOT: BaseActionPreRenderElementNodeAggregationWhereInput
  OR: [BaseActionPreRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type BaseActionPreRenderElementRelationship {
  cursor: String!
  node: Element!
}

input BaseActionPreRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input BaseActionPreRenderElementUpdateFieldInput {
  connect: [BaseActionPreRenderElementConnectFieldInput!]
  create: [BaseActionPreRenderElementCreateFieldInput!]
  delete: [BaseActionPreRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPreRenderElementDisconnectFieldInput!]
  update: BaseActionPreRenderElementUpdateConnectionInput
  where: BaseActionPreRenderElementConnectionWhere
}

"""
Fields to sort BaseActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one BaseActionSort object.
"""
input BaseActionSort {
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input BaseActionStoreAggregateInput {
  AND: [BaseActionStoreAggregateInput!]
  NOT: BaseActionStoreAggregateInput
  OR: [BaseActionStoreAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: BaseActionStoreNodeAggregationWhereInput
}

input BaseActionStoreConnectFieldInput {
  connect: StoreConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: StoreConnectWhere
}

type BaseActionStoreConnection {
  edges: [BaseActionStoreRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input BaseActionStoreConnectionSort {
  node: StoreSort
}

input BaseActionStoreConnectionWhere {
  AND: [BaseActionStoreConnectionWhere!]
  NOT: BaseActionStoreConnectionWhere
  OR: [BaseActionStoreConnectionWhere!]
  node: StoreWhere
}

input BaseActionStoreCreateFieldInput {
  node: StoreCreateInput!
}

input BaseActionStoreDeleteFieldInput {
  delete: StoreDeleteInput
  where: BaseActionStoreConnectionWhere
}

input BaseActionStoreDisconnectFieldInput {
  disconnect: StoreDisconnectInput
  where: BaseActionStoreConnectionWhere
}

input BaseActionStoreNodeAggregationWhereInput {
  AND: [BaseActionStoreNodeAggregationWhereInput!]
  NOT: BaseActionStoreNodeAggregationWhereInput
  OR: [BaseActionStoreNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type BaseActionStoreRelationship {
  cursor: String!
  node: Store!
}

input BaseActionStoreUpdateConnectionInput {
  node: StoreUpdateInput
}

input BaseActionStoreUpdateFieldInput {
  connect: BaseActionStoreConnectFieldInput
  create: BaseActionStoreCreateFieldInput
  delete: BaseActionStoreDeleteFieldInput
  disconnect: BaseActionStoreDisconnectFieldInput
  update: BaseActionStoreUpdateConnectionInput
  where: BaseActionStoreConnectionWhere
}

input BaseActionUpdateInput {
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  postRenderElement: [BaseActionPostRenderElementUpdateFieldInput!]
  preRenderElement: [BaseActionPreRenderElementUpdateFieldInput!]
  store: BaseActionStoreUpdateFieldInput
}

input BaseActionWhere {
  AND: [BaseActionWhere!]
  NOT: BaseActionWhere
  OR: [BaseActionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  postRenderElementAggregate: BaseActionPostRenderElementAggregateInput

  """
  Return BaseActions where all of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_ALL: BaseActionPostRenderElementConnectionWhere

  """
  Return BaseActions where none of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_NONE: BaseActionPostRenderElementConnectionWhere

  """
  Return BaseActions where one of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SINGLE: BaseActionPostRenderElementConnectionWhere

  """
  Return BaseActions where some of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SOME: BaseActionPostRenderElementConnectionWhere

  """Return BaseActions where all of the related Elements match this filter"""
  postRenderElement_ALL: ElementWhere

  """
  Return BaseActions where none of the related Elements match this filter
  """
  postRenderElement_NONE: ElementWhere

  """Return BaseActions where one of the related Elements match this filter"""
  postRenderElement_SINGLE: ElementWhere

  """
  Return BaseActions where some of the related Elements match this filter
  """
  postRenderElement_SOME: ElementWhere
  preRenderElementAggregate: BaseActionPreRenderElementAggregateInput

  """
  Return BaseActions where all of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_ALL: BaseActionPreRenderElementConnectionWhere

  """
  Return BaseActions where none of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_NONE: BaseActionPreRenderElementConnectionWhere

  """
  Return BaseActions where one of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SINGLE: BaseActionPreRenderElementConnectionWhere

  """
  Return BaseActions where some of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SOME: BaseActionPreRenderElementConnectionWhere

  """Return BaseActions where all of the related Elements match this filter"""
  preRenderElement_ALL: ElementWhere

  """
  Return BaseActions where none of the related Elements match this filter
  """
  preRenderElement_NONE: ElementWhere

  """Return BaseActions where one of the related Elements match this filter"""
  preRenderElement_SINGLE: ElementWhere

  """
  Return BaseActions where some of the related Elements match this filter
  """
  preRenderElement_SOME: ElementWhere
  store: StoreWhere
  storeAggregate: BaseActionStoreAggregateInput
  storeConnection: BaseActionStoreConnectionWhere
  type: ActionKind @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ActionKind
  type_IN: [ActionKind!]
  typename: [BaseActionImplementation!]
  typename_IN: [BaseActionImplementation!] @deprecated(reason: "The typename_IN filter is deprecated, please use the typename filter instead")
}

type BaseActionsConnection {
  edges: [BaseActionEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum BreakpointType {
  Desktop
  MobileLandscape
  MobilePortrait
  Tablet
}

type CodeAction implements BaseAction {
  """Code to run when action is triggered"""
  code: String!
  id: ID!
  name: String!
  postRenderElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  postRenderElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): CodeActionElementPostRenderElementAggregationSelection
  postRenderElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionPostRenderElementConnectionSort!], where: BaseActionPostRenderElementConnectionWhere): BaseActionPostRenderElementConnection!
  preRenderElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  preRenderElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): CodeActionElementPreRenderElementAggregationSelection
  preRenderElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionPreRenderElementConnectionSort!], where: BaseActionPreRenderElementConnectionWhere): BaseActionPreRenderElementConnection!
  store(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): Store!
  storeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: StoreWhere): CodeActionStoreStoreAggregationSelection
  storeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [BaseActionStoreConnectionSort!], where: BaseActionStoreConnectionWhere): BaseActionStoreConnection!
  type: ActionKind!
}

type CodeActionAggregateSelection {
  code: StringAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input CodeActionConnectInput {
  postRenderElement: [CodeActionPostRenderElementConnectFieldInput!]
  preRenderElement: [CodeActionPreRenderElementConnectFieldInput!]
  store: CodeActionStoreConnectFieldInput
}

input CodeActionConnectWhere {
  node: CodeActionWhere!
}

input CodeActionCreateInput {
  code: String!
  id: ID!
  name: String!
  postRenderElement: CodeActionPostRenderElementFieldInput
  preRenderElement: CodeActionPreRenderElementFieldInput
  store: CodeActionStoreFieldInput
  type: ActionKind! = CodeAction
}

type CodeActionCreatedEvent {
  createdCodeAction: CodeActionEventPayload!
  event: EventType!
  timestamp: Float!
}

input CodeActionDeleteInput {
  postRenderElement: [BaseActionPostRenderElementDeleteFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDeleteFieldInput!]
  store: BaseActionStoreDeleteFieldInput
}

type CodeActionDeletedEvent {
  deletedCodeAction: CodeActionEventPayload!
  event: EventType!
  timestamp: Float!
}

input CodeActionDisconnectInput {
  postRenderElement: [BaseActionPostRenderElementDisconnectFieldInput!]
  preRenderElement: [BaseActionPreRenderElementDisconnectFieldInput!]
  store: BaseActionStoreDisconnectFieldInput
}

type CodeActionEdge {
  cursor: String!
  node: CodeAction!
}

type CodeActionElementPostRenderElementAggregationSelection {
  count: Int!
  node: CodeActionElementPostRenderElementNodeAggregateSelection
}

type CodeActionElementPostRenderElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type CodeActionElementPreRenderElementAggregationSelection {
  count: Int!
  node: CodeActionElementPreRenderElementNodeAggregateSelection
}

type CodeActionElementPreRenderElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type CodeActionEventPayload {
  """Code to run when action is triggered"""
  code: String!
  id: ID!
  name: String!
  type: ActionKind!
}

input CodeActionOptions {
  limit: Int
  offset: Int

  """
  Specify one or more CodeActionSort objects to sort CodeActions by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [CodeActionSort!]
}

input CodeActionPostRenderElementAggregateInput {
  AND: [CodeActionPostRenderElementAggregateInput!]
  NOT: CodeActionPostRenderElementAggregateInput
  OR: [CodeActionPostRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: CodeActionPostRenderElementNodeAggregationWhereInput
}

input CodeActionPostRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

input CodeActionPostRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input CodeActionPostRenderElementFieldInput {
  connect: [CodeActionPostRenderElementConnectFieldInput!]
  create: [CodeActionPostRenderElementCreateFieldInput!]
}

input CodeActionPostRenderElementNodeAggregationWhereInput {
  AND: [CodeActionPostRenderElementNodeAggregationWhereInput!]
  NOT: CodeActionPostRenderElementNodeAggregationWhereInput
  OR: [CodeActionPostRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

input CodeActionPostRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input CodeActionPostRenderElementUpdateFieldInput {
  connect: [CodeActionPostRenderElementConnectFieldInput!]
  create: [CodeActionPostRenderElementCreateFieldInput!]
  delete: [BaseActionPostRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPostRenderElementDisconnectFieldInput!]
  update: CodeActionPostRenderElementUpdateConnectionInput
  where: BaseActionPostRenderElementConnectionWhere
}

input CodeActionPreRenderElementAggregateInput {
  AND: [CodeActionPreRenderElementAggregateInput!]
  NOT: CodeActionPreRenderElementAggregateInput
  OR: [CodeActionPreRenderElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: CodeActionPreRenderElementNodeAggregationWhereInput
}

input CodeActionPreRenderElementConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

input CodeActionPreRenderElementCreateFieldInput {
  node: ElementCreateInput!
}

input CodeActionPreRenderElementFieldInput {
  connect: [CodeActionPreRenderElementConnectFieldInput!]
  create: [CodeActionPreRenderElementCreateFieldInput!]
}

input CodeActionPreRenderElementNodeAggregationWhereInput {
  AND: [CodeActionPreRenderElementNodeAggregationWhereInput!]
  NOT: CodeActionPreRenderElementNodeAggregationWhereInput
  OR: [CodeActionPreRenderElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

input CodeActionPreRenderElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input CodeActionPreRenderElementUpdateFieldInput {
  connect: [CodeActionPreRenderElementConnectFieldInput!]
  create: [CodeActionPreRenderElementCreateFieldInput!]
  delete: [BaseActionPreRenderElementDeleteFieldInput!]
  disconnect: [BaseActionPreRenderElementDisconnectFieldInput!]
  update: CodeActionPreRenderElementUpdateConnectionInput
  where: BaseActionPreRenderElementConnectionWhere
}

"""
Fields to sort CodeActions by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeActionSort object.
"""
input CodeActionSort {
  code: SortDirection
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input CodeActionStoreAggregateInput {
  AND: [CodeActionStoreAggregateInput!]
  NOT: CodeActionStoreAggregateInput
  OR: [CodeActionStoreAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: CodeActionStoreNodeAggregationWhereInput
}

input CodeActionStoreConnectFieldInput {
  connect: StoreConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: StoreConnectWhere
}

input CodeActionStoreCreateFieldInput {
  node: StoreCreateInput!
}

input CodeActionStoreFieldInput {
  connect: CodeActionStoreConnectFieldInput
  create: CodeActionStoreCreateFieldInput
}

input CodeActionStoreNodeAggregationWhereInput {
  AND: [CodeActionStoreNodeAggregationWhereInput!]
  NOT: CodeActionStoreNodeAggregationWhereInput
  OR: [CodeActionStoreNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type CodeActionStoreStoreAggregationSelection {
  count: Int!
  node: CodeActionStoreStoreNodeAggregateSelection
}

type CodeActionStoreStoreNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input CodeActionStoreUpdateConnectionInput {
  node: StoreUpdateInput
}

input CodeActionStoreUpdateFieldInput {
  connect: CodeActionStoreConnectFieldInput
  create: CodeActionStoreCreateFieldInput
  delete: BaseActionStoreDeleteFieldInput
  disconnect: BaseActionStoreDisconnectFieldInput
  update: CodeActionStoreUpdateConnectionInput
  where: BaseActionStoreConnectionWhere
}

input CodeActionSubscriptionWhere {
  AND: [CodeActionSubscriptionWhere!]
  NOT: CodeActionSubscriptionWhere
  OR: [CodeActionSubscriptionWhere!]
  code: String @deprecated(reason: "Please use the explicit _EQ version")
  code_CONTAINS: String
  code_ENDS_WITH: String
  code_EQ: String
  code_IN: [String!]
  code_MATCHES: String
  code_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  type: ActionKind @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ActionKind
  type_IN: [ActionKind!]
}

input CodeActionUpdateInput {
  code: String @deprecated(reason: "Please use the explicit _SET field")
  code_SET: String
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  postRenderElement: [CodeActionPostRenderElementUpdateFieldInput!]
  preRenderElement: [CodeActionPreRenderElementUpdateFieldInput!]
  store: CodeActionStoreUpdateFieldInput
  type: ActionKind @deprecated(reason: "Please use the explicit _SET field")
  type_SET: ActionKind
}

type CodeActionUpdatedEvent {
  event: EventType!
  previousState: CodeActionEventPayload!
  timestamp: Float!
  updatedCodeAction: CodeActionEventPayload!
}

input CodeActionWhere {
  AND: [CodeActionWhere!]
  NOT: CodeActionWhere
  OR: [CodeActionWhere!]
  code: String @deprecated(reason: "Please use the explicit _EQ version")
  code_CONTAINS: String
  code_ENDS_WITH: String
  code_EQ: String
  code_IN: [String!]
  code_MATCHES: String
  code_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  postRenderElementAggregate: CodeActionPostRenderElementAggregateInput

  """
  Return CodeActions where all of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_ALL: BaseActionPostRenderElementConnectionWhere

  """
  Return CodeActions where none of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_NONE: BaseActionPostRenderElementConnectionWhere

  """
  Return CodeActions where one of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SINGLE: BaseActionPostRenderElementConnectionWhere

  """
  Return CodeActions where some of the related BaseActionPostRenderElementConnections match this filter
  """
  postRenderElementConnection_SOME: BaseActionPostRenderElementConnectionWhere

  """Return CodeActions where all of the related Elements match this filter"""
  postRenderElement_ALL: ElementWhere

  """
  Return CodeActions where none of the related Elements match this filter
  """
  postRenderElement_NONE: ElementWhere

  """Return CodeActions where one of the related Elements match this filter"""
  postRenderElement_SINGLE: ElementWhere

  """
  Return CodeActions where some of the related Elements match this filter
  """
  postRenderElement_SOME: ElementWhere
  preRenderElementAggregate: CodeActionPreRenderElementAggregateInput

  """
  Return CodeActions where all of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_ALL: BaseActionPreRenderElementConnectionWhere

  """
  Return CodeActions where none of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_NONE: BaseActionPreRenderElementConnectionWhere

  """
  Return CodeActions where one of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SINGLE: BaseActionPreRenderElementConnectionWhere

  """
  Return CodeActions where some of the related BaseActionPreRenderElementConnections match this filter
  """
  preRenderElementConnection_SOME: BaseActionPreRenderElementConnectionWhere

  """Return CodeActions where all of the related Elements match this filter"""
  preRenderElement_ALL: ElementWhere

  """
  Return CodeActions where none of the related Elements match this filter
  """
  preRenderElement_NONE: ElementWhere

  """Return CodeActions where one of the related Elements match this filter"""
  preRenderElement_SINGLE: ElementWhere

  """
  Return CodeActions where some of the related Elements match this filter
  """
  preRenderElement_SOME: ElementWhere
  store: StoreWhere
  storeAggregate: CodeActionStoreAggregateInput
  storeConnection: BaseActionStoreConnectionWhere
  type: ActionKind @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ActionKind
  type_IN: [ActionKind!]
}

type CodeActionsConnection {
  edges: [CodeActionEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum CodeMirrorLanguage {
  Css
  CssInJs
  Graphql
  Javascript
  Json
  Typescript
}

"""Allows editing the value using a code mirror editor"""
type CodeMirrorType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): CodeMirrorTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  language: CodeMirrorLanguage!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): CodeMirrorTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type CodeMirrorTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input CodeMirrorTypeConnectInput {
  fieldRefs: [CodeMirrorTypeFieldRefsConnectFieldInput!]
  owner: CodeMirrorTypeOwnerConnectFieldInput
}

input CodeMirrorTypeConnectWhere {
  node: CodeMirrorTypeWhere!
}

input CodeMirrorTypeCreateInput {
  fieldRefs: CodeMirrorTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = CodeMirrorType
  language: CodeMirrorLanguage!
  name: String!
  owner: CodeMirrorTypeOwnerFieldInput
}

type CodeMirrorTypeCreatedEvent {
  createdCodeMirrorType: CodeMirrorTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input CodeMirrorTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type CodeMirrorTypeDeletedEvent {
  deletedCodeMirrorType: CodeMirrorTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input CodeMirrorTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type CodeMirrorTypeEdge {
  cursor: String!
  node: CodeMirrorType!
}

type CodeMirrorTypeEventPayload {
  id: ID!
  kind: TypeKind!
  language: CodeMirrorLanguage!
  name: String!
}

type CodeMirrorTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: CodeMirrorTypeFieldFieldRefsNodeAggregateSelection
}

type CodeMirrorTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input CodeMirrorTypeFieldRefsAggregateInput {
  AND: [CodeMirrorTypeFieldRefsAggregateInput!]
  NOT: CodeMirrorTypeFieldRefsAggregateInput
  OR: [CodeMirrorTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: CodeMirrorTypeFieldRefsNodeAggregationWhereInput
}

input CodeMirrorTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input CodeMirrorTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input CodeMirrorTypeFieldRefsFieldInput {
  connect: [CodeMirrorTypeFieldRefsConnectFieldInput!]
  create: [CodeMirrorTypeFieldRefsCreateFieldInput!]
}

input CodeMirrorTypeFieldRefsNodeAggregationWhereInput {
  AND: [CodeMirrorTypeFieldRefsNodeAggregationWhereInput!]
  NOT: CodeMirrorTypeFieldRefsNodeAggregationWhereInput
  OR: [CodeMirrorTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input CodeMirrorTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input CodeMirrorTypeFieldRefsUpdateFieldInput {
  connect: [CodeMirrorTypeFieldRefsConnectFieldInput!]
  create: [CodeMirrorTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: CodeMirrorTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input CodeMirrorTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more CodeMirrorTypeSort objects to sort CodeMirrorTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [CodeMirrorTypeSort!]
}

input CodeMirrorTypeOwnerAggregateInput {
  AND: [CodeMirrorTypeOwnerAggregateInput!]
  NOT: CodeMirrorTypeOwnerAggregateInput
  OR: [CodeMirrorTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: CodeMirrorTypeOwnerNodeAggregationWhereInput
}

input CodeMirrorTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input CodeMirrorTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input CodeMirrorTypeOwnerFieldInput {
  connect: CodeMirrorTypeOwnerConnectFieldInput
  create: CodeMirrorTypeOwnerCreateFieldInput
}

input CodeMirrorTypeOwnerNodeAggregationWhereInput {
  AND: [CodeMirrorTypeOwnerNodeAggregationWhereInput!]
  NOT: CodeMirrorTypeOwnerNodeAggregationWhereInput
  OR: [CodeMirrorTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input CodeMirrorTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input CodeMirrorTypeOwnerUpdateFieldInput {
  connect: CodeMirrorTypeOwnerConnectFieldInput
  create: CodeMirrorTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: CodeMirrorTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort CodeMirrorTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one CodeMirrorTypeSort object.
"""
input CodeMirrorTypeSort {
  id: SortDirection
  kind: SortDirection
  language: SortDirection
  name: SortDirection
}

input CodeMirrorTypeSubscriptionWhere {
  AND: [CodeMirrorTypeSubscriptionWhere!]
  NOT: CodeMirrorTypeSubscriptionWhere
  OR: [CodeMirrorTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  language: CodeMirrorLanguage @deprecated(reason: "Please use the explicit _EQ version")
  language_EQ: CodeMirrorLanguage
  language_IN: [CodeMirrorLanguage!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input CodeMirrorTypeUpdateInput {
  fieldRefs: [CodeMirrorTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  language: CodeMirrorLanguage @deprecated(reason: "Please use the explicit _SET field")
  language_SET: CodeMirrorLanguage
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: CodeMirrorTypeOwnerUpdateFieldInput
}

type CodeMirrorTypeUpdatedEvent {
  event: EventType!
  previousState: CodeMirrorTypeEventPayload!
  timestamp: Float!
  updatedCodeMirrorType: CodeMirrorTypeEventPayload!
}

type CodeMirrorTypeUserOwnerAggregationSelection {
  count: Int!
  node: CodeMirrorTypeUserOwnerNodeAggregateSelection
}

type CodeMirrorTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input CodeMirrorTypeWhere {
  AND: [CodeMirrorTypeWhere!]
  NOT: CodeMirrorTypeWhere
  OR: [CodeMirrorTypeWhere!]
  fieldRefsAggregate: CodeMirrorTypeFieldRefsAggregateInput

  """
  Return CodeMirrorTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return CodeMirrorTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return CodeMirrorTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return CodeMirrorTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """
  Return CodeMirrorTypes where all of the related Fields match this filter
  """
  fieldRefs_ALL: FieldWhere

  """
  Return CodeMirrorTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """
  Return CodeMirrorTypes where one of the related Fields match this filter
  """
  fieldRefs_SINGLE: FieldWhere

  """
  Return CodeMirrorTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  language: CodeMirrorLanguage @deprecated(reason: "Please use the explicit _EQ version")
  language_EQ: CodeMirrorLanguage
  language_IN: [CodeMirrorLanguage!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: CodeMirrorTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type CodeMirrorTypesConnection {
  edges: [CodeMirrorTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Component implements WithOwner {
  api(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: InterfaceTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): InterfaceType!
  apiAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: InterfaceTypeWhere): ComponentInterfaceTypeApiAggregationSelection
  apiConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ComponentApiConnectionSort!], where: ComponentApiConnectionWhere): ComponentApiConnection!
  compositeKey: String!
  dependantTypes: [AnyType!]!
  elements: [Element!]!
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ComponentUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  props(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  propsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): ComponentPropPropsAggregationSelection
  propsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ComponentPropsConnectionSort!], where: ComponentPropsConnectionWhere): ComponentPropsConnection!
  rootElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element!
  rootElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ComponentElementRootElementAggregationSelection
  rootElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ComponentRootElementConnectionSort!], where: ComponentRootElementConnectionWhere): ComponentRootElementConnection!
  slug: String!
  store(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): Store!
  storeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: StoreWhere): ComponentStoreStoreAggregationSelection
  storeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ComponentStoreConnectionSort!], where: ComponentStoreConnectionWhere): ComponentStoreConnection!
}

type ComponentAggregateSelection {
  compositeKey: StringAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input ComponentApiAggregateInput {
  AND: [ComponentApiAggregateInput!]
  NOT: ComponentApiAggregateInput
  OR: [ComponentApiAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ComponentApiNodeAggregationWhereInput
}

input ComponentApiConnectFieldInput {
  connect: InterfaceTypeConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: InterfaceTypeConnectWhere
}

type ComponentApiConnection {
  edges: [ComponentApiRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ComponentApiConnectionSort {
  node: InterfaceTypeSort
}

input ComponentApiConnectionWhere {
  AND: [ComponentApiConnectionWhere!]
  NOT: ComponentApiConnectionWhere
  OR: [ComponentApiConnectionWhere!]
  node: InterfaceTypeWhere
}

input ComponentApiCreateFieldInput {
  node: InterfaceTypeCreateInput!
}

input ComponentApiDeleteFieldInput {
  delete: InterfaceTypeDeleteInput
  where: ComponentApiConnectionWhere
}

input ComponentApiDisconnectFieldInput {
  disconnect: InterfaceTypeDisconnectInput
  where: ComponentApiConnectionWhere
}

input ComponentApiFieldInput {
  connect: ComponentApiConnectFieldInput
  create: ComponentApiCreateFieldInput
}

input ComponentApiNodeAggregationWhereInput {
  AND: [ComponentApiNodeAggregationWhereInput!]
  NOT: ComponentApiNodeAggregationWhereInput
  OR: [ComponentApiNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ComponentApiRelationship {
  cursor: String!
  node: InterfaceType!
}

input ComponentApiUpdateConnectionInput {
  node: InterfaceTypeUpdateInput
}

input ComponentApiUpdateFieldInput {
  connect: ComponentApiConnectFieldInput
  create: ComponentApiCreateFieldInput
  delete: ComponentApiDeleteFieldInput
  disconnect: ComponentApiDisconnectFieldInput
  update: ComponentApiUpdateConnectionInput
  where: ComponentApiConnectionWhere
}

input ComponentConnectInput {
  api: ComponentApiConnectFieldInput
  owner: ComponentOwnerConnectFieldInput
  props: ComponentPropsConnectFieldInput
  rootElement: ComponentRootElementConnectFieldInput
  store: ComponentStoreConnectFieldInput
}

input ComponentConnectWhere {
  node: ComponentWhere!
}

input ComponentCreateInput {
  api: ComponentApiFieldInput
  compositeKey: String!
  id: ID!
  owner: ComponentOwnerFieldInput
  props: ComponentPropsFieldInput
  rootElement: ComponentRootElementFieldInput
  store: ComponentStoreFieldInput
}

type ComponentCreatedEvent {
  createdComponent: ComponentEventPayload!
  event: EventType!
  timestamp: Float!
}

input ComponentDeleteInput {
  api: ComponentApiDeleteFieldInput
  owner: WithOwnerOwnerDeleteFieldInput
  props: ComponentPropsDeleteFieldInput
  rootElement: ComponentRootElementDeleteFieldInput
  store: ComponentStoreDeleteFieldInput
}

type ComponentDeletedEvent {
  deletedComponent: ComponentEventPayload!
  event: EventType!
  timestamp: Float!
}

input ComponentDisconnectInput {
  api: ComponentApiDisconnectFieldInput
  owner: WithOwnerOwnerDisconnectFieldInput
  props: ComponentPropsDisconnectFieldInput
  rootElement: ComponentRootElementDisconnectFieldInput
  store: ComponentStoreDisconnectFieldInput
}

type ComponentEdge {
  cursor: String!
  node: Component!
}

type ComponentElementRootElementAggregationSelection {
  count: Int!
  node: ComponentElementRootElementNodeAggregateSelection
}

type ComponentElementRootElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ComponentEventPayload {
  compositeKey: String!
  id: ID!
}

type ComponentInterfaceTypeApiAggregationSelection {
  count: Int!
  node: ComponentInterfaceTypeApiNodeAggregateSelection
}

type ComponentInterfaceTypeApiNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ComponentOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ComponentSort objects to sort Components by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ComponentSort!]
}

input ComponentOwnerAggregateInput {
  AND: [ComponentOwnerAggregateInput!]
  NOT: ComponentOwnerAggregateInput
  OR: [ComponentOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ComponentOwnerNodeAggregationWhereInput
}

input ComponentOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ComponentOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ComponentOwnerFieldInput {
  connect: ComponentOwnerConnectFieldInput
  create: ComponentOwnerCreateFieldInput
}

input ComponentOwnerNodeAggregationWhereInput {
  AND: [ComponentOwnerNodeAggregationWhereInput!]
  NOT: ComponentOwnerNodeAggregationWhereInput
  OR: [ComponentOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ComponentOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ComponentOwnerUpdateFieldInput {
  connect: ComponentOwnerConnectFieldInput
  create: ComponentOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: ComponentOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

type ComponentPropPropsAggregationSelection {
  count: Int!
  node: ComponentPropPropsNodeAggregateSelection
}

type ComponentPropPropsNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input ComponentPropsAggregateInput {
  AND: [ComponentPropsAggregateInput!]
  NOT: ComponentPropsAggregateInput
  OR: [ComponentPropsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ComponentPropsNodeAggregationWhereInput
}

input ComponentPropsConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type ComponentPropsConnection {
  edges: [ComponentPropsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ComponentPropsConnectionSort {
  node: PropSort
}

input ComponentPropsConnectionWhere {
  AND: [ComponentPropsConnectionWhere!]
  NOT: ComponentPropsConnectionWhere
  OR: [ComponentPropsConnectionWhere!]
  node: PropWhere
}

input ComponentPropsCreateFieldInput {
  node: PropCreateInput!
}

input ComponentPropsDeleteFieldInput {
  where: ComponentPropsConnectionWhere
}

input ComponentPropsDisconnectFieldInput {
  where: ComponentPropsConnectionWhere
}

input ComponentPropsFieldInput {
  connect: ComponentPropsConnectFieldInput
  create: ComponentPropsCreateFieldInput
}

input ComponentPropsNodeAggregationWhereInput {
  AND: [ComponentPropsNodeAggregationWhereInput!]
  NOT: ComponentPropsNodeAggregationWhereInput
  OR: [ComponentPropsNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ComponentPropsRelationship {
  cursor: String!
  node: Prop!
}

input ComponentPropsUpdateConnectionInput {
  node: PropUpdateInput
}

input ComponentPropsUpdateFieldInput {
  connect: ComponentPropsConnectFieldInput
  create: ComponentPropsCreateFieldInput
  delete: ComponentPropsDeleteFieldInput
  disconnect: ComponentPropsDisconnectFieldInput
  update: ComponentPropsUpdateConnectionInput
  where: ComponentPropsConnectionWhere
}

input ComponentRootElementAggregateInput {
  AND: [ComponentRootElementAggregateInput!]
  NOT: ComponentRootElementAggregateInput
  OR: [ComponentRootElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ComponentRootElementNodeAggregationWhereInput
}

input ComponentRootElementConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ComponentRootElementConnection {
  edges: [ComponentRootElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ComponentRootElementConnectionSort {
  node: ElementSort
}

input ComponentRootElementConnectionWhere {
  AND: [ComponentRootElementConnectionWhere!]
  NOT: ComponentRootElementConnectionWhere
  OR: [ComponentRootElementConnectionWhere!]
  node: ElementWhere
}

input ComponentRootElementCreateFieldInput {
  node: ElementCreateInput!
}

input ComponentRootElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: ComponentRootElementConnectionWhere
}

input ComponentRootElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ComponentRootElementConnectionWhere
}

input ComponentRootElementFieldInput {
  connect: ComponentRootElementConnectFieldInput
  create: ComponentRootElementCreateFieldInput
}

input ComponentRootElementNodeAggregationWhereInput {
  AND: [ComponentRootElementNodeAggregationWhereInput!]
  NOT: ComponentRootElementNodeAggregationWhereInput
  OR: [ComponentRootElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ComponentRootElementRelationship {
  cursor: String!
  node: Element!
}

input ComponentRootElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input ComponentRootElementUpdateFieldInput {
  connect: ComponentRootElementConnectFieldInput
  create: ComponentRootElementCreateFieldInput
  delete: ComponentRootElementDeleteFieldInput
  disconnect: ComponentRootElementDisconnectFieldInput
  update: ComponentRootElementUpdateConnectionInput
  where: ComponentRootElementConnectionWhere
}

"""
Fields to sort Components by. The order in which sorts are applied is not guaranteed when specifying many fields in one ComponentSort object.
"""
input ComponentSort {
  compositeKey: SortDirection
  id: SortDirection
}

input ComponentStoreAggregateInput {
  AND: [ComponentStoreAggregateInput!]
  NOT: ComponentStoreAggregateInput
  OR: [ComponentStoreAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ComponentStoreNodeAggregationWhereInput
}

input ComponentStoreConnectFieldInput {
  connect: StoreConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: StoreConnectWhere
}

type ComponentStoreConnection {
  edges: [ComponentStoreRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ComponentStoreConnectionSort {
  node: StoreSort
}

input ComponentStoreConnectionWhere {
  AND: [ComponentStoreConnectionWhere!]
  NOT: ComponentStoreConnectionWhere
  OR: [ComponentStoreConnectionWhere!]
  node: StoreWhere
}

input ComponentStoreCreateFieldInput {
  node: StoreCreateInput!
}

input ComponentStoreDeleteFieldInput {
  delete: StoreDeleteInput
  where: ComponentStoreConnectionWhere
}

input ComponentStoreDisconnectFieldInput {
  disconnect: StoreDisconnectInput
  where: ComponentStoreConnectionWhere
}

input ComponentStoreFieldInput {
  connect: ComponentStoreConnectFieldInput
  create: ComponentStoreCreateFieldInput
}

input ComponentStoreNodeAggregationWhereInput {
  AND: [ComponentStoreNodeAggregationWhereInput!]
  NOT: ComponentStoreNodeAggregationWhereInput
  OR: [ComponentStoreNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ComponentStoreRelationship {
  cursor: String!
  node: Store!
}

type ComponentStoreStoreAggregationSelection {
  count: Int!
  node: ComponentStoreStoreNodeAggregateSelection
}

type ComponentStoreStoreNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ComponentStoreUpdateConnectionInput {
  node: StoreUpdateInput
}

input ComponentStoreUpdateFieldInput {
  connect: ComponentStoreConnectFieldInput
  create: ComponentStoreCreateFieldInput
  delete: ComponentStoreDeleteFieldInput
  disconnect: ComponentStoreDisconnectFieldInput
  update: ComponentStoreUpdateConnectionInput
  where: ComponentStoreConnectionWhere
}

input ComponentSubscriptionWhere {
  AND: [ComponentSubscriptionWhere!]
  NOT: ComponentSubscriptionWhere
  OR: [ComponentSubscriptionWhere!]
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
}

input ComponentUpdateInput {
  api: ComponentApiUpdateFieldInput
  compositeKey: String @deprecated(reason: "Please use the explicit _SET field")
  compositeKey_SET: String
  owner: ComponentOwnerUpdateFieldInput
  props: ComponentPropsUpdateFieldInput
  rootElement: ComponentRootElementUpdateFieldInput
  store: ComponentStoreUpdateFieldInput
}

type ComponentUpdatedEvent {
  event: EventType!
  previousState: ComponentEventPayload!
  timestamp: Float!
  updatedComponent: ComponentEventPayload!
}

type ComponentUserOwnerAggregationSelection {
  count: Int!
  node: ComponentUserOwnerNodeAggregateSelection
}

type ComponentUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ComponentWhere {
  AND: [ComponentWhere!]
  NOT: ComponentWhere
  OR: [ComponentWhere!]
  api: InterfaceTypeWhere
  apiAggregate: ComponentApiAggregateInput
  apiConnection: ComponentApiConnectionWhere
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  owner: UserWhere
  ownerAggregate: ComponentOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  props: PropWhere
  propsAggregate: ComponentPropsAggregateInput
  propsConnection: ComponentPropsConnectionWhere
  rootElement: ElementWhere
  rootElementAggregate: ComponentRootElementAggregateInput
  rootElementConnection: ComponentRootElementConnectionWhere
  store: StoreWhere
  storeAggregate: ComponentStoreAggregateInput
  storeConnection: ComponentStoreConnectionWhere
}

type ComponentsConnection {
  edges: [ComponentEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum ConfigPaneTab {
  CSS
  Component
  Node
  Page
  Props
  PropsInspector
  PropsMap
  PropsTransformation
}

union ContainerNode = Component | Page

input ContainerNodeWhere {
  Component: ComponentWhere
  Page: PageWhere
}

type CreateActionTypesMutationResponse {
  actionTypes: [ActionType!]!
  info: CreateInfo!
}

type CreateApiActionsMutationResponse {
  apiActions: [ApiAction!]!
  info: CreateInfo!
}

type CreateAppTypesMutationResponse {
  appTypes: [AppType!]!
  info: CreateInfo!
}

type CreateAppsMutationResponse {
  apps: [App!]!
  info: CreateInfo!
}

type CreateArrayTypesMutationResponse {
  arrayTypes: [ArrayType!]!
  info: CreateInfo!
}

type CreateAtomsMutationResponse {
  atoms: [Atom!]!
  info: CreateInfo!
}

type CreateAuthGuardsMutationResponse {
  authGuards: [AuthGuard!]!
  info: CreateInfo!
}

type CreateCodeActionsMutationResponse {
  codeActions: [CodeAction!]!
  info: CreateInfo!
}

type CreateCodeMirrorTypesMutationResponse {
  codeMirrorTypes: [CodeMirrorType!]!
  info: CreateInfo!
}

type CreateComponentsMutationResponse {
  components: [Component!]!
  info: CreateInfo!
}

type CreateDomainsMutationResponse {
  domains: [Domain!]!
  info: CreateInfo!
}

type CreateElementTypesMutationResponse {
  elementTypes: [ElementType!]!
  info: CreateInfo!
}

type CreateElementsMutationResponse {
  elements: [Element!]!
  info: CreateInfo!
}

type CreateEnumTypeValuesMutationResponse {
  enumTypeValues: [EnumTypeValue!]!
  info: CreateInfo!
}

type CreateEnumTypesMutationResponse {
  enumTypes: [EnumType!]!
  info: CreateInfo!
}

type CreateFieldsMutationResponse {
  fields: [Field!]!
  info: CreateInfo!
}

type CreateHooksMutationResponse {
  hooks: [Hook!]!
  info: CreateInfo!
}

"""
Information about the number of nodes and relationships created during a create mutation
"""
type CreateInfo {
  nodesCreated: Int!
  relationshipsCreated: Int!
}

type CreateInterfaceTypesMutationResponse {
  info: CreateInfo!
  interfaceTypes: [InterfaceType!]!
}

type CreateLambdaTypesMutationResponse {
  info: CreateInfo!
  lambdaTypes: [LambdaType!]!
}

type CreatePageTypesMutationResponse {
  info: CreateInfo!
  pageTypes: [PageType!]!
}

type CreatePagesMutationResponse {
  info: CreateInfo!
  pages: [Page!]!
}

type CreatePreferencesMutationResponse {
  info: CreateInfo!
  preferences: [Preference!]!
}

type CreatePrimitiveTypesMutationResponse {
  info: CreateInfo!
  primitiveTypes: [PrimitiveType!]!
}

type CreatePropsMutationResponse {
  info: CreateInfo!
  props: [Prop!]!
}

type CreateReactNodeTypesMutationResponse {
  info: CreateInfo!
  reactNodeTypes: [ReactNodeType!]!
}

type CreateRedirectsMutationResponse {
  info: CreateInfo!
  redirects: [Redirect!]!
}

type CreateRenderPropTypesMutationResponse {
  info: CreateInfo!
  renderPropTypes: [RenderPropType!]!
}

type CreateResourcesMutationResponse {
  info: CreateInfo!
  resources: [Resource!]!
}

type CreateRichTextTypesMutationResponse {
  info: CreateInfo!
  richTextTypes: [RichTextType!]!
}

type CreateStoresMutationResponse {
  info: CreateInfo!
  stores: [Store!]!
}

type CreateTagsMutationResponse {
  info: CreateInfo!
  tags: [Tag!]!
}

type CreateTypeReferencesMutationResponse {
  info: CreateInfo!
  typeReferences: [TypeReference!]!
}

type CreateUnionTypesMutationResponse {
  info: CreateInfo!
  unionTypes: [UnionType!]!
}

type CreateUnknownTypesMutationResponse {
  info: CreateInfo!
  unknownTypes: [UnknownType!]!
}

type CreateUsersMutationResponse {
  info: CreateInfo!
  users: [User!]!
}

"""
Information about the number of nodes and relationships deleted during a delete mutation
"""
type DeleteInfo {
  nodesDeleted: Int!
  relationshipsDeleted: Int!
}

type Domain {
  app(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AppOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AppSort!], where: AppWhere): App!
  appAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AppWhere): DomainAppAppAggregationSelection
  appConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [DomainAppConnectionSort!], where: DomainAppConnectionWhere): DomainAppConnection!
  domainConfig: ProductionDomainConfig!
  id: ID!
  name: String!
}

type DomainAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input DomainAppAggregateInput {
  AND: [DomainAppAggregateInput!]
  NOT: DomainAppAggregateInput
  OR: [DomainAppAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: DomainAppNodeAggregationWhereInput
}

type DomainAppAppAggregationSelection {
  count: Int!
  node: DomainAppAppNodeAggregateSelection
}

type DomainAppAppNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input DomainAppConnectFieldInput {
  connect: AppConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AppConnectWhere
}

type DomainAppConnection {
  edges: [DomainAppRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input DomainAppConnectionSort {
  node: AppSort
}

input DomainAppConnectionWhere {
  AND: [DomainAppConnectionWhere!]
  NOT: DomainAppConnectionWhere
  OR: [DomainAppConnectionWhere!]
  node: AppWhere
}

input DomainAppCreateFieldInput {
  node: AppCreateInput!
}

input DomainAppDeleteFieldInput {
  delete: AppDeleteInput
  where: DomainAppConnectionWhere
}

input DomainAppDisconnectFieldInput {
  disconnect: AppDisconnectInput
  where: DomainAppConnectionWhere
}

input DomainAppFieldInput {
  connect: DomainAppConnectFieldInput
  create: DomainAppCreateFieldInput
}

input DomainAppNodeAggregationWhereInput {
  AND: [DomainAppNodeAggregationWhereInput!]
  NOT: DomainAppNodeAggregationWhereInput
  OR: [DomainAppNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type DomainAppRelationship {
  cursor: String!
  node: App!
}

input DomainAppUpdateConnectionInput {
  node: AppUpdateInput
}

input DomainAppUpdateFieldInput {
  connect: DomainAppConnectFieldInput
  create: DomainAppCreateFieldInput
  delete: DomainAppDeleteFieldInput
  disconnect: DomainAppDisconnectFieldInput
  update: DomainAppUpdateConnectionInput
  where: DomainAppConnectionWhere
}

input DomainConnectInput {
  app: DomainAppConnectFieldInput
}

input DomainConnectWhere {
  node: DomainWhere!
}

input DomainCreateInput {
  app: DomainAppFieldInput
  id: ID!
  name: String!
}

type DomainCreatedEvent {
  createdDomain: DomainEventPayload!
  event: EventType!
  timestamp: Float!
}

input DomainDeleteInput {
  app: DomainAppDeleteFieldInput
}

type DomainDeletedEvent {
  deletedDomain: DomainEventPayload!
  event: EventType!
  timestamp: Float!
}

input DomainDisconnectInput {
  app: DomainAppDisconnectFieldInput
}

type DomainEdge {
  cursor: String!
  node: Domain!
}

type DomainEventPayload {
  id: ID!
  name: String!
}

input DomainOptions {
  limit: Int
  offset: Int

  """
  Specify one or more DomainSort objects to sort Domains by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [DomainSort!]
}

"""
Fields to sort Domains by. The order in which sorts are applied is not guaranteed when specifying many fields in one DomainSort object.
"""
input DomainSort {
  id: SortDirection
  name: SortDirection
}

input DomainSubscriptionWhere {
  AND: [DomainSubscriptionWhere!]
  NOT: DomainSubscriptionWhere
  OR: [DomainSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input DomainUpdateInput {
  app: DomainAppUpdateFieldInput
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
}

type DomainUpdatedEvent {
  event: EventType!
  previousState: DomainEventPayload!
  timestamp: Float!
  updatedDomain: DomainEventPayload!
}

input DomainWhere {
  AND: [DomainWhere!]
  NOT: DomainWhere
  OR: [DomainWhere!]
  app: AppWhere
  appAggregate: DomainAppAggregateInput
  appConnection: DomainAppConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

type DomainsConnection {
  edges: [DomainEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Element {
  childMapperComponent(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ComponentOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ComponentSort!], where: ComponentWhere): Component
  childMapperComponentAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ComponentWhere): ElementComponentChildMapperComponentAggregationSelection
  childMapperComponentConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementChildMapperComponentConnectionSort!], where: ElementChildMapperComponentConnectionWhere): ElementChildMapperComponentConnection!
  childMapperPreviousSibling(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  childMapperPreviousSiblingAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ElementElementChildMapperPreviousSiblingAggregationSelection
  childMapperPreviousSiblingConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementChildMapperPreviousSiblingConnectionSort!], where: ElementChildMapperPreviousSiblingConnectionWhere): ElementChildMapperPreviousSiblingConnection!
  childMapperPropKey: String
  closestContainerNode: ContainerNode!
  compositeKey: String!
  firstChild(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  firstChildAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ElementElementFirstChildAggregationSelection
  firstChildConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementFirstChildConnectionSort!], where: ElementFirstChildConnectionWhere): ElementFirstChildConnection!
  id: ID!
  name: String!
  nextSibling(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  nextSiblingAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ElementElementNextSiblingAggregationSelection
  nextSiblingConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementNextSiblingConnectionSort!], where: ElementNextSiblingConnectionWhere): ElementNextSiblingConnection!
  page(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PageOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageSort!], where: PageWhere): Page
  pageAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PageWhere): ElementPagePageAggregationSelection
  pageConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementPageConnectionSort!], where: ElementPageConnectionWhere): ElementPageConnection!
  parentComponent(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ComponentOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ComponentSort!], where: ComponentWhere): Component
  parentComponentAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ComponentWhere): ElementComponentParentComponentAggregationSelection
  parentComponentConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementParentComponentConnectionSort!], where: ElementParentComponentConnectionWhere): ElementParentComponentConnection!
  parentElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  parentElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ElementElementParentElementAggregationSelection
  parentElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementParentElementConnectionSort!], where: ElementParentElementConnectionWhere): ElementParentElementConnection!
  postRenderActions(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: BaseActionOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [BaseActionSort!], where: BaseActionWhere): [BaseAction!]!
  postRenderActionsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: BaseActionWhere): ElementBaseActionPostRenderActionsAggregationSelection
  postRenderActionsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementPostRenderActionsConnectionSort!], where: ElementPostRenderActionsConnectionWhere): ElementPostRenderActionsConnection!
  preRenderActions(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: BaseActionOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [BaseActionSort!], where: BaseActionWhere): [BaseAction!]!
  preRenderActionsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: BaseActionWhere): ElementBaseActionPreRenderActionsAggregationSelection
  preRenderActionsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementPreRenderActionsConnectionSort!], where: ElementPreRenderActionsConnectionWhere): ElementPreRenderActionsConnection!
  prevSibling(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  prevSiblingAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): ElementElementPrevSiblingAggregationSelection
  prevSiblingConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementPrevSiblingConnectionSort!], where: ElementPrevSiblingConnectionWhere): ElementPrevSiblingConnection!
  props(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  propsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): ElementPropPropsAggregationSelection
  propsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ElementPropsConnectionSort!], where: ElementPropsConnectionWhere): ElementPropsConnection!
  renderForEachPropKey: String
  renderIfExpression: String
  renderType(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: ElementRenderTypeWhere): ElementRenderType!
  renderTypeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, where: ElementRenderTypeConnectionWhere): ElementRenderTypeConnection!
  slug: String!
  style: String
  tailwindClassNames: [String!]
}

type ElementAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementBaseActionPostRenderActionsAggregationSelection {
  count: Int!
  node: ElementBaseActionPostRenderActionsNodeAggregateSelection
}

type ElementBaseActionPostRenderActionsNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

type ElementBaseActionPreRenderActionsAggregationSelection {
  count: Int!
  node: ElementBaseActionPreRenderActionsNodeAggregateSelection
}

type ElementBaseActionPreRenderActionsNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ElementChildMapperComponentAggregateInput {
  AND: [ElementChildMapperComponentAggregateInput!]
  NOT: ElementChildMapperComponentAggregateInput
  OR: [ElementChildMapperComponentAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementChildMapperComponentNodeAggregationWhereInput
}

input ElementChildMapperComponentConnectFieldInput {
  connect: ComponentConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ComponentConnectWhere
}

type ElementChildMapperComponentConnection {
  edges: [ElementChildMapperComponentRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementChildMapperComponentConnectionSort {
  node: ComponentSort
}

input ElementChildMapperComponentConnectionWhere {
  AND: [ElementChildMapperComponentConnectionWhere!]
  NOT: ElementChildMapperComponentConnectionWhere
  OR: [ElementChildMapperComponentConnectionWhere!]
  node: ComponentWhere
}

input ElementChildMapperComponentCreateFieldInput {
  node: ComponentCreateInput!
}

input ElementChildMapperComponentDeleteFieldInput {
  delete: ComponentDeleteInput
  where: ElementChildMapperComponentConnectionWhere
}

input ElementChildMapperComponentDisconnectFieldInput {
  disconnect: ComponentDisconnectInput
  where: ElementChildMapperComponentConnectionWhere
}

input ElementChildMapperComponentFieldInput {
  connect: ElementChildMapperComponentConnectFieldInput
  create: ElementChildMapperComponentCreateFieldInput
}

input ElementChildMapperComponentNodeAggregationWhereInput {
  AND: [ElementChildMapperComponentNodeAggregationWhereInput!]
  NOT: ElementChildMapperComponentNodeAggregationWhereInput
  OR: [ElementChildMapperComponentNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ElementChildMapperComponentRelationship {
  cursor: String!
  node: Component!
}

input ElementChildMapperComponentUpdateConnectionInput {
  node: ComponentUpdateInput
}

input ElementChildMapperComponentUpdateFieldInput {
  connect: ElementChildMapperComponentConnectFieldInput
  create: ElementChildMapperComponentCreateFieldInput
  delete: ElementChildMapperComponentDeleteFieldInput
  disconnect: ElementChildMapperComponentDisconnectFieldInput
  update: ElementChildMapperComponentUpdateConnectionInput
  where: ElementChildMapperComponentConnectionWhere
}

input ElementChildMapperPreviousSiblingAggregateInput {
  AND: [ElementChildMapperPreviousSiblingAggregateInput!]
  NOT: ElementChildMapperPreviousSiblingAggregateInput
  OR: [ElementChildMapperPreviousSiblingAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementChildMapperPreviousSiblingNodeAggregationWhereInput
}

input ElementChildMapperPreviousSiblingConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ElementChildMapperPreviousSiblingConnection {
  edges: [ElementChildMapperPreviousSiblingRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementChildMapperPreviousSiblingConnectionSort {
  node: ElementSort
}

input ElementChildMapperPreviousSiblingConnectionWhere {
  AND: [ElementChildMapperPreviousSiblingConnectionWhere!]
  NOT: ElementChildMapperPreviousSiblingConnectionWhere
  OR: [ElementChildMapperPreviousSiblingConnectionWhere!]
  node: ElementWhere
}

input ElementChildMapperPreviousSiblingCreateFieldInput {
  node: ElementCreateInput!
}

input ElementChildMapperPreviousSiblingDeleteFieldInput {
  delete: ElementDeleteInput
  where: ElementChildMapperPreviousSiblingConnectionWhere
}

input ElementChildMapperPreviousSiblingDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ElementChildMapperPreviousSiblingConnectionWhere
}

input ElementChildMapperPreviousSiblingFieldInput {
  connect: ElementChildMapperPreviousSiblingConnectFieldInput
  create: ElementChildMapperPreviousSiblingCreateFieldInput
}

input ElementChildMapperPreviousSiblingNodeAggregationWhereInput {
  AND: [ElementChildMapperPreviousSiblingNodeAggregationWhereInput!]
  NOT: ElementChildMapperPreviousSiblingNodeAggregationWhereInput
  OR: [ElementChildMapperPreviousSiblingNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ElementChildMapperPreviousSiblingRelationship {
  cursor: String!
  node: Element!
}

input ElementChildMapperPreviousSiblingUpdateConnectionInput {
  node: ElementUpdateInput
}

input ElementChildMapperPreviousSiblingUpdateFieldInput {
  connect: ElementChildMapperPreviousSiblingConnectFieldInput
  create: ElementChildMapperPreviousSiblingCreateFieldInput
  delete: ElementChildMapperPreviousSiblingDeleteFieldInput
  disconnect: ElementChildMapperPreviousSiblingDisconnectFieldInput
  update: ElementChildMapperPreviousSiblingUpdateConnectionInput
  where: ElementChildMapperPreviousSiblingConnectionWhere
}

type ElementComponentChildMapperComponentAggregationSelection {
  count: Int!
  node: ElementComponentChildMapperComponentNodeAggregateSelection
}

type ElementComponentChildMapperComponentNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ElementComponentParentComponentAggregationSelection {
  count: Int!
  node: ElementComponentParentComponentNodeAggregateSelection
}

type ElementComponentParentComponentNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input ElementConnectInput {
  childMapperComponent: ElementChildMapperComponentConnectFieldInput
  childMapperPreviousSibling: ElementChildMapperPreviousSiblingConnectFieldInput
  firstChild: ElementFirstChildConnectFieldInput
  nextSibling: ElementNextSiblingConnectFieldInput
  page: ElementPageConnectFieldInput
  parentComponent: ElementParentComponentConnectFieldInput
  parentElement: ElementParentElementConnectFieldInput
  postRenderActions: [ElementPostRenderActionsConnectFieldInput!]
  preRenderActions: [ElementPreRenderActionsConnectFieldInput!]
  prevSibling: ElementPrevSiblingConnectFieldInput
  props: ElementPropsConnectFieldInput
  renderType: ElementRenderTypeConnectInput
}

input ElementConnectWhere {
  node: ElementWhere!
}

input ElementCreateInput {
  childMapperComponent: ElementChildMapperComponentFieldInput
  childMapperPreviousSibling: ElementChildMapperPreviousSiblingFieldInput
  childMapperPropKey: String
  compositeKey: String!
  firstChild: ElementFirstChildFieldInput
  id: ID!
  nextSibling: ElementNextSiblingFieldInput
  page: ElementPageFieldInput
  parentComponent: ElementParentComponentFieldInput
  parentElement: ElementParentElementFieldInput
  postRenderActions: ElementPostRenderActionsFieldInput
  preRenderActions: ElementPreRenderActionsFieldInput
  prevSibling: ElementPrevSiblingFieldInput
  props: ElementPropsFieldInput
  renderForEachPropKey: String
  renderIfExpression: String
  renderType: ElementRenderTypeCreateInput
  style: String
  tailwindClassNames: [String!]
}

type ElementCreatedEvent {
  createdElement: ElementEventPayload!
  event: EventType!
  timestamp: Float!
}

input ElementDeleteInput {
  childMapperComponent: ElementChildMapperComponentDeleteFieldInput
  childMapperPreviousSibling: ElementChildMapperPreviousSiblingDeleteFieldInput
  firstChild: ElementFirstChildDeleteFieldInput
  nextSibling: ElementNextSiblingDeleteFieldInput
  page: ElementPageDeleteFieldInput
  parentComponent: ElementParentComponentDeleteFieldInput
  parentElement: ElementParentElementDeleteFieldInput
  postRenderActions: [ElementPostRenderActionsDeleteFieldInput!]
  preRenderActions: [ElementPreRenderActionsDeleteFieldInput!]
  prevSibling: ElementPrevSiblingDeleteFieldInput
  props: ElementPropsDeleteFieldInput
  renderType: ElementRenderTypeDeleteInput
}

type ElementDeletedEvent {
  deletedElement: ElementEventPayload!
  event: EventType!
  timestamp: Float!
}

input ElementDisconnectInput {
  childMapperComponent: ElementChildMapperComponentDisconnectFieldInput
  childMapperPreviousSibling: ElementChildMapperPreviousSiblingDisconnectFieldInput
  firstChild: ElementFirstChildDisconnectFieldInput
  nextSibling: ElementNextSiblingDisconnectFieldInput
  page: ElementPageDisconnectFieldInput
  parentComponent: ElementParentComponentDisconnectFieldInput
  parentElement: ElementParentElementDisconnectFieldInput
  postRenderActions: [ElementPostRenderActionsDisconnectFieldInput!]
  preRenderActions: [ElementPreRenderActionsDisconnectFieldInput!]
  prevSibling: ElementPrevSiblingDisconnectFieldInput
  props: ElementPropsDisconnectFieldInput
  renderType: ElementRenderTypeDisconnectInput
}

type ElementEdge {
  cursor: String!
  node: Element!
}

type ElementElementChildMapperPreviousSiblingAggregationSelection {
  count: Int!
  node: ElementElementChildMapperPreviousSiblingNodeAggregateSelection
}

type ElementElementChildMapperPreviousSiblingNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementElementFirstChildAggregationSelection {
  count: Int!
  node: ElementElementFirstChildNodeAggregateSelection
}

type ElementElementFirstChildNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementElementNextSiblingAggregationSelection {
  count: Int!
  node: ElementElementNextSiblingNodeAggregateSelection
}

type ElementElementNextSiblingNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementElementParentElementAggregationSelection {
  count: Int!
  node: ElementElementParentElementNodeAggregateSelection
}

type ElementElementParentElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementElementPrevSiblingAggregationSelection {
  count: Int!
  node: ElementElementPrevSiblingNodeAggregateSelection
}

type ElementElementPrevSiblingNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type ElementEventPayload {
  childMapperPropKey: String
  compositeKey: String!
  id: ID!
  renderForEachPropKey: String
  renderIfExpression: String
  style: String
  tailwindClassNames: [String!]
}

input ElementFirstChildAggregateInput {
  AND: [ElementFirstChildAggregateInput!]
  NOT: ElementFirstChildAggregateInput
  OR: [ElementFirstChildAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementFirstChildNodeAggregationWhereInput
}

input ElementFirstChildConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ElementFirstChildConnection {
  edges: [ElementFirstChildRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementFirstChildConnectionSort {
  node: ElementSort
}

input ElementFirstChildConnectionWhere {
  AND: [ElementFirstChildConnectionWhere!]
  NOT: ElementFirstChildConnectionWhere
  OR: [ElementFirstChildConnectionWhere!]
  node: ElementWhere
}

input ElementFirstChildCreateFieldInput {
  node: ElementCreateInput!
}

input ElementFirstChildDeleteFieldInput {
  delete: ElementDeleteInput
  where: ElementFirstChildConnectionWhere
}

input ElementFirstChildDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ElementFirstChildConnectionWhere
}

input ElementFirstChildFieldInput {
  connect: ElementFirstChildConnectFieldInput
  create: ElementFirstChildCreateFieldInput
}

input ElementFirstChildNodeAggregationWhereInput {
  AND: [ElementFirstChildNodeAggregationWhereInput!]
  NOT: ElementFirstChildNodeAggregationWhereInput
  OR: [ElementFirstChildNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ElementFirstChildRelationship {
  cursor: String!
  node: Element!
}

input ElementFirstChildUpdateConnectionInput {
  node: ElementUpdateInput
}

input ElementFirstChildUpdateFieldInput {
  connect: ElementFirstChildConnectFieldInput
  create: ElementFirstChildCreateFieldInput
  delete: ElementFirstChildDeleteFieldInput
  disconnect: ElementFirstChildDisconnectFieldInput
  update: ElementFirstChildUpdateConnectionInput
  where: ElementFirstChildConnectionWhere
}

input ElementNextSiblingAggregateInput {
  AND: [ElementNextSiblingAggregateInput!]
  NOT: ElementNextSiblingAggregateInput
  OR: [ElementNextSiblingAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementNextSiblingNodeAggregationWhereInput
}

input ElementNextSiblingConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ElementNextSiblingConnection {
  edges: [ElementNextSiblingRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementNextSiblingConnectionSort {
  node: ElementSort
}

input ElementNextSiblingConnectionWhere {
  AND: [ElementNextSiblingConnectionWhere!]
  NOT: ElementNextSiblingConnectionWhere
  OR: [ElementNextSiblingConnectionWhere!]
  node: ElementWhere
}

input ElementNextSiblingCreateFieldInput {
  node: ElementCreateInput!
}

input ElementNextSiblingDeleteFieldInput {
  delete: ElementDeleteInput
  where: ElementNextSiblingConnectionWhere
}

input ElementNextSiblingDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ElementNextSiblingConnectionWhere
}

input ElementNextSiblingFieldInput {
  connect: ElementNextSiblingConnectFieldInput
  create: ElementNextSiblingCreateFieldInput
}

input ElementNextSiblingNodeAggregationWhereInput {
  AND: [ElementNextSiblingNodeAggregationWhereInput!]
  NOT: ElementNextSiblingNodeAggregationWhereInput
  OR: [ElementNextSiblingNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ElementNextSiblingRelationship {
  cursor: String!
  node: Element!
}

input ElementNextSiblingUpdateConnectionInput {
  node: ElementUpdateInput
}

input ElementNextSiblingUpdateFieldInput {
  connect: ElementNextSiblingConnectFieldInput
  create: ElementNextSiblingCreateFieldInput
  delete: ElementNextSiblingDeleteFieldInput
  disconnect: ElementNextSiblingDisconnectFieldInput
  update: ElementNextSiblingUpdateConnectionInput
  where: ElementNextSiblingConnectionWhere
}

input ElementOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ElementSort objects to sort Elements by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ElementSort!]
}

input ElementPageAggregateInput {
  AND: [ElementPageAggregateInput!]
  NOT: ElementPageAggregateInput
  OR: [ElementPageAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementPageNodeAggregationWhereInput
}

input ElementPageConnectFieldInput {
  connect: PageConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PageConnectWhere
}

type ElementPageConnection {
  edges: [ElementPageRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementPageConnectionSort {
  node: PageSort
}

input ElementPageConnectionWhere {
  AND: [ElementPageConnectionWhere!]
  NOT: ElementPageConnectionWhere
  OR: [ElementPageConnectionWhere!]
  node: PageWhere
}

input ElementPageCreateFieldInput {
  node: PageCreateInput!
}

input ElementPageDeleteFieldInput {
  delete: PageDeleteInput
  where: ElementPageConnectionWhere
}

input ElementPageDisconnectFieldInput {
  disconnect: PageDisconnectInput
  where: ElementPageConnectionWhere
}

input ElementPageFieldInput {
  connect: ElementPageConnectFieldInput
  create: ElementPageCreateFieldInput
}

input ElementPageNodeAggregationWhereInput {
  AND: [ElementPageNodeAggregationWhereInput!]
  NOT: ElementPageNodeAggregationWhereInput
  OR: [ElementPageNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern_AVERAGE_LENGTH_EQUAL: Float
  urlPattern_AVERAGE_LENGTH_GT: Float
  urlPattern_AVERAGE_LENGTH_GTE: Float
  urlPattern_AVERAGE_LENGTH_LT: Float
  urlPattern_AVERAGE_LENGTH_LTE: Float
  urlPattern_LONGEST_LENGTH_EQUAL: Int
  urlPattern_LONGEST_LENGTH_GT: Int
  urlPattern_LONGEST_LENGTH_GTE: Int
  urlPattern_LONGEST_LENGTH_LT: Int
  urlPattern_LONGEST_LENGTH_LTE: Int
  urlPattern_SHORTEST_LENGTH_EQUAL: Int
  urlPattern_SHORTEST_LENGTH_GT: Int
  urlPattern_SHORTEST_LENGTH_GTE: Int
  urlPattern_SHORTEST_LENGTH_LT: Int
  urlPattern_SHORTEST_LENGTH_LTE: Int
}

type ElementPagePageAggregationSelection {
  count: Int!
  node: ElementPagePageNodeAggregateSelection
}

type ElementPagePageNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern: StringAggregateSelection!
}

type ElementPageRelationship {
  cursor: String!
  node: Page!
}

input ElementPageUpdateConnectionInput {
  node: PageUpdateInput
}

input ElementPageUpdateFieldInput {
  connect: ElementPageConnectFieldInput
  create: ElementPageCreateFieldInput
  delete: ElementPageDeleteFieldInput
  disconnect: ElementPageDisconnectFieldInput
  update: ElementPageUpdateConnectionInput
  where: ElementPageConnectionWhere
}

input ElementParentComponentAggregateInput {
  AND: [ElementParentComponentAggregateInput!]
  NOT: ElementParentComponentAggregateInput
  OR: [ElementParentComponentAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementParentComponentNodeAggregationWhereInput
}

input ElementParentComponentConnectFieldInput {
  connect: ComponentConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ComponentConnectWhere
}

type ElementParentComponentConnection {
  edges: [ElementParentComponentRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementParentComponentConnectionSort {
  node: ComponentSort
}

input ElementParentComponentConnectionWhere {
  AND: [ElementParentComponentConnectionWhere!]
  NOT: ElementParentComponentConnectionWhere
  OR: [ElementParentComponentConnectionWhere!]
  node: ComponentWhere
}

input ElementParentComponentCreateFieldInput {
  node: ComponentCreateInput!
}

input ElementParentComponentDeleteFieldInput {
  delete: ComponentDeleteInput
  where: ElementParentComponentConnectionWhere
}

input ElementParentComponentDisconnectFieldInput {
  disconnect: ComponentDisconnectInput
  where: ElementParentComponentConnectionWhere
}

input ElementParentComponentFieldInput {
  connect: ElementParentComponentConnectFieldInput
  create: ElementParentComponentCreateFieldInput
}

input ElementParentComponentNodeAggregationWhereInput {
  AND: [ElementParentComponentNodeAggregationWhereInput!]
  NOT: ElementParentComponentNodeAggregationWhereInput
  OR: [ElementParentComponentNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ElementParentComponentRelationship {
  cursor: String!
  node: Component!
}

input ElementParentComponentUpdateConnectionInput {
  node: ComponentUpdateInput
}

input ElementParentComponentUpdateFieldInput {
  connect: ElementParentComponentConnectFieldInput
  create: ElementParentComponentCreateFieldInput
  delete: ElementParentComponentDeleteFieldInput
  disconnect: ElementParentComponentDisconnectFieldInput
  update: ElementParentComponentUpdateConnectionInput
  where: ElementParentComponentConnectionWhere
}

input ElementParentElementAggregateInput {
  AND: [ElementParentElementAggregateInput!]
  NOT: ElementParentElementAggregateInput
  OR: [ElementParentElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementParentElementNodeAggregationWhereInput
}

input ElementParentElementConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ElementParentElementConnection {
  edges: [ElementParentElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementParentElementConnectionSort {
  node: ElementSort
}

input ElementParentElementConnectionWhere {
  AND: [ElementParentElementConnectionWhere!]
  NOT: ElementParentElementConnectionWhere
  OR: [ElementParentElementConnectionWhere!]
  node: ElementWhere
}

input ElementParentElementCreateFieldInput {
  node: ElementCreateInput!
}

input ElementParentElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: ElementParentElementConnectionWhere
}

input ElementParentElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ElementParentElementConnectionWhere
}

input ElementParentElementFieldInput {
  connect: ElementParentElementConnectFieldInput
  create: ElementParentElementCreateFieldInput
}

input ElementParentElementNodeAggregationWhereInput {
  AND: [ElementParentElementNodeAggregationWhereInput!]
  NOT: ElementParentElementNodeAggregationWhereInput
  OR: [ElementParentElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ElementParentElementRelationship {
  cursor: String!
  node: Element!
}

input ElementParentElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input ElementParentElementUpdateFieldInput {
  connect: ElementParentElementConnectFieldInput
  create: ElementParentElementCreateFieldInput
  delete: ElementParentElementDeleteFieldInput
  disconnect: ElementParentElementDisconnectFieldInput
  update: ElementParentElementUpdateConnectionInput
  where: ElementParentElementConnectionWhere
}

input ElementPostRenderActionsAggregateInput {
  AND: [ElementPostRenderActionsAggregateInput!]
  NOT: ElementPostRenderActionsAggregateInput
  OR: [ElementPostRenderActionsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementPostRenderActionsNodeAggregationWhereInput
}

input ElementPostRenderActionsConnectFieldInput {
  connect: BaseActionConnectInput
  where: BaseActionConnectWhere
}

type ElementPostRenderActionsConnection {
  edges: [ElementPostRenderActionsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementPostRenderActionsConnectionSort {
  node: BaseActionSort
}

input ElementPostRenderActionsConnectionWhere {
  AND: [ElementPostRenderActionsConnectionWhere!]
  NOT: ElementPostRenderActionsConnectionWhere
  OR: [ElementPostRenderActionsConnectionWhere!]
  node: BaseActionWhere
}

input ElementPostRenderActionsCreateFieldInput {
  node: BaseActionCreateInput!
}

input ElementPostRenderActionsDeleteFieldInput {
  delete: BaseActionDeleteInput
  where: ElementPostRenderActionsConnectionWhere
}

input ElementPostRenderActionsDisconnectFieldInput {
  disconnect: BaseActionDisconnectInput
  where: ElementPostRenderActionsConnectionWhere
}

input ElementPostRenderActionsFieldInput {
  connect: [ElementPostRenderActionsConnectFieldInput!]
  create: [ElementPostRenderActionsCreateFieldInput!]
}

input ElementPostRenderActionsNodeAggregationWhereInput {
  AND: [ElementPostRenderActionsNodeAggregationWhereInput!]
  NOT: ElementPostRenderActionsNodeAggregationWhereInput
  OR: [ElementPostRenderActionsNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ElementPostRenderActionsRelationship {
  cursor: String!
  node: BaseAction!
}

input ElementPostRenderActionsUpdateConnectionInput {
  node: BaseActionUpdateInput
}

input ElementPostRenderActionsUpdateFieldInput {
  connect: [ElementPostRenderActionsConnectFieldInput!]
  create: [ElementPostRenderActionsCreateFieldInput!]
  delete: [ElementPostRenderActionsDeleteFieldInput!]
  disconnect: [ElementPostRenderActionsDisconnectFieldInput!]
  update: ElementPostRenderActionsUpdateConnectionInput
  where: ElementPostRenderActionsConnectionWhere
}

input ElementPreRenderActionsAggregateInput {
  AND: [ElementPreRenderActionsAggregateInput!]
  NOT: ElementPreRenderActionsAggregateInput
  OR: [ElementPreRenderActionsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementPreRenderActionsNodeAggregationWhereInput
}

input ElementPreRenderActionsConnectFieldInput {
  connect: BaseActionConnectInput
  where: BaseActionConnectWhere
}

type ElementPreRenderActionsConnection {
  edges: [ElementPreRenderActionsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementPreRenderActionsConnectionSort {
  node: BaseActionSort
}

input ElementPreRenderActionsConnectionWhere {
  AND: [ElementPreRenderActionsConnectionWhere!]
  NOT: ElementPreRenderActionsConnectionWhere
  OR: [ElementPreRenderActionsConnectionWhere!]
  node: BaseActionWhere
}

input ElementPreRenderActionsCreateFieldInput {
  node: BaseActionCreateInput!
}

input ElementPreRenderActionsDeleteFieldInput {
  delete: BaseActionDeleteInput
  where: ElementPreRenderActionsConnectionWhere
}

input ElementPreRenderActionsDisconnectFieldInput {
  disconnect: BaseActionDisconnectInput
  where: ElementPreRenderActionsConnectionWhere
}

input ElementPreRenderActionsFieldInput {
  connect: [ElementPreRenderActionsConnectFieldInput!]
  create: [ElementPreRenderActionsCreateFieldInput!]
}

input ElementPreRenderActionsNodeAggregationWhereInput {
  AND: [ElementPreRenderActionsNodeAggregationWhereInput!]
  NOT: ElementPreRenderActionsNodeAggregationWhereInput
  OR: [ElementPreRenderActionsNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type ElementPreRenderActionsRelationship {
  cursor: String!
  node: BaseAction!
}

input ElementPreRenderActionsUpdateConnectionInput {
  node: BaseActionUpdateInput
}

input ElementPreRenderActionsUpdateFieldInput {
  connect: [ElementPreRenderActionsConnectFieldInput!]
  create: [ElementPreRenderActionsCreateFieldInput!]
  delete: [ElementPreRenderActionsDeleteFieldInput!]
  disconnect: [ElementPreRenderActionsDisconnectFieldInput!]
  update: ElementPreRenderActionsUpdateConnectionInput
  where: ElementPreRenderActionsConnectionWhere
}

input ElementPrevSiblingAggregateInput {
  AND: [ElementPrevSiblingAggregateInput!]
  NOT: ElementPrevSiblingAggregateInput
  OR: [ElementPrevSiblingAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementPrevSiblingNodeAggregationWhereInput
}

input ElementPrevSiblingConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type ElementPrevSiblingConnection {
  edges: [ElementPrevSiblingRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementPrevSiblingConnectionSort {
  node: ElementSort
}

input ElementPrevSiblingConnectionWhere {
  AND: [ElementPrevSiblingConnectionWhere!]
  NOT: ElementPrevSiblingConnectionWhere
  OR: [ElementPrevSiblingConnectionWhere!]
  node: ElementWhere
}

input ElementPrevSiblingCreateFieldInput {
  node: ElementCreateInput!
}

input ElementPrevSiblingDeleteFieldInput {
  delete: ElementDeleteInput
  where: ElementPrevSiblingConnectionWhere
}

input ElementPrevSiblingDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: ElementPrevSiblingConnectionWhere
}

input ElementPrevSiblingFieldInput {
  connect: ElementPrevSiblingConnectFieldInput
  create: ElementPrevSiblingCreateFieldInput
}

input ElementPrevSiblingNodeAggregationWhereInput {
  AND: [ElementPrevSiblingNodeAggregationWhereInput!]
  NOT: ElementPrevSiblingNodeAggregationWhereInput
  OR: [ElementPrevSiblingNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type ElementPrevSiblingRelationship {
  cursor: String!
  node: Element!
}

input ElementPrevSiblingUpdateConnectionInput {
  node: ElementUpdateInput
}

input ElementPrevSiblingUpdateFieldInput {
  connect: ElementPrevSiblingConnectFieldInput
  create: ElementPrevSiblingCreateFieldInput
  delete: ElementPrevSiblingDeleteFieldInput
  disconnect: ElementPrevSiblingDisconnectFieldInput
  update: ElementPrevSiblingUpdateConnectionInput
  where: ElementPrevSiblingConnectionWhere
}

type ElementPropPropsAggregationSelection {
  count: Int!
  node: ElementPropPropsNodeAggregateSelection
}

type ElementPropPropsNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input ElementPropsAggregateInput {
  AND: [ElementPropsAggregateInput!]
  NOT: ElementPropsAggregateInput
  OR: [ElementPropsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementPropsNodeAggregationWhereInput
}

input ElementPropsConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type ElementPropsConnection {
  edges: [ElementPropsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementPropsConnectionSort {
  node: PropSort
}

input ElementPropsConnectionWhere {
  AND: [ElementPropsConnectionWhere!]
  NOT: ElementPropsConnectionWhere
  OR: [ElementPropsConnectionWhere!]
  node: PropWhere
}

input ElementPropsCreateFieldInput {
  node: PropCreateInput!
}

input ElementPropsDeleteFieldInput {
  where: ElementPropsConnectionWhere
}

input ElementPropsDisconnectFieldInput {
  where: ElementPropsConnectionWhere
}

input ElementPropsFieldInput {
  connect: ElementPropsConnectFieldInput
  create: ElementPropsCreateFieldInput
}

input ElementPropsNodeAggregationWhereInput {
  AND: [ElementPropsNodeAggregationWhereInput!]
  NOT: ElementPropsNodeAggregationWhereInput
  OR: [ElementPropsNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ElementPropsRelationship {
  cursor: String!
  node: Prop!
}

input ElementPropsUpdateConnectionInput {
  node: PropUpdateInput
}

input ElementPropsUpdateFieldInput {
  connect: ElementPropsConnectFieldInput
  create: ElementPropsCreateFieldInput
  delete: ElementPropsDeleteFieldInput
  disconnect: ElementPropsDisconnectFieldInput
  update: ElementPropsUpdateConnectionInput
  where: ElementPropsConnectionWhere
}

union ElementRenderType = Atom | Component

input ElementRenderTypeAtomConnectFieldInput {
  connect: AtomConnectInput
  where: AtomConnectWhere
}

input ElementRenderTypeAtomConnectionWhere {
  AND: [ElementRenderTypeAtomConnectionWhere!]
  NOT: ElementRenderTypeAtomConnectionWhere
  OR: [ElementRenderTypeAtomConnectionWhere!]
  node: AtomWhere
}

input ElementRenderTypeAtomCreateFieldInput {
  node: AtomCreateInput!
}

input ElementRenderTypeAtomDeleteFieldInput {
  delete: AtomDeleteInput
  where: ElementRenderTypeAtomConnectionWhere
}

input ElementRenderTypeAtomDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: ElementRenderTypeAtomConnectionWhere
}

input ElementRenderTypeAtomFieldInput {
  connect: ElementRenderTypeAtomConnectFieldInput
  create: ElementRenderTypeAtomCreateFieldInput
}

input ElementRenderTypeAtomUpdateConnectionInput {
  node: AtomUpdateInput
}

input ElementRenderTypeAtomUpdateFieldInput {
  connect: ElementRenderTypeAtomConnectFieldInput
  create: ElementRenderTypeAtomCreateFieldInput
  delete: ElementRenderTypeAtomDeleteFieldInput
  disconnect: ElementRenderTypeAtomDisconnectFieldInput
  update: ElementRenderTypeAtomUpdateConnectionInput
  where: ElementRenderTypeAtomConnectionWhere
}

input ElementRenderTypeComponentConnectFieldInput {
  connect: ComponentConnectInput
  where: ComponentConnectWhere
}

input ElementRenderTypeComponentConnectionWhere {
  AND: [ElementRenderTypeComponentConnectionWhere!]
  NOT: ElementRenderTypeComponentConnectionWhere
  OR: [ElementRenderTypeComponentConnectionWhere!]
  node: ComponentWhere
}

input ElementRenderTypeComponentCreateFieldInput {
  node: ComponentCreateInput!
}

input ElementRenderTypeComponentDeleteFieldInput {
  delete: ComponentDeleteInput
  where: ElementRenderTypeComponentConnectionWhere
}

input ElementRenderTypeComponentDisconnectFieldInput {
  disconnect: ComponentDisconnectInput
  where: ElementRenderTypeComponentConnectionWhere
}

input ElementRenderTypeComponentFieldInput {
  connect: ElementRenderTypeComponentConnectFieldInput
  create: ElementRenderTypeComponentCreateFieldInput
}

input ElementRenderTypeComponentUpdateConnectionInput {
  node: ComponentUpdateInput
}

input ElementRenderTypeComponentUpdateFieldInput {
  connect: ElementRenderTypeComponentConnectFieldInput
  create: ElementRenderTypeComponentCreateFieldInput
  delete: ElementRenderTypeComponentDeleteFieldInput
  disconnect: ElementRenderTypeComponentDisconnectFieldInput
  update: ElementRenderTypeComponentUpdateConnectionInput
  where: ElementRenderTypeComponentConnectionWhere
}

input ElementRenderTypeConnectInput {
  Atom: ElementRenderTypeAtomConnectFieldInput
  Component: ElementRenderTypeComponentConnectFieldInput
}

type ElementRenderTypeConnection {
  edges: [ElementRenderTypeRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementRenderTypeConnectionWhere {
  Atom: ElementRenderTypeAtomConnectionWhere
  Component: ElementRenderTypeComponentConnectionWhere
}

input ElementRenderTypeCreateInput {
  Atom: ElementRenderTypeAtomFieldInput
  Component: ElementRenderTypeComponentFieldInput
}

input ElementRenderTypeDeleteInput {
  Atom: ElementRenderTypeAtomDeleteFieldInput
  Component: ElementRenderTypeComponentDeleteFieldInput
}

input ElementRenderTypeDisconnectInput {
  Atom: ElementRenderTypeAtomDisconnectFieldInput
  Component: ElementRenderTypeComponentDisconnectFieldInput
}

type ElementRenderTypeRelationship {
  cursor: String!
  node: ElementRenderType!
}

input ElementRenderTypeUpdateInput {
  Atom: ElementRenderTypeAtomUpdateFieldInput
  Component: ElementRenderTypeComponentUpdateFieldInput
}

input ElementRenderTypeWhere {
  Atom: AtomWhere
  Component: ComponentWhere
}

"""
Fields to sort Elements by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementSort object.
"""
input ElementSort {
  childMapperPropKey: SortDirection
  compositeKey: SortDirection
  id: SortDirection
  renderForEachPropKey: SortDirection
  renderIfExpression: SortDirection
  style: SortDirection
}

input ElementSubscriptionWhere {
  AND: [ElementSubscriptionWhere!]
  NOT: ElementSubscriptionWhere
  OR: [ElementSubscriptionWhere!]
  childMapperPropKey: String @deprecated(reason: "Please use the explicit _EQ version")
  childMapperPropKey_CONTAINS: String
  childMapperPropKey_ENDS_WITH: String
  childMapperPropKey_EQ: String
  childMapperPropKey_IN: [String]
  childMapperPropKey_MATCHES: String
  childMapperPropKey_STARTS_WITH: String
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  renderForEachPropKey: String @deprecated(reason: "Please use the explicit _EQ version")
  renderForEachPropKey_CONTAINS: String
  renderForEachPropKey_ENDS_WITH: String
  renderForEachPropKey_EQ: String
  renderForEachPropKey_IN: [String]
  renderForEachPropKey_MATCHES: String
  renderForEachPropKey_STARTS_WITH: String
  renderIfExpression: String @deprecated(reason: "Please use the explicit _EQ version")
  renderIfExpression_CONTAINS: String
  renderIfExpression_ENDS_WITH: String
  renderIfExpression_EQ: String
  renderIfExpression_IN: [String]
  renderIfExpression_MATCHES: String
  renderIfExpression_STARTS_WITH: String
  style: String @deprecated(reason: "Please use the explicit _EQ version")
  style_CONTAINS: String
  style_ENDS_WITH: String
  style_EQ: String
  style_IN: [String]
  style_MATCHES: String
  style_STARTS_WITH: String
  tailwindClassNames: [String!] @deprecated(reason: "Please use the explicit _EQ version")
  tailwindClassNames_EQ: [String!]
  tailwindClassNames_INCLUDES: String
}

"""
Allows picking an element from the current tree
Is passed to the rendered element as a React node
Prop values for this type have the shape of TypedProp in order to
be distinguished from other element types.
Comparison between different element types:
- RenderPropType: Component select box, results it '(props) => ReactNode' value
- ReactNodeType: Component select box, results it 'ReactNode' value
- ElementType: Current tree element select box, results it 'ReactNode' value
"""
type ElementType implements IBaseType {
  """
  Allows scoping the type of element to only descendants, children or all elements
  """
  elementKind: ElementTypeKind!
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): ElementTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ElementTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type ElementTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ElementTypeConnectInput {
  fieldRefs: [ElementTypeFieldRefsConnectFieldInput!]
  owner: ElementTypeOwnerConnectFieldInput
}

input ElementTypeConnectWhere {
  node: ElementTypeWhere!
}

input ElementTypeCreateInput {
  elementKind: ElementTypeKind!
  fieldRefs: ElementTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = ElementType
  name: String!
  owner: ElementTypeOwnerFieldInput
}

type ElementTypeCreatedEvent {
  createdElementType: ElementTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ElementTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type ElementTypeDeletedEvent {
  deletedElementType: ElementTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ElementTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type ElementTypeEdge {
  cursor: String!
  node: ElementType!
}

type ElementTypeEventPayload {
  """
  Allows scoping the type of element to only descendants, children or all elements
  """
  elementKind: ElementTypeKind!
  id: ID!
  kind: TypeKind!
  name: String!
}

type ElementTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: ElementTypeFieldFieldRefsNodeAggregateSelection
}

type ElementTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input ElementTypeFieldRefsAggregateInput {
  AND: [ElementTypeFieldRefsAggregateInput!]
  NOT: ElementTypeFieldRefsAggregateInput
  OR: [ElementTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementTypeFieldRefsNodeAggregationWhereInput
}

input ElementTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input ElementTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input ElementTypeFieldRefsFieldInput {
  connect: [ElementTypeFieldRefsConnectFieldInput!]
  create: [ElementTypeFieldRefsCreateFieldInput!]
}

input ElementTypeFieldRefsNodeAggregationWhereInput {
  AND: [ElementTypeFieldRefsNodeAggregationWhereInput!]
  NOT: ElementTypeFieldRefsNodeAggregationWhereInput
  OR: [ElementTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input ElementTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input ElementTypeFieldRefsUpdateFieldInput {
  connect: [ElementTypeFieldRefsConnectFieldInput!]
  create: [ElementTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: ElementTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

enum ElementTypeKind {
  AllElements
  ChildrenOnly
  DescendantsOnly
  ExcludeDescendantsElements
}

input ElementTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ElementTypeSort objects to sort ElementTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ElementTypeSort!]
}

input ElementTypeOwnerAggregateInput {
  AND: [ElementTypeOwnerAggregateInput!]
  NOT: ElementTypeOwnerAggregateInput
  OR: [ElementTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ElementTypeOwnerNodeAggregationWhereInput
}

input ElementTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ElementTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ElementTypeOwnerFieldInput {
  connect: ElementTypeOwnerConnectFieldInput
  create: ElementTypeOwnerCreateFieldInput
}

input ElementTypeOwnerNodeAggregationWhereInput {
  AND: [ElementTypeOwnerNodeAggregationWhereInput!]
  NOT: ElementTypeOwnerNodeAggregationWhereInput
  OR: [ElementTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ElementTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ElementTypeOwnerUpdateFieldInput {
  connect: ElementTypeOwnerConnectFieldInput
  create: ElementTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: ElementTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort ElementTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ElementTypeSort object.
"""
input ElementTypeSort {
  elementKind: SortDirection
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input ElementTypeSubscriptionWhere {
  AND: [ElementTypeSubscriptionWhere!]
  NOT: ElementTypeSubscriptionWhere
  OR: [ElementTypeSubscriptionWhere!]
  elementKind: ElementTypeKind @deprecated(reason: "Please use the explicit _EQ version")
  elementKind_EQ: ElementTypeKind
  elementKind_IN: [ElementTypeKind!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input ElementTypeUpdateInput {
  elementKind: ElementTypeKind @deprecated(reason: "Please use the explicit _SET field")
  elementKind_SET: ElementTypeKind
  fieldRefs: [ElementTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: ElementTypeOwnerUpdateFieldInput
}

type ElementTypeUpdatedEvent {
  event: EventType!
  previousState: ElementTypeEventPayload!
  timestamp: Float!
  updatedElementType: ElementTypeEventPayload!
}

type ElementTypeUserOwnerAggregationSelection {
  count: Int!
  node: ElementTypeUserOwnerNodeAggregateSelection
}

type ElementTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ElementTypeWhere {
  AND: [ElementTypeWhere!]
  NOT: ElementTypeWhere
  OR: [ElementTypeWhere!]
  elementKind: ElementTypeKind @deprecated(reason: "Please use the explicit _EQ version")
  elementKind_EQ: ElementTypeKind
  elementKind_IN: [ElementTypeKind!]
  fieldRefsAggregate: ElementTypeFieldRefsAggregateInput

  """
  Return ElementTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return ElementTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ElementTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ElementTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return ElementTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return ElementTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return ElementTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return ElementTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: ElementTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type ElementTypesConnection {
  edges: [ElementTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ElementUpdateInput {
  childMapperComponent: ElementChildMapperComponentUpdateFieldInput
  childMapperPreviousSibling: ElementChildMapperPreviousSiblingUpdateFieldInput
  childMapperPropKey: String @deprecated(reason: "Please use the explicit _SET field")
  childMapperPropKey_SET: String
  compositeKey: String @deprecated(reason: "Please use the explicit _SET field")
  compositeKey_SET: String
  firstChild: ElementFirstChildUpdateFieldInput
  nextSibling: ElementNextSiblingUpdateFieldInput
  page: ElementPageUpdateFieldInput
  parentComponent: ElementParentComponentUpdateFieldInput
  parentElement: ElementParentElementUpdateFieldInput
  postRenderActions: [ElementPostRenderActionsUpdateFieldInput!]
  preRenderActions: [ElementPreRenderActionsUpdateFieldInput!]
  prevSibling: ElementPrevSiblingUpdateFieldInput
  props: ElementPropsUpdateFieldInput
  renderForEachPropKey: String @deprecated(reason: "Please use the explicit _SET field")
  renderForEachPropKey_SET: String
  renderIfExpression: String @deprecated(reason: "Please use the explicit _SET field")
  renderIfExpression_SET: String
  renderType: ElementRenderTypeUpdateInput
  style: String @deprecated(reason: "Please use the explicit _SET field")
  style_SET: String
  tailwindClassNames: [String!] @deprecated(reason: "Please use the explicit _SET field")
  tailwindClassNames_POP: Int
  tailwindClassNames_PUSH: [String!]
  tailwindClassNames_SET: [String!]
}

type ElementUpdatedEvent {
  event: EventType!
  previousState: ElementEventPayload!
  timestamp: Float!
  updatedElement: ElementEventPayload!
}

input ElementWhere {
  AND: [ElementWhere!]
  NOT: ElementWhere
  OR: [ElementWhere!]
  childMapperComponent: ComponentWhere
  childMapperComponentAggregate: ElementChildMapperComponentAggregateInput
  childMapperComponentConnection: ElementChildMapperComponentConnectionWhere
  childMapperPreviousSibling: ElementWhere
  childMapperPreviousSiblingAggregate: ElementChildMapperPreviousSiblingAggregateInput
  childMapperPreviousSiblingConnection: ElementChildMapperPreviousSiblingConnectionWhere
  childMapperPropKey: String @deprecated(reason: "Please use the explicit _EQ version")
  childMapperPropKey_CONTAINS: String
  childMapperPropKey_ENDS_WITH: String
  childMapperPropKey_EQ: String
  childMapperPropKey_IN: [String]
  childMapperPropKey_MATCHES: String
  childMapperPropKey_STARTS_WITH: String
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  firstChild: ElementWhere
  firstChildAggregate: ElementFirstChildAggregateInput
  firstChildConnection: ElementFirstChildConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  nextSibling: ElementWhere
  nextSiblingAggregate: ElementNextSiblingAggregateInput
  nextSiblingConnection: ElementNextSiblingConnectionWhere
  page: PageWhere
  pageAggregate: ElementPageAggregateInput
  pageConnection: ElementPageConnectionWhere
  parentComponent: ComponentWhere
  parentComponentAggregate: ElementParentComponentAggregateInput
  parentComponentConnection: ElementParentComponentConnectionWhere
  parentElement: ElementWhere
  parentElementAggregate: ElementParentElementAggregateInput
  parentElementConnection: ElementParentElementConnectionWhere
  postRenderActionsAggregate: ElementPostRenderActionsAggregateInput

  """
  Return Elements where all of the related ElementPostRenderActionsConnections match this filter
  """
  postRenderActionsConnection_ALL: ElementPostRenderActionsConnectionWhere

  """
  Return Elements where none of the related ElementPostRenderActionsConnections match this filter
  """
  postRenderActionsConnection_NONE: ElementPostRenderActionsConnectionWhere

  """
  Return Elements where one of the related ElementPostRenderActionsConnections match this filter
  """
  postRenderActionsConnection_SINGLE: ElementPostRenderActionsConnectionWhere

  """
  Return Elements where some of the related ElementPostRenderActionsConnections match this filter
  """
  postRenderActionsConnection_SOME: ElementPostRenderActionsConnectionWhere

  """Return Elements where all of the related BaseActions match this filter"""
  postRenderActions_ALL: BaseActionWhere

  """
  Return Elements where none of the related BaseActions match this filter
  """
  postRenderActions_NONE: BaseActionWhere

  """Return Elements where one of the related BaseActions match this filter"""
  postRenderActions_SINGLE: BaseActionWhere

  """
  Return Elements where some of the related BaseActions match this filter
  """
  postRenderActions_SOME: BaseActionWhere
  preRenderActionsAggregate: ElementPreRenderActionsAggregateInput

  """
  Return Elements where all of the related ElementPreRenderActionsConnections match this filter
  """
  preRenderActionsConnection_ALL: ElementPreRenderActionsConnectionWhere

  """
  Return Elements where none of the related ElementPreRenderActionsConnections match this filter
  """
  preRenderActionsConnection_NONE: ElementPreRenderActionsConnectionWhere

  """
  Return Elements where one of the related ElementPreRenderActionsConnections match this filter
  """
  preRenderActionsConnection_SINGLE: ElementPreRenderActionsConnectionWhere

  """
  Return Elements where some of the related ElementPreRenderActionsConnections match this filter
  """
  preRenderActionsConnection_SOME: ElementPreRenderActionsConnectionWhere

  """Return Elements where all of the related BaseActions match this filter"""
  preRenderActions_ALL: BaseActionWhere

  """
  Return Elements where none of the related BaseActions match this filter
  """
  preRenderActions_NONE: BaseActionWhere

  """Return Elements where one of the related BaseActions match this filter"""
  preRenderActions_SINGLE: BaseActionWhere

  """
  Return Elements where some of the related BaseActions match this filter
  """
  preRenderActions_SOME: BaseActionWhere
  prevSibling: ElementWhere
  prevSiblingAggregate: ElementPrevSiblingAggregateInput
  prevSiblingConnection: ElementPrevSiblingConnectionWhere
  props: PropWhere
  propsAggregate: ElementPropsAggregateInput
  propsConnection: ElementPropsConnectionWhere
  renderForEachPropKey: String @deprecated(reason: "Please use the explicit _EQ version")
  renderForEachPropKey_CONTAINS: String
  renderForEachPropKey_ENDS_WITH: String
  renderForEachPropKey_EQ: String
  renderForEachPropKey_IN: [String]
  renderForEachPropKey_MATCHES: String
  renderForEachPropKey_STARTS_WITH: String
  renderIfExpression: String @deprecated(reason: "Please use the explicit _EQ version")
  renderIfExpression_CONTAINS: String
  renderIfExpression_ENDS_WITH: String
  renderIfExpression_EQ: String
  renderIfExpression_IN: [String]
  renderIfExpression_MATCHES: String
  renderIfExpression_STARTS_WITH: String
  renderType: ElementRenderTypeWhere
  renderTypeConnection: ElementRenderTypeConnectionWhere
  style: String @deprecated(reason: "Please use the explicit _EQ version")
  style_CONTAINS: String
  style_ENDS_WITH: String
  style_EQ: String
  style_IN: [String]
  style_MATCHES: String
  style_STARTS_WITH: String
  tailwindClassNames: [String!] @deprecated(reason: "Please use the explicit _EQ version")
  tailwindClassNames_EQ: [String!]
  tailwindClassNames_INCLUDES: String
}

type ElementsConnection {
  edges: [ElementEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
Allows choosing one of a set of allowed values.
The value gets passed to the render pipe as a Enum Type Value id.
The actual value must be de-referenced by the id.
"""
type EnumType implements IBaseType {
  allowedValues(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: EnumTypeValueOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [EnumTypeValueSort!], where: EnumTypeValueWhere): [EnumTypeValue!]!
  allowedValuesAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: EnumTypeValueWhere): EnumTypeEnumTypeValueAllowedValuesAggregationSelection
  allowedValuesConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [EnumTypeAllowedValuesConnectionSort!], where: EnumTypeAllowedValuesConnectionWhere): EnumTypeAllowedValuesConnection!
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): EnumTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): EnumTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type EnumTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input EnumTypeAllowedValuesAggregateInput {
  AND: [EnumTypeAllowedValuesAggregateInput!]
  NOT: EnumTypeAllowedValuesAggregateInput
  OR: [EnumTypeAllowedValuesAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: EnumTypeAllowedValuesNodeAggregationWhereInput
}

input EnumTypeAllowedValuesConnectFieldInput {
  connect: [EnumTypeValueConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: EnumTypeValueConnectWhere
}

type EnumTypeAllowedValuesConnection {
  edges: [EnumTypeAllowedValuesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input EnumTypeAllowedValuesConnectionSort {
  node: EnumTypeValueSort
}

input EnumTypeAllowedValuesConnectionWhere {
  AND: [EnumTypeAllowedValuesConnectionWhere!]
  NOT: EnumTypeAllowedValuesConnectionWhere
  OR: [EnumTypeAllowedValuesConnectionWhere!]
  node: EnumTypeValueWhere
}

input EnumTypeAllowedValuesCreateFieldInput {
  node: EnumTypeValueCreateInput!
}

input EnumTypeAllowedValuesDeleteFieldInput {
  delete: EnumTypeValueDeleteInput
  where: EnumTypeAllowedValuesConnectionWhere
}

input EnumTypeAllowedValuesDisconnectFieldInput {
  disconnect: EnumTypeValueDisconnectInput
  where: EnumTypeAllowedValuesConnectionWhere
}

input EnumTypeAllowedValuesFieldInput {
  connect: [EnumTypeAllowedValuesConnectFieldInput!]
  create: [EnumTypeAllowedValuesCreateFieldInput!]
}

input EnumTypeAllowedValuesNodeAggregationWhereInput {
  AND: [EnumTypeAllowedValuesNodeAggregationWhereInput!]
  NOT: EnumTypeAllowedValuesNodeAggregationWhereInput
  OR: [EnumTypeAllowedValuesNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  value_AVERAGE_LENGTH_EQUAL: Float
  value_AVERAGE_LENGTH_GT: Float
  value_AVERAGE_LENGTH_GTE: Float
  value_AVERAGE_LENGTH_LT: Float
  value_AVERAGE_LENGTH_LTE: Float
  value_LONGEST_LENGTH_EQUAL: Int
  value_LONGEST_LENGTH_GT: Int
  value_LONGEST_LENGTH_GTE: Int
  value_LONGEST_LENGTH_LT: Int
  value_LONGEST_LENGTH_LTE: Int
  value_SHORTEST_LENGTH_EQUAL: Int
  value_SHORTEST_LENGTH_GT: Int
  value_SHORTEST_LENGTH_GTE: Int
  value_SHORTEST_LENGTH_LT: Int
  value_SHORTEST_LENGTH_LTE: Int
}

type EnumTypeAllowedValuesRelationship {
  cursor: String!
  node: EnumTypeValue!
}

input EnumTypeAllowedValuesUpdateConnectionInput {
  node: EnumTypeValueUpdateInput
}

input EnumTypeAllowedValuesUpdateFieldInput {
  connect: [EnumTypeAllowedValuesConnectFieldInput!]
  create: [EnumTypeAllowedValuesCreateFieldInput!]
  delete: [EnumTypeAllowedValuesDeleteFieldInput!]
  disconnect: [EnumTypeAllowedValuesDisconnectFieldInput!]
  update: EnumTypeAllowedValuesUpdateConnectionInput
  where: EnumTypeAllowedValuesConnectionWhere
}

input EnumTypeConnectInput {
  allowedValues: [EnumTypeAllowedValuesConnectFieldInput!]
  fieldRefs: [EnumTypeFieldRefsConnectFieldInput!]
  owner: EnumTypeOwnerConnectFieldInput
}

input EnumTypeConnectWhere {
  node: EnumTypeWhere!
}

input EnumTypeCreateInput {
  allowedValues: EnumTypeAllowedValuesFieldInput
  fieldRefs: EnumTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = EnumType
  name: String!
  owner: EnumTypeOwnerFieldInput
}

type EnumTypeCreatedEvent {
  createdEnumType: EnumTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input EnumTypeDeleteInput {
  allowedValues: [EnumTypeAllowedValuesDeleteFieldInput!]
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type EnumTypeDeletedEvent {
  deletedEnumType: EnumTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input EnumTypeDisconnectInput {
  allowedValues: [EnumTypeAllowedValuesDisconnectFieldInput!]
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type EnumTypeEdge {
  cursor: String!
  node: EnumType!
}

type EnumTypeEnumTypeValueAllowedValuesAggregationSelection {
  count: Int!
  node: EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection
}

type EnumTypeEnumTypeValueAllowedValuesNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  value: StringAggregateSelection!
}

type EnumTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type EnumTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: EnumTypeFieldFieldRefsNodeAggregateSelection
}

type EnumTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input EnumTypeFieldRefsAggregateInput {
  AND: [EnumTypeFieldRefsAggregateInput!]
  NOT: EnumTypeFieldRefsAggregateInput
  OR: [EnumTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: EnumTypeFieldRefsNodeAggregationWhereInput
}

input EnumTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input EnumTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input EnumTypeFieldRefsFieldInput {
  connect: [EnumTypeFieldRefsConnectFieldInput!]
  create: [EnumTypeFieldRefsCreateFieldInput!]
}

input EnumTypeFieldRefsNodeAggregationWhereInput {
  AND: [EnumTypeFieldRefsNodeAggregationWhereInput!]
  NOT: EnumTypeFieldRefsNodeAggregationWhereInput
  OR: [EnumTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input EnumTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input EnumTypeFieldRefsUpdateFieldInput {
  connect: [EnumTypeFieldRefsConnectFieldInput!]
  create: [EnumTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: EnumTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input EnumTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more EnumTypeSort objects to sort EnumTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [EnumTypeSort!]
}

input EnumTypeOwnerAggregateInput {
  AND: [EnumTypeOwnerAggregateInput!]
  NOT: EnumTypeOwnerAggregateInput
  OR: [EnumTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: EnumTypeOwnerNodeAggregationWhereInput
}

input EnumTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input EnumTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input EnumTypeOwnerFieldInput {
  connect: EnumTypeOwnerConnectFieldInput
  create: EnumTypeOwnerCreateFieldInput
}

input EnumTypeOwnerNodeAggregationWhereInput {
  AND: [EnumTypeOwnerNodeAggregationWhereInput!]
  NOT: EnumTypeOwnerNodeAggregationWhereInput
  OR: [EnumTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input EnumTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input EnumTypeOwnerUpdateFieldInput {
  connect: EnumTypeOwnerConnectFieldInput
  create: EnumTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: EnumTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort EnumTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeSort object.
"""
input EnumTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input EnumTypeSubscriptionWhere {
  AND: [EnumTypeSubscriptionWhere!]
  NOT: EnumTypeSubscriptionWhere
  OR: [EnumTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input EnumTypeUpdateInput {
  allowedValues: [EnumTypeAllowedValuesUpdateFieldInput!]
  fieldRefs: [EnumTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: EnumTypeOwnerUpdateFieldInput
}

type EnumTypeUpdatedEvent {
  event: EventType!
  previousState: EnumTypeEventPayload!
  timestamp: Float!
  updatedEnumType: EnumTypeEventPayload!
}

type EnumTypeUserOwnerAggregationSelection {
  count: Int!
  node: EnumTypeUserOwnerNodeAggregateSelection
}

type EnumTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

type EnumTypeValue {
  enumType(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: EnumTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [EnumTypeSort!], where: EnumTypeWhere): EnumType
  enumTypeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: EnumTypeWhere): EnumTypeValueEnumTypeEnumTypeAggregationSelection
  enumTypeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [EnumTypeValueEnumTypeConnectionSort!], where: EnumTypeValueEnumTypeConnectionWhere): EnumTypeValueEnumTypeConnection!
  id: ID!
  key: String!
  value: String!
}

type EnumTypeValueAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  value: StringAggregateSelection!
}

input EnumTypeValueConnectInput {
  enumType: EnumTypeValueEnumTypeConnectFieldInput
}

input EnumTypeValueConnectWhere {
  node: EnumTypeValueWhere!
}

input EnumTypeValueCreateInput {
  enumType: EnumTypeValueEnumTypeFieldInput
  id: ID!
  key: String!
  value: String!
}

type EnumTypeValueCreatedEvent {
  createdEnumTypeValue: EnumTypeValueEventPayload!
  event: EventType!
  timestamp: Float!
}

input EnumTypeValueDeleteInput {
  enumType: EnumTypeValueEnumTypeDeleteFieldInput
}

type EnumTypeValueDeletedEvent {
  deletedEnumTypeValue: EnumTypeValueEventPayload!
  event: EventType!
  timestamp: Float!
}

input EnumTypeValueDisconnectInput {
  enumType: EnumTypeValueEnumTypeDisconnectFieldInput
}

type EnumTypeValueEdge {
  cursor: String!
  node: EnumTypeValue!
}

input EnumTypeValueEnumTypeAggregateInput {
  AND: [EnumTypeValueEnumTypeAggregateInput!]
  NOT: EnumTypeValueEnumTypeAggregateInput
  OR: [EnumTypeValueEnumTypeAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: EnumTypeValueEnumTypeNodeAggregationWhereInput
}

input EnumTypeValueEnumTypeConnectFieldInput {
  connect: EnumTypeConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: EnumTypeConnectWhere
}

type EnumTypeValueEnumTypeConnection {
  edges: [EnumTypeValueEnumTypeRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input EnumTypeValueEnumTypeConnectionSort {
  node: EnumTypeSort
}

input EnumTypeValueEnumTypeConnectionWhere {
  AND: [EnumTypeValueEnumTypeConnectionWhere!]
  NOT: EnumTypeValueEnumTypeConnectionWhere
  OR: [EnumTypeValueEnumTypeConnectionWhere!]
  node: EnumTypeWhere
}

input EnumTypeValueEnumTypeCreateFieldInput {
  node: EnumTypeCreateInput!
}

input EnumTypeValueEnumTypeDeleteFieldInput {
  delete: EnumTypeDeleteInput
  where: EnumTypeValueEnumTypeConnectionWhere
}

input EnumTypeValueEnumTypeDisconnectFieldInput {
  disconnect: EnumTypeDisconnectInput
  where: EnumTypeValueEnumTypeConnectionWhere
}

type EnumTypeValueEnumTypeEnumTypeAggregationSelection {
  count: Int!
  node: EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection
}

type EnumTypeValueEnumTypeEnumTypeNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input EnumTypeValueEnumTypeFieldInput {
  connect: EnumTypeValueEnumTypeConnectFieldInput
  create: EnumTypeValueEnumTypeCreateFieldInput
}

input EnumTypeValueEnumTypeNodeAggregationWhereInput {
  AND: [EnumTypeValueEnumTypeNodeAggregationWhereInput!]
  NOT: EnumTypeValueEnumTypeNodeAggregationWhereInput
  OR: [EnumTypeValueEnumTypeNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type EnumTypeValueEnumTypeRelationship {
  cursor: String!
  node: EnumType!
}

input EnumTypeValueEnumTypeUpdateConnectionInput {
  node: EnumTypeUpdateInput
}

input EnumTypeValueEnumTypeUpdateFieldInput {
  connect: EnumTypeValueEnumTypeConnectFieldInput
  create: EnumTypeValueEnumTypeCreateFieldInput
  delete: EnumTypeValueEnumTypeDeleteFieldInput
  disconnect: EnumTypeValueEnumTypeDisconnectFieldInput
  update: EnumTypeValueEnumTypeUpdateConnectionInput
  where: EnumTypeValueEnumTypeConnectionWhere
}

type EnumTypeValueEventPayload {
  id: ID!
  key: String!
  value: String!
}

input EnumTypeValueOptions {
  limit: Int
  offset: Int

  """
  Specify one or more EnumTypeValueSort objects to sort EnumTypeValues by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [EnumTypeValueSort!]
}

"""
Fields to sort EnumTypeValues by. The order in which sorts are applied is not guaranteed when specifying many fields in one EnumTypeValueSort object.
"""
input EnumTypeValueSort {
  id: SortDirection
  key: SortDirection
  value: SortDirection
}

input EnumTypeValueSubscriptionWhere {
  AND: [EnumTypeValueSubscriptionWhere!]
  NOT: EnumTypeValueSubscriptionWhere
  OR: [EnumTypeValueSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  key: String @deprecated(reason: "Please use the explicit _EQ version")
  key_CONTAINS: String
  key_ENDS_WITH: String
  key_EQ: String
  key_IN: [String!]
  key_MATCHES: String
  key_STARTS_WITH: String
  value: String @deprecated(reason: "Please use the explicit _EQ version")
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQ: String
  value_IN: [String!]
  value_MATCHES: String
  value_STARTS_WITH: String
}

input EnumTypeValueUpdateInput {
  enumType: EnumTypeValueEnumTypeUpdateFieldInput
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  key: String @deprecated(reason: "Please use the explicit _SET field")
  key_SET: String
  value: String @deprecated(reason: "Please use the explicit _SET field")
  value_SET: String
}

type EnumTypeValueUpdatedEvent {
  event: EventType!
  previousState: EnumTypeValueEventPayload!
  timestamp: Float!
  updatedEnumTypeValue: EnumTypeValueEventPayload!
}

input EnumTypeValueWhere {
  AND: [EnumTypeValueWhere!]
  NOT: EnumTypeValueWhere
  OR: [EnumTypeValueWhere!]
  enumType: EnumTypeWhere
  enumTypeAggregate: EnumTypeValueEnumTypeAggregateInput
  enumTypeConnection: EnumTypeValueEnumTypeConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  key: String @deprecated(reason: "Please use the explicit _EQ version")
  key_CONTAINS: String
  key_ENDS_WITH: String
  key_EQ: String
  key_IN: [String!]
  key_MATCHES: String
  key_STARTS_WITH: String
  value: String @deprecated(reason: "Please use the explicit _EQ version")
  value_CONTAINS: String
  value_ENDS_WITH: String
  value_EQ: String
  value_IN: [String!]
  value_MATCHES: String
  value_STARTS_WITH: String
}

type EnumTypeValuesConnection {
  edges: [EnumTypeValueEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input EnumTypeWhere {
  AND: [EnumTypeWhere!]
  NOT: EnumTypeWhere
  OR: [EnumTypeWhere!]
  allowedValuesAggregate: EnumTypeAllowedValuesAggregateInput

  """
  Return EnumTypes where all of the related EnumTypeAllowedValuesConnections match this filter
  """
  allowedValuesConnection_ALL: EnumTypeAllowedValuesConnectionWhere

  """
  Return EnumTypes where none of the related EnumTypeAllowedValuesConnections match this filter
  """
  allowedValuesConnection_NONE: EnumTypeAllowedValuesConnectionWhere

  """
  Return EnumTypes where one of the related EnumTypeAllowedValuesConnections match this filter
  """
  allowedValuesConnection_SINGLE: EnumTypeAllowedValuesConnectionWhere

  """
  Return EnumTypes where some of the related EnumTypeAllowedValuesConnections match this filter
  """
  allowedValuesConnection_SOME: EnumTypeAllowedValuesConnectionWhere

  """
  Return EnumTypes where all of the related EnumTypeValues match this filter
  """
  allowedValues_ALL: EnumTypeValueWhere

  """
  Return EnumTypes where none of the related EnumTypeValues match this filter
  """
  allowedValues_NONE: EnumTypeValueWhere

  """
  Return EnumTypes where one of the related EnumTypeValues match this filter
  """
  allowedValues_SINGLE: EnumTypeValueWhere

  """
  Return EnumTypes where some of the related EnumTypeValues match this filter
  """
  allowedValues_SOME: EnumTypeValueWhere
  fieldRefsAggregate: EnumTypeFieldRefsAggregateInput

  """
  Return EnumTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return EnumTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return EnumTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return EnumTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return EnumTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return EnumTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return EnumTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return EnumTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: EnumTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type EnumTypesConnection {
  edges: [EnumTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum EventType {
  CREATE
  CREATE_RELATIONSHIP
  DELETE
  DELETE_RELATIONSHIP
  UPDATE
}

type Field {
  api(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: InterfaceTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): InterfaceType!
  apiAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: InterfaceTypeWhere): FieldInterfaceTypeApiAggregationSelection
  apiConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [FieldApiConnectionSort!], where: FieldApiConnectionWhere): FieldApiConnection!
  defaultValues: String
  description: String
  fieldType(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: IBaseTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [IBaseTypeSort!], where: IBaseTypeWhere): IBaseType!
  fieldTypeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: IBaseTypeWhere): FieldIBaseTypeFieldTypeAggregationSelection
  fieldTypeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [FieldFieldTypeConnectionSort!], where: FieldFieldTypeConnectionWhere): FieldFieldTypeConnection!
  id: ID!
  key: String!
  name: String
  nextSibling(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): Field
  nextSiblingAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): FieldFieldNextSiblingAggregationSelection
  nextSiblingConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [FieldNextSiblingConnectionSort!], where: FieldNextSiblingConnectionWhere): FieldNextSiblingConnection!
  prevSibling(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): Field
  prevSiblingAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): FieldFieldPrevSiblingAggregationSelection
  prevSiblingConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [FieldPrevSiblingConnectionSort!], where: FieldPrevSiblingConnectionWhere): FieldPrevSiblingConnection!
  validationRules: String
}

type FieldAggregateSelection {
  count: Int!
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input FieldApiAggregateInput {
  AND: [FieldApiAggregateInput!]
  NOT: FieldApiAggregateInput
  OR: [FieldApiAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: FieldApiNodeAggregationWhereInput
}

input FieldApiConnectFieldInput {
  connect: InterfaceTypeConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: InterfaceTypeConnectWhere
}

type FieldApiConnection {
  edges: [FieldApiRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input FieldApiConnectionSort {
  node: InterfaceTypeSort
}

input FieldApiConnectionWhere {
  AND: [FieldApiConnectionWhere!]
  NOT: FieldApiConnectionWhere
  OR: [FieldApiConnectionWhere!]
  node: InterfaceTypeWhere
}

input FieldApiCreateFieldInput {
  node: InterfaceTypeCreateInput!
}

input FieldApiDeleteFieldInput {
  delete: InterfaceTypeDeleteInput
  where: FieldApiConnectionWhere
}

input FieldApiDisconnectFieldInput {
  disconnect: InterfaceTypeDisconnectInput
  where: FieldApiConnectionWhere
}

input FieldApiFieldInput {
  connect: FieldApiConnectFieldInput
  create: FieldApiCreateFieldInput
}

input FieldApiNodeAggregationWhereInput {
  AND: [FieldApiNodeAggregationWhereInput!]
  NOT: FieldApiNodeAggregationWhereInput
  OR: [FieldApiNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type FieldApiRelationship {
  cursor: String!
  node: InterfaceType!
}

input FieldApiUpdateConnectionInput {
  node: InterfaceTypeUpdateInput
}

input FieldApiUpdateFieldInput {
  connect: FieldApiConnectFieldInput
  create: FieldApiCreateFieldInput
  delete: FieldApiDeleteFieldInput
  disconnect: FieldApiDisconnectFieldInput
  update: FieldApiUpdateConnectionInput
  where: FieldApiConnectionWhere
}

input FieldConnectInput {
  api: FieldApiConnectFieldInput
  fieldType: FieldFieldTypeConnectFieldInput
  nextSibling: FieldNextSiblingConnectFieldInput
  prevSibling: FieldPrevSiblingConnectFieldInput
}

input FieldConnectWhere {
  node: FieldWhere!
}

input FieldCreateInput {
  api: FieldApiFieldInput
  defaultValues: String
  description: String
  fieldType: FieldFieldTypeFieldInput
  id: ID!
  key: String!
  name: String
  nextSibling: FieldNextSiblingFieldInput
  prevSibling: FieldPrevSiblingFieldInput
  validationRules: String
}

type FieldCreatedEvent {
  createdField: FieldEventPayload!
  event: EventType!
  timestamp: Float!
}

input FieldDeleteInput {
  api: FieldApiDeleteFieldInput
  fieldType: FieldFieldTypeDeleteFieldInput
  nextSibling: FieldNextSiblingDeleteFieldInput
  prevSibling: FieldPrevSiblingDeleteFieldInput
}

type FieldDeletedEvent {
  deletedField: FieldEventPayload!
  event: EventType!
  timestamp: Float!
}

input FieldDisconnectInput {
  api: FieldApiDisconnectFieldInput
  fieldType: FieldFieldTypeDisconnectFieldInput
  nextSibling: FieldNextSiblingDisconnectFieldInput
  prevSibling: FieldPrevSiblingDisconnectFieldInput
}

type FieldEdge {
  cursor: String!
  node: Field!
}

type FieldEventPayload {
  defaultValues: String
  description: String
  id: ID!
  key: String!
  name: String
  validationRules: String
}

type FieldFieldNextSiblingAggregationSelection {
  count: Int!
  node: FieldFieldNextSiblingNodeAggregateSelection
}

type FieldFieldNextSiblingNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

type FieldFieldPrevSiblingAggregationSelection {
  count: Int!
  node: FieldFieldPrevSiblingNodeAggregateSelection
}

type FieldFieldPrevSiblingNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input FieldFieldTypeAggregateInput {
  AND: [FieldFieldTypeAggregateInput!]
  NOT: FieldFieldTypeAggregateInput
  OR: [FieldFieldTypeAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: FieldFieldTypeNodeAggregationWhereInput
}

input FieldFieldTypeConnectFieldInput {
  connect: IBaseTypeConnectInput
  where: IBaseTypeConnectWhere
}

type FieldFieldTypeConnection {
  edges: [FieldFieldTypeRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input FieldFieldTypeConnectionSort {
  node: IBaseTypeSort
}

input FieldFieldTypeConnectionWhere {
  AND: [FieldFieldTypeConnectionWhere!]
  NOT: FieldFieldTypeConnectionWhere
  OR: [FieldFieldTypeConnectionWhere!]
  node: IBaseTypeWhere
}

input FieldFieldTypeCreateFieldInput {
  node: IBaseTypeCreateInput!
}

input FieldFieldTypeDeleteFieldInput {
  delete: IBaseTypeDeleteInput
  where: FieldFieldTypeConnectionWhere
}

input FieldFieldTypeDisconnectFieldInput {
  disconnect: IBaseTypeDisconnectInput
  where: FieldFieldTypeConnectionWhere
}

input FieldFieldTypeFieldInput {
  connect: FieldFieldTypeConnectFieldInput
  create: FieldFieldTypeCreateFieldInput
}

input FieldFieldTypeNodeAggregationWhereInput {
  AND: [FieldFieldTypeNodeAggregationWhereInput!]
  NOT: FieldFieldTypeNodeAggregationWhereInput
  OR: [FieldFieldTypeNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type FieldFieldTypeRelationship {
  cursor: String!
  node: IBaseType!
}

input FieldFieldTypeUpdateConnectionInput {
  node: IBaseTypeUpdateInput
}

input FieldFieldTypeUpdateFieldInput {
  connect: FieldFieldTypeConnectFieldInput
  create: FieldFieldTypeCreateFieldInput
  delete: FieldFieldTypeDeleteFieldInput
  disconnect: FieldFieldTypeDisconnectFieldInput
  update: FieldFieldTypeUpdateConnectionInput
  where: FieldFieldTypeConnectionWhere
}

type FieldIBaseTypeFieldTypeAggregationSelection {
  count: Int!
  node: FieldIBaseTypeFieldTypeNodeAggregateSelection
}

type FieldIBaseTypeFieldTypeNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

type FieldInterfaceTypeApiAggregationSelection {
  count: Int!
  node: FieldInterfaceTypeApiNodeAggregateSelection
}

type FieldInterfaceTypeApiNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input FieldNextSiblingAggregateInput {
  AND: [FieldNextSiblingAggregateInput!]
  NOT: FieldNextSiblingAggregateInput
  OR: [FieldNextSiblingAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: FieldNextSiblingNodeAggregationWhereInput
}

input FieldNextSiblingConnectFieldInput {
  connect: FieldConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

type FieldNextSiblingConnection {
  edges: [FieldNextSiblingRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input FieldNextSiblingConnectionSort {
  node: FieldSort
}

input FieldNextSiblingConnectionWhere {
  AND: [FieldNextSiblingConnectionWhere!]
  NOT: FieldNextSiblingConnectionWhere
  OR: [FieldNextSiblingConnectionWhere!]
  node: FieldWhere
}

input FieldNextSiblingCreateFieldInput {
  node: FieldCreateInput!
}

input FieldNextSiblingDeleteFieldInput {
  delete: FieldDeleteInput
  where: FieldNextSiblingConnectionWhere
}

input FieldNextSiblingDisconnectFieldInput {
  disconnect: FieldDisconnectInput
  where: FieldNextSiblingConnectionWhere
}

input FieldNextSiblingFieldInput {
  connect: FieldNextSiblingConnectFieldInput
  create: FieldNextSiblingCreateFieldInput
}

input FieldNextSiblingNodeAggregationWhereInput {
  AND: [FieldNextSiblingNodeAggregationWhereInput!]
  NOT: FieldNextSiblingNodeAggregationWhereInput
  OR: [FieldNextSiblingNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

type FieldNextSiblingRelationship {
  cursor: String!
  node: Field!
}

input FieldNextSiblingUpdateConnectionInput {
  node: FieldUpdateInput
}

input FieldNextSiblingUpdateFieldInput {
  connect: FieldNextSiblingConnectFieldInput
  create: FieldNextSiblingCreateFieldInput
  delete: FieldNextSiblingDeleteFieldInput
  disconnect: FieldNextSiblingDisconnectFieldInput
  update: FieldNextSiblingUpdateConnectionInput
  where: FieldNextSiblingConnectionWhere
}

input FieldOptions {
  limit: Int
  offset: Int

  """
  Specify one or more FieldSort objects to sort Fields by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [FieldSort!]
}

input FieldPrevSiblingAggregateInput {
  AND: [FieldPrevSiblingAggregateInput!]
  NOT: FieldPrevSiblingAggregateInput
  OR: [FieldPrevSiblingAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: FieldPrevSiblingNodeAggregationWhereInput
}

input FieldPrevSiblingConnectFieldInput {
  connect: FieldConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

type FieldPrevSiblingConnection {
  edges: [FieldPrevSiblingRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input FieldPrevSiblingConnectionSort {
  node: FieldSort
}

input FieldPrevSiblingConnectionWhere {
  AND: [FieldPrevSiblingConnectionWhere!]
  NOT: FieldPrevSiblingConnectionWhere
  OR: [FieldPrevSiblingConnectionWhere!]
  node: FieldWhere
}

input FieldPrevSiblingCreateFieldInput {
  node: FieldCreateInput!
}

input FieldPrevSiblingDeleteFieldInput {
  delete: FieldDeleteInput
  where: FieldPrevSiblingConnectionWhere
}

input FieldPrevSiblingDisconnectFieldInput {
  disconnect: FieldDisconnectInput
  where: FieldPrevSiblingConnectionWhere
}

input FieldPrevSiblingFieldInput {
  connect: FieldPrevSiblingConnectFieldInput
  create: FieldPrevSiblingCreateFieldInput
}

input FieldPrevSiblingNodeAggregationWhereInput {
  AND: [FieldPrevSiblingNodeAggregationWhereInput!]
  NOT: FieldPrevSiblingNodeAggregationWhereInput
  OR: [FieldPrevSiblingNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

type FieldPrevSiblingRelationship {
  cursor: String!
  node: Field!
}

input FieldPrevSiblingUpdateConnectionInput {
  node: FieldUpdateInput
}

input FieldPrevSiblingUpdateFieldInput {
  connect: FieldPrevSiblingConnectFieldInput
  create: FieldPrevSiblingCreateFieldInput
  delete: FieldPrevSiblingDeleteFieldInput
  disconnect: FieldPrevSiblingDisconnectFieldInput
  update: FieldPrevSiblingUpdateConnectionInput
  where: FieldPrevSiblingConnectionWhere
}

"""
Fields to sort Fields by. The order in which sorts are applied is not guaranteed when specifying many fields in one FieldSort object.
"""
input FieldSort {
  defaultValues: SortDirection
  description: SortDirection
  id: SortDirection
  key: SortDirection
  name: SortDirection
  validationRules: SortDirection
}

input FieldSubscriptionWhere {
  AND: [FieldSubscriptionWhere!]
  NOT: FieldSubscriptionWhere
  OR: [FieldSubscriptionWhere!]
  defaultValues: String @deprecated(reason: "Please use the explicit _EQ version")
  defaultValues_CONTAINS: String
  defaultValues_ENDS_WITH: String
  defaultValues_EQ: String
  defaultValues_IN: [String]
  defaultValues_MATCHES: String
  defaultValues_STARTS_WITH: String
  description: String @deprecated(reason: "Please use the explicit _EQ version")
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQ: String
  description_IN: [String]
  description_MATCHES: String
  description_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  key: String @deprecated(reason: "Please use the explicit _EQ version")
  key_CONTAINS: String
  key_ENDS_WITH: String
  key_EQ: String
  key_IN: [String!]
  key_MATCHES: String
  key_STARTS_WITH: String
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String]
  name_MATCHES: String
  name_STARTS_WITH: String
  validationRules: String @deprecated(reason: "Please use the explicit _EQ version")
  validationRules_CONTAINS: String
  validationRules_ENDS_WITH: String
  validationRules_EQ: String
  validationRules_IN: [String]
  validationRules_MATCHES: String
  validationRules_STARTS_WITH: String
}

input FieldUpdateInput {
  api: FieldApiUpdateFieldInput
  defaultValues: String @deprecated(reason: "Please use the explicit _SET field")
  defaultValues_SET: String
  description: String @deprecated(reason: "Please use the explicit _SET field")
  description_SET: String
  fieldType: FieldFieldTypeUpdateFieldInput
  key: String @deprecated(reason: "Please use the explicit _SET field")
  key_SET: String
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  nextSibling: FieldNextSiblingUpdateFieldInput
  prevSibling: FieldPrevSiblingUpdateFieldInput
  validationRules: String @deprecated(reason: "Please use the explicit _SET field")
  validationRules_SET: String
}

type FieldUpdatedEvent {
  event: EventType!
  previousState: FieldEventPayload!
  timestamp: Float!
  updatedField: FieldEventPayload!
}

input FieldWhere {
  AND: [FieldWhere!]
  NOT: FieldWhere
  OR: [FieldWhere!]
  api: InterfaceTypeWhere
  apiAggregate: FieldApiAggregateInput
  apiConnection: FieldApiConnectionWhere
  defaultValues: String @deprecated(reason: "Please use the explicit _EQ version")
  defaultValues_CONTAINS: String
  defaultValues_ENDS_WITH: String
  defaultValues_EQ: String
  defaultValues_IN: [String]
  defaultValues_MATCHES: String
  defaultValues_STARTS_WITH: String
  description: String @deprecated(reason: "Please use the explicit _EQ version")
  description_CONTAINS: String
  description_ENDS_WITH: String
  description_EQ: String
  description_IN: [String]
  description_MATCHES: String
  description_STARTS_WITH: String
  fieldType: IBaseTypeWhere
  fieldTypeAggregate: FieldFieldTypeAggregateInput
  fieldTypeConnection: FieldFieldTypeConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  key: String @deprecated(reason: "Please use the explicit _EQ version")
  key_CONTAINS: String
  key_ENDS_WITH: String
  key_EQ: String
  key_IN: [String!]
  key_MATCHES: String
  key_STARTS_WITH: String
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String]
  name_MATCHES: String
  name_STARTS_WITH: String
  nextSibling: FieldWhere
  nextSiblingAggregate: FieldNextSiblingAggregateInput
  nextSiblingConnection: FieldNextSiblingConnectionWhere
  prevSibling: FieldWhere
  prevSiblingAggregate: FieldPrevSiblingAggregateInput
  prevSiblingConnection: FieldPrevSiblingConnectionWhere
  validationRules: String @deprecated(reason: "Please use the explicit _EQ version")
  validationRules_CONTAINS: String
  validationRules_ENDS_WITH: String
  validationRules_EQ: String
  validationRules_IN: [String]
  validationRules_MATCHES: String
  validationRules_STARTS_WITH: String
}

type FieldsConnection {
  edges: [FieldEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FloatAggregateSelection {
  average: Float
  max: Float
  min: Float
  sum: Float
}

type Hook {
  config(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  configAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): HookPropConfigAggregationSelection
  configConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [HookConfigConnectionSort!], where: HookConfigConnectionWhere): HookConfigConnection!
  element(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element!
  elementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): HookElementElementAggregationSelection
  elementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [HookElementConnectionSort!], where: HookElementConnectionWhere): HookElementConnection!
  id: ID!
  type: AtomType!
}

type HookAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input HookConfigAggregateInput {
  AND: [HookConfigAggregateInput!]
  NOT: HookConfigAggregateInput
  OR: [HookConfigAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: HookConfigNodeAggregationWhereInput
}

input HookConfigConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type HookConfigConnection {
  edges: [HookConfigRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input HookConfigConnectionSort {
  node: PropSort
}

input HookConfigConnectionWhere {
  AND: [HookConfigConnectionWhere!]
  NOT: HookConfigConnectionWhere
  OR: [HookConfigConnectionWhere!]
  node: PropWhere
}

input HookConfigCreateFieldInput {
  node: PropCreateInput!
}

input HookConfigDeleteFieldInput {
  where: HookConfigConnectionWhere
}

input HookConfigDisconnectFieldInput {
  where: HookConfigConnectionWhere
}

input HookConfigFieldInput {
  connect: HookConfigConnectFieldInput
  create: HookConfigCreateFieldInput
}

input HookConfigNodeAggregationWhereInput {
  AND: [HookConfigNodeAggregationWhereInput!]
  NOT: HookConfigNodeAggregationWhereInput
  OR: [HookConfigNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type HookConfigRelationship {
  cursor: String!
  node: Prop!
}

input HookConfigUpdateConnectionInput {
  node: PropUpdateInput
}

input HookConfigUpdateFieldInput {
  connect: HookConfigConnectFieldInput
  create: HookConfigCreateFieldInput
  delete: HookConfigDeleteFieldInput
  disconnect: HookConfigDisconnectFieldInput
  update: HookConfigUpdateConnectionInput
  where: HookConfigConnectionWhere
}

input HookCreateInput {
  config: HookConfigFieldInput
  element: HookElementFieldInput
  id: ID!
  type: AtomType!
}

type HookCreatedEvent {
  createdHook: HookEventPayload!
  event: EventType!
  timestamp: Float!
}

input HookDeleteInput {
  config: HookConfigDeleteFieldInput
  element: HookElementDeleteFieldInput
}

type HookDeletedEvent {
  deletedHook: HookEventPayload!
  event: EventType!
  timestamp: Float!
}

type HookEdge {
  cursor: String!
  node: Hook!
}

input HookElementAggregateInput {
  AND: [HookElementAggregateInput!]
  NOT: HookElementAggregateInput
  OR: [HookElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: HookElementNodeAggregationWhereInput
}

input HookElementConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type HookElementConnection {
  edges: [HookElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input HookElementConnectionSort {
  node: ElementSort
}

input HookElementConnectionWhere {
  AND: [HookElementConnectionWhere!]
  NOT: HookElementConnectionWhere
  OR: [HookElementConnectionWhere!]
  node: ElementWhere
}

input HookElementCreateFieldInput {
  node: ElementCreateInput!
}

input HookElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: HookElementConnectionWhere
}

input HookElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: HookElementConnectionWhere
}

type HookElementElementAggregationSelection {
  count: Int!
  node: HookElementElementNodeAggregateSelection
}

type HookElementElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

input HookElementFieldInput {
  connect: HookElementConnectFieldInput
  create: HookElementCreateFieldInput
}

input HookElementNodeAggregationWhereInput {
  AND: [HookElementNodeAggregationWhereInput!]
  NOT: HookElementNodeAggregationWhereInput
  OR: [HookElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type HookElementRelationship {
  cursor: String!
  node: Element!
}

input HookElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input HookElementUpdateFieldInput {
  connect: HookElementConnectFieldInput
  create: HookElementCreateFieldInput
  delete: HookElementDeleteFieldInput
  disconnect: HookElementDisconnectFieldInput
  update: HookElementUpdateConnectionInput
  where: HookElementConnectionWhere
}

type HookEventPayload {
  id: ID!
  type: AtomType!
}

input HookOptions {
  limit: Int
  offset: Int

  """
  Specify one or more HookSort objects to sort Hooks by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [HookSort!]
}

type HookPropConfigAggregationSelection {
  count: Int!
  node: HookPropConfigNodeAggregateSelection
}

type HookPropConfigNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

"""
Fields to sort Hooks by. The order in which sorts are applied is not guaranteed when specifying many fields in one HookSort object.
"""
input HookSort {
  id: SortDirection
  type: SortDirection
}

input HookSubscriptionWhere {
  AND: [HookSubscriptionWhere!]
  NOT: HookSubscriptionWhere
  OR: [HookSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  type: AtomType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: AtomType
  type_IN: [AtomType!]
}

input HookUpdateInput {
  config: HookConfigUpdateFieldInput
  element: HookElementUpdateFieldInput
  type: AtomType @deprecated(reason: "Please use the explicit _SET field")
  type_SET: AtomType
}

type HookUpdatedEvent {
  event: EventType!
  previousState: HookEventPayload!
  timestamp: Float!
  updatedHook: HookEventPayload!
}

input HookWhere {
  AND: [HookWhere!]
  NOT: HookWhere
  OR: [HookWhere!]
  config: PropWhere
  configAggregate: HookConfigAggregateInput
  configConnection: HookConfigConnectionWhere
  element: ElementWhere
  elementAggregate: HookElementAggregateInput
  elementConnection: HookElementConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  type: AtomType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: AtomType
  type_IN: [AtomType!]
}

type HooksConnection {
  edges: [HookEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

interface IBaseType {
  fieldRefs(limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsConnection(after: String, first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerConnection(after: String, first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type IBaseTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input IBaseTypeConnectInput {
  fieldRefs: [IBaseTypeFieldRefsConnectFieldInput!]
  owner: IBaseTypeOwnerConnectFieldInput
}

input IBaseTypeConnectWhere {
  node: IBaseTypeWhere!
}

input IBaseTypeCreateInput {
  ActionType: ActionTypeCreateInput
  AppType: AppTypeCreateInput
  ArrayType: ArrayTypeCreateInput
  CodeMirrorType: CodeMirrorTypeCreateInput
  ElementType: ElementTypeCreateInput
  EnumType: EnumTypeCreateInput
  InterfaceType: InterfaceTypeCreateInput
  LambdaType: LambdaTypeCreateInput
  PageType: PageTypeCreateInput
  PrimitiveType: PrimitiveTypeCreateInput
  ReactNodeType: ReactNodeTypeCreateInput
  RenderPropType: RenderPropTypeCreateInput
  RichTextType: RichTextTypeCreateInput
  UnionType: UnionTypeCreateInput
  UnknownType: UnknownTypeCreateInput
}

input IBaseTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

input IBaseTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type IBaseTypeEdge {
  cursor: String!
  node: IBaseType!
}

input IBaseTypeFieldRefsAggregateInput {
  AND: [IBaseTypeFieldRefsAggregateInput!]
  NOT: IBaseTypeFieldRefsAggregateInput
  OR: [IBaseTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: IBaseTypeFieldRefsNodeAggregationWhereInput
}

input IBaseTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

type IBaseTypeFieldRefsConnection {
  edges: [IBaseTypeFieldRefsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input IBaseTypeFieldRefsConnectionSort {
  node: FieldSort
}

input IBaseTypeFieldRefsConnectionWhere {
  AND: [IBaseTypeFieldRefsConnectionWhere!]
  NOT: IBaseTypeFieldRefsConnectionWhere
  OR: [IBaseTypeFieldRefsConnectionWhere!]
  node: FieldWhere
}

input IBaseTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input IBaseTypeFieldRefsDeleteFieldInput {
  delete: FieldDeleteInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input IBaseTypeFieldRefsDisconnectFieldInput {
  disconnect: FieldDisconnectInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input IBaseTypeFieldRefsNodeAggregationWhereInput {
  AND: [IBaseTypeFieldRefsNodeAggregationWhereInput!]
  NOT: IBaseTypeFieldRefsNodeAggregationWhereInput
  OR: [IBaseTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

type IBaseTypeFieldRefsRelationship {
  cursor: String!
  node: Field!
}

input IBaseTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input IBaseTypeFieldRefsUpdateFieldInput {
  connect: [IBaseTypeFieldRefsConnectFieldInput!]
  create: [IBaseTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: IBaseTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

enum IBaseTypeImplementation {
  ActionType
  AppType
  ArrayType
  CodeMirrorType
  ElementType
  EnumType
  InterfaceType
  LambdaType
  PageType
  PrimitiveType
  ReactNodeType
  RenderPropType
  RichTextType
  UnionType
  UnknownType
}

input IBaseTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more IBaseTypeSort objects to sort IBaseTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [IBaseTypeSort!]
}

input IBaseTypeOwnerAggregateInput {
  AND: [IBaseTypeOwnerAggregateInput!]
  NOT: IBaseTypeOwnerAggregateInput
  OR: [IBaseTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: IBaseTypeOwnerNodeAggregationWhereInput
}

input IBaseTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

type IBaseTypeOwnerConnection {
  edges: [IBaseTypeOwnerRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input IBaseTypeOwnerConnectionSort {
  node: UserSort
}

input IBaseTypeOwnerConnectionWhere {
  AND: [IBaseTypeOwnerConnectionWhere!]
  NOT: IBaseTypeOwnerConnectionWhere
  OR: [IBaseTypeOwnerConnectionWhere!]
  node: UserWhere
}

input IBaseTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input IBaseTypeOwnerDeleteFieldInput {
  delete: UserDeleteInput
  where: IBaseTypeOwnerConnectionWhere
}

input IBaseTypeOwnerDisconnectFieldInput {
  disconnect: UserDisconnectInput
  where: IBaseTypeOwnerConnectionWhere
}

input IBaseTypeOwnerNodeAggregationWhereInput {
  AND: [IBaseTypeOwnerNodeAggregationWhereInput!]
  NOT: IBaseTypeOwnerNodeAggregationWhereInput
  OR: [IBaseTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

type IBaseTypeOwnerRelationship {
  cursor: String!
  node: User!
}

input IBaseTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input IBaseTypeOwnerUpdateFieldInput {
  connect: IBaseTypeOwnerConnectFieldInput
  create: IBaseTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: IBaseTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort IBaseTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one IBaseTypeSort object.
"""
input IBaseTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input IBaseTypeUpdateInput {
  fieldRefs: [IBaseTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: IBaseTypeOwnerUpdateFieldInput
}

input IBaseTypeWhere {
  AND: [IBaseTypeWhere!]
  NOT: IBaseTypeWhere
  OR: [IBaseTypeWhere!]
  fieldRefsAggregate: IBaseTypeFieldRefsAggregateInput

  """
  Return IBaseTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return IBaseTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return IBaseTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return IBaseTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return IBaseTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return IBaseTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return IBaseTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return IBaseTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: IBaseTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
  typename: [IBaseTypeImplementation!]
  typename_IN: [IBaseTypeImplementation!] @deprecated(reason: "The typename_IN filter is deprecated, please use the typename filter instead")
}

type IBaseTypesConnection {
  edges: [IBaseTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type IDAggregateSelection {
  longest: ID
  shortest: ID
}

"""Represents an object type with multiple fields"""
type InterfaceType implements IBaseType & WithDescendants {
  apiOfAtoms(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  apiOfAtomsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AtomWhere): InterfaceTypeAtomApiOfAtomsAggregationSelection
  apiOfAtomsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [InterfaceTypeApiOfAtomsConnectionSort!], where: InterfaceTypeApiOfAtomsConnectionWhere): InterfaceTypeApiOfAtomsConnection!
  descendantTypesIds: [ID!]!
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): InterfaceTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  fields(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): InterfaceTypeFieldFieldsAggregationSelection
  fieldsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [InterfaceTypeFieldsConnectionSort!], where: InterfaceTypeFieldsConnectionWhere): InterfaceTypeFieldsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): InterfaceTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type InterfaceTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input InterfaceTypeApiOfAtomsAggregateInput {
  AND: [InterfaceTypeApiOfAtomsAggregateInput!]
  NOT: InterfaceTypeApiOfAtomsAggregateInput
  OR: [InterfaceTypeApiOfAtomsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: InterfaceTypeApiOfAtomsNodeAggregationWhereInput
}

input InterfaceTypeApiOfAtomsConnectFieldInput {
  connect: [AtomConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AtomConnectWhere
}

type InterfaceTypeApiOfAtomsConnection {
  edges: [InterfaceTypeApiOfAtomsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input InterfaceTypeApiOfAtomsConnectionSort {
  node: AtomSort
}

input InterfaceTypeApiOfAtomsConnectionWhere {
  AND: [InterfaceTypeApiOfAtomsConnectionWhere!]
  NOT: InterfaceTypeApiOfAtomsConnectionWhere
  OR: [InterfaceTypeApiOfAtomsConnectionWhere!]
  node: AtomWhere
}

input InterfaceTypeApiOfAtomsCreateFieldInput {
  node: AtomCreateInput!
}

input InterfaceTypeApiOfAtomsDeleteFieldInput {
  delete: AtomDeleteInput
  where: InterfaceTypeApiOfAtomsConnectionWhere
}

input InterfaceTypeApiOfAtomsDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: InterfaceTypeApiOfAtomsConnectionWhere
}

input InterfaceTypeApiOfAtomsFieldInput {
  connect: [InterfaceTypeApiOfAtomsConnectFieldInput!]
  create: [InterfaceTypeApiOfAtomsCreateFieldInput!]
}

input InterfaceTypeApiOfAtomsNodeAggregationWhereInput {
  AND: [InterfaceTypeApiOfAtomsNodeAggregationWhereInput!]
  NOT: InterfaceTypeApiOfAtomsNodeAggregationWhereInput
  OR: [InterfaceTypeApiOfAtomsNodeAggregationWhereInput!]
  externalCssSource_AVERAGE_LENGTH_EQUAL: Float
  externalCssSource_AVERAGE_LENGTH_GT: Float
  externalCssSource_AVERAGE_LENGTH_GTE: Float
  externalCssSource_AVERAGE_LENGTH_LT: Float
  externalCssSource_AVERAGE_LENGTH_LTE: Float
  externalCssSource_LONGEST_LENGTH_EQUAL: Int
  externalCssSource_LONGEST_LENGTH_GT: Int
  externalCssSource_LONGEST_LENGTH_GTE: Int
  externalCssSource_LONGEST_LENGTH_LT: Int
  externalCssSource_LONGEST_LENGTH_LTE: Int
  externalCssSource_SHORTEST_LENGTH_EQUAL: Int
  externalCssSource_SHORTEST_LENGTH_GT: Int
  externalCssSource_SHORTEST_LENGTH_GTE: Int
  externalCssSource_SHORTEST_LENGTH_LT: Int
  externalCssSource_SHORTEST_LENGTH_LTE: Int
  externalJsSource_AVERAGE_LENGTH_EQUAL: Float
  externalJsSource_AVERAGE_LENGTH_GT: Float
  externalJsSource_AVERAGE_LENGTH_GTE: Float
  externalJsSource_AVERAGE_LENGTH_LT: Float
  externalJsSource_AVERAGE_LENGTH_LTE: Float
  externalJsSource_LONGEST_LENGTH_EQUAL: Int
  externalJsSource_LONGEST_LENGTH_GT: Int
  externalJsSource_LONGEST_LENGTH_GTE: Int
  externalJsSource_LONGEST_LENGTH_LT: Int
  externalJsSource_LONGEST_LENGTH_LTE: Int
  externalJsSource_SHORTEST_LENGTH_EQUAL: Int
  externalJsSource_SHORTEST_LENGTH_GT: Int
  externalJsSource_SHORTEST_LENGTH_GTE: Int
  externalJsSource_SHORTEST_LENGTH_LT: Int
  externalJsSource_SHORTEST_LENGTH_LTE: Int
  externalSourceType_AVERAGE_LENGTH_EQUAL: Float
  externalSourceType_AVERAGE_LENGTH_GT: Float
  externalSourceType_AVERAGE_LENGTH_GTE: Float
  externalSourceType_AVERAGE_LENGTH_LT: Float
  externalSourceType_AVERAGE_LENGTH_LTE: Float
  externalSourceType_LONGEST_LENGTH_EQUAL: Int
  externalSourceType_LONGEST_LENGTH_GT: Int
  externalSourceType_LONGEST_LENGTH_GTE: Int
  externalSourceType_LONGEST_LENGTH_LT: Int
  externalSourceType_LONGEST_LENGTH_LTE: Int
  externalSourceType_SHORTEST_LENGTH_EQUAL: Int
  externalSourceType_SHORTEST_LENGTH_GT: Int
  externalSourceType_SHORTEST_LENGTH_GTE: Int
  externalSourceType_SHORTEST_LENGTH_LT: Int
  externalSourceType_SHORTEST_LENGTH_LTE: Int
  icon_AVERAGE_LENGTH_EQUAL: Float
  icon_AVERAGE_LENGTH_GT: Float
  icon_AVERAGE_LENGTH_GTE: Float
  icon_AVERAGE_LENGTH_LT: Float
  icon_AVERAGE_LENGTH_LTE: Float
  icon_LONGEST_LENGTH_EQUAL: Int
  icon_LONGEST_LENGTH_GT: Int
  icon_LONGEST_LENGTH_GTE: Int
  icon_LONGEST_LENGTH_LT: Int
  icon_LONGEST_LENGTH_LTE: Int
  icon_SHORTEST_LENGTH_EQUAL: Int
  icon_SHORTEST_LENGTH_GT: Int
  icon_SHORTEST_LENGTH_GTE: Int
  icon_SHORTEST_LENGTH_LT: Int
  icon_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type InterfaceTypeApiOfAtomsRelationship {
  cursor: String!
  node: Atom!
}

input InterfaceTypeApiOfAtomsUpdateConnectionInput {
  node: AtomUpdateInput
}

input InterfaceTypeApiOfAtomsUpdateFieldInput {
  connect: [InterfaceTypeApiOfAtomsConnectFieldInput!]
  create: [InterfaceTypeApiOfAtomsCreateFieldInput!]
  delete: [InterfaceTypeApiOfAtomsDeleteFieldInput!]
  disconnect: [InterfaceTypeApiOfAtomsDisconnectFieldInput!]
  update: InterfaceTypeApiOfAtomsUpdateConnectionInput
  where: InterfaceTypeApiOfAtomsConnectionWhere
}

type InterfaceTypeAtomApiOfAtomsAggregationSelection {
  count: Int!
  node: InterfaceTypeAtomApiOfAtomsNodeAggregateSelection
}

type InterfaceTypeAtomApiOfAtomsNodeAggregateSelection {
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input InterfaceTypeConnectInput {
  apiOfAtoms: [InterfaceTypeApiOfAtomsConnectFieldInput!]
  fieldRefs: [InterfaceTypeFieldRefsConnectFieldInput!]
  fields: [InterfaceTypeFieldsConnectFieldInput!]
  owner: InterfaceTypeOwnerConnectFieldInput
}

input InterfaceTypeConnectWhere {
  node: InterfaceTypeWhere!
}

input InterfaceTypeCreateInput {
  apiOfAtoms: InterfaceTypeApiOfAtomsFieldInput
  fieldRefs: InterfaceTypeFieldRefsFieldInput
  fields: InterfaceTypeFieldsFieldInput
  id: ID!
  kind: TypeKind! = InterfaceType
  name: String!
  owner: InterfaceTypeOwnerFieldInput
}

type InterfaceTypeCreatedEvent {
  createdInterfaceType: InterfaceTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input InterfaceTypeDeleteInput {
  apiOfAtoms: [InterfaceTypeApiOfAtomsDeleteFieldInput!]
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  fields: [InterfaceTypeFieldsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type InterfaceTypeDeletedEvent {
  deletedInterfaceType: InterfaceTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input InterfaceTypeDisconnectInput {
  apiOfAtoms: [InterfaceTypeApiOfAtomsDisconnectFieldInput!]
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  fields: [InterfaceTypeFieldsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type InterfaceTypeEdge {
  cursor: String!
  node: InterfaceType!
}

type InterfaceTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type InterfaceTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: InterfaceTypeFieldFieldRefsNodeAggregateSelection
}

type InterfaceTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

type InterfaceTypeFieldFieldsAggregationSelection {
  count: Int!
  node: InterfaceTypeFieldFieldsNodeAggregateSelection
}

type InterfaceTypeFieldFieldsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input InterfaceTypeFieldRefsAggregateInput {
  AND: [InterfaceTypeFieldRefsAggregateInput!]
  NOT: InterfaceTypeFieldRefsAggregateInput
  OR: [InterfaceTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: InterfaceTypeFieldRefsNodeAggregationWhereInput
}

input InterfaceTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input InterfaceTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input InterfaceTypeFieldRefsFieldInput {
  connect: [InterfaceTypeFieldRefsConnectFieldInput!]
  create: [InterfaceTypeFieldRefsCreateFieldInput!]
}

input InterfaceTypeFieldRefsNodeAggregationWhereInput {
  AND: [InterfaceTypeFieldRefsNodeAggregationWhereInput!]
  NOT: InterfaceTypeFieldRefsNodeAggregationWhereInput
  OR: [InterfaceTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input InterfaceTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input InterfaceTypeFieldRefsUpdateFieldInput {
  connect: [InterfaceTypeFieldRefsConnectFieldInput!]
  create: [InterfaceTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: InterfaceTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input InterfaceTypeFieldsAggregateInput {
  AND: [InterfaceTypeFieldsAggregateInput!]
  NOT: InterfaceTypeFieldsAggregateInput
  OR: [InterfaceTypeFieldsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: InterfaceTypeFieldsNodeAggregationWhereInput
}

input InterfaceTypeFieldsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

type InterfaceTypeFieldsConnection {
  edges: [InterfaceTypeFieldsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input InterfaceTypeFieldsConnectionSort {
  node: FieldSort
}

input InterfaceTypeFieldsConnectionWhere {
  AND: [InterfaceTypeFieldsConnectionWhere!]
  NOT: InterfaceTypeFieldsConnectionWhere
  OR: [InterfaceTypeFieldsConnectionWhere!]
  node: FieldWhere
}

input InterfaceTypeFieldsCreateFieldInput {
  node: FieldCreateInput!
}

input InterfaceTypeFieldsDeleteFieldInput {
  delete: FieldDeleteInput
  where: InterfaceTypeFieldsConnectionWhere
}

input InterfaceTypeFieldsDisconnectFieldInput {
  disconnect: FieldDisconnectInput
  where: InterfaceTypeFieldsConnectionWhere
}

input InterfaceTypeFieldsFieldInput {
  connect: [InterfaceTypeFieldsConnectFieldInput!]
  create: [InterfaceTypeFieldsCreateFieldInput!]
}

input InterfaceTypeFieldsNodeAggregationWhereInput {
  AND: [InterfaceTypeFieldsNodeAggregationWhereInput!]
  NOT: InterfaceTypeFieldsNodeAggregationWhereInput
  OR: [InterfaceTypeFieldsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

type InterfaceTypeFieldsRelationship {
  cursor: String!
  node: Field!
}

input InterfaceTypeFieldsUpdateConnectionInput {
  node: FieldUpdateInput
}

input InterfaceTypeFieldsUpdateFieldInput {
  connect: [InterfaceTypeFieldsConnectFieldInput!]
  create: [InterfaceTypeFieldsCreateFieldInput!]
  delete: [InterfaceTypeFieldsDeleteFieldInput!]
  disconnect: [InterfaceTypeFieldsDisconnectFieldInput!]
  update: InterfaceTypeFieldsUpdateConnectionInput
  where: InterfaceTypeFieldsConnectionWhere
}

input InterfaceTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more InterfaceTypeSort objects to sort InterfaceTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [InterfaceTypeSort!]
}

input InterfaceTypeOwnerAggregateInput {
  AND: [InterfaceTypeOwnerAggregateInput!]
  NOT: InterfaceTypeOwnerAggregateInput
  OR: [InterfaceTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: InterfaceTypeOwnerNodeAggregationWhereInput
}

input InterfaceTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input InterfaceTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input InterfaceTypeOwnerFieldInput {
  connect: InterfaceTypeOwnerConnectFieldInput
  create: InterfaceTypeOwnerCreateFieldInput
}

input InterfaceTypeOwnerNodeAggregationWhereInput {
  AND: [InterfaceTypeOwnerNodeAggregationWhereInput!]
  NOT: InterfaceTypeOwnerNodeAggregationWhereInput
  OR: [InterfaceTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input InterfaceTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input InterfaceTypeOwnerUpdateFieldInput {
  connect: InterfaceTypeOwnerConnectFieldInput
  create: InterfaceTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: InterfaceTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort InterfaceTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one InterfaceTypeSort object.
"""
input InterfaceTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input InterfaceTypeSubscriptionWhere {
  AND: [InterfaceTypeSubscriptionWhere!]
  NOT: InterfaceTypeSubscriptionWhere
  OR: [InterfaceTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input InterfaceTypeUpdateInput {
  apiOfAtoms: [InterfaceTypeApiOfAtomsUpdateFieldInput!]
  fieldRefs: [InterfaceTypeFieldRefsUpdateFieldInput!]
  fields: [InterfaceTypeFieldsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: InterfaceTypeOwnerUpdateFieldInput
}

type InterfaceTypeUpdatedEvent {
  event: EventType!
  previousState: InterfaceTypeEventPayload!
  timestamp: Float!
  updatedInterfaceType: InterfaceTypeEventPayload!
}

type InterfaceTypeUserOwnerAggregationSelection {
  count: Int!
  node: InterfaceTypeUserOwnerNodeAggregateSelection
}

type InterfaceTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input InterfaceTypeWhere {
  AND: [InterfaceTypeWhere!]
  NOT: InterfaceTypeWhere
  OR: [InterfaceTypeWhere!]
  apiOfAtomsAggregate: InterfaceTypeApiOfAtomsAggregateInput

  """
  Return InterfaceTypes where all of the related InterfaceTypeApiOfAtomsConnections match this filter
  """
  apiOfAtomsConnection_ALL: InterfaceTypeApiOfAtomsConnectionWhere

  """
  Return InterfaceTypes where none of the related InterfaceTypeApiOfAtomsConnections match this filter
  """
  apiOfAtomsConnection_NONE: InterfaceTypeApiOfAtomsConnectionWhere

  """
  Return InterfaceTypes where one of the related InterfaceTypeApiOfAtomsConnections match this filter
  """
  apiOfAtomsConnection_SINGLE: InterfaceTypeApiOfAtomsConnectionWhere

  """
  Return InterfaceTypes where some of the related InterfaceTypeApiOfAtomsConnections match this filter
  """
  apiOfAtomsConnection_SOME: InterfaceTypeApiOfAtomsConnectionWhere

  """Return InterfaceTypes where all of the related Atoms match this filter"""
  apiOfAtoms_ALL: AtomWhere

  """
  Return InterfaceTypes where none of the related Atoms match this filter
  """
  apiOfAtoms_NONE: AtomWhere

  """Return InterfaceTypes where one of the related Atoms match this filter"""
  apiOfAtoms_SINGLE: AtomWhere

  """
  Return InterfaceTypes where some of the related Atoms match this filter
  """
  apiOfAtoms_SOME: AtomWhere
  fieldRefsAggregate: InterfaceTypeFieldRefsAggregateInput

  """
  Return InterfaceTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return InterfaceTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return InterfaceTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return InterfaceTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """
  Return InterfaceTypes where all of the related Fields match this filter
  """
  fieldRefs_ALL: FieldWhere

  """
  Return InterfaceTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """
  Return InterfaceTypes where one of the related Fields match this filter
  """
  fieldRefs_SINGLE: FieldWhere

  """
  Return InterfaceTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  fieldsAggregate: InterfaceTypeFieldsAggregateInput

  """
  Return InterfaceTypes where all of the related InterfaceTypeFieldsConnections match this filter
  """
  fieldsConnection_ALL: InterfaceTypeFieldsConnectionWhere

  """
  Return InterfaceTypes where none of the related InterfaceTypeFieldsConnections match this filter
  """
  fieldsConnection_NONE: InterfaceTypeFieldsConnectionWhere

  """
  Return InterfaceTypes where one of the related InterfaceTypeFieldsConnections match this filter
  """
  fieldsConnection_SINGLE: InterfaceTypeFieldsConnectionWhere

  """
  Return InterfaceTypes where some of the related InterfaceTypeFieldsConnections match this filter
  """
  fieldsConnection_SOME: InterfaceTypeFieldsConnectionWhere

  """
  Return InterfaceTypes where all of the related Fields match this filter
  """
  fields_ALL: FieldWhere

  """
  Return InterfaceTypes where none of the related Fields match this filter
  """
  fields_NONE: FieldWhere

  """
  Return InterfaceTypes where one of the related Fields match this filter
  """
  fields_SINGLE: FieldWhere

  """
  Return InterfaceTypes where some of the related Fields match this filter
  """
  fields_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: InterfaceTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type InterfaceTypesConnection {
  edges: [InterfaceTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""Allows picking a lambda"""
type LambdaType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): LambdaTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): LambdaTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type LambdaTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input LambdaTypeConnectInput {
  fieldRefs: [LambdaTypeFieldRefsConnectFieldInput!]
  owner: LambdaTypeOwnerConnectFieldInput
}

input LambdaTypeConnectWhere {
  node: LambdaTypeWhere!
}

input LambdaTypeCreateInput {
  fieldRefs: LambdaTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = LambdaType
  name: String!
  owner: LambdaTypeOwnerFieldInput
}

type LambdaTypeCreatedEvent {
  createdLambdaType: LambdaTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input LambdaTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type LambdaTypeDeletedEvent {
  deletedLambdaType: LambdaTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input LambdaTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type LambdaTypeEdge {
  cursor: String!
  node: LambdaType!
}

type LambdaTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type LambdaTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: LambdaTypeFieldFieldRefsNodeAggregateSelection
}

type LambdaTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input LambdaTypeFieldRefsAggregateInput {
  AND: [LambdaTypeFieldRefsAggregateInput!]
  NOT: LambdaTypeFieldRefsAggregateInput
  OR: [LambdaTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: LambdaTypeFieldRefsNodeAggregationWhereInput
}

input LambdaTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input LambdaTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input LambdaTypeFieldRefsFieldInput {
  connect: [LambdaTypeFieldRefsConnectFieldInput!]
  create: [LambdaTypeFieldRefsCreateFieldInput!]
}

input LambdaTypeFieldRefsNodeAggregationWhereInput {
  AND: [LambdaTypeFieldRefsNodeAggregationWhereInput!]
  NOT: LambdaTypeFieldRefsNodeAggregationWhereInput
  OR: [LambdaTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input LambdaTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input LambdaTypeFieldRefsUpdateFieldInput {
  connect: [LambdaTypeFieldRefsConnectFieldInput!]
  create: [LambdaTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: LambdaTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input LambdaTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more LambdaTypeSort objects to sort LambdaTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [LambdaTypeSort!]
}

input LambdaTypeOwnerAggregateInput {
  AND: [LambdaTypeOwnerAggregateInput!]
  NOT: LambdaTypeOwnerAggregateInput
  OR: [LambdaTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: LambdaTypeOwnerNodeAggregationWhereInput
}

input LambdaTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input LambdaTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input LambdaTypeOwnerFieldInput {
  connect: LambdaTypeOwnerConnectFieldInput
  create: LambdaTypeOwnerCreateFieldInput
}

input LambdaTypeOwnerNodeAggregationWhereInput {
  AND: [LambdaTypeOwnerNodeAggregationWhereInput!]
  NOT: LambdaTypeOwnerNodeAggregationWhereInput
  OR: [LambdaTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input LambdaTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input LambdaTypeOwnerUpdateFieldInput {
  connect: LambdaTypeOwnerConnectFieldInput
  create: LambdaTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: LambdaTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort LambdaTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one LambdaTypeSort object.
"""
input LambdaTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input LambdaTypeSubscriptionWhere {
  AND: [LambdaTypeSubscriptionWhere!]
  NOT: LambdaTypeSubscriptionWhere
  OR: [LambdaTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input LambdaTypeUpdateInput {
  fieldRefs: [LambdaTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: LambdaTypeOwnerUpdateFieldInput
}

type LambdaTypeUpdatedEvent {
  event: EventType!
  previousState: LambdaTypeEventPayload!
  timestamp: Float!
  updatedLambdaType: LambdaTypeEventPayload!
}

type LambdaTypeUserOwnerAggregationSelection {
  count: Int!
  node: LambdaTypeUserOwnerNodeAggregateSelection
}

type LambdaTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input LambdaTypeWhere {
  AND: [LambdaTypeWhere!]
  NOT: LambdaTypeWhere
  OR: [LambdaTypeWhere!]
  fieldRefsAggregate: LambdaTypeFieldRefsAggregateInput

  """
  Return LambdaTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return LambdaTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return LambdaTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return LambdaTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return LambdaTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return LambdaTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return LambdaTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return LambdaTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: LambdaTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type LambdaTypesConnection {
  edges: [LambdaTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Mutation {
  createActionTypes(input: [ActionTypeCreateInput!]!): CreateActionTypesMutationResponse!
  createApiActions(input: [ApiActionCreateInput!]!): CreateApiActionsMutationResponse!
  createAppTypes(input: [AppTypeCreateInput!]!): CreateAppTypesMutationResponse!
  createApps(input: [AppCreateInput!]!): CreateAppsMutationResponse!
  createArrayTypes(input: [ArrayTypeCreateInput!]!): CreateArrayTypesMutationResponse!
  createAtoms(input: [AtomCreateInput!]!): CreateAtomsMutationResponse!
  createAuthGuards(input: [AuthGuardCreateInput!]!): CreateAuthGuardsMutationResponse!
  createCodeActions(input: [CodeActionCreateInput!]!): CreateCodeActionsMutationResponse!
  createCodeMirrorTypes(input: [CodeMirrorTypeCreateInput!]!): CreateCodeMirrorTypesMutationResponse!
  createComponents(input: [ComponentCreateInput!]!): CreateComponentsMutationResponse!
  createDomains(input: [DomainCreateInput!]!): CreateDomainsMutationResponse!
  createElementTypes(input: [ElementTypeCreateInput!]!): CreateElementTypesMutationResponse!
  createElements(input: [ElementCreateInput!]!): CreateElementsMutationResponse!
  createEnumTypeValues(input: [EnumTypeValueCreateInput!]!): CreateEnumTypeValuesMutationResponse!
  createEnumTypes(input: [EnumTypeCreateInput!]!): CreateEnumTypesMutationResponse!
  createFields(input: [FieldCreateInput!]!): CreateFieldsMutationResponse!
  createHooks(input: [HookCreateInput!]!): CreateHooksMutationResponse!
  createInterfaceTypes(input: [InterfaceTypeCreateInput!]!): CreateInterfaceTypesMutationResponse!
  createLambdaTypes(input: [LambdaTypeCreateInput!]!): CreateLambdaTypesMutationResponse!
  createPageTypes(input: [PageTypeCreateInput!]!): CreatePageTypesMutationResponse!
  createPages(input: [PageCreateInput!]!): CreatePagesMutationResponse!
  createPreferences(input: [PreferenceCreateInput!]!): CreatePreferencesMutationResponse!
  createPrimitiveTypes(input: [PrimitiveTypeCreateInput!]!): CreatePrimitiveTypesMutationResponse!
  createProps(input: [PropCreateInput!]!): CreatePropsMutationResponse!
  createReactNodeTypes(input: [ReactNodeTypeCreateInput!]!): CreateReactNodeTypesMutationResponse!
  createRedirects(input: [RedirectCreateInput!]!): CreateRedirectsMutationResponse!
  createRenderPropTypes(input: [RenderPropTypeCreateInput!]!): CreateRenderPropTypesMutationResponse!
  createResources(input: [ResourceCreateInput!]!): CreateResourcesMutationResponse!
  createRichTextTypes(input: [RichTextTypeCreateInput!]!): CreateRichTextTypesMutationResponse!
  createStores(input: [StoreCreateInput!]!): CreateStoresMutationResponse!
  createTags(input: [TagCreateInput!]!): CreateTagsMutationResponse!
  createTypeReferences(input: [TypeReferenceCreateInput!]!): CreateTypeReferencesMutationResponse!
  createUnionTypes(input: [UnionTypeCreateInput!]!): CreateUnionTypesMutationResponse!
  createUnknownTypes(input: [UnknownTypeCreateInput!]!): CreateUnknownTypesMutationResponse!
  createUsers(input: [UserCreateInput!]!): CreateUsersMutationResponse!
  deleteActionTypes(delete: ActionTypeDeleteInput, where: ActionTypeWhere): DeleteInfo!
  deleteApiActions(delete: ApiActionDeleteInput, where: ApiActionWhere): DeleteInfo!
  deleteAppTypes(delete: AppTypeDeleteInput, where: AppTypeWhere): DeleteInfo!
  deleteApps(delete: AppDeleteInput, where: AppWhere): DeleteInfo!
  deleteArrayTypes(delete: ArrayTypeDeleteInput, where: ArrayTypeWhere): DeleteInfo!
  deleteAtoms(delete: AtomDeleteInput, where: AtomWhere): DeleteInfo!
  deleteAuthGuards(delete: AuthGuardDeleteInput, where: AuthGuardWhere): DeleteInfo!
  deleteCodeActions(delete: CodeActionDeleteInput, where: CodeActionWhere): DeleteInfo!
  deleteCodeMirrorTypes(delete: CodeMirrorTypeDeleteInput, where: CodeMirrorTypeWhere): DeleteInfo!
  deleteComponents(delete: ComponentDeleteInput, where: ComponentWhere): DeleteInfo!
  deleteDomains(delete: DomainDeleteInput, where: DomainWhere): DeleteInfo!
  deleteElementTypes(delete: ElementTypeDeleteInput, where: ElementTypeWhere): DeleteInfo!
  deleteElements(delete: ElementDeleteInput, where: ElementWhere): DeleteInfo!
  deleteEnumTypeValues(delete: EnumTypeValueDeleteInput, where: EnumTypeValueWhere): DeleteInfo!
  deleteEnumTypes(delete: EnumTypeDeleteInput, where: EnumTypeWhere): DeleteInfo!
  deleteFields(delete: FieldDeleteInput, where: FieldWhere): DeleteInfo!
  deleteHooks(delete: HookDeleteInput, where: HookWhere): DeleteInfo!
  deleteInterfaceTypes(delete: InterfaceTypeDeleteInput, where: InterfaceTypeWhere): DeleteInfo!
  deleteLambdaTypes(delete: LambdaTypeDeleteInput, where: LambdaTypeWhere): DeleteInfo!
  deletePageTypes(delete: PageTypeDeleteInput, where: PageTypeWhere): DeleteInfo!
  deletePages(delete: PageDeleteInput, where: PageWhere): DeleteInfo!
  deletePreferences(delete: PreferenceDeleteInput, where: PreferenceWhere): DeleteInfo!
  deletePrimitiveTypes(delete: PrimitiveTypeDeleteInput, where: PrimitiveTypeWhere): DeleteInfo!
  deleteProps(where: PropWhere): DeleteInfo!
  deleteReactNodeTypes(delete: ReactNodeTypeDeleteInput, where: ReactNodeTypeWhere): DeleteInfo!
  deleteRedirects(delete: RedirectDeleteInput, where: RedirectWhere): DeleteInfo!
  deleteRenderPropTypes(delete: RenderPropTypeDeleteInput, where: RenderPropTypeWhere): DeleteInfo!
  deleteResources(delete: ResourceDeleteInput, where: ResourceWhere): DeleteInfo!
  deleteRichTextTypes(delete: RichTextTypeDeleteInput, where: RichTextTypeWhere): DeleteInfo!
  deleteStores(delete: StoreDeleteInput, where: StoreWhere): DeleteInfo!
  deleteTags(delete: TagDeleteInput, where: TagWhere): DeleteInfo!
  deleteTypeReferences(where: TypeReferenceWhere): DeleteInfo!
  deleteUnionTypes(delete: UnionTypeDeleteInput, where: UnionTypeWhere): DeleteInfo!
  deleteUnknownTypes(delete: UnknownTypeDeleteInput, where: UnknownTypeWhere): DeleteInfo!
  deleteUsers(delete: UserDeleteInput, where: UserWhere): DeleteInfo!
  updateActionTypes(update: ActionTypeUpdateInput, where: ActionTypeWhere): UpdateActionTypesMutationResponse!
  updateApiActions(update: ApiActionUpdateInput, where: ApiActionWhere): UpdateApiActionsMutationResponse!
  updateAppTypes(update: AppTypeUpdateInput, where: AppTypeWhere): UpdateAppTypesMutationResponse!
  updateApps(update: AppUpdateInput, where: AppWhere): UpdateAppsMutationResponse!
  updateArrayTypes(update: ArrayTypeUpdateInput, where: ArrayTypeWhere): UpdateArrayTypesMutationResponse!
  updateAtoms(update: AtomUpdateInput, where: AtomWhere): UpdateAtomsMutationResponse!
  updateAuthGuards(update: AuthGuardUpdateInput, where: AuthGuardWhere): UpdateAuthGuardsMutationResponse!
  updateCodeActions(update: CodeActionUpdateInput, where: CodeActionWhere): UpdateCodeActionsMutationResponse!
  updateCodeMirrorTypes(update: CodeMirrorTypeUpdateInput, where: CodeMirrorTypeWhere): UpdateCodeMirrorTypesMutationResponse!
  updateComponents(update: ComponentUpdateInput, where: ComponentWhere): UpdateComponentsMutationResponse!
  updateDomains(update: DomainUpdateInput, where: DomainWhere): UpdateDomainsMutationResponse!
  updateElementTypes(update: ElementTypeUpdateInput, where: ElementTypeWhere): UpdateElementTypesMutationResponse!
  updateElements(update: ElementUpdateInput, where: ElementWhere): UpdateElementsMutationResponse!
  updateEnumTypeValues(update: EnumTypeValueUpdateInput, where: EnumTypeValueWhere): UpdateEnumTypeValuesMutationResponse!
  updateEnumTypes(update: EnumTypeUpdateInput, where: EnumTypeWhere): UpdateEnumTypesMutationResponse!
  updateFields(update: FieldUpdateInput, where: FieldWhere): UpdateFieldsMutationResponse!
  updateHooks(update: HookUpdateInput, where: HookWhere): UpdateHooksMutationResponse!
  updateInterfaceTypes(update: InterfaceTypeUpdateInput, where: InterfaceTypeWhere): UpdateInterfaceTypesMutationResponse!
  updateLambdaTypes(update: LambdaTypeUpdateInput, where: LambdaTypeWhere): UpdateLambdaTypesMutationResponse!
  updatePageTypes(update: PageTypeUpdateInput, where: PageTypeWhere): UpdatePageTypesMutationResponse!
  updatePages(update: PageUpdateInput, where: PageWhere): UpdatePagesMutationResponse!
  updatePreferences(update: PreferenceUpdateInput, where: PreferenceWhere): UpdatePreferencesMutationResponse!
  updatePrimitiveTypes(update: PrimitiveTypeUpdateInput, where: PrimitiveTypeWhere): UpdatePrimitiveTypesMutationResponse!
  updateProps(update: PropUpdateInput, where: PropWhere): UpdatePropsMutationResponse!
  updateReactNodeTypes(update: ReactNodeTypeUpdateInput, where: ReactNodeTypeWhere): UpdateReactNodeTypesMutationResponse!
  updateRedirects(update: RedirectUpdateInput, where: RedirectWhere): UpdateRedirectsMutationResponse!
  updateRenderPropTypes(update: RenderPropTypeUpdateInput, where: RenderPropTypeWhere): UpdateRenderPropTypesMutationResponse!
  updateResources(update: ResourceUpdateInput, where: ResourceWhere): UpdateResourcesMutationResponse!
  updateRichTextTypes(update: RichTextTypeUpdateInput, where: RichTextTypeWhere): UpdateRichTextTypesMutationResponse!
  updateStores(update: StoreUpdateInput, where: StoreWhere): UpdateStoresMutationResponse!
  updateTags(update: TagUpdateInput, where: TagWhere): UpdateTagsMutationResponse!
  updateTypeReferences(update: TypeReferenceUpdateInput, where: TypeReferenceWhere): UpdateTypeReferencesMutationResponse!
  updateUnionTypes(update: UnionTypeUpdateInput, where: UnionTypeWhere): UpdateUnionTypesMutationResponse!
  updateUnknownTypes(update: UnknownTypeUpdateInput, where: UnknownTypeWhere): UpdateUnknownTypesMutationResponse!
  updateUsers(update: UserUpdateInput, where: UserWhere): UpdateUsersMutationResponse!
}

type Page {
  app(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AppOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AppSort!], where: AppWhere): App!
  appAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AppWhere): PageAppAppAggregationSelection
  appConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [PageAppConnectionSort!], where: PageAppConnectionWhere): PageAppConnection!
  compositeKey: String!
  dependantTypes: [AnyType!]!
  elements: [Element!]!
  id: ID!
  kind: PageKind!
  name: String!
  pageContentContainer(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element
  pageContentContainerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): PageElementPageContentContainerAggregationSelection
  pageContentContainerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [PagePageContentContainerConnectionSort!], where: PagePageContentContainerConnectionWhere): PagePageContentContainerConnection!
  redirect(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: RedirectOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [RedirectSort!], where: RedirectWhere): Redirect
  redirectAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: RedirectWhere): PageRedirectRedirectAggregationSelection
  redirectConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [PageRedirectConnectionSort!], where: PageRedirectConnectionWhere): PageRedirectConnection!
  rootElement(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): Element!
  rootElementAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): PageElementRootElementAggregationSelection
  rootElementConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [PageRootElementConnectionSort!], where: PageRootElementConnectionWhere): PageRootElementConnection!
  slug: String!
  store(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): Store!
  storeAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: StoreWhere): PageStoreStoreAggregationSelection
  storeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [PageStoreConnectionSort!], where: PageStoreConnectionWhere): PageStoreConnection!
  urlPattern: String!
}

type PageAggregateSelection {
  compositeKey: StringAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern: StringAggregateSelection!
}

input PageAppAggregateInput {
  AND: [PageAppAggregateInput!]
  NOT: PageAppAggregateInput
  OR: [PageAppAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageAppNodeAggregationWhereInput
}

type PageAppAppAggregationSelection {
  count: Int!
  node: PageAppAppNodeAggregateSelection
}

type PageAppAppNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input PageAppConnectFieldInput {
  connect: AppConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AppConnectWhere
}

type PageAppConnection {
  edges: [PageAppRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PageAppConnectionSort {
  node: AppSort
}

input PageAppConnectionWhere {
  AND: [PageAppConnectionWhere!]
  NOT: PageAppConnectionWhere
  OR: [PageAppConnectionWhere!]
  node: AppWhere
}

input PageAppCreateFieldInput {
  node: AppCreateInput!
}

input PageAppDeleteFieldInput {
  delete: AppDeleteInput
  where: PageAppConnectionWhere
}

input PageAppDisconnectFieldInput {
  disconnect: AppDisconnectInput
  where: PageAppConnectionWhere
}

input PageAppFieldInput {
  connect: PageAppConnectFieldInput
  create: PageAppCreateFieldInput
}

input PageAppNodeAggregationWhereInput {
  AND: [PageAppNodeAggregationWhereInput!]
  NOT: PageAppNodeAggregationWhereInput
  OR: [PageAppNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type PageAppRelationship {
  cursor: String!
  node: App!
}

input PageAppUpdateConnectionInput {
  node: AppUpdateInput
}

input PageAppUpdateFieldInput {
  connect: PageAppConnectFieldInput
  create: PageAppCreateFieldInput
  delete: PageAppDeleteFieldInput
  disconnect: PageAppDisconnectFieldInput
  update: PageAppUpdateConnectionInput
  where: PageAppConnectionWhere
}

input PageConnectInput {
  app: PageAppConnectFieldInput
  pageContentContainer: PagePageContentContainerConnectFieldInput
  redirect: PageRedirectConnectFieldInput
  rootElement: PageRootElementConnectFieldInput
  store: PageStoreConnectFieldInput
}

input PageConnectWhere {
  node: PageWhere!
}

input PageCreateInput {
  app: PageAppFieldInput
  compositeKey: String!
  id: ID!
  kind: PageKind!
  pageContentContainer: PagePageContentContainerFieldInput
  redirect: PageRedirectFieldInput
  rootElement: PageRootElementFieldInput
  store: PageStoreFieldInput
  urlPattern: String!
}

type PageCreatedEvent {
  createdPage: PageEventPayload!
  event: EventType!
  timestamp: Float!
}

input PageDeleteInput {
  app: PageAppDeleteFieldInput
  pageContentContainer: PagePageContentContainerDeleteFieldInput
  redirect: PageRedirectDeleteFieldInput
  rootElement: PageRootElementDeleteFieldInput
  store: PageStoreDeleteFieldInput
}

type PageDeletedEvent {
  deletedPage: PageEventPayload!
  event: EventType!
  timestamp: Float!
}

input PageDisconnectInput {
  app: PageAppDisconnectFieldInput
  pageContentContainer: PagePageContentContainerDisconnectFieldInput
  redirect: PageRedirectDisconnectFieldInput
  rootElement: PageRootElementDisconnectFieldInput
  store: PageStoreDisconnectFieldInput
}

type PageEdge {
  cursor: String!
  node: Page!
}

type PageElementPageContentContainerAggregationSelection {
  count: Int!
  node: PageElementPageContentContainerNodeAggregateSelection
}

type PageElementPageContentContainerNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type PageElementRootElementAggregationSelection {
  count: Int!
  node: PageElementRootElementNodeAggregateSelection
}

type PageElementRootElementNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

type PageEventPayload {
  compositeKey: String!
  id: ID!
  kind: PageKind!
  urlPattern: String!
}

"""Pagination information (Relay)"""
type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

enum PageKind {
  InternalServerError
  NotFound
  Provider
  Regular
}

input PageOptions {
  limit: Int
  offset: Int

  """
  Specify one or more PageSort objects to sort Pages by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PageSort!]
}

input PagePageContentContainerAggregateInput {
  AND: [PagePageContentContainerAggregateInput!]
  NOT: PagePageContentContainerAggregateInput
  OR: [PagePageContentContainerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PagePageContentContainerNodeAggregationWhereInput
}

input PagePageContentContainerConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type PagePageContentContainerConnection {
  edges: [PagePageContentContainerRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PagePageContentContainerConnectionSort {
  node: ElementSort
}

input PagePageContentContainerConnectionWhere {
  AND: [PagePageContentContainerConnectionWhere!]
  NOT: PagePageContentContainerConnectionWhere
  OR: [PagePageContentContainerConnectionWhere!]
  node: ElementWhere
}

input PagePageContentContainerCreateFieldInput {
  node: ElementCreateInput!
}

input PagePageContentContainerDeleteFieldInput {
  delete: ElementDeleteInput
  where: PagePageContentContainerConnectionWhere
}

input PagePageContentContainerDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: PagePageContentContainerConnectionWhere
}

input PagePageContentContainerFieldInput {
  connect: PagePageContentContainerConnectFieldInput
  create: PagePageContentContainerCreateFieldInput
}

input PagePageContentContainerNodeAggregationWhereInput {
  AND: [PagePageContentContainerNodeAggregationWhereInput!]
  NOT: PagePageContentContainerNodeAggregationWhereInput
  OR: [PagePageContentContainerNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type PagePageContentContainerRelationship {
  cursor: String!
  node: Element!
}

input PagePageContentContainerUpdateConnectionInput {
  node: ElementUpdateInput
}

input PagePageContentContainerUpdateFieldInput {
  connect: PagePageContentContainerConnectFieldInput
  create: PagePageContentContainerCreateFieldInput
  delete: PagePageContentContainerDeleteFieldInput
  disconnect: PagePageContentContainerDisconnectFieldInput
  update: PagePageContentContainerUpdateConnectionInput
  where: PagePageContentContainerConnectionWhere
}

input PageRedirectAggregateInput {
  AND: [PageRedirectAggregateInput!]
  NOT: PageRedirectAggregateInput
  OR: [PageRedirectAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageRedirectNodeAggregationWhereInput
}

input PageRedirectConnectFieldInput {
  connect: RedirectConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: RedirectConnectWhere
}

type PageRedirectConnection {
  edges: [PageRedirectRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PageRedirectConnectionSort {
  node: RedirectSort
}

input PageRedirectConnectionWhere {
  AND: [PageRedirectConnectionWhere!]
  NOT: PageRedirectConnectionWhere
  OR: [PageRedirectConnectionWhere!]
  node: RedirectWhere
}

input PageRedirectCreateFieldInput {
  node: RedirectCreateInput!
}

input PageRedirectDeleteFieldInput {
  delete: RedirectDeleteInput
  where: PageRedirectConnectionWhere
}

input PageRedirectDisconnectFieldInput {
  disconnect: RedirectDisconnectInput
  where: PageRedirectConnectionWhere
}

input PageRedirectFieldInput {
  connect: PageRedirectConnectFieldInput
  create: PageRedirectCreateFieldInput
}

input PageRedirectNodeAggregationWhereInput {
  AND: [PageRedirectNodeAggregationWhereInput!]
  NOT: PageRedirectNodeAggregationWhereInput
  OR: [PageRedirectNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  targetUrl_AVERAGE_LENGTH_EQUAL: Float
  targetUrl_AVERAGE_LENGTH_GT: Float
  targetUrl_AVERAGE_LENGTH_GTE: Float
  targetUrl_AVERAGE_LENGTH_LT: Float
  targetUrl_AVERAGE_LENGTH_LTE: Float
  targetUrl_LONGEST_LENGTH_EQUAL: Int
  targetUrl_LONGEST_LENGTH_GT: Int
  targetUrl_LONGEST_LENGTH_GTE: Int
  targetUrl_LONGEST_LENGTH_LT: Int
  targetUrl_LONGEST_LENGTH_LTE: Int
  targetUrl_SHORTEST_LENGTH_EQUAL: Int
  targetUrl_SHORTEST_LENGTH_GT: Int
  targetUrl_SHORTEST_LENGTH_GTE: Int
  targetUrl_SHORTEST_LENGTH_LT: Int
  targetUrl_SHORTEST_LENGTH_LTE: Int
}

type PageRedirectRedirectAggregationSelection {
  count: Int!
  node: PageRedirectRedirectNodeAggregateSelection
}

type PageRedirectRedirectNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  targetUrl: StringAggregateSelection!
}

type PageRedirectRelationship {
  cursor: String!
  node: Redirect!
}

input PageRedirectUpdateConnectionInput {
  node: RedirectUpdateInput
}

input PageRedirectUpdateFieldInput {
  connect: PageRedirectConnectFieldInput
  create: PageRedirectCreateFieldInput
  delete: PageRedirectDeleteFieldInput
  disconnect: PageRedirectDisconnectFieldInput
  update: PageRedirectUpdateConnectionInput
  where: PageRedirectConnectionWhere
}

input PageRootElementAggregateInput {
  AND: [PageRootElementAggregateInput!]
  NOT: PageRootElementAggregateInput
  OR: [PageRootElementAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageRootElementNodeAggregationWhereInput
}

input PageRootElementConnectFieldInput {
  connect: ElementConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type PageRootElementConnection {
  edges: [PageRootElementRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PageRootElementConnectionSort {
  node: ElementSort
}

input PageRootElementConnectionWhere {
  AND: [PageRootElementConnectionWhere!]
  NOT: PageRootElementConnectionWhere
  OR: [PageRootElementConnectionWhere!]
  node: ElementWhere
}

input PageRootElementCreateFieldInput {
  node: ElementCreateInput!
}

input PageRootElementDeleteFieldInput {
  delete: ElementDeleteInput
  where: PageRootElementConnectionWhere
}

input PageRootElementDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: PageRootElementConnectionWhere
}

input PageRootElementFieldInput {
  connect: PageRootElementConnectFieldInput
  create: PageRootElementCreateFieldInput
}

input PageRootElementNodeAggregationWhereInput {
  AND: [PageRootElementNodeAggregationWhereInput!]
  NOT: PageRootElementNodeAggregationWhereInput
  OR: [PageRootElementNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type PageRootElementRelationship {
  cursor: String!
  node: Element!
}

input PageRootElementUpdateConnectionInput {
  node: ElementUpdateInput
}

input PageRootElementUpdateFieldInput {
  connect: PageRootElementConnectFieldInput
  create: PageRootElementCreateFieldInput
  delete: PageRootElementDeleteFieldInput
  disconnect: PageRootElementDisconnectFieldInput
  update: PageRootElementUpdateConnectionInput
  where: PageRootElementConnectionWhere
}

"""
Fields to sort Pages by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageSort object.
"""
input PageSort {
  compositeKey: SortDirection
  id: SortDirection
  kind: SortDirection
  urlPattern: SortDirection
}

input PageStoreAggregateInput {
  AND: [PageStoreAggregateInput!]
  NOT: PageStoreAggregateInput
  OR: [PageStoreAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageStoreNodeAggregationWhereInput
}

input PageStoreConnectFieldInput {
  connect: StoreConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: StoreConnectWhere
}

type PageStoreConnection {
  edges: [PageStoreRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PageStoreConnectionSort {
  node: StoreSort
}

input PageStoreConnectionWhere {
  AND: [PageStoreConnectionWhere!]
  NOT: PageStoreConnectionWhere
  OR: [PageStoreConnectionWhere!]
  node: StoreWhere
}

input PageStoreCreateFieldInput {
  node: StoreCreateInput!
}

input PageStoreDeleteFieldInput {
  delete: StoreDeleteInput
  where: PageStoreConnectionWhere
}

input PageStoreDisconnectFieldInput {
  disconnect: StoreDisconnectInput
  where: PageStoreConnectionWhere
}

input PageStoreFieldInput {
  connect: PageStoreConnectFieldInput
  create: PageStoreCreateFieldInput
}

input PageStoreNodeAggregationWhereInput {
  AND: [PageStoreNodeAggregationWhereInput!]
  NOT: PageStoreNodeAggregationWhereInput
  OR: [PageStoreNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type PageStoreRelationship {
  cursor: String!
  node: Store!
}

type PageStoreStoreAggregationSelection {
  count: Int!
  node: PageStoreStoreNodeAggregateSelection
}

type PageStoreStoreNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input PageStoreUpdateConnectionInput {
  node: StoreUpdateInput
}

input PageStoreUpdateFieldInput {
  connect: PageStoreConnectFieldInput
  create: PageStoreCreateFieldInput
  delete: PageStoreDeleteFieldInput
  disconnect: PageStoreDisconnectFieldInput
  update: PageStoreUpdateConnectionInput
  where: PageStoreConnectionWhere
}

input PageSubscriptionWhere {
  AND: [PageSubscriptionWhere!]
  NOT: PageSubscriptionWhere
  OR: [PageSubscriptionWhere!]
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: PageKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: PageKind
  kind_IN: [PageKind!]
  urlPattern: String @deprecated(reason: "Please use the explicit _EQ version")
  urlPattern_CONTAINS: String
  urlPattern_ENDS_WITH: String
  urlPattern_EQ: String
  urlPattern_IN: [String!]
  urlPattern_MATCHES: String
  urlPattern_STARTS_WITH: String
}

"""Allows picking a page from the list of pages"""
type PageType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): PageTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): PageTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type PageTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input PageTypeConnectInput {
  fieldRefs: [PageTypeFieldRefsConnectFieldInput!]
  owner: PageTypeOwnerConnectFieldInput
}

input PageTypeConnectWhere {
  node: PageTypeWhere!
}

input PageTypeCreateInput {
  fieldRefs: PageTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = PageType
  name: String!
  owner: PageTypeOwnerFieldInput
}

type PageTypeCreatedEvent {
  createdPageType: PageTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input PageTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type PageTypeDeletedEvent {
  deletedPageType: PageTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input PageTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type PageTypeEdge {
  cursor: String!
  node: PageType!
}

type PageTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type PageTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: PageTypeFieldFieldRefsNodeAggregateSelection
}

type PageTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input PageTypeFieldRefsAggregateInput {
  AND: [PageTypeFieldRefsAggregateInput!]
  NOT: PageTypeFieldRefsAggregateInput
  OR: [PageTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageTypeFieldRefsNodeAggregationWhereInput
}

input PageTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input PageTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input PageTypeFieldRefsFieldInput {
  connect: [PageTypeFieldRefsConnectFieldInput!]
  create: [PageTypeFieldRefsCreateFieldInput!]
}

input PageTypeFieldRefsNodeAggregationWhereInput {
  AND: [PageTypeFieldRefsNodeAggregationWhereInput!]
  NOT: PageTypeFieldRefsNodeAggregationWhereInput
  OR: [PageTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input PageTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input PageTypeFieldRefsUpdateFieldInput {
  connect: [PageTypeFieldRefsConnectFieldInput!]
  create: [PageTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: PageTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input PageTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more PageTypeSort objects to sort PageTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PageTypeSort!]
}

input PageTypeOwnerAggregateInput {
  AND: [PageTypeOwnerAggregateInput!]
  NOT: PageTypeOwnerAggregateInput
  OR: [PageTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PageTypeOwnerNodeAggregationWhereInput
}

input PageTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input PageTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input PageTypeOwnerFieldInput {
  connect: PageTypeOwnerConnectFieldInput
  create: PageTypeOwnerCreateFieldInput
}

input PageTypeOwnerNodeAggregationWhereInput {
  AND: [PageTypeOwnerNodeAggregationWhereInput!]
  NOT: PageTypeOwnerNodeAggregationWhereInput
  OR: [PageTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input PageTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input PageTypeOwnerUpdateFieldInput {
  connect: PageTypeOwnerConnectFieldInput
  create: PageTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: PageTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort PageTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PageTypeSort object.
"""
input PageTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input PageTypeSubscriptionWhere {
  AND: [PageTypeSubscriptionWhere!]
  NOT: PageTypeSubscriptionWhere
  OR: [PageTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input PageTypeUpdateInput {
  fieldRefs: [PageTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: PageTypeOwnerUpdateFieldInput
}

type PageTypeUpdatedEvent {
  event: EventType!
  previousState: PageTypeEventPayload!
  timestamp: Float!
  updatedPageType: PageTypeEventPayload!
}

type PageTypeUserOwnerAggregationSelection {
  count: Int!
  node: PageTypeUserOwnerNodeAggregateSelection
}

type PageTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input PageTypeWhere {
  AND: [PageTypeWhere!]
  NOT: PageTypeWhere
  OR: [PageTypeWhere!]
  fieldRefsAggregate: PageTypeFieldRefsAggregateInput

  """
  Return PageTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return PageTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return PageTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return PageTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return PageTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return PageTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return PageTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return PageTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: PageTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type PageTypesConnection {
  edges: [PageTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input PageUpdateInput {
  app: PageAppUpdateFieldInput
  compositeKey: String @deprecated(reason: "Please use the explicit _SET field")
  compositeKey_SET: String
  kind: PageKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: PageKind
  pageContentContainer: PagePageContentContainerUpdateFieldInput
  redirect: PageRedirectUpdateFieldInput
  rootElement: PageRootElementUpdateFieldInput
  store: PageStoreUpdateFieldInput
  urlPattern: String @deprecated(reason: "Please use the explicit _SET field")
  urlPattern_SET: String
}

type PageUpdatedEvent {
  event: EventType!
  previousState: PageEventPayload!
  timestamp: Float!
  updatedPage: PageEventPayload!
}

input PageWhere {
  AND: [PageWhere!]
  NOT: PageWhere
  OR: [PageWhere!]
  app: AppWhere
  appAggregate: PageAppAggregateInput
  appConnection: PageAppConnectionWhere
  compositeKey: String @deprecated(reason: "Please use the explicit _EQ version")
  compositeKey_CONTAINS: String
  compositeKey_ENDS_WITH: String
  compositeKey_EQ: String
  compositeKey_IN: [String!]
  compositeKey_MATCHES: String
  compositeKey_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: PageKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: PageKind
  kind_IN: [PageKind!]
  pageContentContainer: ElementWhere
  pageContentContainerAggregate: PagePageContentContainerAggregateInput
  pageContentContainerConnection: PagePageContentContainerConnectionWhere
  redirect: RedirectWhere
  redirectAggregate: PageRedirectAggregateInput
  redirectConnection: PageRedirectConnectionWhere
  rootElement: ElementWhere
  rootElementAggregate: PageRootElementAggregateInput
  rootElementConnection: PageRootElementConnectionWhere
  store: StoreWhere
  storeAggregate: PageStoreAggregateInput
  storeConnection: PageStoreConnectionWhere
  urlPattern: String @deprecated(reason: "Please use the explicit _EQ version")
  urlPattern_CONTAINS: String
  urlPattern_ENDS_WITH: String
  urlPattern_EQ: String
  urlPattern_IN: [String!]
  urlPattern_MATCHES: String
  urlPattern_STARTS_WITH: String
}

type PagesConnection {
  edges: [PageEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Preference implements WithOwner {
  activeConfigPaneTab: ConfigPaneTab!
  builderBreakpointType: BreakpointType!
  builderWidth: Float!
  id: ID!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): PreferenceUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
}

type PreferenceAggregateSelection {
  builderWidth: FloatAggregateSelection!
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input PreferenceConnectInput {
  owner: PreferenceOwnerConnectFieldInput
}

input PreferenceConnectWhere {
  node: PreferenceWhere!
}

input PreferenceCreateInput {
  activeConfigPaneTab: ConfigPaneTab!
  builderBreakpointType: BreakpointType!
  builderWidth: Float!
  id: ID!
  owner: PreferenceOwnerFieldInput
}

type PreferenceCreatedEvent {
  createdPreference: PreferenceEventPayload!
  event: EventType!
  timestamp: Float!
}

input PreferenceDeleteInput {
  owner: WithOwnerOwnerDeleteFieldInput
}

type PreferenceDeletedEvent {
  deletedPreference: PreferenceEventPayload!
  event: EventType!
  timestamp: Float!
}

input PreferenceDisconnectInput {
  owner: WithOwnerOwnerDisconnectFieldInput
}

type PreferenceEdge {
  cursor: String!
  node: Preference!
}

type PreferenceEventPayload {
  activeConfigPaneTab: ConfigPaneTab!
  builderBreakpointType: BreakpointType!
  builderWidth: Float!
  id: ID!
}

input PreferenceOptions {
  limit: Int
  offset: Int

  """
  Specify one or more PreferenceSort objects to sort Preferences by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PreferenceSort!]
}

input PreferenceOwnerAggregateInput {
  AND: [PreferenceOwnerAggregateInput!]
  NOT: PreferenceOwnerAggregateInput
  OR: [PreferenceOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PreferenceOwnerNodeAggregationWhereInput
}

input PreferenceOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input PreferenceOwnerCreateFieldInput {
  node: UserCreateInput!
}

input PreferenceOwnerFieldInput {
  connect: PreferenceOwnerConnectFieldInput
  create: PreferenceOwnerCreateFieldInput
}

input PreferenceOwnerNodeAggregationWhereInput {
  AND: [PreferenceOwnerNodeAggregationWhereInput!]
  NOT: PreferenceOwnerNodeAggregationWhereInput
  OR: [PreferenceOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input PreferenceOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input PreferenceOwnerUpdateFieldInput {
  connect: PreferenceOwnerConnectFieldInput
  create: PreferenceOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: PreferenceOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

"""
Fields to sort Preferences by. The order in which sorts are applied is not guaranteed when specifying many fields in one PreferenceSort object.
"""
input PreferenceSort {
  activeConfigPaneTab: SortDirection
  builderBreakpointType: SortDirection
  builderWidth: SortDirection
  id: SortDirection
}

input PreferenceSubscriptionWhere {
  AND: [PreferenceSubscriptionWhere!]
  NOT: PreferenceSubscriptionWhere
  OR: [PreferenceSubscriptionWhere!]
  activeConfigPaneTab: ConfigPaneTab @deprecated(reason: "Please use the explicit _EQ version")
  activeConfigPaneTab_EQ: ConfigPaneTab
  activeConfigPaneTab_IN: [ConfigPaneTab!]
  builderBreakpointType: BreakpointType @deprecated(reason: "Please use the explicit _EQ version")
  builderBreakpointType_EQ: BreakpointType
  builderBreakpointType_IN: [BreakpointType!]
  builderWidth: Float @deprecated(reason: "Please use the explicit _EQ version")
  builderWidth_EQ: Float
  builderWidth_GT: Float
  builderWidth_GTE: Float
  builderWidth_IN: [Float!]
  builderWidth_LT: Float
  builderWidth_LTE: Float
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
}

input PreferenceUpdateInput {
  activeConfigPaneTab: ConfigPaneTab @deprecated(reason: "Please use the explicit _SET field")
  activeConfigPaneTab_SET: ConfigPaneTab
  builderBreakpointType: BreakpointType @deprecated(reason: "Please use the explicit _SET field")
  builderBreakpointType_SET: BreakpointType
  builderWidth: Float @deprecated(reason: "Please use the explicit _SET field")
  builderWidth_ADD: Float
  builderWidth_DIVIDE: Float
  builderWidth_MULTIPLY: Float
  builderWidth_SET: Float
  builderWidth_SUBTRACT: Float
  owner: PreferenceOwnerUpdateFieldInput
}

type PreferenceUpdatedEvent {
  event: EventType!
  previousState: PreferenceEventPayload!
  timestamp: Float!
  updatedPreference: PreferenceEventPayload!
}

type PreferenceUserOwnerAggregationSelection {
  count: Int!
  node: PreferenceUserOwnerNodeAggregateSelection
}

type PreferenceUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input PreferenceWhere {
  AND: [PreferenceWhere!]
  NOT: PreferenceWhere
  OR: [PreferenceWhere!]
  activeConfigPaneTab: ConfigPaneTab @deprecated(reason: "Please use the explicit _EQ version")
  activeConfigPaneTab_EQ: ConfigPaneTab
  activeConfigPaneTab_IN: [ConfigPaneTab!]
  builderBreakpointType: BreakpointType @deprecated(reason: "Please use the explicit _EQ version")
  builderBreakpointType_EQ: BreakpointType
  builderBreakpointType_IN: [BreakpointType!]
  builderWidth: Float @deprecated(reason: "Please use the explicit _EQ version")
  builderWidth_EQ: Float
  builderWidth_GT: Float
  builderWidth_GTE: Float
  builderWidth_IN: [Float!]
  builderWidth_LT: Float
  builderWidth_LTE: Float
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  owner: UserWhere
  ownerAggregate: PreferenceOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
}

type PreferencesConnection {
  edges: [PreferenceEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
Base atomic building block of the type system. Represents primitive types - String, Integer, Float, Boolean
"""
type PrimitiveType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): PrimitiveTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): PrimitiveTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
  primitiveKind: PrimitiveTypeKind!
}

type PrimitiveTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input PrimitiveTypeConnectInput {
  fieldRefs: [PrimitiveTypeFieldRefsConnectFieldInput!]
  owner: PrimitiveTypeOwnerConnectFieldInput
}

input PrimitiveTypeConnectWhere {
  node: PrimitiveTypeWhere!
}

input PrimitiveTypeCreateInput {
  fieldRefs: PrimitiveTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = PrimitiveType
  name: String!
  owner: PrimitiveTypeOwnerFieldInput
  primitiveKind: PrimitiveTypeKind!
}

type PrimitiveTypeCreatedEvent {
  createdPrimitiveType: PrimitiveTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input PrimitiveTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type PrimitiveTypeDeletedEvent {
  deletedPrimitiveType: PrimitiveTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input PrimitiveTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type PrimitiveTypeEdge {
  cursor: String!
  node: PrimitiveType!
}

type PrimitiveTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
  primitiveKind: PrimitiveTypeKind!
}

type PrimitiveTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: PrimitiveTypeFieldFieldRefsNodeAggregateSelection
}

type PrimitiveTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input PrimitiveTypeFieldRefsAggregateInput {
  AND: [PrimitiveTypeFieldRefsAggregateInput!]
  NOT: PrimitiveTypeFieldRefsAggregateInput
  OR: [PrimitiveTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PrimitiveTypeFieldRefsNodeAggregationWhereInput
}

input PrimitiveTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input PrimitiveTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input PrimitiveTypeFieldRefsFieldInput {
  connect: [PrimitiveTypeFieldRefsConnectFieldInput!]
  create: [PrimitiveTypeFieldRefsCreateFieldInput!]
}

input PrimitiveTypeFieldRefsNodeAggregationWhereInput {
  AND: [PrimitiveTypeFieldRefsNodeAggregationWhereInput!]
  NOT: PrimitiveTypeFieldRefsNodeAggregationWhereInput
  OR: [PrimitiveTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input PrimitiveTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input PrimitiveTypeFieldRefsUpdateFieldInput {
  connect: [PrimitiveTypeFieldRefsConnectFieldInput!]
  create: [PrimitiveTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: PrimitiveTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

enum PrimitiveTypeKind {
  Boolean
  Integer
  Number
  String
}

input PrimitiveTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more PrimitiveTypeSort objects to sort PrimitiveTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PrimitiveTypeSort!]
}

input PrimitiveTypeOwnerAggregateInput {
  AND: [PrimitiveTypeOwnerAggregateInput!]
  NOT: PrimitiveTypeOwnerAggregateInput
  OR: [PrimitiveTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: PrimitiveTypeOwnerNodeAggregationWhereInput
}

input PrimitiveTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input PrimitiveTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input PrimitiveTypeOwnerFieldInput {
  connect: PrimitiveTypeOwnerConnectFieldInput
  create: PrimitiveTypeOwnerCreateFieldInput
}

input PrimitiveTypeOwnerNodeAggregationWhereInput {
  AND: [PrimitiveTypeOwnerNodeAggregationWhereInput!]
  NOT: PrimitiveTypeOwnerNodeAggregationWhereInput
  OR: [PrimitiveTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input PrimitiveTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input PrimitiveTypeOwnerUpdateFieldInput {
  connect: PrimitiveTypeOwnerConnectFieldInput
  create: PrimitiveTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: PrimitiveTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort PrimitiveTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one PrimitiveTypeSort object.
"""
input PrimitiveTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
  primitiveKind: SortDirection
}

input PrimitiveTypeSubscriptionWhere {
  AND: [PrimitiveTypeSubscriptionWhere!]
  NOT: PrimitiveTypeSubscriptionWhere
  OR: [PrimitiveTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  primitiveKind: PrimitiveTypeKind @deprecated(reason: "Please use the explicit _EQ version")
  primitiveKind_EQ: PrimitiveTypeKind
  primitiveKind_IN: [PrimitiveTypeKind!]
}

input PrimitiveTypeUpdateInput {
  fieldRefs: [PrimitiveTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: PrimitiveTypeOwnerUpdateFieldInput
  primitiveKind: PrimitiveTypeKind @deprecated(reason: "Please use the explicit _SET field")
  primitiveKind_SET: PrimitiveTypeKind
}

type PrimitiveTypeUpdatedEvent {
  event: EventType!
  previousState: PrimitiveTypeEventPayload!
  timestamp: Float!
  updatedPrimitiveType: PrimitiveTypeEventPayload!
}

type PrimitiveTypeUserOwnerAggregationSelection {
  count: Int!
  node: PrimitiveTypeUserOwnerNodeAggregateSelection
}

type PrimitiveTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input PrimitiveTypeWhere {
  AND: [PrimitiveTypeWhere!]
  NOT: PrimitiveTypeWhere
  OR: [PrimitiveTypeWhere!]
  fieldRefsAggregate: PrimitiveTypeFieldRefsAggregateInput

  """
  Return PrimitiveTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return PrimitiveTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return PrimitiveTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return PrimitiveTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """
  Return PrimitiveTypes where all of the related Fields match this filter
  """
  fieldRefs_ALL: FieldWhere

  """
  Return PrimitiveTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """
  Return PrimitiveTypes where one of the related Fields match this filter
  """
  fieldRefs_SINGLE: FieldWhere

  """
  Return PrimitiveTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: PrimitiveTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
  primitiveKind: PrimitiveTypeKind @deprecated(reason: "Please use the explicit _EQ version")
  primitiveKind_EQ: PrimitiveTypeKind
  primitiveKind_IN: [PrimitiveTypeKind!]
}

type PrimitiveTypesConnection {
  edges: [PrimitiveTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ProductionDomainConfig {
  misconfigured: Boolean!
}

type ProductionDomainConfigCreatedEvent {
  createdProductionDomainConfig: ProductionDomainConfigEventPayload!
  event: EventType!
  timestamp: Float!
}

type ProductionDomainConfigDeletedEvent {
  deletedProductionDomainConfig: ProductionDomainConfigEventPayload!
  event: EventType!
  timestamp: Float!
}

type ProductionDomainConfigEventPayload {
  misconfigured: Boolean!
}

input ProductionDomainConfigSubscriptionWhere {
  AND: [ProductionDomainConfigSubscriptionWhere!]
  NOT: ProductionDomainConfigSubscriptionWhere
  OR: [ProductionDomainConfigSubscriptionWhere!]
  misconfigured: Boolean @deprecated(reason: "Please use the explicit _EQ version")
  misconfigured_EQ: Boolean
}

type ProductionDomainConfigUpdatedEvent {
  event: EventType!
  previousState: ProductionDomainConfigEventPayload!
  timestamp: Float!
  updatedProductionDomainConfig: ProductionDomainConfigEventPayload!
}

type Prop {
  data: String!
  id: ID!
}

type PropAggregateSelection {
  count: Int!
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input PropConnectWhere {
  node: PropWhere!
}

input PropCreateInput {
  data: String!
  id: ID!
}

type PropCreatedEvent {
  createdProp: PropEventPayload!
  event: EventType!
  timestamp: Float!
}

type PropDeletedEvent {
  deletedProp: PropEventPayload!
  event: EventType!
  timestamp: Float!
}

type PropEdge {
  cursor: String!
  node: Prop!
}

type PropEventPayload {
  data: String!
  id: ID!
}

input PropOptions {
  limit: Int
  offset: Int

  """
  Specify one or more PropSort objects to sort Props by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PropSort!]
}

"""
Fields to sort Props by. The order in which sorts are applied is not guaranteed when specifying many fields in one PropSort object.
"""
input PropSort {
  data: SortDirection
  id: SortDirection
}

input PropSubscriptionWhere {
  AND: [PropSubscriptionWhere!]
  NOT: PropSubscriptionWhere
  OR: [PropSubscriptionWhere!]
  data: String @deprecated(reason: "Please use the explicit _EQ version")
  data_CONTAINS: String
  data_ENDS_WITH: String
  data_EQ: String
  data_IN: [String!]
  data_MATCHES: String
  data_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
}

input PropUpdateInput {
  data: String @deprecated(reason: "Please use the explicit _SET field")
  data_SET: String
}

type PropUpdatedEvent {
  event: EventType!
  previousState: PropEventPayload!
  timestamp: Float!
  updatedProp: PropEventPayload!
}

input PropWhere {
  AND: [PropWhere!]
  NOT: PropWhere
  OR: [PropWhere!]
  data: String @deprecated(reason: "Please use the explicit _EQ version")
  data_CONTAINS: String
  data_ENDS_WITH: String
  data_EQ: String
  data_IN: [String!]
  data_MATCHES: String
  data_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
}

type PropsConnection {
  edges: [PropEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Query {
  actionTypes(limit: Int, offset: Int, options: ActionTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ActionTypeSort!], where: ActionTypeWhere): [ActionType!]!
  actionTypesAggregate(where: ActionTypeWhere): ActionTypeAggregateSelection!
  actionTypesConnection(after: String, first: Int, sort: [ActionTypeSort!], where: ActionTypeWhere): ActionTypesConnection!
  anyActions(limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyActionWhere): [AnyAction!]!
  anyTypes(limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyTypeWhere): [AnyType!]!
  apiActions(limit: Int, offset: Int, options: ApiActionOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ApiActionSort!], where: ApiActionWhere): [ApiAction!]!
  apiActionsAggregate(where: ApiActionWhere): ApiActionAggregateSelection!
  apiActionsConnection(after: String, first: Int, sort: [ApiActionSort!], where: ApiActionWhere): ApiActionsConnection!
  appTypes(limit: Int, offset: Int, options: AppTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AppTypeSort!], where: AppTypeWhere): [AppType!]!
  appTypesAggregate(where: AppTypeWhere): AppTypeAggregateSelection!
  appTypesConnection(after: String, first: Int, sort: [AppTypeSort!], where: AppTypeWhere): AppTypesConnection!
  apps(limit: Int, offset: Int, options: AppOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AppSort!], where: AppWhere): [App!]!
  appsAggregate(where: AppWhere): AppAggregateSelection!
  appsConnection(after: String, first: Int, sort: [AppSort!], where: AppWhere): AppsConnection!
  arrayTypes(limit: Int, offset: Int, options: ArrayTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ArrayTypeSort!], where: ArrayTypeWhere): [ArrayType!]!
  arrayTypesAggregate(where: ArrayTypeWhere): ArrayTypeAggregateSelection!
  arrayTypesConnection(after: String, first: Int, sort: [ArrayTypeSort!], where: ArrayTypeWhere): ArrayTypesConnection!
  atoms(limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  atomsAggregate(where: AtomWhere): AtomAggregateSelection!
  atomsConnection(after: String, first: Int, sort: [AtomSort!], where: AtomWhere): AtomsConnection!
  authGuards(limit: Int, offset: Int, options: AuthGuardOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AuthGuardSort!], where: AuthGuardWhere): [AuthGuard!]!
  authGuardsAggregate(where: AuthGuardWhere): AuthGuardAggregateSelection!
  authGuardsConnection(after: String, first: Int, sort: [AuthGuardSort!], where: AuthGuardWhere): AuthGuardsConnection!
  baseActions(limit: Int, offset: Int, options: BaseActionOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [BaseActionSort!], where: BaseActionWhere): [BaseAction!]!
  baseActionsAggregate(where: BaseActionWhere): BaseActionAggregateSelection!
  baseActionsConnection(after: String, first: Int, sort: [BaseActionSort!], where: BaseActionWhere): BaseActionsConnection!
  codeActions(limit: Int, offset: Int, options: CodeActionOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [CodeActionSort!], where: CodeActionWhere): [CodeAction!]!
  codeActionsAggregate(where: CodeActionWhere): CodeActionAggregateSelection!
  codeActionsConnection(after: String, first: Int, sort: [CodeActionSort!], where: CodeActionWhere): CodeActionsConnection!
  codeMirrorTypes(limit: Int, offset: Int, options: CodeMirrorTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [CodeMirrorTypeSort!], where: CodeMirrorTypeWhere): [CodeMirrorType!]!
  codeMirrorTypesAggregate(where: CodeMirrorTypeWhere): CodeMirrorTypeAggregateSelection!
  codeMirrorTypesConnection(after: String, first: Int, sort: [CodeMirrorTypeSort!], where: CodeMirrorTypeWhere): CodeMirrorTypesConnection!
  components(limit: Int, offset: Int, options: ComponentOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ComponentSort!], where: ComponentWhere): [Component!]!
  componentsAggregate(where: ComponentWhere): ComponentAggregateSelection!
  componentsConnection(after: String, first: Int, sort: [ComponentSort!], where: ComponentWhere): ComponentsConnection!
  containerNodes(limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: ContainerNodeWhere): [ContainerNode!]!
  domains(limit: Int, offset: Int, options: DomainOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [DomainSort!], where: DomainWhere): [Domain!]!
  domainsAggregate(where: DomainWhere): DomainAggregateSelection!
  domainsConnection(after: String, first: Int, sort: [DomainSort!], where: DomainWhere): DomainsConnection!
  elementRenderTypes(limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: ElementRenderTypeWhere): [ElementRenderType!]!
  elementTypes(limit: Int, offset: Int, options: ElementTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementTypeSort!], where: ElementTypeWhere): [ElementType!]!
  elementTypesAggregate(where: ElementTypeWhere): ElementTypeAggregateSelection!
  elementTypesConnection(after: String, first: Int, sort: [ElementTypeSort!], where: ElementTypeWhere): ElementTypesConnection!
  elements(limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  elementsAggregate(where: ElementWhere): ElementAggregateSelection!
  elementsConnection(after: String, first: Int, sort: [ElementSort!], where: ElementWhere): ElementsConnection!
  enumTypeValues(limit: Int, offset: Int, options: EnumTypeValueOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [EnumTypeValueSort!], where: EnumTypeValueWhere): [EnumTypeValue!]!
  enumTypeValuesAggregate(where: EnumTypeValueWhere): EnumTypeValueAggregateSelection!
  enumTypeValuesConnection(after: String, first: Int, sort: [EnumTypeValueSort!], where: EnumTypeValueWhere): EnumTypeValuesConnection!
  enumTypes(limit: Int, offset: Int, options: EnumTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [EnumTypeSort!], where: EnumTypeWhere): [EnumType!]!
  enumTypesAggregate(where: EnumTypeWhere): EnumTypeAggregateSelection!
  enumTypesConnection(after: String, first: Int, sort: [EnumTypeSort!], where: EnumTypeWhere): EnumTypesConnection!
  fields(limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldsAggregate(where: FieldWhere): FieldAggregateSelection!
  fieldsConnection(after: String, first: Int, sort: [FieldSort!], where: FieldWhere): FieldsConnection!

  """
  Returns a list of all Type and Atom entities that reference the type with the given id
  This could be different types of relationships like Atom-Api, ArrayType-itemType, InterfaceType-field, UnionType-unionTypeChild
  """
  getTypeReferences(typeId: ID!): [TypeReference!]
  hooks(limit: Int, offset: Int, options: HookOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [HookSort!], where: HookWhere): [Hook!]!
  hooksAggregate(where: HookWhere): HookAggregateSelection!
  hooksConnection(after: String, first: Int, sort: [HookSort!], where: HookWhere): HooksConnection!
  iBaseTypes(limit: Int, offset: Int, options: IBaseTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [IBaseTypeSort!], where: IBaseTypeWhere): [IBaseType!]!
  iBaseTypesAggregate(where: IBaseTypeWhere): IBaseTypeAggregateSelection!
  iBaseTypesConnection(after: String, first: Int, sort: [IBaseTypeSort!], where: IBaseTypeWhere): IBaseTypesConnection!
  interfaceTypes(limit: Int, offset: Int, options: InterfaceTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): [InterfaceType!]!
  interfaceTypesAggregate(where: InterfaceTypeWhere): InterfaceTypeAggregateSelection!
  interfaceTypesConnection(after: String, first: Int, sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): InterfaceTypesConnection!

  """
  Does a recursive check to see if the parent type (parentTypeId) contains the descendant type (descendantTypeId) at any level of nesting. Useful for checking for recursion
  """
  isTypeDescendantOf(descendantTypeId: ID!, parentTypeId: ID!): Boolean
  lambdaTypes(limit: Int, offset: Int, options: LambdaTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [LambdaTypeSort!], where: LambdaTypeWhere): [LambdaType!]!
  lambdaTypesAggregate(where: LambdaTypeWhere): LambdaTypeAggregateSelection!
  lambdaTypesConnection(after: String, first: Int, sort: [LambdaTypeSort!], where: LambdaTypeWhere): LambdaTypesConnection!
  pageTypes(limit: Int, offset: Int, options: PageTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageTypeSort!], where: PageTypeWhere): [PageType!]!
  pageTypesAggregate(where: PageTypeWhere): PageTypeAggregateSelection!
  pageTypesConnection(after: String, first: Int, sort: [PageTypeSort!], where: PageTypeWhere): PageTypesConnection!
  pages(limit: Int, offset: Int, options: PageOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageSort!], where: PageWhere): [Page!]!
  pagesAggregate(where: PageWhere): PageAggregateSelection!
  pagesConnection(after: String, first: Int, sort: [PageSort!], where: PageWhere): PagesConnection!
  preferences(limit: Int, offset: Int, options: PreferenceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PreferenceSort!], where: PreferenceWhere): [Preference!]!
  preferencesAggregate(where: PreferenceWhere): PreferenceAggregateSelection!
  preferencesConnection(after: String, first: Int, sort: [PreferenceSort!], where: PreferenceWhere): PreferencesConnection!
  primitiveTypes(limit: Int, offset: Int, options: PrimitiveTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PrimitiveTypeSort!], where: PrimitiveTypeWhere): [PrimitiveType!]!
  primitiveTypesAggregate(where: PrimitiveTypeWhere): PrimitiveTypeAggregateSelection!
  primitiveTypesConnection(after: String, first: Int, sort: [PrimitiveTypeSort!], where: PrimitiveTypeWhere): PrimitiveTypesConnection!
  props(limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): [Prop!]!
  propsAggregate(where: PropWhere): PropAggregateSelection!
  propsConnection(after: String, first: Int, sort: [PropSort!], where: PropWhere): PropsConnection!
  reactNodeTypes(limit: Int, offset: Int, options: ReactNodeTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ReactNodeTypeSort!], where: ReactNodeTypeWhere): [ReactNodeType!]!
  reactNodeTypesAggregate(where: ReactNodeTypeWhere): ReactNodeTypeAggregateSelection!
  reactNodeTypesConnection(after: String, first: Int, sort: [ReactNodeTypeSort!], where: ReactNodeTypeWhere): ReactNodeTypesConnection!
  redirects(limit: Int, offset: Int, options: RedirectOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [RedirectSort!], where: RedirectWhere): [Redirect!]!
  redirectsAggregate(where: RedirectWhere): RedirectAggregateSelection!
  redirectsConnection(after: String, first: Int, sort: [RedirectSort!], where: RedirectWhere): RedirectsConnection!
  renderPropTypes(limit: Int, offset: Int, options: RenderPropTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [RenderPropTypeSort!], where: RenderPropTypeWhere): [RenderPropType!]!
  renderPropTypesAggregate(where: RenderPropTypeWhere): RenderPropTypeAggregateSelection!
  renderPropTypesConnection(after: String, first: Int, sort: [RenderPropTypeSort!], where: RenderPropTypeWhere): RenderPropTypesConnection!
  resources(limit: Int, offset: Int, options: ResourceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ResourceSort!], where: ResourceWhere): [Resource!]!
  resourcesAggregate(where: ResourceWhere): ResourceAggregateSelection!
  resourcesConnection(after: String, first: Int, sort: [ResourceSort!], where: ResourceWhere): ResourcesConnection!
  richTextTypes(limit: Int, offset: Int, options: RichTextTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [RichTextTypeSort!], where: RichTextTypeWhere): [RichTextType!]!
  richTextTypesAggregate(where: RichTextTypeWhere): RichTextTypeAggregateSelection!
  richTextTypesConnection(after: String, first: Int, sort: [RichTextTypeSort!], where: RichTextTypeWhere): RichTextTypesConnection!
  stores(limit: Int, offset: Int, options: StoreOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [StoreSort!], where: StoreWhere): [Store!]!
  storesAggregate(where: StoreWhere): StoreAggregateSelection!
  storesConnection(after: String, first: Int, sort: [StoreSort!], where: StoreWhere): StoresConnection!
  tags(limit: Int, offset: Int, options: TagOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TagSort!], where: TagWhere): [Tag!]!
  tagsAggregate(where: TagWhere): TagAggregateSelection!
  tagsConnection(after: String, first: Int, sort: [TagSort!], where: TagWhere): TagsConnection!
  typeReferences(limit: Int, offset: Int, options: TypeReferenceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TypeReferenceSort!], where: TypeReferenceWhere): [TypeReference!]!
  typeReferencesAggregate(where: TypeReferenceWhere): TypeReferenceAggregateSelection!
  typeReferencesConnection(after: String, first: Int, sort: [TypeReferenceSort!], where: TypeReferenceWhere): TypeReferencesConnection!
  unionTypes(limit: Int, offset: Int, options: UnionTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UnionTypeSort!], where: UnionTypeWhere): [UnionType!]!
  unionTypesAggregate(where: UnionTypeWhere): UnionTypeAggregateSelection!
  unionTypesConnection(after: String, first: Int, sort: [UnionTypeSort!], where: UnionTypeWhere): UnionTypesConnection!
  unknownTypes(limit: Int, offset: Int, options: UnknownTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UnknownTypeSort!], where: UnknownTypeWhere): [UnknownType!]!
  unknownTypesAggregate(where: UnknownTypeWhere): UnknownTypeAggregateSelection!
  unknownTypesConnection(after: String, first: Int, sort: [UnknownTypeSort!], where: UnknownTypeWhere): UnknownTypesConnection!
  users(limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): [User!]!
  usersAggregate(where: UserWhere): UserAggregateSelection!
  usersConnection(after: String, first: Int, sort: [UserSort!], where: UserWhere): UsersConnection!
  withDescendants(limit: Int, offset: Int, options: WithDescendantsOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: WithDescendantsWhere): [WithDescendants!]!
  withDescendantsAggregate(where: WithDescendantsWhere): WithDescendantsAggregateSelection!
  withDescendantsConnection(after: String, first: Int, where: WithDescendantsWhere): WithDescendantsConnection!
  withOwners(limit: Int, offset: Int, options: WithOwnerOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: WithOwnerWhere): [WithOwner!]!
  withOwnersAggregate(where: WithOwnerWhere): WithOwnerAggregateSelection!
  withOwnersConnection(after: String, first: Int, where: WithOwnerWhere): WithOwnersConnection!
}

"""Input type for options that can be specified on a query operation."""
input QueryOptions {
  limit: Int
  offset: Int
}

"""
Allows picking a Component from the list of components.
It is passed to the rendered element as a React node: `ReactNode`
Prop values for this type have the shape of TypedProp in order to
be distinguished from other element types.
Comparison between different element types:
- RenderPropType: Component select box, results it '(props) => ReactNode' value
- ReactNodeType: Component select box, results it 'ReactNode' value
- ElementType: Current tree element select box, results it 'ReactNode' value
"""
type ReactNodeType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): ReactNodeTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ReactNodeTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type ReactNodeTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ReactNodeTypeConnectInput {
  fieldRefs: [ReactNodeTypeFieldRefsConnectFieldInput!]
  owner: ReactNodeTypeOwnerConnectFieldInput
}

input ReactNodeTypeConnectWhere {
  node: ReactNodeTypeWhere!
}

input ReactNodeTypeCreateInput {
  fieldRefs: ReactNodeTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = ReactNodeType
  name: String!
  owner: ReactNodeTypeOwnerFieldInput
}

type ReactNodeTypeCreatedEvent {
  createdReactNodeType: ReactNodeTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ReactNodeTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type ReactNodeTypeDeletedEvent {
  deletedReactNodeType: ReactNodeTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input ReactNodeTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type ReactNodeTypeEdge {
  cursor: String!
  node: ReactNodeType!
}

type ReactNodeTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type ReactNodeTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: ReactNodeTypeFieldFieldRefsNodeAggregateSelection
}

type ReactNodeTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input ReactNodeTypeFieldRefsAggregateInput {
  AND: [ReactNodeTypeFieldRefsAggregateInput!]
  NOT: ReactNodeTypeFieldRefsAggregateInput
  OR: [ReactNodeTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ReactNodeTypeFieldRefsNodeAggregationWhereInput
}

input ReactNodeTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input ReactNodeTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input ReactNodeTypeFieldRefsFieldInput {
  connect: [ReactNodeTypeFieldRefsConnectFieldInput!]
  create: [ReactNodeTypeFieldRefsCreateFieldInput!]
}

input ReactNodeTypeFieldRefsNodeAggregationWhereInput {
  AND: [ReactNodeTypeFieldRefsNodeAggregationWhereInput!]
  NOT: ReactNodeTypeFieldRefsNodeAggregationWhereInput
  OR: [ReactNodeTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input ReactNodeTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input ReactNodeTypeFieldRefsUpdateFieldInput {
  connect: [ReactNodeTypeFieldRefsConnectFieldInput!]
  create: [ReactNodeTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: ReactNodeTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input ReactNodeTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ReactNodeTypeSort objects to sort ReactNodeTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ReactNodeTypeSort!]
}

input ReactNodeTypeOwnerAggregateInput {
  AND: [ReactNodeTypeOwnerAggregateInput!]
  NOT: ReactNodeTypeOwnerAggregateInput
  OR: [ReactNodeTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ReactNodeTypeOwnerNodeAggregationWhereInput
}

input ReactNodeTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ReactNodeTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ReactNodeTypeOwnerFieldInput {
  connect: ReactNodeTypeOwnerConnectFieldInput
  create: ReactNodeTypeOwnerCreateFieldInput
}

input ReactNodeTypeOwnerNodeAggregationWhereInput {
  AND: [ReactNodeTypeOwnerNodeAggregationWhereInput!]
  NOT: ReactNodeTypeOwnerNodeAggregationWhereInput
  OR: [ReactNodeTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ReactNodeTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ReactNodeTypeOwnerUpdateFieldInput {
  connect: ReactNodeTypeOwnerConnectFieldInput
  create: ReactNodeTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: ReactNodeTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort ReactNodeTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one ReactNodeTypeSort object.
"""
input ReactNodeTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input ReactNodeTypeSubscriptionWhere {
  AND: [ReactNodeTypeSubscriptionWhere!]
  NOT: ReactNodeTypeSubscriptionWhere
  OR: [ReactNodeTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input ReactNodeTypeUpdateInput {
  fieldRefs: [ReactNodeTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: ReactNodeTypeOwnerUpdateFieldInput
}

type ReactNodeTypeUpdatedEvent {
  event: EventType!
  previousState: ReactNodeTypeEventPayload!
  timestamp: Float!
  updatedReactNodeType: ReactNodeTypeEventPayload!
}

type ReactNodeTypeUserOwnerAggregationSelection {
  count: Int!
  node: ReactNodeTypeUserOwnerNodeAggregateSelection
}

type ReactNodeTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ReactNodeTypeWhere {
  AND: [ReactNodeTypeWhere!]
  NOT: ReactNodeTypeWhere
  OR: [ReactNodeTypeWhere!]
  fieldRefsAggregate: ReactNodeTypeFieldRefsAggregateInput

  """
  Return ReactNodeTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return ReactNodeTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ReactNodeTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return ReactNodeTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """
  Return ReactNodeTypes where all of the related Fields match this filter
  """
  fieldRefs_ALL: FieldWhere

  """
  Return ReactNodeTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """
  Return ReactNodeTypes where one of the related Fields match this filter
  """
  fieldRefs_SINGLE: FieldWhere

  """
  Return ReactNodeTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: ReactNodeTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type ReactNodeTypesConnection {
  edges: [ReactNodeTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Redirect {
  authGuard(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AuthGuardOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AuthGuardSort!], where: AuthGuardWhere): AuthGuard!
  authGuardAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AuthGuardWhere): RedirectAuthGuardAuthGuardAggregationSelection
  authGuardConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [RedirectAuthGuardConnectionSort!], where: RedirectAuthGuardConnectionWhere): RedirectAuthGuardConnection!
  id: ID!
  source(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PageOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageSort!], where: PageWhere): Page!
  sourceAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PageWhere): RedirectPageSourceAggregationSelection
  sourceConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [RedirectSourceConnectionSort!], where: RedirectSourceConnectionWhere): RedirectSourceConnection!
  targetPage(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PageOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PageSort!], where: PageWhere): Page
  targetPageAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PageWhere): RedirectPageTargetPageAggregationSelection
  targetPageConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [RedirectTargetPageConnectionSort!], where: RedirectTargetPageConnectionWhere): RedirectTargetPageConnection!
  targetType: RedirectTargetType!
  targetUrl: String
}

type RedirectAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  targetUrl: StringAggregateSelection!
}

input RedirectAuthGuardAggregateInput {
  AND: [RedirectAuthGuardAggregateInput!]
  NOT: RedirectAuthGuardAggregateInput
  OR: [RedirectAuthGuardAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RedirectAuthGuardNodeAggregationWhereInput
}

type RedirectAuthGuardAuthGuardAggregationSelection {
  count: Int!
  node: RedirectAuthGuardAuthGuardNodeAggregateSelection
}

type RedirectAuthGuardAuthGuardNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  responseTransformer: StringAggregateSelection!
}

input RedirectAuthGuardConnectFieldInput {
  connect: AuthGuardConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AuthGuardConnectWhere
}

type RedirectAuthGuardConnection {
  edges: [RedirectAuthGuardRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input RedirectAuthGuardConnectionSort {
  node: AuthGuardSort
}

input RedirectAuthGuardConnectionWhere {
  AND: [RedirectAuthGuardConnectionWhere!]
  NOT: RedirectAuthGuardConnectionWhere
  OR: [RedirectAuthGuardConnectionWhere!]
  node: AuthGuardWhere
}

input RedirectAuthGuardCreateFieldInput {
  node: AuthGuardCreateInput!
}

input RedirectAuthGuardDeleteFieldInput {
  delete: AuthGuardDeleteInput
  where: RedirectAuthGuardConnectionWhere
}

input RedirectAuthGuardDisconnectFieldInput {
  disconnect: AuthGuardDisconnectInput
  where: RedirectAuthGuardConnectionWhere
}

input RedirectAuthGuardFieldInput {
  connect: RedirectAuthGuardConnectFieldInput
  create: RedirectAuthGuardCreateFieldInput
}

input RedirectAuthGuardNodeAggregationWhereInput {
  AND: [RedirectAuthGuardNodeAggregationWhereInput!]
  NOT: RedirectAuthGuardNodeAggregationWhereInput
  OR: [RedirectAuthGuardNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  responseTransformer_AVERAGE_LENGTH_EQUAL: Float
  responseTransformer_AVERAGE_LENGTH_GT: Float
  responseTransformer_AVERAGE_LENGTH_GTE: Float
  responseTransformer_AVERAGE_LENGTH_LT: Float
  responseTransformer_AVERAGE_LENGTH_LTE: Float
  responseTransformer_LONGEST_LENGTH_EQUAL: Int
  responseTransformer_LONGEST_LENGTH_GT: Int
  responseTransformer_LONGEST_LENGTH_GTE: Int
  responseTransformer_LONGEST_LENGTH_LT: Int
  responseTransformer_LONGEST_LENGTH_LTE: Int
  responseTransformer_SHORTEST_LENGTH_EQUAL: Int
  responseTransformer_SHORTEST_LENGTH_GT: Int
  responseTransformer_SHORTEST_LENGTH_GTE: Int
  responseTransformer_SHORTEST_LENGTH_LT: Int
  responseTransformer_SHORTEST_LENGTH_LTE: Int
}

type RedirectAuthGuardRelationship {
  cursor: String!
  node: AuthGuard!
}

input RedirectAuthGuardUpdateConnectionInput {
  node: AuthGuardUpdateInput
}

input RedirectAuthGuardUpdateFieldInput {
  connect: RedirectAuthGuardConnectFieldInput
  create: RedirectAuthGuardCreateFieldInput
  delete: RedirectAuthGuardDeleteFieldInput
  disconnect: RedirectAuthGuardDisconnectFieldInput
  update: RedirectAuthGuardUpdateConnectionInput
  where: RedirectAuthGuardConnectionWhere
}

input RedirectConnectInput {
  authGuard: RedirectAuthGuardConnectFieldInput
  source: RedirectSourceConnectFieldInput
  targetPage: RedirectTargetPageConnectFieldInput
}

input RedirectConnectWhere {
  node: RedirectWhere!
}

input RedirectCreateInput {
  authGuard: RedirectAuthGuardFieldInput
  id: ID!
  source: RedirectSourceFieldInput
  targetPage: RedirectTargetPageFieldInput
  targetType: RedirectTargetType!
  targetUrl: String
}

type RedirectCreatedEvent {
  createdRedirect: RedirectEventPayload!
  event: EventType!
  timestamp: Float!
}

input RedirectDeleteInput {
  authGuard: RedirectAuthGuardDeleteFieldInput
  source: RedirectSourceDeleteFieldInput
  targetPage: RedirectTargetPageDeleteFieldInput
}

type RedirectDeletedEvent {
  deletedRedirect: RedirectEventPayload!
  event: EventType!
  timestamp: Float!
}

input RedirectDisconnectInput {
  authGuard: RedirectAuthGuardDisconnectFieldInput
  source: RedirectSourceDisconnectFieldInput
  targetPage: RedirectTargetPageDisconnectFieldInput
}

type RedirectEdge {
  cursor: String!
  node: Redirect!
}

type RedirectEventPayload {
  id: ID!
  targetType: RedirectTargetType!
  targetUrl: String
}

input RedirectOptions {
  limit: Int
  offset: Int

  """
  Specify one or more RedirectSort objects to sort Redirects by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [RedirectSort!]
}

type RedirectPageSourceAggregationSelection {
  count: Int!
  node: RedirectPageSourceNodeAggregateSelection
}

type RedirectPageSourceNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern: StringAggregateSelection!
}

type RedirectPageTargetPageAggregationSelection {
  count: Int!
  node: RedirectPageTargetPageNodeAggregateSelection
}

type RedirectPageTargetPageNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern: StringAggregateSelection!
}

"""
Fields to sort Redirects by. The order in which sorts are applied is not guaranteed when specifying many fields in one RedirectSort object.
"""
input RedirectSort {
  id: SortDirection
  targetType: SortDirection
  targetUrl: SortDirection
}

input RedirectSourceAggregateInput {
  AND: [RedirectSourceAggregateInput!]
  NOT: RedirectSourceAggregateInput
  OR: [RedirectSourceAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RedirectSourceNodeAggregationWhereInput
}

input RedirectSourceConnectFieldInput {
  connect: PageConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PageConnectWhere
}

type RedirectSourceConnection {
  edges: [RedirectSourceRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input RedirectSourceConnectionSort {
  node: PageSort
}

input RedirectSourceConnectionWhere {
  AND: [RedirectSourceConnectionWhere!]
  NOT: RedirectSourceConnectionWhere
  OR: [RedirectSourceConnectionWhere!]
  node: PageWhere
}

input RedirectSourceCreateFieldInput {
  node: PageCreateInput!
}

input RedirectSourceDeleteFieldInput {
  delete: PageDeleteInput
  where: RedirectSourceConnectionWhere
}

input RedirectSourceDisconnectFieldInput {
  disconnect: PageDisconnectInput
  where: RedirectSourceConnectionWhere
}

input RedirectSourceFieldInput {
  connect: RedirectSourceConnectFieldInput
  create: RedirectSourceCreateFieldInput
}

input RedirectSourceNodeAggregationWhereInput {
  AND: [RedirectSourceNodeAggregationWhereInput!]
  NOT: RedirectSourceNodeAggregationWhereInput
  OR: [RedirectSourceNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern_AVERAGE_LENGTH_EQUAL: Float
  urlPattern_AVERAGE_LENGTH_GT: Float
  urlPattern_AVERAGE_LENGTH_GTE: Float
  urlPattern_AVERAGE_LENGTH_LT: Float
  urlPattern_AVERAGE_LENGTH_LTE: Float
  urlPattern_LONGEST_LENGTH_EQUAL: Int
  urlPattern_LONGEST_LENGTH_GT: Int
  urlPattern_LONGEST_LENGTH_GTE: Int
  urlPattern_LONGEST_LENGTH_LT: Int
  urlPattern_LONGEST_LENGTH_LTE: Int
  urlPattern_SHORTEST_LENGTH_EQUAL: Int
  urlPattern_SHORTEST_LENGTH_GT: Int
  urlPattern_SHORTEST_LENGTH_GTE: Int
  urlPattern_SHORTEST_LENGTH_LT: Int
  urlPattern_SHORTEST_LENGTH_LTE: Int
}

type RedirectSourceRelationship {
  cursor: String!
  node: Page!
}

input RedirectSourceUpdateConnectionInput {
  node: PageUpdateInput
}

input RedirectSourceUpdateFieldInput {
  connect: RedirectSourceConnectFieldInput
  create: RedirectSourceCreateFieldInput
  delete: RedirectSourceDeleteFieldInput
  disconnect: RedirectSourceDisconnectFieldInput
  update: RedirectSourceUpdateConnectionInput
  where: RedirectSourceConnectionWhere
}

input RedirectSubscriptionWhere {
  AND: [RedirectSubscriptionWhere!]
  NOT: RedirectSubscriptionWhere
  OR: [RedirectSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  targetType: RedirectTargetType @deprecated(reason: "Please use the explicit _EQ version")
  targetType_EQ: RedirectTargetType
  targetType_IN: [RedirectTargetType!]
  targetUrl: String @deprecated(reason: "Please use the explicit _EQ version")
  targetUrl_CONTAINS: String
  targetUrl_ENDS_WITH: String
  targetUrl_EQ: String
  targetUrl_IN: [String]
  targetUrl_MATCHES: String
  targetUrl_STARTS_WITH: String
}

input RedirectTargetPageAggregateInput {
  AND: [RedirectTargetPageAggregateInput!]
  NOT: RedirectTargetPageAggregateInput
  OR: [RedirectTargetPageAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RedirectTargetPageNodeAggregationWhereInput
}

input RedirectTargetPageConnectFieldInput {
  connect: PageConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PageConnectWhere
}

type RedirectTargetPageConnection {
  edges: [RedirectTargetPageRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input RedirectTargetPageConnectionSort {
  node: PageSort
}

input RedirectTargetPageConnectionWhere {
  AND: [RedirectTargetPageConnectionWhere!]
  NOT: RedirectTargetPageConnectionWhere
  OR: [RedirectTargetPageConnectionWhere!]
  node: PageWhere
}

input RedirectTargetPageCreateFieldInput {
  node: PageCreateInput!
}

input RedirectTargetPageDeleteFieldInput {
  delete: PageDeleteInput
  where: RedirectTargetPageConnectionWhere
}

input RedirectTargetPageDisconnectFieldInput {
  disconnect: PageDisconnectInput
  where: RedirectTargetPageConnectionWhere
}

input RedirectTargetPageFieldInput {
  connect: RedirectTargetPageConnectFieldInput
  create: RedirectTargetPageCreateFieldInput
}

input RedirectTargetPageNodeAggregationWhereInput {
  AND: [RedirectTargetPageNodeAggregationWhereInput!]
  NOT: RedirectTargetPageNodeAggregationWhereInput
  OR: [RedirectTargetPageNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  urlPattern_AVERAGE_LENGTH_EQUAL: Float
  urlPattern_AVERAGE_LENGTH_GT: Float
  urlPattern_AVERAGE_LENGTH_GTE: Float
  urlPattern_AVERAGE_LENGTH_LT: Float
  urlPattern_AVERAGE_LENGTH_LTE: Float
  urlPattern_LONGEST_LENGTH_EQUAL: Int
  urlPattern_LONGEST_LENGTH_GT: Int
  urlPattern_LONGEST_LENGTH_GTE: Int
  urlPattern_LONGEST_LENGTH_LT: Int
  urlPattern_LONGEST_LENGTH_LTE: Int
  urlPattern_SHORTEST_LENGTH_EQUAL: Int
  urlPattern_SHORTEST_LENGTH_GT: Int
  urlPattern_SHORTEST_LENGTH_GTE: Int
  urlPattern_SHORTEST_LENGTH_LT: Int
  urlPattern_SHORTEST_LENGTH_LTE: Int
}

type RedirectTargetPageRelationship {
  cursor: String!
  node: Page!
}

input RedirectTargetPageUpdateConnectionInput {
  node: PageUpdateInput
}

input RedirectTargetPageUpdateFieldInput {
  connect: RedirectTargetPageConnectFieldInput
  create: RedirectTargetPageCreateFieldInput
  delete: RedirectTargetPageDeleteFieldInput
  disconnect: RedirectTargetPageDisconnectFieldInput
  update: RedirectTargetPageUpdateConnectionInput
  where: RedirectTargetPageConnectionWhere
}

enum RedirectTargetType {
  """Redirect to a page in the same app"""
  Page

  """Redirect responsible for fetching data from a resource"""
  Url
}

input RedirectUpdateInput {
  authGuard: RedirectAuthGuardUpdateFieldInput
  source: RedirectSourceUpdateFieldInput
  targetPage: RedirectTargetPageUpdateFieldInput
  targetType: RedirectTargetType @deprecated(reason: "Please use the explicit _SET field")
  targetType_SET: RedirectTargetType
  targetUrl: String @deprecated(reason: "Please use the explicit _SET field")
  targetUrl_SET: String
}

type RedirectUpdatedEvent {
  event: EventType!
  previousState: RedirectEventPayload!
  timestamp: Float!
  updatedRedirect: RedirectEventPayload!
}

input RedirectWhere {
  AND: [RedirectWhere!]
  NOT: RedirectWhere
  OR: [RedirectWhere!]
  authGuard: AuthGuardWhere
  authGuardAggregate: RedirectAuthGuardAggregateInput
  authGuardConnection: RedirectAuthGuardConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  source: PageWhere
  sourceAggregate: RedirectSourceAggregateInput
  sourceConnection: RedirectSourceConnectionWhere
  targetPage: PageWhere
  targetPageAggregate: RedirectTargetPageAggregateInput
  targetPageConnection: RedirectTargetPageConnectionWhere
  targetType: RedirectTargetType @deprecated(reason: "Please use the explicit _EQ version")
  targetType_EQ: RedirectTargetType
  targetType_IN: [RedirectTargetType!]
  targetUrl: String @deprecated(reason: "Please use the explicit _EQ version")
  targetUrl_CONTAINS: String
  targetUrl_ENDS_WITH: String
  targetUrl_EQ: String
  targetUrl_IN: [String]
  targetUrl_MATCHES: String
  targetUrl_STARTS_WITH: String
}

type RedirectsConnection {
  edges: [RedirectEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
Allows picking a Component from the list of components.
It is passed to the rendered element as a function that takes props as input
and returns a React element: '(props) => ReactNode'
Prop values for this type have the shape of TypedProp in order to
be distinguished from other element types.
Comparison between different element types:
- RenderPropType: Component select box, results it '(props) => ReactNode' value
- ReactNodeType: Component select box, results it 'ReactNode' value
- ElementType: Current tree element select box, results it 'ReactNode' value
"""
type RenderPropType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): RenderPropTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): RenderPropTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type RenderPropTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input RenderPropTypeConnectInput {
  fieldRefs: [RenderPropTypeFieldRefsConnectFieldInput!]
  owner: RenderPropTypeOwnerConnectFieldInput
}

input RenderPropTypeConnectWhere {
  node: RenderPropTypeWhere!
}

input RenderPropTypeCreateInput {
  fieldRefs: RenderPropTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = RenderPropType
  name: String!
  owner: RenderPropTypeOwnerFieldInput
}

type RenderPropTypeCreatedEvent {
  createdRenderPropType: RenderPropTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input RenderPropTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type RenderPropTypeDeletedEvent {
  deletedRenderPropType: RenderPropTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input RenderPropTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type RenderPropTypeEdge {
  cursor: String!
  node: RenderPropType!
}

type RenderPropTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type RenderPropTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: RenderPropTypeFieldFieldRefsNodeAggregateSelection
}

type RenderPropTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input RenderPropTypeFieldRefsAggregateInput {
  AND: [RenderPropTypeFieldRefsAggregateInput!]
  NOT: RenderPropTypeFieldRefsAggregateInput
  OR: [RenderPropTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RenderPropTypeFieldRefsNodeAggregationWhereInput
}

input RenderPropTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input RenderPropTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input RenderPropTypeFieldRefsFieldInput {
  connect: [RenderPropTypeFieldRefsConnectFieldInput!]
  create: [RenderPropTypeFieldRefsCreateFieldInput!]
}

input RenderPropTypeFieldRefsNodeAggregationWhereInput {
  AND: [RenderPropTypeFieldRefsNodeAggregationWhereInput!]
  NOT: RenderPropTypeFieldRefsNodeAggregationWhereInput
  OR: [RenderPropTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input RenderPropTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input RenderPropTypeFieldRefsUpdateFieldInput {
  connect: [RenderPropTypeFieldRefsConnectFieldInput!]
  create: [RenderPropTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: RenderPropTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input RenderPropTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more RenderPropTypeSort objects to sort RenderPropTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [RenderPropTypeSort!]
}

input RenderPropTypeOwnerAggregateInput {
  AND: [RenderPropTypeOwnerAggregateInput!]
  NOT: RenderPropTypeOwnerAggregateInput
  OR: [RenderPropTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RenderPropTypeOwnerNodeAggregationWhereInput
}

input RenderPropTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input RenderPropTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input RenderPropTypeOwnerFieldInput {
  connect: RenderPropTypeOwnerConnectFieldInput
  create: RenderPropTypeOwnerCreateFieldInput
}

input RenderPropTypeOwnerNodeAggregationWhereInput {
  AND: [RenderPropTypeOwnerNodeAggregationWhereInput!]
  NOT: RenderPropTypeOwnerNodeAggregationWhereInput
  OR: [RenderPropTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input RenderPropTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input RenderPropTypeOwnerUpdateFieldInput {
  connect: RenderPropTypeOwnerConnectFieldInput
  create: RenderPropTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: RenderPropTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort RenderPropTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one RenderPropTypeSort object.
"""
input RenderPropTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input RenderPropTypeSubscriptionWhere {
  AND: [RenderPropTypeSubscriptionWhere!]
  NOT: RenderPropTypeSubscriptionWhere
  OR: [RenderPropTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input RenderPropTypeUpdateInput {
  fieldRefs: [RenderPropTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: RenderPropTypeOwnerUpdateFieldInput
}

type RenderPropTypeUpdatedEvent {
  event: EventType!
  previousState: RenderPropTypeEventPayload!
  timestamp: Float!
  updatedRenderPropType: RenderPropTypeEventPayload!
}

type RenderPropTypeUserOwnerAggregationSelection {
  count: Int!
  node: RenderPropTypeUserOwnerNodeAggregateSelection
}

type RenderPropTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input RenderPropTypeWhere {
  AND: [RenderPropTypeWhere!]
  NOT: RenderPropTypeWhere
  OR: [RenderPropTypeWhere!]
  fieldRefsAggregate: RenderPropTypeFieldRefsAggregateInput

  """
  Return RenderPropTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return RenderPropTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return RenderPropTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return RenderPropTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """
  Return RenderPropTypes where all of the related Fields match this filter
  """
  fieldRefs_ALL: FieldWhere

  """
  Return RenderPropTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """
  Return RenderPropTypes where one of the related Fields match this filter
  """
  fieldRefs_SINGLE: FieldWhere

  """
  Return RenderPropTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: RenderPropTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type RenderPropTypesConnection {
  edges: [RenderPropTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Resource implements WithOwner {
  config(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PropOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PropSort!], where: PropWhere): Prop!
  configAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PropWhere): ResourcePropConfigAggregationSelection
  configConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [ResourceConfigConnectionSort!], where: ResourceConfigConnectionWhere): ResourceConfigConnection!
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): ResourceUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  type: ResourceType!
}

type ResourceAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input ResourceConfigAggregateInput {
  AND: [ResourceConfigAggregateInput!]
  NOT: ResourceConfigAggregateInput
  OR: [ResourceConfigAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ResourceConfigNodeAggregationWhereInput
}

input ResourceConfigConnectFieldInput {
  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PropConnectWhere
}

type ResourceConfigConnection {
  edges: [ResourceConfigRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input ResourceConfigConnectionSort {
  node: PropSort
}

input ResourceConfigConnectionWhere {
  AND: [ResourceConfigConnectionWhere!]
  NOT: ResourceConfigConnectionWhere
  OR: [ResourceConfigConnectionWhere!]
  node: PropWhere
}

input ResourceConfigCreateFieldInput {
  node: PropCreateInput!
}

input ResourceConfigDeleteFieldInput {
  where: ResourceConfigConnectionWhere
}

input ResourceConfigDisconnectFieldInput {
  where: ResourceConfigConnectionWhere
}

input ResourceConfigFieldInput {
  connect: ResourceConfigConnectFieldInput
  create: ResourceConfigCreateFieldInput
}

input ResourceConfigNodeAggregationWhereInput {
  AND: [ResourceConfigNodeAggregationWhereInput!]
  NOT: ResourceConfigNodeAggregationWhereInput
  OR: [ResourceConfigNodeAggregationWhereInput!]
  data_AVERAGE_LENGTH_EQUAL: Float
  data_AVERAGE_LENGTH_GT: Float
  data_AVERAGE_LENGTH_GTE: Float
  data_AVERAGE_LENGTH_LT: Float
  data_AVERAGE_LENGTH_LTE: Float
  data_LONGEST_LENGTH_EQUAL: Int
  data_LONGEST_LENGTH_GT: Int
  data_LONGEST_LENGTH_GTE: Int
  data_LONGEST_LENGTH_LT: Int
  data_LONGEST_LENGTH_LTE: Int
  data_SHORTEST_LENGTH_EQUAL: Int
  data_SHORTEST_LENGTH_GT: Int
  data_SHORTEST_LENGTH_GTE: Int
  data_SHORTEST_LENGTH_LT: Int
  data_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type ResourceConfigRelationship {
  cursor: String!
  node: Prop!
}

input ResourceConfigUpdateConnectionInput {
  node: PropUpdateInput
}

input ResourceConfigUpdateFieldInput {
  connect: ResourceConfigConnectFieldInput
  create: ResourceConfigCreateFieldInput
  delete: ResourceConfigDeleteFieldInput
  disconnect: ResourceConfigDisconnectFieldInput
  update: ResourceConfigUpdateConnectionInput
  where: ResourceConfigConnectionWhere
}

input ResourceConnectInput {
  config: ResourceConfigConnectFieldInput
  owner: ResourceOwnerConnectFieldInput
}

input ResourceConnectWhere {
  node: ResourceWhere!
}

input ResourceCreateInput {
  config: ResourceConfigFieldInput
  id: ID!
  name: String!
  owner: ResourceOwnerFieldInput
  type: ResourceType!
}

type ResourceCreatedEvent {
  createdResource: ResourceEventPayload!
  event: EventType!
  timestamp: Float!
}

input ResourceDeleteInput {
  config: ResourceConfigDeleteFieldInput
  owner: WithOwnerOwnerDeleteFieldInput
}

type ResourceDeletedEvent {
  deletedResource: ResourceEventPayload!
  event: EventType!
  timestamp: Float!
}

input ResourceDisconnectInput {
  config: ResourceConfigDisconnectFieldInput
  owner: WithOwnerOwnerDisconnectFieldInput
}

type ResourceEdge {
  cursor: String!
  node: Resource!
}

type ResourceEventPayload {
  id: ID!
  name: String!
  type: ResourceType!
}

input ResourceOptions {
  limit: Int
  offset: Int

  """
  Specify one or more ResourceSort objects to sort Resources by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ResourceSort!]
}

input ResourceOwnerAggregateInput {
  AND: [ResourceOwnerAggregateInput!]
  NOT: ResourceOwnerAggregateInput
  OR: [ResourceOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: ResourceOwnerNodeAggregationWhereInput
}

input ResourceOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input ResourceOwnerCreateFieldInput {
  node: UserCreateInput!
}

input ResourceOwnerFieldInput {
  connect: ResourceOwnerConnectFieldInput
  create: ResourceOwnerCreateFieldInput
}

input ResourceOwnerNodeAggregationWhereInput {
  AND: [ResourceOwnerNodeAggregationWhereInput!]
  NOT: ResourceOwnerNodeAggregationWhereInput
  OR: [ResourceOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input ResourceOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input ResourceOwnerUpdateFieldInput {
  connect: ResourceOwnerConnectFieldInput
  create: ResourceOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: ResourceOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

type ResourcePropConfigAggregationSelection {
  count: Int!
  node: ResourcePropConfigNodeAggregateSelection
}

type ResourcePropConfigNodeAggregateSelection {
  data: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

"""
Fields to sort Resources by. The order in which sorts are applied is not guaranteed when specifying many fields in one ResourceSort object.
"""
input ResourceSort {
  id: SortDirection
  name: SortDirection
  type: SortDirection
}

input ResourceSubscriptionWhere {
  AND: [ResourceSubscriptionWhere!]
  NOT: ResourceSubscriptionWhere
  OR: [ResourceSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  type: ResourceType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ResourceType
  type_IN: [ResourceType!]
}

enum ResourceType {
  GraphQl
  Rest
}

input ResourceUpdateInput {
  config: ResourceConfigUpdateFieldInput
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: ResourceOwnerUpdateFieldInput
  type: ResourceType @deprecated(reason: "Please use the explicit _SET field")
  type_SET: ResourceType
}

type ResourceUpdatedEvent {
  event: EventType!
  previousState: ResourceEventPayload!
  timestamp: Float!
  updatedResource: ResourceEventPayload!
}

type ResourceUserOwnerAggregationSelection {
  count: Int!
  node: ResourceUserOwnerNodeAggregateSelection
}

type ResourceUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input ResourceWhere {
  AND: [ResourceWhere!]
  NOT: ResourceWhere
  OR: [ResourceWhere!]
  config: PropWhere
  configAggregate: ResourceConfigAggregateInput
  configConnection: ResourceConfigConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: ResourceOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  type: ResourceType @deprecated(reason: "Please use the explicit _EQ version")
  type_EQ: ResourceType
  type_IN: [ResourceType!]
}

type ResourcesConnection {
  edges: [ResourceEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""Allows picking a app from the list of apps"""
type RichTextType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): RichTextTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): RichTextTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type RichTextTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input RichTextTypeConnectInput {
  fieldRefs: [RichTextTypeFieldRefsConnectFieldInput!]
  owner: RichTextTypeOwnerConnectFieldInput
}

input RichTextTypeConnectWhere {
  node: RichTextTypeWhere!
}

input RichTextTypeCreateInput {
  fieldRefs: RichTextTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = RichTextType
  name: String!
  owner: RichTextTypeOwnerFieldInput
}

type RichTextTypeCreatedEvent {
  createdRichTextType: RichTextTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input RichTextTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type RichTextTypeDeletedEvent {
  deletedRichTextType: RichTextTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input RichTextTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type RichTextTypeEdge {
  cursor: String!
  node: RichTextType!
}

type RichTextTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type RichTextTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: RichTextTypeFieldFieldRefsNodeAggregateSelection
}

type RichTextTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input RichTextTypeFieldRefsAggregateInput {
  AND: [RichTextTypeFieldRefsAggregateInput!]
  NOT: RichTextTypeFieldRefsAggregateInput
  OR: [RichTextTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RichTextTypeFieldRefsNodeAggregationWhereInput
}

input RichTextTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input RichTextTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input RichTextTypeFieldRefsFieldInput {
  connect: [RichTextTypeFieldRefsConnectFieldInput!]
  create: [RichTextTypeFieldRefsCreateFieldInput!]
}

input RichTextTypeFieldRefsNodeAggregationWhereInput {
  AND: [RichTextTypeFieldRefsNodeAggregationWhereInput!]
  NOT: RichTextTypeFieldRefsNodeAggregationWhereInput
  OR: [RichTextTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input RichTextTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input RichTextTypeFieldRefsUpdateFieldInput {
  connect: [RichTextTypeFieldRefsConnectFieldInput!]
  create: [RichTextTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: RichTextTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input RichTextTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more RichTextTypeSort objects to sort RichTextTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [RichTextTypeSort!]
}

input RichTextTypeOwnerAggregateInput {
  AND: [RichTextTypeOwnerAggregateInput!]
  NOT: RichTextTypeOwnerAggregateInput
  OR: [RichTextTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: RichTextTypeOwnerNodeAggregationWhereInput
}

input RichTextTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input RichTextTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input RichTextTypeOwnerFieldInput {
  connect: RichTextTypeOwnerConnectFieldInput
  create: RichTextTypeOwnerCreateFieldInput
}

input RichTextTypeOwnerNodeAggregationWhereInput {
  AND: [RichTextTypeOwnerNodeAggregationWhereInput!]
  NOT: RichTextTypeOwnerNodeAggregationWhereInput
  OR: [RichTextTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input RichTextTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input RichTextTypeOwnerUpdateFieldInput {
  connect: RichTextTypeOwnerConnectFieldInput
  create: RichTextTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: RichTextTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort RichTextTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one RichTextTypeSort object.
"""
input RichTextTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input RichTextTypeSubscriptionWhere {
  AND: [RichTextTypeSubscriptionWhere!]
  NOT: RichTextTypeSubscriptionWhere
  OR: [RichTextTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input RichTextTypeUpdateInput {
  fieldRefs: [RichTextTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: RichTextTypeOwnerUpdateFieldInput
}

type RichTextTypeUpdatedEvent {
  event: EventType!
  previousState: RichTextTypeEventPayload!
  timestamp: Float!
  updatedRichTextType: RichTextTypeEventPayload!
}

type RichTextTypeUserOwnerAggregationSelection {
  count: Int!
  node: RichTextTypeUserOwnerNodeAggregateSelection
}

type RichTextTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input RichTextTypeWhere {
  AND: [RichTextTypeWhere!]
  NOT: RichTextTypeWhere
  OR: [RichTextTypeWhere!]
  fieldRefsAggregate: RichTextTypeFieldRefsAggregateInput

  """
  Return RichTextTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return RichTextTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return RichTextTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return RichTextTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return RichTextTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """
  Return RichTextTypes where none of the related Fields match this filter
  """
  fieldRefs_NONE: FieldWhere

  """Return RichTextTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """
  Return RichTextTypes where some of the related Fields match this filter
  """
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: RichTextTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type RichTextTypesConnection {
  edges: [RichTextTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum Role {
  Admin
  User
}

"""An enum for sorting in either ascending or descending order."""
enum SortDirection {
  """Sort by field values in ascending order."""
  ASC

  """Sort by field values in descending order."""
  DESC
}

type Store {
  actions(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyActionWhere): [AnyAction!]!
  actionsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, where: StoreActionsConnectionWhere): StoreActionsConnection!
  api(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: InterfaceTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [InterfaceTypeSort!], where: InterfaceTypeWhere): InterfaceType!
  apiAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: InterfaceTypeWhere): StoreInterfaceTypeApiAggregationSelection
  apiConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [StoreApiConnectionSort!], where: StoreApiConnectionWhere): StoreApiConnection!
  id: ID!
  name: String!
}

input StoreActionsApiActionConnectFieldInput {
  connect: [ApiActionConnectInput!]
  where: ApiActionConnectWhere
}

input StoreActionsApiActionConnectionWhere {
  AND: [StoreActionsApiActionConnectionWhere!]
  NOT: StoreActionsApiActionConnectionWhere
  OR: [StoreActionsApiActionConnectionWhere!]
  node: ApiActionWhere
}

input StoreActionsApiActionCreateFieldInput {
  node: ApiActionCreateInput!
}

input StoreActionsApiActionDeleteFieldInput {
  delete: ApiActionDeleteInput
  where: StoreActionsApiActionConnectionWhere
}

input StoreActionsApiActionDisconnectFieldInput {
  disconnect: ApiActionDisconnectInput
  where: StoreActionsApiActionConnectionWhere
}

input StoreActionsApiActionFieldInput {
  connect: [StoreActionsApiActionConnectFieldInput!]
  create: [StoreActionsApiActionCreateFieldInput!]
}

input StoreActionsApiActionUpdateConnectionInput {
  node: ApiActionUpdateInput
}

input StoreActionsApiActionUpdateFieldInput {
  connect: [StoreActionsApiActionConnectFieldInput!]
  create: [StoreActionsApiActionCreateFieldInput!]
  delete: [StoreActionsApiActionDeleteFieldInput!]
  disconnect: [StoreActionsApiActionDisconnectFieldInput!]
  update: StoreActionsApiActionUpdateConnectionInput
  where: StoreActionsApiActionConnectionWhere
}

input StoreActionsCodeActionConnectFieldInput {
  connect: [CodeActionConnectInput!]
  where: CodeActionConnectWhere
}

input StoreActionsCodeActionConnectionWhere {
  AND: [StoreActionsCodeActionConnectionWhere!]
  NOT: StoreActionsCodeActionConnectionWhere
  OR: [StoreActionsCodeActionConnectionWhere!]
  node: CodeActionWhere
}

input StoreActionsCodeActionCreateFieldInput {
  node: CodeActionCreateInput!
}

input StoreActionsCodeActionDeleteFieldInput {
  delete: CodeActionDeleteInput
  where: StoreActionsCodeActionConnectionWhere
}

input StoreActionsCodeActionDisconnectFieldInput {
  disconnect: CodeActionDisconnectInput
  where: StoreActionsCodeActionConnectionWhere
}

input StoreActionsCodeActionFieldInput {
  connect: [StoreActionsCodeActionConnectFieldInput!]
  create: [StoreActionsCodeActionCreateFieldInput!]
}

input StoreActionsCodeActionUpdateConnectionInput {
  node: CodeActionUpdateInput
}

input StoreActionsCodeActionUpdateFieldInput {
  connect: [StoreActionsCodeActionConnectFieldInput!]
  create: [StoreActionsCodeActionCreateFieldInput!]
  delete: [StoreActionsCodeActionDeleteFieldInput!]
  disconnect: [StoreActionsCodeActionDisconnectFieldInput!]
  update: StoreActionsCodeActionUpdateConnectionInput
  where: StoreActionsCodeActionConnectionWhere
}

input StoreActionsConnectInput {
  ApiAction: [StoreActionsApiActionConnectFieldInput!]
  CodeAction: [StoreActionsCodeActionConnectFieldInput!]
}

type StoreActionsConnection {
  edges: [StoreActionsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input StoreActionsConnectionWhere {
  ApiAction: StoreActionsApiActionConnectionWhere
  CodeAction: StoreActionsCodeActionConnectionWhere
}

input StoreActionsCreateInput {
  ApiAction: StoreActionsApiActionFieldInput
  CodeAction: StoreActionsCodeActionFieldInput
}

input StoreActionsDeleteInput {
  ApiAction: [StoreActionsApiActionDeleteFieldInput!]
  CodeAction: [StoreActionsCodeActionDeleteFieldInput!]
}

input StoreActionsDisconnectInput {
  ApiAction: [StoreActionsApiActionDisconnectFieldInput!]
  CodeAction: [StoreActionsCodeActionDisconnectFieldInput!]
}

type StoreActionsRelationship {
  cursor: String!
  node: AnyAction!
}

input StoreActionsUpdateInput {
  ApiAction: [StoreActionsApiActionUpdateFieldInput!]
  CodeAction: [StoreActionsCodeActionUpdateFieldInput!]
}

type StoreAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input StoreApiAggregateInput {
  AND: [StoreApiAggregateInput!]
  NOT: StoreApiAggregateInput
  OR: [StoreApiAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: StoreApiNodeAggregationWhereInput
}

input StoreApiConnectFieldInput {
  connect: InterfaceTypeConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: InterfaceTypeConnectWhere
}

type StoreApiConnection {
  edges: [StoreApiRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input StoreApiConnectionSort {
  node: InterfaceTypeSort
}

input StoreApiConnectionWhere {
  AND: [StoreApiConnectionWhere!]
  NOT: StoreApiConnectionWhere
  OR: [StoreApiConnectionWhere!]
  node: InterfaceTypeWhere
}

input StoreApiCreateFieldInput {
  node: InterfaceTypeCreateInput!
}

input StoreApiDeleteFieldInput {
  delete: InterfaceTypeDeleteInput
  where: StoreApiConnectionWhere
}

input StoreApiDisconnectFieldInput {
  disconnect: InterfaceTypeDisconnectInput
  where: StoreApiConnectionWhere
}

input StoreApiFieldInput {
  connect: StoreApiConnectFieldInput
  create: StoreApiCreateFieldInput
}

input StoreApiNodeAggregationWhereInput {
  AND: [StoreApiNodeAggregationWhereInput!]
  NOT: StoreApiNodeAggregationWhereInput
  OR: [StoreApiNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type StoreApiRelationship {
  cursor: String!
  node: InterfaceType!
}

input StoreApiUpdateConnectionInput {
  node: InterfaceTypeUpdateInput
}

input StoreApiUpdateFieldInput {
  connect: StoreApiConnectFieldInput
  create: StoreApiCreateFieldInput
  delete: StoreApiDeleteFieldInput
  disconnect: StoreApiDisconnectFieldInput
  update: StoreApiUpdateConnectionInput
  where: StoreApiConnectionWhere
}

input StoreConnectInput {
  actions: StoreActionsConnectInput
  api: StoreApiConnectFieldInput
}

input StoreConnectWhere {
  node: StoreWhere!
}

input StoreCreateInput {
  actions: StoreActionsCreateInput
  api: StoreApiFieldInput
  id: ID!
  name: String!
}

type StoreCreatedEvent {
  createdStore: StoreEventPayload!
  event: EventType!
  timestamp: Float!
}

input StoreDeleteInput {
  actions: StoreActionsDeleteInput
  api: StoreApiDeleteFieldInput
}

type StoreDeletedEvent {
  deletedStore: StoreEventPayload!
  event: EventType!
  timestamp: Float!
}

input StoreDisconnectInput {
  actions: StoreActionsDisconnectInput
  api: StoreApiDisconnectFieldInput
}

type StoreEdge {
  cursor: String!
  node: Store!
}

type StoreEventPayload {
  id: ID!
  name: String!
}

type StoreInterfaceTypeApiAggregationSelection {
  count: Int!
  node: StoreInterfaceTypeApiNodeAggregateSelection
}

type StoreInterfaceTypeApiNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input StoreOptions {
  limit: Int
  offset: Int

  """
  Specify one or more StoreSort objects to sort Stores by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [StoreSort!]
}

"""
Fields to sort Stores by. The order in which sorts are applied is not guaranteed when specifying many fields in one StoreSort object.
"""
input StoreSort {
  id: SortDirection
  name: SortDirection
}

input StoreSubscriptionWhere {
  AND: [StoreSubscriptionWhere!]
  NOT: StoreSubscriptionWhere
  OR: [StoreSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input StoreUpdateInput {
  actions: StoreActionsUpdateInput
  api: StoreApiUpdateFieldInput
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
}

type StoreUpdatedEvent {
  event: EventType!
  previousState: StoreEventPayload!
  timestamp: Float!
  updatedStore: StoreEventPayload!
}

input StoreWhere {
  AND: [StoreWhere!]
  NOT: StoreWhere
  OR: [StoreWhere!]

  """
  Return Stores where all of the related StoreActionsConnections match this filter
  """
  actionsConnection_ALL: StoreActionsConnectionWhere

  """
  Return Stores where none of the related StoreActionsConnections match this filter
  """
  actionsConnection_NONE: StoreActionsConnectionWhere

  """
  Return Stores where one of the related StoreActionsConnections match this filter
  """
  actionsConnection_SINGLE: StoreActionsConnectionWhere

  """
  Return Stores where some of the related StoreActionsConnections match this filter
  """
  actionsConnection_SOME: StoreActionsConnectionWhere

  """Return Stores where all of the related AnyActions match this filter"""
  actions_ALL: AnyActionWhere

  """Return Stores where none of the related AnyActions match this filter"""
  actions_NONE: AnyActionWhere

  """Return Stores where one of the related AnyActions match this filter"""
  actions_SINGLE: AnyActionWhere

  """Return Stores where some of the related AnyActions match this filter"""
  actions_SOME: AnyActionWhere
  api: InterfaceTypeWhere
  apiAggregate: StoreApiAggregateInput
  apiConnection: StoreApiConnectionWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

type StoresConnection {
  edges: [StoreEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StringAggregateSelection {
  longest: String
  shortest: String
}

type Subscription {
  actionTypeCreated(where: ActionTypeSubscriptionWhere): ActionTypeCreatedEvent!
  actionTypeDeleted(where: ActionTypeSubscriptionWhere): ActionTypeDeletedEvent!
  actionTypeUpdated(where: ActionTypeSubscriptionWhere): ActionTypeUpdatedEvent!
  apiActionCreated(where: ApiActionSubscriptionWhere): ApiActionCreatedEvent!
  apiActionDeleted(where: ApiActionSubscriptionWhere): ApiActionDeletedEvent!
  apiActionUpdated(where: ApiActionSubscriptionWhere): ApiActionUpdatedEvent!
  appCreated(where: AppSubscriptionWhere): AppCreatedEvent!
  appDeleted(where: AppSubscriptionWhere): AppDeletedEvent!
  appTypeCreated(where: AppTypeSubscriptionWhere): AppTypeCreatedEvent!
  appTypeDeleted(where: AppTypeSubscriptionWhere): AppTypeDeletedEvent!
  appTypeUpdated(where: AppTypeSubscriptionWhere): AppTypeUpdatedEvent!
  appUpdated(where: AppSubscriptionWhere): AppUpdatedEvent!
  arrayTypeCreated(where: ArrayTypeSubscriptionWhere): ArrayTypeCreatedEvent!
  arrayTypeDeleted(where: ArrayTypeSubscriptionWhere): ArrayTypeDeletedEvent!
  arrayTypeUpdated(where: ArrayTypeSubscriptionWhere): ArrayTypeUpdatedEvent!
  atomCreated(where: AtomSubscriptionWhere): AtomCreatedEvent!
  atomDeleted(where: AtomSubscriptionWhere): AtomDeletedEvent!
  atomUpdated(where: AtomSubscriptionWhere): AtomUpdatedEvent!
  authGuardCreated(where: AuthGuardSubscriptionWhere): AuthGuardCreatedEvent!
  authGuardDeleted(where: AuthGuardSubscriptionWhere): AuthGuardDeletedEvent!
  authGuardUpdated(where: AuthGuardSubscriptionWhere): AuthGuardUpdatedEvent!
  codeActionCreated(where: CodeActionSubscriptionWhere): CodeActionCreatedEvent!
  codeActionDeleted(where: CodeActionSubscriptionWhere): CodeActionDeletedEvent!
  codeActionUpdated(where: CodeActionSubscriptionWhere): CodeActionUpdatedEvent!
  codeMirrorTypeCreated(where: CodeMirrorTypeSubscriptionWhere): CodeMirrorTypeCreatedEvent!
  codeMirrorTypeDeleted(where: CodeMirrorTypeSubscriptionWhere): CodeMirrorTypeDeletedEvent!
  codeMirrorTypeUpdated(where: CodeMirrorTypeSubscriptionWhere): CodeMirrorTypeUpdatedEvent!
  componentCreated(where: ComponentSubscriptionWhere): ComponentCreatedEvent!
  componentDeleted(where: ComponentSubscriptionWhere): ComponentDeletedEvent!
  componentUpdated(where: ComponentSubscriptionWhere): ComponentUpdatedEvent!
  domainCreated(where: DomainSubscriptionWhere): DomainCreatedEvent!
  domainDeleted(where: DomainSubscriptionWhere): DomainDeletedEvent!
  domainUpdated(where: DomainSubscriptionWhere): DomainUpdatedEvent!
  elementCreated(where: ElementSubscriptionWhere): ElementCreatedEvent!
  elementDeleted(where: ElementSubscriptionWhere): ElementDeletedEvent!
  elementTypeCreated(where: ElementTypeSubscriptionWhere): ElementTypeCreatedEvent!
  elementTypeDeleted(where: ElementTypeSubscriptionWhere): ElementTypeDeletedEvent!
  elementTypeUpdated(where: ElementTypeSubscriptionWhere): ElementTypeUpdatedEvent!
  elementUpdated(where: ElementSubscriptionWhere): ElementUpdatedEvent!
  enumTypeCreated(where: EnumTypeSubscriptionWhere): EnumTypeCreatedEvent!
  enumTypeDeleted(where: EnumTypeSubscriptionWhere): EnumTypeDeletedEvent!
  enumTypeUpdated(where: EnumTypeSubscriptionWhere): EnumTypeUpdatedEvent!
  enumTypeValueCreated(where: EnumTypeValueSubscriptionWhere): EnumTypeValueCreatedEvent!
  enumTypeValueDeleted(where: EnumTypeValueSubscriptionWhere): EnumTypeValueDeletedEvent!
  enumTypeValueUpdated(where: EnumTypeValueSubscriptionWhere): EnumTypeValueUpdatedEvent!
  fieldCreated(where: FieldSubscriptionWhere): FieldCreatedEvent!
  fieldDeleted(where: FieldSubscriptionWhere): FieldDeletedEvent!
  fieldUpdated(where: FieldSubscriptionWhere): FieldUpdatedEvent!
  hookCreated(where: HookSubscriptionWhere): HookCreatedEvent!
  hookDeleted(where: HookSubscriptionWhere): HookDeletedEvent!
  hookUpdated(where: HookSubscriptionWhere): HookUpdatedEvent!
  interfaceTypeCreated(where: InterfaceTypeSubscriptionWhere): InterfaceTypeCreatedEvent!
  interfaceTypeDeleted(where: InterfaceTypeSubscriptionWhere): InterfaceTypeDeletedEvent!
  interfaceTypeUpdated(where: InterfaceTypeSubscriptionWhere): InterfaceTypeUpdatedEvent!
  lambdaTypeCreated(where: LambdaTypeSubscriptionWhere): LambdaTypeCreatedEvent!
  lambdaTypeDeleted(where: LambdaTypeSubscriptionWhere): LambdaTypeDeletedEvent!
  lambdaTypeUpdated(where: LambdaTypeSubscriptionWhere): LambdaTypeUpdatedEvent!
  pageCreated(where: PageSubscriptionWhere): PageCreatedEvent!
  pageDeleted(where: PageSubscriptionWhere): PageDeletedEvent!
  pageTypeCreated(where: PageTypeSubscriptionWhere): PageTypeCreatedEvent!
  pageTypeDeleted(where: PageTypeSubscriptionWhere): PageTypeDeletedEvent!
  pageTypeUpdated(where: PageTypeSubscriptionWhere): PageTypeUpdatedEvent!
  pageUpdated(where: PageSubscriptionWhere): PageUpdatedEvent!
  preferenceCreated(where: PreferenceSubscriptionWhere): PreferenceCreatedEvent!
  preferenceDeleted(where: PreferenceSubscriptionWhere): PreferenceDeletedEvent!
  preferenceUpdated(where: PreferenceSubscriptionWhere): PreferenceUpdatedEvent!
  primitiveTypeCreated(where: PrimitiveTypeSubscriptionWhere): PrimitiveTypeCreatedEvent!
  primitiveTypeDeleted(where: PrimitiveTypeSubscriptionWhere): PrimitiveTypeDeletedEvent!
  primitiveTypeUpdated(where: PrimitiveTypeSubscriptionWhere): PrimitiveTypeUpdatedEvent!
  productionDomainConfigCreated(where: ProductionDomainConfigSubscriptionWhere): ProductionDomainConfigCreatedEvent!
  productionDomainConfigDeleted(where: ProductionDomainConfigSubscriptionWhere): ProductionDomainConfigDeletedEvent!
  productionDomainConfigUpdated(where: ProductionDomainConfigSubscriptionWhere): ProductionDomainConfigUpdatedEvent!
  propCreated(where: PropSubscriptionWhere): PropCreatedEvent!
  propDeleted(where: PropSubscriptionWhere): PropDeletedEvent!
  propUpdated(where: PropSubscriptionWhere): PropUpdatedEvent!
  reactNodeTypeCreated(where: ReactNodeTypeSubscriptionWhere): ReactNodeTypeCreatedEvent!
  reactNodeTypeDeleted(where: ReactNodeTypeSubscriptionWhere): ReactNodeTypeDeletedEvent!
  reactNodeTypeUpdated(where: ReactNodeTypeSubscriptionWhere): ReactNodeTypeUpdatedEvent!
  redirectCreated(where: RedirectSubscriptionWhere): RedirectCreatedEvent!
  redirectDeleted(where: RedirectSubscriptionWhere): RedirectDeletedEvent!
  redirectUpdated(where: RedirectSubscriptionWhere): RedirectUpdatedEvent!
  renderPropTypeCreated(where: RenderPropTypeSubscriptionWhere): RenderPropTypeCreatedEvent!
  renderPropTypeDeleted(where: RenderPropTypeSubscriptionWhere): RenderPropTypeDeletedEvent!
  renderPropTypeUpdated(where: RenderPropTypeSubscriptionWhere): RenderPropTypeUpdatedEvent!
  resourceCreated(where: ResourceSubscriptionWhere): ResourceCreatedEvent!
  resourceDeleted(where: ResourceSubscriptionWhere): ResourceDeletedEvent!
  resourceUpdated(where: ResourceSubscriptionWhere): ResourceUpdatedEvent!
  richTextTypeCreated(where: RichTextTypeSubscriptionWhere): RichTextTypeCreatedEvent!
  richTextTypeDeleted(where: RichTextTypeSubscriptionWhere): RichTextTypeDeletedEvent!
  richTextTypeUpdated(where: RichTextTypeSubscriptionWhere): RichTextTypeUpdatedEvent!
  storeCreated(where: StoreSubscriptionWhere): StoreCreatedEvent!
  storeDeleted(where: StoreSubscriptionWhere): StoreDeletedEvent!
  storeUpdated(where: StoreSubscriptionWhere): StoreUpdatedEvent!
  tagCreated(where: TagSubscriptionWhere): TagCreatedEvent!
  tagDeleted(where: TagSubscriptionWhere): TagDeletedEvent!
  tagUpdated(where: TagSubscriptionWhere): TagUpdatedEvent!
  typeReferenceCreated(where: TypeReferenceSubscriptionWhere): TypeReferenceCreatedEvent!
  typeReferenceDeleted(where: TypeReferenceSubscriptionWhere): TypeReferenceDeletedEvent!
  typeReferenceUpdated(where: TypeReferenceSubscriptionWhere): TypeReferenceUpdatedEvent!
  unionTypeCreated(where: UnionTypeSubscriptionWhere): UnionTypeCreatedEvent!
  unionTypeDeleted(where: UnionTypeSubscriptionWhere): UnionTypeDeletedEvent!
  unionTypeUpdated(where: UnionTypeSubscriptionWhere): UnionTypeUpdatedEvent!
  unknownTypeCreated(where: UnknownTypeSubscriptionWhere): UnknownTypeCreatedEvent!
  unknownTypeDeleted(where: UnknownTypeSubscriptionWhere): UnknownTypeDeletedEvent!
  unknownTypeUpdated(where: UnknownTypeSubscriptionWhere): UnknownTypeUpdatedEvent!
  userCreated(where: UserSubscriptionWhere): UserCreatedEvent!
  userDeleted(where: UserSubscriptionWhere): UserDeletedEvent!
  userUpdated(where: UserSubscriptionWhere): UserUpdatedEvent!
}

type Tag implements WithOwner {
  atoms(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  atomsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AtomWhere): TagAtomAtomsAggregationSelection
  atomsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [TagAtomsConnectionSort!], where: TagAtomsConnectionWhere): TagAtomsConnection!
  children(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: TagOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TagSort!], where: TagWhere): [Tag!]!
  childrenAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: TagWhere): TagTagChildrenAggregationSelection
  childrenConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [TagChildrenConnectionSort!], where: TagChildrenConnectionWhere): TagChildrenConnection!
  descendants: [Tag!]!
  id: ID!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): TagUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
  parent(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: TagOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TagSort!], where: TagWhere): Tag
  parentAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: TagWhere): TagTagParentAggregationSelection
  parentConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [TagParentConnectionSort!], where: TagParentConnectionWhere): TagParentConnection!
}

type TagAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

type TagAtomAtomsAggregationSelection {
  count: Int!
  node: TagAtomAtomsNodeAggregateSelection
}

type TagAtomAtomsNodeAggregateSelection {
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input TagAtomsAggregateInput {
  AND: [TagAtomsAggregateInput!]
  NOT: TagAtomsAggregateInput
  OR: [TagAtomsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: TagAtomsNodeAggregationWhereInput
}

input TagAtomsConnectFieldInput {
  connect: [AtomConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AtomConnectWhere
}

type TagAtomsConnection {
  edges: [TagAtomsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input TagAtomsConnectionSort {
  node: AtomSort
}

input TagAtomsConnectionWhere {
  AND: [TagAtomsConnectionWhere!]
  NOT: TagAtomsConnectionWhere
  OR: [TagAtomsConnectionWhere!]
  node: AtomWhere
}

input TagAtomsCreateFieldInput {
  node: AtomCreateInput!
}

input TagAtomsDeleteFieldInput {
  delete: AtomDeleteInput
  where: TagAtomsConnectionWhere
}

input TagAtomsDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: TagAtomsConnectionWhere
}

input TagAtomsFieldInput {
  connect: [TagAtomsConnectFieldInput!]
  create: [TagAtomsCreateFieldInput!]
}

input TagAtomsNodeAggregationWhereInput {
  AND: [TagAtomsNodeAggregationWhereInput!]
  NOT: TagAtomsNodeAggregationWhereInput
  OR: [TagAtomsNodeAggregationWhereInput!]
  externalCssSource_AVERAGE_LENGTH_EQUAL: Float
  externalCssSource_AVERAGE_LENGTH_GT: Float
  externalCssSource_AVERAGE_LENGTH_GTE: Float
  externalCssSource_AVERAGE_LENGTH_LT: Float
  externalCssSource_AVERAGE_LENGTH_LTE: Float
  externalCssSource_LONGEST_LENGTH_EQUAL: Int
  externalCssSource_LONGEST_LENGTH_GT: Int
  externalCssSource_LONGEST_LENGTH_GTE: Int
  externalCssSource_LONGEST_LENGTH_LT: Int
  externalCssSource_LONGEST_LENGTH_LTE: Int
  externalCssSource_SHORTEST_LENGTH_EQUAL: Int
  externalCssSource_SHORTEST_LENGTH_GT: Int
  externalCssSource_SHORTEST_LENGTH_GTE: Int
  externalCssSource_SHORTEST_LENGTH_LT: Int
  externalCssSource_SHORTEST_LENGTH_LTE: Int
  externalJsSource_AVERAGE_LENGTH_EQUAL: Float
  externalJsSource_AVERAGE_LENGTH_GT: Float
  externalJsSource_AVERAGE_LENGTH_GTE: Float
  externalJsSource_AVERAGE_LENGTH_LT: Float
  externalJsSource_AVERAGE_LENGTH_LTE: Float
  externalJsSource_LONGEST_LENGTH_EQUAL: Int
  externalJsSource_LONGEST_LENGTH_GT: Int
  externalJsSource_LONGEST_LENGTH_GTE: Int
  externalJsSource_LONGEST_LENGTH_LT: Int
  externalJsSource_LONGEST_LENGTH_LTE: Int
  externalJsSource_SHORTEST_LENGTH_EQUAL: Int
  externalJsSource_SHORTEST_LENGTH_GT: Int
  externalJsSource_SHORTEST_LENGTH_GTE: Int
  externalJsSource_SHORTEST_LENGTH_LT: Int
  externalJsSource_SHORTEST_LENGTH_LTE: Int
  externalSourceType_AVERAGE_LENGTH_EQUAL: Float
  externalSourceType_AVERAGE_LENGTH_GT: Float
  externalSourceType_AVERAGE_LENGTH_GTE: Float
  externalSourceType_AVERAGE_LENGTH_LT: Float
  externalSourceType_AVERAGE_LENGTH_LTE: Float
  externalSourceType_LONGEST_LENGTH_EQUAL: Int
  externalSourceType_LONGEST_LENGTH_GT: Int
  externalSourceType_LONGEST_LENGTH_GTE: Int
  externalSourceType_LONGEST_LENGTH_LT: Int
  externalSourceType_LONGEST_LENGTH_LTE: Int
  externalSourceType_SHORTEST_LENGTH_EQUAL: Int
  externalSourceType_SHORTEST_LENGTH_GT: Int
  externalSourceType_SHORTEST_LENGTH_GTE: Int
  externalSourceType_SHORTEST_LENGTH_LT: Int
  externalSourceType_SHORTEST_LENGTH_LTE: Int
  icon_AVERAGE_LENGTH_EQUAL: Float
  icon_AVERAGE_LENGTH_GT: Float
  icon_AVERAGE_LENGTH_GTE: Float
  icon_AVERAGE_LENGTH_LT: Float
  icon_AVERAGE_LENGTH_LTE: Float
  icon_LONGEST_LENGTH_EQUAL: Int
  icon_LONGEST_LENGTH_GT: Int
  icon_LONGEST_LENGTH_GTE: Int
  icon_LONGEST_LENGTH_LT: Int
  icon_LONGEST_LENGTH_LTE: Int
  icon_SHORTEST_LENGTH_EQUAL: Int
  icon_SHORTEST_LENGTH_GT: Int
  icon_SHORTEST_LENGTH_GTE: Int
  icon_SHORTEST_LENGTH_LT: Int
  icon_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type TagAtomsRelationship {
  cursor: String!
  node: Atom!
}

input TagAtomsUpdateConnectionInput {
  node: AtomUpdateInput
}

input TagAtomsUpdateFieldInput {
  connect: [TagAtomsConnectFieldInput!]
  create: [TagAtomsCreateFieldInput!]
  delete: [TagAtomsDeleteFieldInput!]
  disconnect: [TagAtomsDisconnectFieldInput!]
  update: TagAtomsUpdateConnectionInput
  where: TagAtomsConnectionWhere
}

input TagChildrenAggregateInput {
  AND: [TagChildrenAggregateInput!]
  NOT: TagChildrenAggregateInput
  OR: [TagChildrenAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: TagChildrenNodeAggregationWhereInput
}

input TagChildrenConnectFieldInput {
  connect: [TagConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: TagConnectWhere
}

type TagChildrenConnection {
  edges: [TagChildrenRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input TagChildrenConnectionSort {
  node: TagSort
}

input TagChildrenConnectionWhere {
  AND: [TagChildrenConnectionWhere!]
  NOT: TagChildrenConnectionWhere
  OR: [TagChildrenConnectionWhere!]
  node: TagWhere
}

input TagChildrenCreateFieldInput {
  node: TagCreateInput!
}

input TagChildrenDeleteFieldInput {
  delete: TagDeleteInput
  where: TagChildrenConnectionWhere
}

input TagChildrenDisconnectFieldInput {
  disconnect: TagDisconnectInput
  where: TagChildrenConnectionWhere
}

input TagChildrenFieldInput {
  connect: [TagChildrenConnectFieldInput!]
  create: [TagChildrenCreateFieldInput!]
}

input TagChildrenNodeAggregationWhereInput {
  AND: [TagChildrenNodeAggregationWhereInput!]
  NOT: TagChildrenNodeAggregationWhereInput
  OR: [TagChildrenNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type TagChildrenRelationship {
  cursor: String!
  node: Tag!
}

input TagChildrenUpdateConnectionInput {
  node: TagUpdateInput
}

input TagChildrenUpdateFieldInput {
  connect: [TagChildrenConnectFieldInput!]
  create: [TagChildrenCreateFieldInput!]
  delete: [TagChildrenDeleteFieldInput!]
  disconnect: [TagChildrenDisconnectFieldInput!]
  update: TagChildrenUpdateConnectionInput
  where: TagChildrenConnectionWhere
}

input TagConnectInput {
  atoms: [TagAtomsConnectFieldInput!]
  children: [TagChildrenConnectFieldInput!]
  owner: TagOwnerConnectFieldInput
  parent: TagParentConnectFieldInput
}

input TagConnectWhere {
  node: TagWhere!
}

input TagCreateInput {
  atoms: TagAtomsFieldInput
  children: TagChildrenFieldInput
  id: ID!
  name: String!
  owner: TagOwnerFieldInput
  parent: TagParentFieldInput
}

type TagCreatedEvent {
  createdTag: TagEventPayload!
  event: EventType!
  timestamp: Float!
}

input TagDeleteInput {
  atoms: [TagAtomsDeleteFieldInput!]
  children: [TagChildrenDeleteFieldInput!]
  owner: WithOwnerOwnerDeleteFieldInput
  parent: TagParentDeleteFieldInput
}

type TagDeletedEvent {
  deletedTag: TagEventPayload!
  event: EventType!
  timestamp: Float!
}

input TagDisconnectInput {
  atoms: [TagAtomsDisconnectFieldInput!]
  children: [TagChildrenDisconnectFieldInput!]
  owner: WithOwnerOwnerDisconnectFieldInput
  parent: TagParentDisconnectFieldInput
}

type TagEdge {
  cursor: String!
  node: Tag!
}

type TagEventPayload {
  id: ID!
  name: String!
}

input TagOptions {
  limit: Int
  offset: Int

  """
  Specify one or more TagSort objects to sort Tags by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [TagSort!]
}

input TagOwnerAggregateInput {
  AND: [TagOwnerAggregateInput!]
  NOT: TagOwnerAggregateInput
  OR: [TagOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: TagOwnerNodeAggregationWhereInput
}

input TagOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input TagOwnerCreateFieldInput {
  node: UserCreateInput!
}

input TagOwnerFieldInput {
  connect: TagOwnerConnectFieldInput
  create: TagOwnerCreateFieldInput
}

input TagOwnerNodeAggregationWhereInput {
  AND: [TagOwnerNodeAggregationWhereInput!]
  NOT: TagOwnerNodeAggregationWhereInput
  OR: [TagOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input TagOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input TagOwnerUpdateFieldInput {
  connect: TagOwnerConnectFieldInput
  create: TagOwnerCreateFieldInput
  delete: WithOwnerOwnerDeleteFieldInput
  disconnect: WithOwnerOwnerDisconnectFieldInput
  update: TagOwnerUpdateConnectionInput
  where: WithOwnerOwnerConnectionWhere
}

input TagParentAggregateInput {
  AND: [TagParentAggregateInput!]
  NOT: TagParentAggregateInput
  OR: [TagParentAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: TagParentNodeAggregationWhereInput
}

input TagParentConnectFieldInput {
  connect: TagConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: TagConnectWhere
}

type TagParentConnection {
  edges: [TagParentRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input TagParentConnectionSort {
  node: TagSort
}

input TagParentConnectionWhere {
  AND: [TagParentConnectionWhere!]
  NOT: TagParentConnectionWhere
  OR: [TagParentConnectionWhere!]
  node: TagWhere
}

input TagParentCreateFieldInput {
  node: TagCreateInput!
}

input TagParentDeleteFieldInput {
  delete: TagDeleteInput
  where: TagParentConnectionWhere
}

input TagParentDisconnectFieldInput {
  disconnect: TagDisconnectInput
  where: TagParentConnectionWhere
}

input TagParentFieldInput {
  connect: TagParentConnectFieldInput
  create: TagParentCreateFieldInput
}

input TagParentNodeAggregationWhereInput {
  AND: [TagParentNodeAggregationWhereInput!]
  NOT: TagParentNodeAggregationWhereInput
  OR: [TagParentNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type TagParentRelationship {
  cursor: String!
  node: Tag!
}

input TagParentUpdateConnectionInput {
  node: TagUpdateInput
}

input TagParentUpdateFieldInput {
  connect: TagParentConnectFieldInput
  create: TagParentCreateFieldInput
  delete: TagParentDeleteFieldInput
  disconnect: TagParentDisconnectFieldInput
  update: TagParentUpdateConnectionInput
  where: TagParentConnectionWhere
}

"""
Fields to sort Tags by. The order in which sorts are applied is not guaranteed when specifying many fields in one TagSort object.
"""
input TagSort {
  id: SortDirection
  name: SortDirection
}

input TagSubscriptionWhere {
  AND: [TagSubscriptionWhere!]
  NOT: TagSubscriptionWhere
  OR: [TagSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

type TagTagChildrenAggregationSelection {
  count: Int!
  node: TagTagChildrenNodeAggregateSelection
}

type TagTagChildrenNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

type TagTagParentAggregationSelection {
  count: Int!
  node: TagTagParentNodeAggregateSelection
}

type TagTagParentNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input TagUpdateInput {
  atoms: [TagAtomsUpdateFieldInput!]
  children: [TagChildrenUpdateFieldInput!]
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: TagOwnerUpdateFieldInput
  parent: TagParentUpdateFieldInput
}

type TagUpdatedEvent {
  event: EventType!
  previousState: TagEventPayload!
  timestamp: Float!
  updatedTag: TagEventPayload!
}

type TagUserOwnerAggregationSelection {
  count: Int!
  node: TagUserOwnerNodeAggregateSelection
}

type TagUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input TagWhere {
  AND: [TagWhere!]
  NOT: TagWhere
  OR: [TagWhere!]
  atomsAggregate: TagAtomsAggregateInput

  """
  Return Tags where all of the related TagAtomsConnections match this filter
  """
  atomsConnection_ALL: TagAtomsConnectionWhere

  """
  Return Tags where none of the related TagAtomsConnections match this filter
  """
  atomsConnection_NONE: TagAtomsConnectionWhere

  """
  Return Tags where one of the related TagAtomsConnections match this filter
  """
  atomsConnection_SINGLE: TagAtomsConnectionWhere

  """
  Return Tags where some of the related TagAtomsConnections match this filter
  """
  atomsConnection_SOME: TagAtomsConnectionWhere

  """Return Tags where all of the related Atoms match this filter"""
  atoms_ALL: AtomWhere

  """Return Tags where none of the related Atoms match this filter"""
  atoms_NONE: AtomWhere

  """Return Tags where one of the related Atoms match this filter"""
  atoms_SINGLE: AtomWhere

  """Return Tags where some of the related Atoms match this filter"""
  atoms_SOME: AtomWhere
  childrenAggregate: TagChildrenAggregateInput

  """
  Return Tags where all of the related TagChildrenConnections match this filter
  """
  childrenConnection_ALL: TagChildrenConnectionWhere

  """
  Return Tags where none of the related TagChildrenConnections match this filter
  """
  childrenConnection_NONE: TagChildrenConnectionWhere

  """
  Return Tags where one of the related TagChildrenConnections match this filter
  """
  childrenConnection_SINGLE: TagChildrenConnectionWhere

  """
  Return Tags where some of the related TagChildrenConnections match this filter
  """
  childrenConnection_SOME: TagChildrenConnectionWhere

  """Return Tags where all of the related Tags match this filter"""
  children_ALL: TagWhere

  """Return Tags where none of the related Tags match this filter"""
  children_NONE: TagWhere

  """Return Tags where one of the related Tags match this filter"""
  children_SINGLE: TagWhere

  """Return Tags where some of the related Tags match this filter"""
  children_SOME: TagWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: TagOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  parent: TagWhere
  parentAggregate: TagParentAggregateInput
  parentConnection: TagParentConnectionWhere
}

type TagsConnection {
  edges: [TagEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum TypeKind {
  ActionType
  AppType
  ArrayType
  CodeMirrorType
  ElementType
  EnumType
  InterfaceType
  LambdaType
  PageType
  PrimitiveType
  ReactNodeType
  RenderPropType
  RichTextType
  UnionType
  UnknownType
}

type TypeReference {
  """The type of resource - Atom, InterfaceType, etc."""
  label: String!

  """The name of the resource referencing the type"""
  name: String!
}

type TypeReferenceAggregateSelection {
  count: Int!
  label: StringAggregateSelection!
  name: StringAggregateSelection!
}

input TypeReferenceCreateInput {
  label: String!
  name: String!
}

type TypeReferenceCreatedEvent {
  createdTypeReference: TypeReferenceEventPayload!
  event: EventType!
  timestamp: Float!
}

type TypeReferenceDeletedEvent {
  deletedTypeReference: TypeReferenceEventPayload!
  event: EventType!
  timestamp: Float!
}

type TypeReferenceEdge {
  cursor: String!
  node: TypeReference!
}

type TypeReferenceEventPayload {
  """The type of resource - Atom, InterfaceType, etc."""
  label: String!

  """The name of the resource referencing the type"""
  name: String!
}

input TypeReferenceOptions {
  limit: Int
  offset: Int

  """
  Specify one or more TypeReferenceSort objects to sort TypeReferences by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [TypeReferenceSort!]
}

"""
Fields to sort TypeReferences by. The order in which sorts are applied is not guaranteed when specifying many fields in one TypeReferenceSort object.
"""
input TypeReferenceSort {
  label: SortDirection
  name: SortDirection
}

input TypeReferenceSubscriptionWhere {
  AND: [TypeReferenceSubscriptionWhere!]
  NOT: TypeReferenceSubscriptionWhere
  OR: [TypeReferenceSubscriptionWhere!]
  label: String @deprecated(reason: "Please use the explicit _EQ version")
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQ: String
  label_IN: [String!]
  label_MATCHES: String
  label_STARTS_WITH: String
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input TypeReferenceUpdateInput {
  label: String @deprecated(reason: "Please use the explicit _SET field")
  label_SET: String
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
}

type TypeReferenceUpdatedEvent {
  event: EventType!
  previousState: TypeReferenceEventPayload!
  timestamp: Float!
  updatedTypeReference: TypeReferenceEventPayload!
}

input TypeReferenceWhere {
  AND: [TypeReferenceWhere!]
  NOT: TypeReferenceWhere
  OR: [TypeReferenceWhere!]
  label: String @deprecated(reason: "Please use the explicit _EQ version")
  label_CONTAINS: String
  label_ENDS_WITH: String
  label_EQ: String
  label_IN: [String!]
  label_MATCHES: String
  label_STARTS_WITH: String
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

type TypeReferencesConnection {
  edges: [TypeReferenceEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""Allows picking one of a set of types"""
type UnionType implements IBaseType & WithDescendants {
  descendantTypesIds: [ID!]!
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): UnionTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): UnionTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
  typesOfUnionType(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: QueryOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), where: AnyTypeWhere): [AnyType!]!
  typesOfUnionTypeConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, where: UnionTypeTypesOfUnionTypeConnectionWhere): UnionTypeTypesOfUnionTypeConnection!
}

type UnionTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input UnionTypeConnectInput {
  fieldRefs: [UnionTypeFieldRefsConnectFieldInput!]
  owner: UnionTypeOwnerConnectFieldInput
  typesOfUnionType: UnionTypeTypesOfUnionTypeConnectInput
}

input UnionTypeConnectWhere {
  node: UnionTypeWhere!
}

input UnionTypeCreateInput {
  fieldRefs: UnionTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = UnionType
  name: String!
  owner: UnionTypeOwnerFieldInput
  typesOfUnionType: UnionTypeTypesOfUnionTypeCreateInput
}

type UnionTypeCreatedEvent {
  createdUnionType: UnionTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input UnionTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
  typesOfUnionType: UnionTypeTypesOfUnionTypeDeleteInput
}

type UnionTypeDeletedEvent {
  deletedUnionType: UnionTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input UnionTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
  typesOfUnionType: UnionTypeTypesOfUnionTypeDisconnectInput
}

type UnionTypeEdge {
  cursor: String!
  node: UnionType!
}

type UnionTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type UnionTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: UnionTypeFieldFieldRefsNodeAggregateSelection
}

type UnionTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input UnionTypeFieldRefsAggregateInput {
  AND: [UnionTypeFieldRefsAggregateInput!]
  NOT: UnionTypeFieldRefsAggregateInput
  OR: [UnionTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UnionTypeFieldRefsNodeAggregationWhereInput
}

input UnionTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input UnionTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input UnionTypeFieldRefsFieldInput {
  connect: [UnionTypeFieldRefsConnectFieldInput!]
  create: [UnionTypeFieldRefsCreateFieldInput!]
}

input UnionTypeFieldRefsNodeAggregationWhereInput {
  AND: [UnionTypeFieldRefsNodeAggregationWhereInput!]
  NOT: UnionTypeFieldRefsNodeAggregationWhereInput
  OR: [UnionTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input UnionTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input UnionTypeFieldRefsUpdateFieldInput {
  connect: [UnionTypeFieldRefsConnectFieldInput!]
  create: [UnionTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: UnionTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input UnionTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more UnionTypeSort objects to sort UnionTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [UnionTypeSort!]
}

input UnionTypeOwnerAggregateInput {
  AND: [UnionTypeOwnerAggregateInput!]
  NOT: UnionTypeOwnerAggregateInput
  OR: [UnionTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UnionTypeOwnerNodeAggregationWhereInput
}

input UnionTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input UnionTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input UnionTypeOwnerFieldInput {
  connect: UnionTypeOwnerConnectFieldInput
  create: UnionTypeOwnerCreateFieldInput
}

input UnionTypeOwnerNodeAggregationWhereInput {
  AND: [UnionTypeOwnerNodeAggregationWhereInput!]
  NOT: UnionTypeOwnerNodeAggregationWhereInput
  OR: [UnionTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input UnionTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input UnionTypeOwnerUpdateFieldInput {
  connect: UnionTypeOwnerConnectFieldInput
  create: UnionTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: UnionTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort UnionTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one UnionTypeSort object.
"""
input UnionTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input UnionTypeSubscriptionWhere {
  AND: [UnionTypeSubscriptionWhere!]
  NOT: UnionTypeSubscriptionWhere
  OR: [UnionTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput {
  connect: [ActionTypeConnectInput!]
  where: ActionTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeActionTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeActionTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeActionTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeActionTypeConnectionWhere!]
  node: ActionTypeWhere
}

input UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput {
  node: ActionTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput {
  delete: ActionTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeActionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput {
  disconnect: ActionTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeActionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeActionTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput {
  node: ActionTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeActionTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeActionTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeActionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput {
  connect: [AppTypeConnectInput!]
  where: AppTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeAppTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeAppTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeAppTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeAppTypeConnectionWhere!]
  node: AppTypeWhere
}

input UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput {
  node: AppTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput {
  delete: AppTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeAppTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput {
  disconnect: AppTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeAppTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeAppTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput {
  node: AppTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeAppTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeAppTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeAppTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput {
  connect: [ArrayTypeConnectInput!]
  where: ArrayTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere!]
  node: ArrayTypeWhere
}

input UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput {
  node: ArrayTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput {
  delete: ArrayTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput {
  disconnect: ArrayTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeArrayTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput {
  node: ArrayTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeArrayTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeArrayTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput {
  connect: [CodeMirrorTypeConnectInput!]
  where: CodeMirrorTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere!]
  node: CodeMirrorTypeWhere
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput {
  node: CodeMirrorTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput {
  delete: CodeMirrorTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput {
  disconnect: CodeMirrorTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput {
  node: CodeMirrorTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeCodeMirrorTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeConnectInput {
  ActionType: [UnionTypeTypesOfUnionTypeActionTypeConnectFieldInput!]
  AppType: [UnionTypeTypesOfUnionTypeAppTypeConnectFieldInput!]
  ArrayType: [UnionTypeTypesOfUnionTypeArrayTypeConnectFieldInput!]
  CodeMirrorType: [UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectFieldInput!]
  ElementType: [UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput!]
  EnumType: [UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput!]
  InterfaceType: [UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput!]
  LambdaType: [UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput!]
  PageType: [UnionTypeTypesOfUnionTypePageTypeConnectFieldInput!]
  PrimitiveType: [UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput!]
  ReactNodeType: [UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput!]
  RenderPropType: [UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput!]
  RichTextType: [UnionTypeTypesOfUnionTypeRichTextTypeConnectFieldInput!]
  UnionType: [UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput!]
  UnknownType: [UnionTypeTypesOfUnionTypeUnknownTypeConnectFieldInput!]
}

type UnionTypeTypesOfUnionTypeConnection {
  edges: [UnionTypeTypesOfUnionTypeRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UnionTypeTypesOfUnionTypeConnectionWhere {
  ActionType: UnionTypeTypesOfUnionTypeActionTypeConnectionWhere
  AppType: UnionTypeTypesOfUnionTypeAppTypeConnectionWhere
  ArrayType: UnionTypeTypesOfUnionTypeArrayTypeConnectionWhere
  CodeMirrorType: UnionTypeTypesOfUnionTypeCodeMirrorTypeConnectionWhere
  ElementType: UnionTypeTypesOfUnionTypeElementTypeConnectionWhere
  EnumType: UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere
  InterfaceType: UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere
  LambdaType: UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere
  PageType: UnionTypeTypesOfUnionTypePageTypeConnectionWhere
  PrimitiveType: UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere
  ReactNodeType: UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere
  RenderPropType: UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere
  RichTextType: UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere
  UnionType: UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere
  UnknownType: UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeCreateInput {
  ActionType: UnionTypeTypesOfUnionTypeActionTypeFieldInput
  AppType: UnionTypeTypesOfUnionTypeAppTypeFieldInput
  ArrayType: UnionTypeTypesOfUnionTypeArrayTypeFieldInput
  CodeMirrorType: UnionTypeTypesOfUnionTypeCodeMirrorTypeFieldInput
  ElementType: UnionTypeTypesOfUnionTypeElementTypeFieldInput
  EnumType: UnionTypeTypesOfUnionTypeEnumTypeFieldInput
  InterfaceType: UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput
  LambdaType: UnionTypeTypesOfUnionTypeLambdaTypeFieldInput
  PageType: UnionTypeTypesOfUnionTypePageTypeFieldInput
  PrimitiveType: UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput
  ReactNodeType: UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput
  RenderPropType: UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput
  RichTextType: UnionTypeTypesOfUnionTypeRichTextTypeFieldInput
  UnionType: UnionTypeTypesOfUnionTypeUnionTypeFieldInput
  UnknownType: UnionTypeTypesOfUnionTypeUnknownTypeFieldInput
}

input UnionTypeTypesOfUnionTypeDeleteInput {
  ActionType: [UnionTypeTypesOfUnionTypeActionTypeDeleteFieldInput!]
  AppType: [UnionTypeTypesOfUnionTypeAppTypeDeleteFieldInput!]
  ArrayType: [UnionTypeTypesOfUnionTypeArrayTypeDeleteFieldInput!]
  CodeMirrorType: [UnionTypeTypesOfUnionTypeCodeMirrorTypeDeleteFieldInput!]
  ElementType: [UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput!]
  EnumType: [UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput!]
  InterfaceType: [UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput!]
  LambdaType: [UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput!]
  PageType: [UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput!]
  PrimitiveType: [UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput!]
  ReactNodeType: [UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput!]
  RenderPropType: [UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput!]
  RichTextType: [UnionTypeTypesOfUnionTypeRichTextTypeDeleteFieldInput!]
  UnionType: [UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput!]
  UnknownType: [UnionTypeTypesOfUnionTypeUnknownTypeDeleteFieldInput!]
}

input UnionTypeTypesOfUnionTypeDisconnectInput {
  ActionType: [UnionTypeTypesOfUnionTypeActionTypeDisconnectFieldInput!]
  AppType: [UnionTypeTypesOfUnionTypeAppTypeDisconnectFieldInput!]
  ArrayType: [UnionTypeTypesOfUnionTypeArrayTypeDisconnectFieldInput!]
  CodeMirrorType: [UnionTypeTypesOfUnionTypeCodeMirrorTypeDisconnectFieldInput!]
  ElementType: [UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput!]
  EnumType: [UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput!]
  InterfaceType: [UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput!]
  LambdaType: [UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput!]
  PageType: [UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput!]
  PrimitiveType: [UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput!]
  ReactNodeType: [UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput!]
  RenderPropType: [UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput!]
  RichTextType: [UnionTypeTypesOfUnionTypeRichTextTypeDisconnectFieldInput!]
  UnionType: [UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput!]
  UnknownType: [UnionTypeTypesOfUnionTypeUnknownTypeDisconnectFieldInput!]
}

input UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput {
  connect: [ElementTypeConnectInput!]
  where: ElementTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeElementTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeElementTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeElementTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeElementTypeConnectionWhere!]
  node: ElementTypeWhere
}

input UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput {
  node: ElementTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput {
  delete: ElementTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeElementTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput {
  disconnect: ElementTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeElementTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeElementTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput {
  node: ElementTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeElementTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeElementTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeElementTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeElementTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeElementTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeElementTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput {
  connect: [EnumTypeConnectInput!]
  where: EnumTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere!]
  node: EnumTypeWhere
}

input UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput {
  node: EnumTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput {
  delete: EnumTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput {
  disconnect: EnumTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeEnumTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput {
  node: EnumTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeEnumTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeEnumTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeEnumTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeEnumTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeEnumTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeEnumTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput {
  connect: [InterfaceTypeConnectInput!]
  where: InterfaceTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere!]
  node: InterfaceTypeWhere
}

input UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput {
  node: InterfaceTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput {
  delete: InterfaceTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput {
  disconnect: InterfaceTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeInterfaceTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput {
  node: InterfaceTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeInterfaceTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeInterfaceTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeInterfaceTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeInterfaceTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeInterfaceTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeInterfaceTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput {
  connect: [LambdaTypeConnectInput!]
  where: LambdaTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere!]
  node: LambdaTypeWhere
}

input UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput {
  node: LambdaTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput {
  delete: LambdaTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput {
  disconnect: LambdaTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeLambdaTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput {
  node: LambdaTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeLambdaTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeLambdaTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeLambdaTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeLambdaTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeLambdaTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeLambdaTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePageTypeConnectFieldInput {
  connect: [PageTypeConnectInput!]
  where: PageTypeConnectWhere
}

input UnionTypeTypesOfUnionTypePageTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypePageTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypePageTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypePageTypeConnectionWhere!]
  node: PageTypeWhere
}

input UnionTypeTypesOfUnionTypePageTypeCreateFieldInput {
  node: PageTypeCreateInput!
}

input UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput {
  delete: PageTypeDeleteInput
  where: UnionTypeTypesOfUnionTypePageTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput {
  disconnect: PageTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypePageTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePageTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypePageTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypePageTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput {
  node: PageTypeUpdateInput
}

input UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypePageTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypePageTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypePageTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypePageTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypePageTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypePageTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput {
  connect: [PrimitiveTypeConnectInput!]
  where: PrimitiveTypeConnectWhere
}

input UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere!]
  node: PrimitiveTypeWhere
}

input UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput {
  node: PrimitiveTypeCreateInput!
}

input UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput {
  delete: PrimitiveTypeDeleteInput
  where: UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput {
  disconnect: PrimitiveTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypePrimitiveTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput {
  node: PrimitiveTypeUpdateInput
}

input UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypePrimitiveTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypePrimitiveTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypePrimitiveTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypePrimitiveTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypePrimitiveTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypePrimitiveTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput {
  connect: [ReactNodeTypeConnectInput!]
  where: ReactNodeTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere!]
  node: ReactNodeTypeWhere
}

input UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput {
  node: ReactNodeTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput {
  delete: ReactNodeTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput {
  disconnect: ReactNodeTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeReactNodeTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput {
  node: ReactNodeTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeReactNodeTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeReactNodeTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeReactNodeTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeReactNodeTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeReactNodeTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeReactNodeTypeConnectionWhere
}

type UnionTypeTypesOfUnionTypeRelationship {
  cursor: String!
  node: AnyType!
}

input UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput {
  connect: [RenderPropTypeConnectInput!]
  where: RenderPropTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere!]
  node: RenderPropTypeWhere
}

input UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput {
  node: RenderPropTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput {
  delete: RenderPropTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput {
  disconnect: RenderPropTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeRenderPropTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput {
  node: RenderPropTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeRenderPropTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeRenderPropTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeRenderPropTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeRenderPropTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeRenderPropTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeRenderPropTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeRichTextTypeConnectFieldInput {
  connect: [RichTextTypeConnectInput!]
  where: RichTextTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere!]
  node: RichTextTypeWhere
}

input UnionTypeTypesOfUnionTypeRichTextTypeCreateFieldInput {
  node: RichTextTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeRichTextTypeDeleteFieldInput {
  delete: RichTextTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeRichTextTypeDisconnectFieldInput {
  disconnect: RichTextTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeRichTextTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeRichTextTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeRichTextTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeRichTextTypeUpdateConnectionInput {
  node: RichTextTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeRichTextTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeRichTextTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeRichTextTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeRichTextTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeRichTextTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeRichTextTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeRichTextTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput {
  connect: [UnionTypeConnectInput!]
  where: UnionTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere!]
  node: UnionTypeWhere
}

input UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput {
  node: UnionTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput {
  delete: UnionTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput {
  disconnect: UnionTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnionTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput {
  node: UnionTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeUnionTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeUnionTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeUnionTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeUnionTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeUnionTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeUnionTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnknownTypeConnectFieldInput {
  connect: [UnknownTypeConnectInput!]
  where: UnknownTypeConnectWhere
}

input UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere {
  AND: [UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere!]
  NOT: UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere
  OR: [UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere!]
  node: UnknownTypeWhere
}

input UnionTypeTypesOfUnionTypeUnknownTypeCreateFieldInput {
  node: UnknownTypeCreateInput!
}

input UnionTypeTypesOfUnionTypeUnknownTypeDeleteFieldInput {
  delete: UnknownTypeDeleteInput
  where: UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnknownTypeDisconnectFieldInput {
  disconnect: UnknownTypeDisconnectInput
  where: UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUnknownTypeFieldInput {
  connect: [UnionTypeTypesOfUnionTypeUnknownTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeUnknownTypeCreateFieldInput!]
}

input UnionTypeTypesOfUnionTypeUnknownTypeUpdateConnectionInput {
  node: UnknownTypeUpdateInput
}

input UnionTypeTypesOfUnionTypeUnknownTypeUpdateFieldInput {
  connect: [UnionTypeTypesOfUnionTypeUnknownTypeConnectFieldInput!]
  create: [UnionTypeTypesOfUnionTypeUnknownTypeCreateFieldInput!]
  delete: [UnionTypeTypesOfUnionTypeUnknownTypeDeleteFieldInput!]
  disconnect: [UnionTypeTypesOfUnionTypeUnknownTypeDisconnectFieldInput!]
  update: UnionTypeTypesOfUnionTypeUnknownTypeUpdateConnectionInput
  where: UnionTypeTypesOfUnionTypeUnknownTypeConnectionWhere
}

input UnionTypeTypesOfUnionTypeUpdateInput {
  ActionType: [UnionTypeTypesOfUnionTypeActionTypeUpdateFieldInput!]
  AppType: [UnionTypeTypesOfUnionTypeAppTypeUpdateFieldInput!]
  ArrayType: [UnionTypeTypesOfUnionTypeArrayTypeUpdateFieldInput!]
  CodeMirrorType: [UnionTypeTypesOfUnionTypeCodeMirrorTypeUpdateFieldInput!]
  ElementType: [UnionTypeTypesOfUnionTypeElementTypeUpdateFieldInput!]
  EnumType: [UnionTypeTypesOfUnionTypeEnumTypeUpdateFieldInput!]
  InterfaceType: [UnionTypeTypesOfUnionTypeInterfaceTypeUpdateFieldInput!]
  LambdaType: [UnionTypeTypesOfUnionTypeLambdaTypeUpdateFieldInput!]
  PageType: [UnionTypeTypesOfUnionTypePageTypeUpdateFieldInput!]
  PrimitiveType: [UnionTypeTypesOfUnionTypePrimitiveTypeUpdateFieldInput!]
  ReactNodeType: [UnionTypeTypesOfUnionTypeReactNodeTypeUpdateFieldInput!]
  RenderPropType: [UnionTypeTypesOfUnionTypeRenderPropTypeUpdateFieldInput!]
  RichTextType: [UnionTypeTypesOfUnionTypeRichTextTypeUpdateFieldInput!]
  UnionType: [UnionTypeTypesOfUnionTypeUnionTypeUpdateFieldInput!]
  UnknownType: [UnionTypeTypesOfUnionTypeUnknownTypeUpdateFieldInput!]
}

input UnionTypeUpdateInput {
  fieldRefs: [UnionTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: UnionTypeOwnerUpdateFieldInput
  typesOfUnionType: UnionTypeTypesOfUnionTypeUpdateInput
}

type UnionTypeUpdatedEvent {
  event: EventType!
  previousState: UnionTypeEventPayload!
  timestamp: Float!
  updatedUnionType: UnionTypeEventPayload!
}

type UnionTypeUserOwnerAggregationSelection {
  count: Int!
  node: UnionTypeUserOwnerNodeAggregateSelection
}

type UnionTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input UnionTypeWhere {
  AND: [UnionTypeWhere!]
  NOT: UnionTypeWhere
  OR: [UnionTypeWhere!]
  fieldRefsAggregate: UnionTypeFieldRefsAggregateInput

  """
  Return UnionTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnionTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnionTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnionTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return UnionTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return UnionTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return UnionTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return UnionTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: UnionTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere

  """
  Return UnionTypes where all of the related UnionTypeTypesOfUnionTypeConnections match this filter
  """
  typesOfUnionTypeConnection_ALL: UnionTypeTypesOfUnionTypeConnectionWhere

  """
  Return UnionTypes where none of the related UnionTypeTypesOfUnionTypeConnections match this filter
  """
  typesOfUnionTypeConnection_NONE: UnionTypeTypesOfUnionTypeConnectionWhere

  """
  Return UnionTypes where one of the related UnionTypeTypesOfUnionTypeConnections match this filter
  """
  typesOfUnionTypeConnection_SINGLE: UnionTypeTypesOfUnionTypeConnectionWhere

  """
  Return UnionTypes where some of the related UnionTypeTypesOfUnionTypeConnections match this filter
  """
  typesOfUnionTypeConnection_SOME: UnionTypeTypesOfUnionTypeConnectionWhere

  """Return UnionTypes where all of the related AnyTypes match this filter"""
  typesOfUnionType_ALL: AnyTypeWhere

  """Return UnionTypes where none of the related AnyTypes match this filter"""
  typesOfUnionType_NONE: AnyTypeWhere

  """Return UnionTypes where one of the related AnyTypes match this filter"""
  typesOfUnionType_SINGLE: AnyTypeWhere

  """Return UnionTypes where some of the related AnyTypes match this filter"""
  typesOfUnionType_SOME: AnyTypeWhere
}

type UnionTypesConnection {
  edges: [UnionTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
Represents a type that can accept any value, similar to TypeScript's any type
"""
type UnknownType implements IBaseType {
  fieldRefs(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: FieldOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [FieldSort!], where: FieldWhere): [Field!]!
  fieldRefsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: FieldWhere): UnknownTypeFieldFieldRefsAggregationSelection
  fieldRefsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeFieldRefsConnectionSort!], where: IBaseTypeFieldRefsConnectionWhere): IBaseTypeFieldRefsConnection!
  id: ID!
  kind: TypeKind!
  name: String!
  owner(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: UserWhere): UnknownTypeUserOwnerAggregationSelection
  ownerConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [IBaseTypeOwnerConnectionSort!], where: IBaseTypeOwnerConnectionWhere): IBaseTypeOwnerConnection!
}

type UnknownTypeAggregateSelection {
  count: Int!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input UnknownTypeConnectInput {
  fieldRefs: [UnknownTypeFieldRefsConnectFieldInput!]
  owner: UnknownTypeOwnerConnectFieldInput
}

input UnknownTypeConnectWhere {
  node: UnknownTypeWhere!
}

input UnknownTypeCreateInput {
  fieldRefs: UnknownTypeFieldRefsFieldInput
  id: ID!
  kind: TypeKind! = UnknownType
  name: String!
  owner: UnknownTypeOwnerFieldInput
}

type UnknownTypeCreatedEvent {
  createdUnknownType: UnknownTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input UnknownTypeDeleteInput {
  fieldRefs: [IBaseTypeFieldRefsDeleteFieldInput!]
  owner: IBaseTypeOwnerDeleteFieldInput
}

type UnknownTypeDeletedEvent {
  deletedUnknownType: UnknownTypeEventPayload!
  event: EventType!
  timestamp: Float!
}

input UnknownTypeDisconnectInput {
  fieldRefs: [IBaseTypeFieldRefsDisconnectFieldInput!]
  owner: IBaseTypeOwnerDisconnectFieldInput
}

type UnknownTypeEdge {
  cursor: String!
  node: UnknownType!
}

type UnknownTypeEventPayload {
  id: ID!
  kind: TypeKind!
  name: String!
}

type UnknownTypeFieldFieldRefsAggregationSelection {
  count: Int!
  node: UnknownTypeFieldFieldRefsNodeAggregateSelection
}

type UnknownTypeFieldFieldRefsNodeAggregateSelection {
  defaultValues: StringAggregateSelection!
  description: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key: StringAggregateSelection!
  name: StringAggregateSelection!
  validationRules: StringAggregateSelection!
}

input UnknownTypeFieldRefsAggregateInput {
  AND: [UnknownTypeFieldRefsAggregateInput!]
  NOT: UnknownTypeFieldRefsAggregateInput
  OR: [UnknownTypeFieldRefsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UnknownTypeFieldRefsNodeAggregationWhereInput
}

input UnknownTypeFieldRefsConnectFieldInput {
  connect: [FieldConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: FieldConnectWhere
}

input UnknownTypeFieldRefsCreateFieldInput {
  node: FieldCreateInput!
}

input UnknownTypeFieldRefsFieldInput {
  connect: [UnknownTypeFieldRefsConnectFieldInput!]
  create: [UnknownTypeFieldRefsCreateFieldInput!]
}

input UnknownTypeFieldRefsNodeAggregationWhereInput {
  AND: [UnknownTypeFieldRefsNodeAggregationWhereInput!]
  NOT: UnknownTypeFieldRefsNodeAggregationWhereInput
  OR: [UnknownTypeFieldRefsNodeAggregationWhereInput!]
  defaultValues_AVERAGE_LENGTH_EQUAL: Float
  defaultValues_AVERAGE_LENGTH_GT: Float
  defaultValues_AVERAGE_LENGTH_GTE: Float
  defaultValues_AVERAGE_LENGTH_LT: Float
  defaultValues_AVERAGE_LENGTH_LTE: Float
  defaultValues_LONGEST_LENGTH_EQUAL: Int
  defaultValues_LONGEST_LENGTH_GT: Int
  defaultValues_LONGEST_LENGTH_GTE: Int
  defaultValues_LONGEST_LENGTH_LT: Int
  defaultValues_LONGEST_LENGTH_LTE: Int
  defaultValues_SHORTEST_LENGTH_EQUAL: Int
  defaultValues_SHORTEST_LENGTH_GT: Int
  defaultValues_SHORTEST_LENGTH_GTE: Int
  defaultValues_SHORTEST_LENGTH_LT: Int
  defaultValues_SHORTEST_LENGTH_LTE: Int
  description_AVERAGE_LENGTH_EQUAL: Float
  description_AVERAGE_LENGTH_GT: Float
  description_AVERAGE_LENGTH_GTE: Float
  description_AVERAGE_LENGTH_LT: Float
  description_AVERAGE_LENGTH_LTE: Float
  description_LONGEST_LENGTH_EQUAL: Int
  description_LONGEST_LENGTH_GT: Int
  description_LONGEST_LENGTH_GTE: Int
  description_LONGEST_LENGTH_LT: Int
  description_LONGEST_LENGTH_LTE: Int
  description_SHORTEST_LENGTH_EQUAL: Int
  description_SHORTEST_LENGTH_GT: Int
  description_SHORTEST_LENGTH_GTE: Int
  description_SHORTEST_LENGTH_LT: Int
  description_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  key_AVERAGE_LENGTH_EQUAL: Float
  key_AVERAGE_LENGTH_GT: Float
  key_AVERAGE_LENGTH_GTE: Float
  key_AVERAGE_LENGTH_LT: Float
  key_AVERAGE_LENGTH_LTE: Float
  key_LONGEST_LENGTH_EQUAL: Int
  key_LONGEST_LENGTH_GT: Int
  key_LONGEST_LENGTH_GTE: Int
  key_LONGEST_LENGTH_LT: Int
  key_LONGEST_LENGTH_LTE: Int
  key_SHORTEST_LENGTH_EQUAL: Int
  key_SHORTEST_LENGTH_GT: Int
  key_SHORTEST_LENGTH_GTE: Int
  key_SHORTEST_LENGTH_LT: Int
  key_SHORTEST_LENGTH_LTE: Int
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  validationRules_AVERAGE_LENGTH_EQUAL: Float
  validationRules_AVERAGE_LENGTH_GT: Float
  validationRules_AVERAGE_LENGTH_GTE: Float
  validationRules_AVERAGE_LENGTH_LT: Float
  validationRules_AVERAGE_LENGTH_LTE: Float
  validationRules_LONGEST_LENGTH_EQUAL: Int
  validationRules_LONGEST_LENGTH_GT: Int
  validationRules_LONGEST_LENGTH_GTE: Int
  validationRules_LONGEST_LENGTH_LT: Int
  validationRules_LONGEST_LENGTH_LTE: Int
  validationRules_SHORTEST_LENGTH_EQUAL: Int
  validationRules_SHORTEST_LENGTH_GT: Int
  validationRules_SHORTEST_LENGTH_GTE: Int
  validationRules_SHORTEST_LENGTH_LT: Int
  validationRules_SHORTEST_LENGTH_LTE: Int
}

input UnknownTypeFieldRefsUpdateConnectionInput {
  node: FieldUpdateInput
}

input UnknownTypeFieldRefsUpdateFieldInput {
  connect: [UnknownTypeFieldRefsConnectFieldInput!]
  create: [UnknownTypeFieldRefsCreateFieldInput!]
  delete: [IBaseTypeFieldRefsDeleteFieldInput!]
  disconnect: [IBaseTypeFieldRefsDisconnectFieldInput!]
  update: UnknownTypeFieldRefsUpdateConnectionInput
  where: IBaseTypeFieldRefsConnectionWhere
}

input UnknownTypeOptions {
  limit: Int
  offset: Int

  """
  Specify one or more UnknownTypeSort objects to sort UnknownTypes by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [UnknownTypeSort!]
}

input UnknownTypeOwnerAggregateInput {
  AND: [UnknownTypeOwnerAggregateInput!]
  NOT: UnknownTypeOwnerAggregateInput
  OR: [UnknownTypeOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UnknownTypeOwnerNodeAggregationWhereInput
}

input UnknownTypeOwnerConnectFieldInput {
  connect: UserConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: UserConnectWhere
}

input UnknownTypeOwnerCreateFieldInput {
  node: UserCreateInput!
}

input UnknownTypeOwnerFieldInput {
  connect: UnknownTypeOwnerConnectFieldInput
  create: UnknownTypeOwnerCreateFieldInput
}

input UnknownTypeOwnerNodeAggregationWhereInput {
  AND: [UnknownTypeOwnerNodeAggregationWhereInput!]
  NOT: UnknownTypeOwnerNodeAggregationWhereInput
  OR: [UnknownTypeOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

input UnknownTypeOwnerUpdateConnectionInput {
  node: UserUpdateInput
}

input UnknownTypeOwnerUpdateFieldInput {
  connect: UnknownTypeOwnerConnectFieldInput
  create: UnknownTypeOwnerCreateFieldInput
  delete: IBaseTypeOwnerDeleteFieldInput
  disconnect: IBaseTypeOwnerDisconnectFieldInput
  update: UnknownTypeOwnerUpdateConnectionInput
  where: IBaseTypeOwnerConnectionWhere
}

"""
Fields to sort UnknownTypes by. The order in which sorts are applied is not guaranteed when specifying many fields in one UnknownTypeSort object.
"""
input UnknownTypeSort {
  id: SortDirection
  kind: SortDirection
  name: SortDirection
}

input UnknownTypeSubscriptionWhere {
  AND: [UnknownTypeSubscriptionWhere!]
  NOT: UnknownTypeSubscriptionWhere
  OR: [UnknownTypeSubscriptionWhere!]
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
}

input UnknownTypeUpdateInput {
  fieldRefs: [UnknownTypeFieldRefsUpdateFieldInput!]
  id: ID @deprecated(reason: "Please use the explicit _SET field")
  id_SET: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _SET field")
  kind_SET: TypeKind
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  owner: UnknownTypeOwnerUpdateFieldInput
}

type UnknownTypeUpdatedEvent {
  event: EventType!
  previousState: UnknownTypeEventPayload!
  timestamp: Float!
  updatedUnknownType: UnknownTypeEventPayload!
}

type UnknownTypeUserOwnerAggregationSelection {
  count: Int!
  node: UnknownTypeUserOwnerNodeAggregateSelection
}

type UnknownTypeUserOwnerNodeAggregateSelection {
  auth0Id: StringAggregateSelection!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

input UnknownTypeWhere {
  AND: [UnknownTypeWhere!]
  NOT: UnknownTypeWhere
  OR: [UnknownTypeWhere!]
  fieldRefsAggregate: UnknownTypeFieldRefsAggregateInput

  """
  Return UnknownTypes where all of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_ALL: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnknownTypes where none of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_NONE: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnknownTypes where one of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SINGLE: IBaseTypeFieldRefsConnectionWhere

  """
  Return UnknownTypes where some of the related IBaseTypeFieldRefsConnections match this filter
  """
  fieldRefsConnection_SOME: IBaseTypeFieldRefsConnectionWhere

  """Return UnknownTypes where all of the related Fields match this filter"""
  fieldRefs_ALL: FieldWhere

  """Return UnknownTypes where none of the related Fields match this filter"""
  fieldRefs_NONE: FieldWhere

  """Return UnknownTypes where one of the related Fields match this filter"""
  fieldRefs_SINGLE: FieldWhere

  """Return UnknownTypes where some of the related Fields match this filter"""
  fieldRefs_SOME: FieldWhere
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  kind: TypeKind @deprecated(reason: "Please use the explicit _EQ version")
  kind_EQ: TypeKind
  kind_IN: [TypeKind!]
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  owner: UserWhere
  ownerAggregate: UnknownTypeOwnerAggregateInput
  ownerConnection: IBaseTypeOwnerConnectionWhere
}

type UnknownTypesConnection {
  edges: [UnknownTypeEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type UpdateActionTypesMutationResponse {
  actionTypes: [ActionType!]!
  info: UpdateInfo!
}

type UpdateApiActionsMutationResponse {
  apiActions: [ApiAction!]!
  info: UpdateInfo!
}

type UpdateAppTypesMutationResponse {
  appTypes: [AppType!]!
  info: UpdateInfo!
}

type UpdateAppsMutationResponse {
  apps: [App!]!
  info: UpdateInfo!
}

type UpdateArrayTypesMutationResponse {
  arrayTypes: [ArrayType!]!
  info: UpdateInfo!
}

type UpdateAtomsMutationResponse {
  atoms: [Atom!]!
  info: UpdateInfo!
}

type UpdateAuthGuardsMutationResponse {
  authGuards: [AuthGuard!]!
  info: UpdateInfo!
}

type UpdateCodeActionsMutationResponse {
  codeActions: [CodeAction!]!
  info: UpdateInfo!
}

type UpdateCodeMirrorTypesMutationResponse {
  codeMirrorTypes: [CodeMirrorType!]!
  info: UpdateInfo!
}

type UpdateComponentsMutationResponse {
  components: [Component!]!
  info: UpdateInfo!
}

type UpdateDomainsMutationResponse {
  domains: [Domain!]!
  info: UpdateInfo!
}

type UpdateElementTypesMutationResponse {
  elementTypes: [ElementType!]!
  info: UpdateInfo!
}

type UpdateElementsMutationResponse {
  elements: [Element!]!
  info: UpdateInfo!
}

type UpdateEnumTypeValuesMutationResponse {
  enumTypeValues: [EnumTypeValue!]!
  info: UpdateInfo!
}

type UpdateEnumTypesMutationResponse {
  enumTypes: [EnumType!]!
  info: UpdateInfo!
}

type UpdateFieldsMutationResponse {
  fields: [Field!]!
  info: UpdateInfo!
}

type UpdateHooksMutationResponse {
  hooks: [Hook!]!
  info: UpdateInfo!
}

"""
Information about the number of nodes and relationships created and deleted during an update mutation
"""
type UpdateInfo {
  nodesCreated: Int!
  nodesDeleted: Int!
  relationshipsCreated: Int!
  relationshipsDeleted: Int!
}

type UpdateInterfaceTypesMutationResponse {
  info: UpdateInfo!
  interfaceTypes: [InterfaceType!]!
}

type UpdateLambdaTypesMutationResponse {
  info: UpdateInfo!
  lambdaTypes: [LambdaType!]!
}

type UpdatePageTypesMutationResponse {
  info: UpdateInfo!
  pageTypes: [PageType!]!
}

type UpdatePagesMutationResponse {
  info: UpdateInfo!
  pages: [Page!]!
}

type UpdatePreferencesMutationResponse {
  info: UpdateInfo!
  preferences: [Preference!]!
}

type UpdatePrimitiveTypesMutationResponse {
  info: UpdateInfo!
  primitiveTypes: [PrimitiveType!]!
}

type UpdatePropsMutationResponse {
  info: UpdateInfo!
  props: [Prop!]!
}

type UpdateReactNodeTypesMutationResponse {
  info: UpdateInfo!
  reactNodeTypes: [ReactNodeType!]!
}

type UpdateRedirectsMutationResponse {
  info: UpdateInfo!
  redirects: [Redirect!]!
}

type UpdateRenderPropTypesMutationResponse {
  info: UpdateInfo!
  renderPropTypes: [RenderPropType!]!
}

type UpdateResourcesMutationResponse {
  info: UpdateInfo!
  resources: [Resource!]!
}

type UpdateRichTextTypesMutationResponse {
  info: UpdateInfo!
  richTextTypes: [RichTextType!]!
}

type UpdateStoresMutationResponse {
  info: UpdateInfo!
  stores: [Store!]!
}

type UpdateTagsMutationResponse {
  info: UpdateInfo!
  tags: [Tag!]!
}

type UpdateTypeReferencesMutationResponse {
  info: UpdateInfo!
  typeReferences: [TypeReference!]!
}

type UpdateUnionTypesMutationResponse {
  info: UpdateInfo!
  unionTypes: [UnionType!]!
}

type UpdateUnknownTypesMutationResponse {
  info: UpdateInfo!
  unknownTypes: [UnknownType!]!
}

type UpdateUsersMutationResponse {
  info: UpdateInfo!
  users: [User!]!
}

type User {
  apps(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AppOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AppSort!], where: AppWhere): [App!]!
  appsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AppWhere): UserAppAppsAggregationSelection
  appsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserAppsConnectionSort!], where: UserAppsConnectionWhere): UserAppsConnection!
  atoms(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: AtomOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [AtomSort!], where: AtomWhere): [Atom!]!
  atomsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: AtomWhere): UserAtomAtomsAggregationSelection
  atomsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserAtomsConnectionSort!], where: UserAtomsConnectionWhere): UserAtomsConnection!
  auth0Id: String!
  components(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ComponentOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ComponentSort!], where: ComponentWhere): [Component!]!
  componentsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ComponentWhere): UserComponentComponentsAggregationSelection
  componentsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserComponentsConnectionSort!], where: UserComponentsConnectionWhere): UserComponentsConnection!
  elements(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: ElementOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [ElementSort!], where: ElementWhere): [Element!]!
  elementsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: ElementWhere): UserElementElementsAggregationSelection
  elementsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserElementsConnectionSort!], where: UserElementsConnectionWhere): UserElementsConnection!
  email: String!
  id: ID!
  name: String!
  picture: String!
  preferences(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: PreferenceOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [PreferenceSort!], where: PreferenceWhere): Preference!
  preferencesAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: PreferenceWhere): UserPreferencePreferencesAggregationSelection
  preferencesConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserPreferencesConnectionSort!], where: UserPreferencesConnectionWhere): UserPreferencesConnection!
  roles: [Role!]
  tags(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: TagOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [TagSort!], where: TagWhere): [Tag!]!
  tagsAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: TagWhere): UserTagTagsAggregationSelection
  tagsConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserTagsConnectionSort!], where: UserTagsConnectionWhere): UserTagsConnection!
  types(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), limit: Int, offset: Int, options: IBaseTypeOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [IBaseTypeSort!], where: IBaseTypeWhere): [IBaseType!]!
  typesAggregate(directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), where: IBaseTypeWhere): UserIBaseTypeTypesAggregationSelection
  typesConnection(after: String, directed: Boolean = true @deprecated(reason: "The directed argument is deprecated, and the direction of the field will be configured in the GraphQL server"), first: Int, sort: [UserTypesConnectionSort!], where: UserTypesConnectionWhere): UserTypesConnection!
  username: String!
}

type UserAggregateSelection {
  auth0Id: StringAggregateSelection!
  count: Int!
  email: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
  picture: StringAggregateSelection!
  username: StringAggregateSelection!
}

type UserAppAppsAggregationSelection {
  count: Int!
  node: UserAppAppsNodeAggregateSelection
}

type UserAppAppsNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input UserAppsAggregateInput {
  AND: [UserAppsAggregateInput!]
  NOT: UserAppsAggregateInput
  OR: [UserAppsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserAppsNodeAggregationWhereInput
}

input UserAppsConnectFieldInput {
  connect: [AppConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AppConnectWhere
}

type UserAppsConnection {
  edges: [UserAppsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserAppsConnectionSort {
  node: AppSort
}

input UserAppsConnectionWhere {
  AND: [UserAppsConnectionWhere!]
  NOT: UserAppsConnectionWhere
  OR: [UserAppsConnectionWhere!]
  node: AppWhere
}

input UserAppsCreateFieldInput {
  node: AppCreateInput!
}

input UserAppsDeleteFieldInput {
  delete: AppDeleteInput
  where: UserAppsConnectionWhere
}

input UserAppsDisconnectFieldInput {
  disconnect: AppDisconnectInput
  where: UserAppsConnectionWhere
}

input UserAppsFieldInput {
  connect: [UserAppsConnectFieldInput!]
  create: [UserAppsCreateFieldInput!]
}

input UserAppsNodeAggregationWhereInput {
  AND: [UserAppsNodeAggregationWhereInput!]
  NOT: UserAppsNodeAggregationWhereInput
  OR: [UserAppsNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type UserAppsRelationship {
  cursor: String!
  node: App!
}

input UserAppsUpdateConnectionInput {
  node: AppUpdateInput
}

input UserAppsUpdateFieldInput {
  connect: [UserAppsConnectFieldInput!]
  create: [UserAppsCreateFieldInput!]
  delete: [UserAppsDeleteFieldInput!]
  disconnect: [UserAppsDisconnectFieldInput!]
  update: UserAppsUpdateConnectionInput
  where: UserAppsConnectionWhere
}

type UserAtomAtomsAggregationSelection {
  count: Int!
  node: UserAtomAtomsNodeAggregateSelection
}

type UserAtomAtomsNodeAggregateSelection {
  externalCssSource: StringAggregateSelection!
  externalJsSource: StringAggregateSelection!
  externalSourceType: StringAggregateSelection!
  icon: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input UserAtomsAggregateInput {
  AND: [UserAtomsAggregateInput!]
  NOT: UserAtomsAggregateInput
  OR: [UserAtomsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserAtomsNodeAggregationWhereInput
}

input UserAtomsConnectFieldInput {
  connect: [AtomConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: AtomConnectWhere
}

type UserAtomsConnection {
  edges: [UserAtomsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserAtomsConnectionSort {
  node: AtomSort
}

input UserAtomsConnectionWhere {
  AND: [UserAtomsConnectionWhere!]
  NOT: UserAtomsConnectionWhere
  OR: [UserAtomsConnectionWhere!]
  node: AtomWhere
}

input UserAtomsCreateFieldInput {
  node: AtomCreateInput!
}

input UserAtomsDeleteFieldInput {
  delete: AtomDeleteInput
  where: UserAtomsConnectionWhere
}

input UserAtomsDisconnectFieldInput {
  disconnect: AtomDisconnectInput
  where: UserAtomsConnectionWhere
}

input UserAtomsFieldInput {
  connect: [UserAtomsConnectFieldInput!]
  create: [UserAtomsCreateFieldInput!]
}

input UserAtomsNodeAggregationWhereInput {
  AND: [UserAtomsNodeAggregationWhereInput!]
  NOT: UserAtomsNodeAggregationWhereInput
  OR: [UserAtomsNodeAggregationWhereInput!]
  externalCssSource_AVERAGE_LENGTH_EQUAL: Float
  externalCssSource_AVERAGE_LENGTH_GT: Float
  externalCssSource_AVERAGE_LENGTH_GTE: Float
  externalCssSource_AVERAGE_LENGTH_LT: Float
  externalCssSource_AVERAGE_LENGTH_LTE: Float
  externalCssSource_LONGEST_LENGTH_EQUAL: Int
  externalCssSource_LONGEST_LENGTH_GT: Int
  externalCssSource_LONGEST_LENGTH_GTE: Int
  externalCssSource_LONGEST_LENGTH_LT: Int
  externalCssSource_LONGEST_LENGTH_LTE: Int
  externalCssSource_SHORTEST_LENGTH_EQUAL: Int
  externalCssSource_SHORTEST_LENGTH_GT: Int
  externalCssSource_SHORTEST_LENGTH_GTE: Int
  externalCssSource_SHORTEST_LENGTH_LT: Int
  externalCssSource_SHORTEST_LENGTH_LTE: Int
  externalJsSource_AVERAGE_LENGTH_EQUAL: Float
  externalJsSource_AVERAGE_LENGTH_GT: Float
  externalJsSource_AVERAGE_LENGTH_GTE: Float
  externalJsSource_AVERAGE_LENGTH_LT: Float
  externalJsSource_AVERAGE_LENGTH_LTE: Float
  externalJsSource_LONGEST_LENGTH_EQUAL: Int
  externalJsSource_LONGEST_LENGTH_GT: Int
  externalJsSource_LONGEST_LENGTH_GTE: Int
  externalJsSource_LONGEST_LENGTH_LT: Int
  externalJsSource_LONGEST_LENGTH_LTE: Int
  externalJsSource_SHORTEST_LENGTH_EQUAL: Int
  externalJsSource_SHORTEST_LENGTH_GT: Int
  externalJsSource_SHORTEST_LENGTH_GTE: Int
  externalJsSource_SHORTEST_LENGTH_LT: Int
  externalJsSource_SHORTEST_LENGTH_LTE: Int
  externalSourceType_AVERAGE_LENGTH_EQUAL: Float
  externalSourceType_AVERAGE_LENGTH_GT: Float
  externalSourceType_AVERAGE_LENGTH_GTE: Float
  externalSourceType_AVERAGE_LENGTH_LT: Float
  externalSourceType_AVERAGE_LENGTH_LTE: Float
  externalSourceType_LONGEST_LENGTH_EQUAL: Int
  externalSourceType_LONGEST_LENGTH_GT: Int
  externalSourceType_LONGEST_LENGTH_GTE: Int
  externalSourceType_LONGEST_LENGTH_LT: Int
  externalSourceType_LONGEST_LENGTH_LTE: Int
  externalSourceType_SHORTEST_LENGTH_EQUAL: Int
  externalSourceType_SHORTEST_LENGTH_GT: Int
  externalSourceType_SHORTEST_LENGTH_GTE: Int
  externalSourceType_SHORTEST_LENGTH_LT: Int
  externalSourceType_SHORTEST_LENGTH_LTE: Int
  icon_AVERAGE_LENGTH_EQUAL: Float
  icon_AVERAGE_LENGTH_GT: Float
  icon_AVERAGE_LENGTH_GTE: Float
  icon_AVERAGE_LENGTH_LT: Float
  icon_AVERAGE_LENGTH_LTE: Float
  icon_LONGEST_LENGTH_EQUAL: Int
  icon_LONGEST_LENGTH_GT: Int
  icon_LONGEST_LENGTH_GTE: Int
  icon_LONGEST_LENGTH_LT: Int
  icon_LONGEST_LENGTH_LTE: Int
  icon_SHORTEST_LENGTH_EQUAL: Int
  icon_SHORTEST_LENGTH_GT: Int
  icon_SHORTEST_LENGTH_GTE: Int
  icon_SHORTEST_LENGTH_LT: Int
  icon_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type UserAtomsRelationship {
  cursor: String!
  node: Atom!
}

input UserAtomsUpdateConnectionInput {
  node: AtomUpdateInput
}

input UserAtomsUpdateFieldInput {
  connect: [UserAtomsConnectFieldInput!]
  create: [UserAtomsCreateFieldInput!]
  delete: [UserAtomsDeleteFieldInput!]
  disconnect: [UserAtomsDisconnectFieldInput!]
  update: UserAtomsUpdateConnectionInput
  where: UserAtomsConnectionWhere
}

type UserComponentComponentsAggregationSelection {
  count: Int!
  node: UserComponentComponentsNodeAggregateSelection
}

type UserComponentComponentsNodeAggregateSelection {
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input UserComponentsAggregateInput {
  AND: [UserComponentsAggregateInput!]
  NOT: UserComponentsAggregateInput
  OR: [UserComponentsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserComponentsNodeAggregationWhereInput
}

input UserComponentsConnectFieldInput {
  connect: [ComponentConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ComponentConnectWhere
}

type UserComponentsConnection {
  edges: [UserComponentsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserComponentsConnectionSort {
  node: ComponentSort
}

input UserComponentsConnectionWhere {
  AND: [UserComponentsConnectionWhere!]
  NOT: UserComponentsConnectionWhere
  OR: [UserComponentsConnectionWhere!]
  node: ComponentWhere
}

input UserComponentsCreateFieldInput {
  node: ComponentCreateInput!
}

input UserComponentsDeleteFieldInput {
  delete: ComponentDeleteInput
  where: UserComponentsConnectionWhere
}

input UserComponentsDisconnectFieldInput {
  disconnect: ComponentDisconnectInput
  where: UserComponentsConnectionWhere
}

input UserComponentsFieldInput {
  connect: [UserComponentsConnectFieldInput!]
  create: [UserComponentsCreateFieldInput!]
}

input UserComponentsNodeAggregationWhereInput {
  AND: [UserComponentsNodeAggregationWhereInput!]
  NOT: UserComponentsNodeAggregationWhereInput
  OR: [UserComponentsNodeAggregationWhereInput!]
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type UserComponentsRelationship {
  cursor: String!
  node: Component!
}

input UserComponentsUpdateConnectionInput {
  node: ComponentUpdateInput
}

input UserComponentsUpdateFieldInput {
  connect: [UserComponentsConnectFieldInput!]
  create: [UserComponentsCreateFieldInput!]
  delete: [UserComponentsDeleteFieldInput!]
  disconnect: [UserComponentsDisconnectFieldInput!]
  update: UserComponentsUpdateConnectionInput
  where: UserComponentsConnectionWhere
}

input UserConnectInput {
  apps: [UserAppsConnectFieldInput!]
  atoms: [UserAtomsConnectFieldInput!]
  components: [UserComponentsConnectFieldInput!]
  elements: [UserElementsConnectFieldInput!]
  preferences: UserPreferencesConnectFieldInput
  tags: [UserTagsConnectFieldInput!]
  types: [UserTypesConnectFieldInput!]
}

input UserConnectWhere {
  node: UserWhere!
}

input UserCreateInput {
  apps: UserAppsFieldInput
  atoms: UserAtomsFieldInput
  auth0Id: String!
  components: UserComponentsFieldInput
  elements: UserElementsFieldInput
  email: String!
  id: ID!
  name: String!
  picture: String!
  preferences: UserPreferencesFieldInput
  roles: [Role!]
  tags: UserTagsFieldInput
  types: UserTypesFieldInput
  username: String!
}

type UserCreatedEvent {
  createdUser: UserEventPayload!
  event: EventType!
  timestamp: Float!
}

input UserDeleteInput {
  apps: [UserAppsDeleteFieldInput!]
  atoms: [UserAtomsDeleteFieldInput!]
  components: [UserComponentsDeleteFieldInput!]
  elements: [UserElementsDeleteFieldInput!]
  preferences: UserPreferencesDeleteFieldInput
  tags: [UserTagsDeleteFieldInput!]
  types: [UserTypesDeleteFieldInput!]
}

type UserDeletedEvent {
  deletedUser: UserEventPayload!
  event: EventType!
  timestamp: Float!
}

input UserDisconnectInput {
  apps: [UserAppsDisconnectFieldInput!]
  atoms: [UserAtomsDisconnectFieldInput!]
  components: [UserComponentsDisconnectFieldInput!]
  elements: [UserElementsDisconnectFieldInput!]
  preferences: UserPreferencesDisconnectFieldInput
  tags: [UserTagsDisconnectFieldInput!]
  types: [UserTypesDisconnectFieldInput!]
}

type UserEdge {
  cursor: String!
  node: User!
}

type UserElementElementsAggregationSelection {
  count: Int!
  node: UserElementElementsNodeAggregateSelection
}

type UserElementElementsNodeAggregateSelection {
  childMapperPropKey: StringAggregateSelection!
  compositeKey: StringAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey: StringAggregateSelection!
  renderIfExpression: StringAggregateSelection!
  style: StringAggregateSelection!
}

input UserElementsAggregateInput {
  AND: [UserElementsAggregateInput!]
  NOT: UserElementsAggregateInput
  OR: [UserElementsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserElementsNodeAggregationWhereInput
}

input UserElementsConnectFieldInput {
  connect: [ElementConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: ElementConnectWhere
}

type UserElementsConnection {
  edges: [UserElementsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserElementsConnectionSort {
  node: ElementSort
}

input UserElementsConnectionWhere {
  AND: [UserElementsConnectionWhere!]
  NOT: UserElementsConnectionWhere
  OR: [UserElementsConnectionWhere!]
  node: ElementWhere
}

input UserElementsCreateFieldInput {
  node: ElementCreateInput!
}

input UserElementsDeleteFieldInput {
  delete: ElementDeleteInput
  where: UserElementsConnectionWhere
}

input UserElementsDisconnectFieldInput {
  disconnect: ElementDisconnectInput
  where: UserElementsConnectionWhere
}

input UserElementsFieldInput {
  connect: [UserElementsConnectFieldInput!]
  create: [UserElementsCreateFieldInput!]
}

input UserElementsNodeAggregationWhereInput {
  AND: [UserElementsNodeAggregationWhereInput!]
  NOT: UserElementsNodeAggregationWhereInput
  OR: [UserElementsNodeAggregationWhereInput!]
  childMapperPropKey_AVERAGE_LENGTH_EQUAL: Float
  childMapperPropKey_AVERAGE_LENGTH_GT: Float
  childMapperPropKey_AVERAGE_LENGTH_GTE: Float
  childMapperPropKey_AVERAGE_LENGTH_LT: Float
  childMapperPropKey_AVERAGE_LENGTH_LTE: Float
  childMapperPropKey_LONGEST_LENGTH_EQUAL: Int
  childMapperPropKey_LONGEST_LENGTH_GT: Int
  childMapperPropKey_LONGEST_LENGTH_GTE: Int
  childMapperPropKey_LONGEST_LENGTH_LT: Int
  childMapperPropKey_LONGEST_LENGTH_LTE: Int
  childMapperPropKey_SHORTEST_LENGTH_EQUAL: Int
  childMapperPropKey_SHORTEST_LENGTH_GT: Int
  childMapperPropKey_SHORTEST_LENGTH_GTE: Int
  childMapperPropKey_SHORTEST_LENGTH_LT: Int
  childMapperPropKey_SHORTEST_LENGTH_LTE: Int
  compositeKey_AVERAGE_LENGTH_EQUAL: Float
  compositeKey_AVERAGE_LENGTH_GT: Float
  compositeKey_AVERAGE_LENGTH_GTE: Float
  compositeKey_AVERAGE_LENGTH_LT: Float
  compositeKey_AVERAGE_LENGTH_LTE: Float
  compositeKey_LONGEST_LENGTH_EQUAL: Int
  compositeKey_LONGEST_LENGTH_GT: Int
  compositeKey_LONGEST_LENGTH_GTE: Int
  compositeKey_LONGEST_LENGTH_LT: Int
  compositeKey_LONGEST_LENGTH_LTE: Int
  compositeKey_SHORTEST_LENGTH_EQUAL: Int
  compositeKey_SHORTEST_LENGTH_GT: Int
  compositeKey_SHORTEST_LENGTH_GTE: Int
  compositeKey_SHORTEST_LENGTH_LT: Int
  compositeKey_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  renderForEachPropKey_AVERAGE_LENGTH_EQUAL: Float
  renderForEachPropKey_AVERAGE_LENGTH_GT: Float
  renderForEachPropKey_AVERAGE_LENGTH_GTE: Float
  renderForEachPropKey_AVERAGE_LENGTH_LT: Float
  renderForEachPropKey_AVERAGE_LENGTH_LTE: Float
  renderForEachPropKey_LONGEST_LENGTH_EQUAL: Int
  renderForEachPropKey_LONGEST_LENGTH_GT: Int
  renderForEachPropKey_LONGEST_LENGTH_GTE: Int
  renderForEachPropKey_LONGEST_LENGTH_LT: Int
  renderForEachPropKey_LONGEST_LENGTH_LTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_EQUAL: Int
  renderForEachPropKey_SHORTEST_LENGTH_GT: Int
  renderForEachPropKey_SHORTEST_LENGTH_GTE: Int
  renderForEachPropKey_SHORTEST_LENGTH_LT: Int
  renderForEachPropKey_SHORTEST_LENGTH_LTE: Int
  renderIfExpression_AVERAGE_LENGTH_EQUAL: Float
  renderIfExpression_AVERAGE_LENGTH_GT: Float
  renderIfExpression_AVERAGE_LENGTH_GTE: Float
  renderIfExpression_AVERAGE_LENGTH_LT: Float
  renderIfExpression_AVERAGE_LENGTH_LTE: Float
  renderIfExpression_LONGEST_LENGTH_EQUAL: Int
  renderIfExpression_LONGEST_LENGTH_GT: Int
  renderIfExpression_LONGEST_LENGTH_GTE: Int
  renderIfExpression_LONGEST_LENGTH_LT: Int
  renderIfExpression_LONGEST_LENGTH_LTE: Int
  renderIfExpression_SHORTEST_LENGTH_EQUAL: Int
  renderIfExpression_SHORTEST_LENGTH_GT: Int
  renderIfExpression_SHORTEST_LENGTH_GTE: Int
  renderIfExpression_SHORTEST_LENGTH_LT: Int
  renderIfExpression_SHORTEST_LENGTH_LTE: Int
  style_AVERAGE_LENGTH_EQUAL: Float
  style_AVERAGE_LENGTH_GT: Float
  style_AVERAGE_LENGTH_GTE: Float
  style_AVERAGE_LENGTH_LT: Float
  style_AVERAGE_LENGTH_LTE: Float
  style_LONGEST_LENGTH_EQUAL: Int
  style_LONGEST_LENGTH_GT: Int
  style_LONGEST_LENGTH_GTE: Int
  style_LONGEST_LENGTH_LT: Int
  style_LONGEST_LENGTH_LTE: Int
  style_SHORTEST_LENGTH_EQUAL: Int
  style_SHORTEST_LENGTH_GT: Int
  style_SHORTEST_LENGTH_GTE: Int
  style_SHORTEST_LENGTH_LT: Int
  style_SHORTEST_LENGTH_LTE: Int
}

type UserElementsRelationship {
  cursor: String!
  node: Element!
}

input UserElementsUpdateConnectionInput {
  node: ElementUpdateInput
}

input UserElementsUpdateFieldInput {
  connect: [UserElementsConnectFieldInput!]
  create: [UserElementsCreateFieldInput!]
  delete: [UserElementsDeleteFieldInput!]
  disconnect: [UserElementsDisconnectFieldInput!]
  update: UserElementsUpdateConnectionInput
  where: UserElementsConnectionWhere
}

type UserEventPayload {
  auth0Id: String!
  email: String!
  id: ID!
  name: String!
  picture: String!
  roles: [Role!]
  username: String!
}

type UserIBaseTypeTypesAggregationSelection {
  count: Int!
  node: UserIBaseTypeTypesNodeAggregateSelection
}

type UserIBaseTypeTypesNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input UserOptions {
  limit: Int
  offset: Int

  """
  Specify one or more UserSort objects to sort Users by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [UserSort!]
}

type UserPreferencePreferencesAggregationSelection {
  count: Int!
  node: UserPreferencePreferencesNodeAggregateSelection
}

type UserPreferencePreferencesNodeAggregateSelection {
  builderWidth: FloatAggregateSelection!
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

input UserPreferencesAggregateInput {
  AND: [UserPreferencesAggregateInput!]
  NOT: UserPreferencesAggregateInput
  OR: [UserPreferencesAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserPreferencesNodeAggregationWhereInput
}

input UserPreferencesConnectFieldInput {
  connect: PreferenceConnectInput

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: PreferenceConnectWhere
}

type UserPreferencesConnection {
  edges: [UserPreferencesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserPreferencesConnectionSort {
  node: PreferenceSort
}

input UserPreferencesConnectionWhere {
  AND: [UserPreferencesConnectionWhere!]
  NOT: UserPreferencesConnectionWhere
  OR: [UserPreferencesConnectionWhere!]
  node: PreferenceWhere
}

input UserPreferencesCreateFieldInput {
  node: PreferenceCreateInput!
}

input UserPreferencesDeleteFieldInput {
  delete: PreferenceDeleteInput
  where: UserPreferencesConnectionWhere
}

input UserPreferencesDisconnectFieldInput {
  disconnect: PreferenceDisconnectInput
  where: UserPreferencesConnectionWhere
}

input UserPreferencesFieldInput {
  connect: UserPreferencesConnectFieldInput
  create: UserPreferencesCreateFieldInput
}

input UserPreferencesNodeAggregationWhereInput {
  AND: [UserPreferencesNodeAggregationWhereInput!]
  NOT: UserPreferencesNodeAggregationWhereInput
  OR: [UserPreferencesNodeAggregationWhereInput!]
  builderWidth_AVERAGE_EQUAL: Float
  builderWidth_AVERAGE_GT: Float
  builderWidth_AVERAGE_GTE: Float
  builderWidth_AVERAGE_LT: Float
  builderWidth_AVERAGE_LTE: Float
  builderWidth_MAX_EQUAL: Float
  builderWidth_MAX_GT: Float
  builderWidth_MAX_GTE: Float
  builderWidth_MAX_LT: Float
  builderWidth_MAX_LTE: Float
  builderWidth_MIN_EQUAL: Float
  builderWidth_MIN_GT: Float
  builderWidth_MIN_GTE: Float
  builderWidth_MIN_LT: Float
  builderWidth_MIN_LTE: Float
  builderWidth_SUM_EQUAL: Float
  builderWidth_SUM_GT: Float
  builderWidth_SUM_GTE: Float
  builderWidth_SUM_LT: Float
  builderWidth_SUM_LTE: Float
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
}

type UserPreferencesRelationship {
  cursor: String!
  node: Preference!
}

input UserPreferencesUpdateConnectionInput {
  node: PreferenceUpdateInput
}

input UserPreferencesUpdateFieldInput {
  connect: UserPreferencesConnectFieldInput
  create: UserPreferencesCreateFieldInput
  delete: UserPreferencesDeleteFieldInput
  disconnect: UserPreferencesDisconnectFieldInput
  update: UserPreferencesUpdateConnectionInput
  where: UserPreferencesConnectionWhere
}

"""
Fields to sort Users by. The order in which sorts are applied is not guaranteed when specifying many fields in one UserSort object.
"""
input UserSort {
  auth0Id: SortDirection
  email: SortDirection
  id: SortDirection
  name: SortDirection
  picture: SortDirection
  username: SortDirection
}

input UserSubscriptionWhere {
  AND: [UserSubscriptionWhere!]
  NOT: UserSubscriptionWhere
  OR: [UserSubscriptionWhere!]
  auth0Id: String @deprecated(reason: "Please use the explicit _EQ version")
  auth0Id_CONTAINS: String
  auth0Id_ENDS_WITH: String
  auth0Id_EQ: String
  auth0Id_IN: [String!]
  auth0Id_MATCHES: String
  auth0Id_STARTS_WITH: String
  email: String @deprecated(reason: "Please use the explicit _EQ version")
  email_CONTAINS: String
  email_ENDS_WITH: String
  email_EQ: String
  email_IN: [String!]
  email_MATCHES: String
  email_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  picture: String @deprecated(reason: "Please use the explicit _EQ version")
  picture_CONTAINS: String
  picture_ENDS_WITH: String
  picture_EQ: String
  picture_IN: [String!]
  picture_MATCHES: String
  picture_STARTS_WITH: String
  roles: [Role!] @deprecated(reason: "Please use the explicit _EQ version")
  roles_EQ: [Role!]
  roles_INCLUDES: Role
  username: String @deprecated(reason: "Please use the explicit _EQ version")
  username_CONTAINS: String
  username_ENDS_WITH: String
  username_EQ: String
  username_IN: [String!]
  username_MATCHES: String
  username_STARTS_WITH: String
}

type UserTagTagsAggregationSelection {
  count: Int!
  node: UserTagTagsNodeAggregateSelection
}

type UserTagTagsNodeAggregateSelection {
  id: IDAggregateSelection! @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name: StringAggregateSelection!
}

input UserTagsAggregateInput {
  AND: [UserTagsAggregateInput!]
  NOT: UserTagsAggregateInput
  OR: [UserTagsAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserTagsNodeAggregationWhereInput
}

input UserTagsConnectFieldInput {
  connect: [TagConnectInput!]

  """
  Whether or not to overwrite any matching relationship with the new properties.
  """
  overwrite: Boolean! = true @deprecated(reason: "The overwrite argument is deprecated and will be removed")
  where: TagConnectWhere
}

type UserTagsConnection {
  edges: [UserTagsRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserTagsConnectionSort {
  node: TagSort
}

input UserTagsConnectionWhere {
  AND: [UserTagsConnectionWhere!]
  NOT: UserTagsConnectionWhere
  OR: [UserTagsConnectionWhere!]
  node: TagWhere
}

input UserTagsCreateFieldInput {
  node: TagCreateInput!
}

input UserTagsDeleteFieldInput {
  delete: TagDeleteInput
  where: UserTagsConnectionWhere
}

input UserTagsDisconnectFieldInput {
  disconnect: TagDisconnectInput
  where: UserTagsConnectionWhere
}

input UserTagsFieldInput {
  connect: [UserTagsConnectFieldInput!]
  create: [UserTagsCreateFieldInput!]
}

input UserTagsNodeAggregationWhereInput {
  AND: [UserTagsNodeAggregationWhereInput!]
  NOT: UserTagsNodeAggregationWhereInput
  OR: [UserTagsNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type UserTagsRelationship {
  cursor: String!
  node: Tag!
}

input UserTagsUpdateConnectionInput {
  node: TagUpdateInput
}

input UserTagsUpdateFieldInput {
  connect: [UserTagsConnectFieldInput!]
  create: [UserTagsCreateFieldInput!]
  delete: [UserTagsDeleteFieldInput!]
  disconnect: [UserTagsDisconnectFieldInput!]
  update: UserTagsUpdateConnectionInput
  where: UserTagsConnectionWhere
}

input UserTypesAggregateInput {
  AND: [UserTypesAggregateInput!]
  NOT: UserTypesAggregateInput
  OR: [UserTypesAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: UserTypesNodeAggregationWhereInput
}

input UserTypesConnectFieldInput {
  connect: IBaseTypeConnectInput
  where: IBaseTypeConnectWhere
}

type UserTypesConnection {
  edges: [UserTypesRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input UserTypesConnectionSort {
  node: IBaseTypeSort
}

input UserTypesConnectionWhere {
  AND: [UserTypesConnectionWhere!]
  NOT: UserTypesConnectionWhere
  OR: [UserTypesConnectionWhere!]
  node: IBaseTypeWhere
}

input UserTypesCreateFieldInput {
  node: IBaseTypeCreateInput!
}

input UserTypesDeleteFieldInput {
  delete: IBaseTypeDeleteInput
  where: UserTypesConnectionWhere
}

input UserTypesDisconnectFieldInput {
  disconnect: IBaseTypeDisconnectInput
  where: UserTypesConnectionWhere
}

input UserTypesFieldInput {
  connect: [UserTypesConnectFieldInput!]
  create: [UserTypesCreateFieldInput!]
}

input UserTypesNodeAggregationWhereInput {
  AND: [UserTypesNodeAggregationWhereInput!]
  NOT: UserTypesNodeAggregationWhereInput
  OR: [UserTypesNodeAggregationWhereInput!]
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
}

type UserTypesRelationship {
  cursor: String!
  node: IBaseType!
}

input UserTypesUpdateConnectionInput {
  node: IBaseTypeUpdateInput
}

input UserTypesUpdateFieldInput {
  connect: [UserTypesConnectFieldInput!]
  create: [UserTypesCreateFieldInput!]
  delete: [UserTypesDeleteFieldInput!]
  disconnect: [UserTypesDisconnectFieldInput!]
  update: UserTypesUpdateConnectionInput
  where: UserTypesConnectionWhere
}

input UserUpdateInput {
  apps: [UserAppsUpdateFieldInput!]
  atoms: [UserAtomsUpdateFieldInput!]
  auth0Id: String @deprecated(reason: "Please use the explicit _SET field")
  auth0Id_SET: String
  components: [UserComponentsUpdateFieldInput!]
  elements: [UserElementsUpdateFieldInput!]
  email: String @deprecated(reason: "Please use the explicit _SET field")
  email_SET: String
  name: String @deprecated(reason: "Please use the explicit _SET field")
  name_SET: String
  picture: String @deprecated(reason: "Please use the explicit _SET field")
  picture_SET: String
  preferences: UserPreferencesUpdateFieldInput
  roles: [Role!] @deprecated(reason: "Please use the explicit _SET field")
  roles_SET: [Role!]
  tags: [UserTagsUpdateFieldInput!]
  types: [UserTypesUpdateFieldInput!]
  username: String @deprecated(reason: "Please use the explicit _SET field")
  username_SET: String
}

type UserUpdatedEvent {
  event: EventType!
  previousState: UserEventPayload!
  timestamp: Float!
  updatedUser: UserEventPayload!
}

input UserWhere {
  AND: [UserWhere!]
  NOT: UserWhere
  OR: [UserWhere!]
  appsAggregate: UserAppsAggregateInput

  """
  Return Users where all of the related UserAppsConnections match this filter
  """
  appsConnection_ALL: UserAppsConnectionWhere

  """
  Return Users where none of the related UserAppsConnections match this filter
  """
  appsConnection_NONE: UserAppsConnectionWhere

  """
  Return Users where one of the related UserAppsConnections match this filter
  """
  appsConnection_SINGLE: UserAppsConnectionWhere

  """
  Return Users where some of the related UserAppsConnections match this filter
  """
  appsConnection_SOME: UserAppsConnectionWhere

  """Return Users where all of the related Apps match this filter"""
  apps_ALL: AppWhere

  """Return Users where none of the related Apps match this filter"""
  apps_NONE: AppWhere

  """Return Users where one of the related Apps match this filter"""
  apps_SINGLE: AppWhere

  """Return Users where some of the related Apps match this filter"""
  apps_SOME: AppWhere
  atomsAggregate: UserAtomsAggregateInput

  """
  Return Users where all of the related UserAtomsConnections match this filter
  """
  atomsConnection_ALL: UserAtomsConnectionWhere

  """
  Return Users where none of the related UserAtomsConnections match this filter
  """
  atomsConnection_NONE: UserAtomsConnectionWhere

  """
  Return Users where one of the related UserAtomsConnections match this filter
  """
  atomsConnection_SINGLE: UserAtomsConnectionWhere

  """
  Return Users where some of the related UserAtomsConnections match this filter
  """
  atomsConnection_SOME: UserAtomsConnectionWhere

  """Return Users where all of the related Atoms match this filter"""
  atoms_ALL: AtomWhere

  """Return Users where none of the related Atoms match this filter"""
  atoms_NONE: AtomWhere

  """Return Users where one of the related Atoms match this filter"""
  atoms_SINGLE: AtomWhere

  """Return Users where some of the related Atoms match this filter"""
  atoms_SOME: AtomWhere
  auth0Id: String @deprecated(reason: "Please use the explicit _EQ version")
  auth0Id_CONTAINS: String
  auth0Id_ENDS_WITH: String
  auth0Id_EQ: String
  auth0Id_IN: [String!]
  auth0Id_MATCHES: String
  auth0Id_STARTS_WITH: String
  componentsAggregate: UserComponentsAggregateInput

  """
  Return Users where all of the related UserComponentsConnections match this filter
  """
  componentsConnection_ALL: UserComponentsConnectionWhere

  """
  Return Users where none of the related UserComponentsConnections match this filter
  """
  componentsConnection_NONE: UserComponentsConnectionWhere

  """
  Return Users where one of the related UserComponentsConnections match this filter
  """
  componentsConnection_SINGLE: UserComponentsConnectionWhere

  """
  Return Users where some of the related UserComponentsConnections match this filter
  """
  componentsConnection_SOME: UserComponentsConnectionWhere

  """Return Users where all of the related Components match this filter"""
  components_ALL: ComponentWhere

  """Return Users where none of the related Components match this filter"""
  components_NONE: ComponentWhere

  """Return Users where one of the related Components match this filter"""
  components_SINGLE: ComponentWhere

  """Return Users where some of the related Components match this filter"""
  components_SOME: ComponentWhere
  elementsAggregate: UserElementsAggregateInput

  """
  Return Users where all of the related UserElementsConnections match this filter
  """
  elementsConnection_ALL: UserElementsConnectionWhere

  """
  Return Users where none of the related UserElementsConnections match this filter
  """
  elementsConnection_NONE: UserElementsConnectionWhere

  """
  Return Users where one of the related UserElementsConnections match this filter
  """
  elementsConnection_SINGLE: UserElementsConnectionWhere

  """
  Return Users where some of the related UserElementsConnections match this filter
  """
  elementsConnection_SOME: UserElementsConnectionWhere

  """Return Users where all of the related Elements match this filter"""
  elements_ALL: ElementWhere

  """Return Users where none of the related Elements match this filter"""
  elements_NONE: ElementWhere

  """Return Users where one of the related Elements match this filter"""
  elements_SINGLE: ElementWhere

  """Return Users where some of the related Elements match this filter"""
  elements_SOME: ElementWhere
  email: String @deprecated(reason: "Please use the explicit _EQ version")
  email_CONTAINS: String
  email_ENDS_WITH: String
  email_EQ: String
  email_IN: [String!]
  email_MATCHES: String
  email_STARTS_WITH: String
  id: ID @deprecated(reason: "Please use the explicit _EQ version")
  id_CONTAINS: ID
  id_ENDS_WITH: ID
  id_EQ: ID
  id_IN: [ID!]
  id_STARTS_WITH: ID
  name: String @deprecated(reason: "Please use the explicit _EQ version")
  name_CONTAINS: String
  name_ENDS_WITH: String
  name_EQ: String
  name_IN: [String!]
  name_MATCHES: String
  name_STARTS_WITH: String
  picture: String @deprecated(reason: "Please use the explicit _EQ version")
  picture_CONTAINS: String
  picture_ENDS_WITH: String
  picture_EQ: String
  picture_IN: [String!]
  picture_MATCHES: String
  picture_STARTS_WITH: String
  preferences: PreferenceWhere
  preferencesAggregate: UserPreferencesAggregateInput
  preferencesConnection: UserPreferencesConnectionWhere
  roles: [Role!] @deprecated(reason: "Please use the explicit _EQ version")
  roles_EQ: [Role!]
  roles_INCLUDES: Role
  tagsAggregate: UserTagsAggregateInput

  """
  Return Users where all of the related UserTagsConnections match this filter
  """
  tagsConnection_ALL: UserTagsConnectionWhere

  """
  Return Users where none of the related UserTagsConnections match this filter
  """
  tagsConnection_NONE: UserTagsConnectionWhere

  """
  Return Users where one of the related UserTagsConnections match this filter
  """
  tagsConnection_SINGLE: UserTagsConnectionWhere

  """
  Return Users where some of the related UserTagsConnections match this filter
  """
  tagsConnection_SOME: UserTagsConnectionWhere

  """Return Users where all of the related Tags match this filter"""
  tags_ALL: TagWhere

  """Return Users where none of the related Tags match this filter"""
  tags_NONE: TagWhere

  """Return Users where one of the related Tags match this filter"""
  tags_SINGLE: TagWhere

  """Return Users where some of the related Tags match this filter"""
  tags_SOME: TagWhere
  typesAggregate: UserTypesAggregateInput

  """
  Return Users where all of the related UserTypesConnections match this filter
  """
  typesConnection_ALL: UserTypesConnectionWhere

  """
  Return Users where none of the related UserTypesConnections match this filter
  """
  typesConnection_NONE: UserTypesConnectionWhere

  """
  Return Users where one of the related UserTypesConnections match this filter
  """
  typesConnection_SINGLE: UserTypesConnectionWhere

  """
  Return Users where some of the related UserTypesConnections match this filter
  """
  typesConnection_SOME: UserTypesConnectionWhere

  """Return Users where all of the related IBaseTypes match this filter"""
  types_ALL: IBaseTypeWhere

  """Return Users where none of the related IBaseTypes match this filter"""
  types_NONE: IBaseTypeWhere

  """Return Users where one of the related IBaseTypes match this filter"""
  types_SINGLE: IBaseTypeWhere

  """Return Users where some of the related IBaseTypes match this filter"""
  types_SOME: IBaseTypeWhere
  username: String @deprecated(reason: "Please use the explicit _EQ version")
  username_CONTAINS: String
  username_ENDS_WITH: String
  username_EQ: String
  username_IN: [String!]
  username_MATCHES: String
  username_STARTS_WITH: String
}

type UsersConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

interface WithDescendants {
  descendantTypesIds: [ID!]!
}

type WithDescendantsAggregateSelection {
  count: Int!
}

type WithDescendantsConnection {
  edges: [WithDescendantsEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type WithDescendantsEdge {
  cursor: String!
  node: WithDescendants!
}

enum WithDescendantsImplementation {
  ArrayType
  InterfaceType
  UnionType
}

input WithDescendantsOptions {
  limit: Int
  offset: Int
}

input WithDescendantsWhere {
  AND: [WithDescendantsWhere!]
  NOT: WithDescendantsWhere
  OR: [WithDescendantsWhere!]
  descendantTypesIds: [ID!] @deprecated(reason: "Please use the explicit _EQ version")
  descendantTypesIds_EQ: [ID!]
  descendantTypesIds_INCLUDES: ID
  typename: [WithDescendantsImplementation!]
  typename_IN: [WithDescendantsImplementation!] @deprecated(reason: "The typename_IN filter is deprecated, please use the typename filter instead")
}

interface WithOwner {
  owner(limit: Int, offset: Int, options: UserOptions @deprecated(reason: "Query options argument is deprecated, please use pagination arguments like limit, offset and sort instead."), sort: [UserSort!], where: UserWhere): User!
  ownerConnection(after: String, first: Int, sort: [WithOwnerOwnerConnectionSort!], where: WithOwnerOwnerConnectionWhere): WithOwnerOwnerConnection!
}

type WithOwnerAggregateSelection {
  count: Int!
}

type WithOwnerEdge {
  cursor: String!
  node: WithOwner!
}

enum WithOwnerImplementation {
  App
  Atom
  AuthGuard
  Component
  Preference
  Resource
  Tag
}

input WithOwnerOptions {
  limit: Int
  offset: Int
}

input WithOwnerOwnerAggregateInput {
  AND: [WithOwnerOwnerAggregateInput!]
  NOT: WithOwnerOwnerAggregateInput
  OR: [WithOwnerOwnerAggregateInput!]
  count: Int @deprecated(reason: "Please use the explicit _EQ version")
  count_EQ: Int
  count_GT: Int
  count_GTE: Int
  count_LT: Int
  count_LTE: Int
  node: WithOwnerOwnerNodeAggregationWhereInput
}

type WithOwnerOwnerConnection {
  edges: [WithOwnerOwnerRelationship!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

input WithOwnerOwnerConnectionSort {
  node: UserSort
}

input WithOwnerOwnerConnectionWhere {
  AND: [WithOwnerOwnerConnectionWhere!]
  NOT: WithOwnerOwnerConnectionWhere
  OR: [WithOwnerOwnerConnectionWhere!]
  node: UserWhere
}

input WithOwnerOwnerDeleteFieldInput {
  delete: UserDeleteInput
  where: WithOwnerOwnerConnectionWhere
}

input WithOwnerOwnerDisconnectFieldInput {
  disconnect: UserDisconnectInput
  where: WithOwnerOwnerConnectionWhere
}

input WithOwnerOwnerNodeAggregationWhereInput {
  AND: [WithOwnerOwnerNodeAggregationWhereInput!]
  NOT: WithOwnerOwnerNodeAggregationWhereInput
  OR: [WithOwnerOwnerNodeAggregationWhereInput!]
  auth0Id_AVERAGE_LENGTH_EQUAL: Float
  auth0Id_AVERAGE_LENGTH_GT: Float
  auth0Id_AVERAGE_LENGTH_GTE: Float
  auth0Id_AVERAGE_LENGTH_LT: Float
  auth0Id_AVERAGE_LENGTH_LTE: Float
  auth0Id_LONGEST_LENGTH_EQUAL: Int
  auth0Id_LONGEST_LENGTH_GT: Int
  auth0Id_LONGEST_LENGTH_GTE: Int
  auth0Id_LONGEST_LENGTH_LT: Int
  auth0Id_LONGEST_LENGTH_LTE: Int
  auth0Id_SHORTEST_LENGTH_EQUAL: Int
  auth0Id_SHORTEST_LENGTH_GT: Int
  auth0Id_SHORTEST_LENGTH_GTE: Int
  auth0Id_SHORTEST_LENGTH_LT: Int
  auth0Id_SHORTEST_LENGTH_LTE: Int
  email_AVERAGE_LENGTH_EQUAL: Float
  email_AVERAGE_LENGTH_GT: Float
  email_AVERAGE_LENGTH_GTE: Float
  email_AVERAGE_LENGTH_LT: Float
  email_AVERAGE_LENGTH_LTE: Float
  email_LONGEST_LENGTH_EQUAL: Int
  email_LONGEST_LENGTH_GT: Int
  email_LONGEST_LENGTH_GTE: Int
  email_LONGEST_LENGTH_LT: Int
  email_LONGEST_LENGTH_LTE: Int
  email_SHORTEST_LENGTH_EQUAL: Int
  email_SHORTEST_LENGTH_GT: Int
  email_SHORTEST_LENGTH_GTE: Int
  email_SHORTEST_LENGTH_LT: Int
  email_SHORTEST_LENGTH_LTE: Int
  id_MAX_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MAX_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_EQUAL: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_GTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LT: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  id_MIN_LTE: ID @deprecated(reason: "aggregation of ID fields are deprecated and will be removed")
  name_AVERAGE_LENGTH_EQUAL: Float
  name_AVERAGE_LENGTH_GT: Float
  name_AVERAGE_LENGTH_GTE: Float
  name_AVERAGE_LENGTH_LT: Float
  name_AVERAGE_LENGTH_LTE: Float
  name_LONGEST_LENGTH_EQUAL: Int
  name_LONGEST_LENGTH_GT: Int
  name_LONGEST_LENGTH_GTE: Int
  name_LONGEST_LENGTH_LT: Int
  name_LONGEST_LENGTH_LTE: Int
  name_SHORTEST_LENGTH_EQUAL: Int
  name_SHORTEST_LENGTH_GT: Int
  name_SHORTEST_LENGTH_GTE: Int
  name_SHORTEST_LENGTH_LT: Int
  name_SHORTEST_LENGTH_LTE: Int
  picture_AVERAGE_LENGTH_EQUAL: Float
  picture_AVERAGE_LENGTH_GT: Float
  picture_AVERAGE_LENGTH_GTE: Float
  picture_AVERAGE_LENGTH_LT: Float
  picture_AVERAGE_LENGTH_LTE: Float
  picture_LONGEST_LENGTH_EQUAL: Int
  picture_LONGEST_LENGTH_GT: Int
  picture_LONGEST_LENGTH_GTE: Int
  picture_LONGEST_LENGTH_LT: Int
  picture_LONGEST_LENGTH_LTE: Int
  picture_SHORTEST_LENGTH_EQUAL: Int
  picture_SHORTEST_LENGTH_GT: Int
  picture_SHORTEST_LENGTH_GTE: Int
  picture_SHORTEST_LENGTH_LT: Int
  picture_SHORTEST_LENGTH_LTE: Int
  username_AVERAGE_LENGTH_EQUAL: Float
  username_AVERAGE_LENGTH_GT: Float
  username_AVERAGE_LENGTH_GTE: Float
  username_AVERAGE_LENGTH_LT: Float
  username_AVERAGE_LENGTH_LTE: Float
  username_LONGEST_LENGTH_EQUAL: Int
  username_LONGEST_LENGTH_GT: Int
  username_LONGEST_LENGTH_GTE: Int
  username_LONGEST_LENGTH_LT: Int
  username_LONGEST_LENGTH_LTE: Int
  username_SHORTEST_LENGTH_EQUAL: Int
  username_SHORTEST_LENGTH_GT: Int
  username_SHORTEST_LENGTH_GTE: Int
  username_SHORTEST_LENGTH_LT: Int
  username_SHORTEST_LENGTH_LTE: Int
}

type WithOwnerOwnerRelationship {
  cursor: String!
  node: User!
}

input WithOwnerWhere {
  AND: [WithOwnerWhere!]
  NOT: WithOwnerWhere
  OR: [WithOwnerWhere!]
  owner: UserWhere
  ownerAggregate: WithOwnerOwnerAggregateInput
  ownerConnection: WithOwnerOwnerConnectionWhere
  typename: [WithOwnerImplementation!]
  typename_IN: [WithOwnerImplementation!] @deprecated(reason: "The typename_IN filter is deprecated, please use the typename filter instead")
}

type WithOwnersConnection {
  edges: [WithOwnerEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}