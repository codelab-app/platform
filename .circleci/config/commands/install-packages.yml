steps:
  # NPM cache already restored in restore-workspace, which is shared with other jobs. While pnpm cache is only needed in the setup-workspace job
  #
  # The time to restore node_modules is longer than the time saving from installing node_modules again
  #
  - restore_cache:
      name: 'Restore pnpm Package Cache'
      keys:
        - pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
        - pnpm-cache
  # Need to bust cache manually by updating lock file
  # - run:
  #     name: 'Prune pnpm store'
  #     command: |
  #       pnpm store path
  #       pnpm store prune
  - run:
      name: 'Install NPM Packages'
      command: pnpm install --frozen-lockfile
  - save_cache:
      name: 'Save pnpm Cache'
      key: pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
      paths:
        - ~/.pnpm-store
  - run:
      name: 'Generate dist libs checksum for cache key'
      command: ~/project/scripts/circleci/generate-dist-checksum.sh
  - save_cache:
      name: 'Save node_modules Cache'
      # Include dist/libs package.json files in cache key because pnpm uses symlinks for file: protocol dependencies.
      # When dist files change but pnpm-lock.yaml doesn't, the cached node_modules would have stale symlinks
      # pointing to old dist content. This ensures fresh symlinks when workspace packages are updated.
      key: node-modules-cache-{{ checksum "pnpm-lock.yaml" }}-{{ checksum "/tmp/dist-libs-checksum.txt" }}
      paths:
        - ~/project/node_modules
  # node_modules cache needs to be checked for cache reset before we can save, otherwise nx cache grows too much. This step happens after build
