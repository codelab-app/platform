{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": [
    "import",
    "unused-imports",
    "prettier",
    "simple-import-sort",
    "lodash",
    "prefer-arrow",
    // https://github.com/gajus/eslint-plugin-canonical#no-unused-exports
    "canonical",
    "sort-destructure-keys",
    // @typescript-eslint/member-ordering doesn't auto-fix
    // But conflicts with member-ordering, since that puts methods after properties, while `typescript-sort-keys` sorts everything alphabetically
    "typescript-sort-keys",
    "unicorn",
    "@stylistic/ts",
    "react"
  ],
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true, // For browser globals like window and document
    "node": true, // For Node.js globals like process and console
    "jest/globals": true
  },
  "globals": {
    "JQuery": "readonly",
    "JQueryStatic": "readonly"
  },
  "extends": [
    "plugin:prettier/recommended",
    "plugin:canonical/recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/strict",
    // "plugin:@typescript-eslint/strict-type-checked",
    // We first apply `typescript-sort-keys`, then comment off and manually move methods after properties
    // "plugin:typescript-sort-keys/recommended"
    // https://www.npmjs.com/package/eslint-plugin-import
    // "plugin:lodash/recommended"
    "eslint:recommended",
    // "plugin:import/recommended",
    "plugin:import/typescript",
    "./scripts/eslint/.base.eslintrc.json",
    "./scripts/eslint/.nx.eslintrc.json",
    "./scripts/eslint/.globals.eslintrc.json",
    "./scripts/eslint/.format.eslintrc.json",
    "./scripts/eslint/.naming.eslintrc.json",
    "./scripts/eslint/.codelab.eslintrc.json",
    "./scripts/eslint/.sorting.eslintrc.json",
    "./scripts/eslint/.codegen.eslintrc.json"
  ],
  // Used for import plugin
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["tsconfig.base.json", "(apps|libs)/*/tsconfig.lib.json"]
      },
      "node": {
        "project": ["tsconfig.base.json", "(apps|libs)/*/tsconfig.lib.json"]
      }
    }
  },
  "overrides": []
}
