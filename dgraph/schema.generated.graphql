enum AtomType {
  AntDesignAffix
  AntDesignAlert
  AntDesignAnchor
  AntDesignAnchorLink
  AntDesignAutoComplete
  AntDesignAvatar
  AntDesignBackTop
  AntDesignBadge
  AntDesignBreadcrumb
  AntDesignBreadcrumbItem
  AntDesignButton
  AntDesignCalendar
  AntDesignCard
  AntDesignCardGrid
  AntDesignCardMeta
  AntDesignCarousel
  AntDesignCascader
  AntDesignCheckbox
  AntDesignCollapse
  AntDesignCollapsePanel
  AntDesignComment
  AntDesignConfigProvider
  AntDesignDatePicker
  AntDesignDescriptions
  AntDesignDescriptionsItem
  AntDesignDivider
  AntDesignDrawer
  AntDesignDropdown
  AntDesignEmpty
  AntDesignForm
  AntDesignFormItem
  AntDesignFormItemHook
  AntDesignFormList
  AntDesignGridCol
  AntDesignGridRow
  AntDesignIcon
  AntDesignInput
  AntDesignInputNumber
  AntDesignLayout
  AntDesignLayoutContent
  AntDesignLayoutFooter
  AntDesignLayoutHeader
  AntDesignLayoutSider
  AntDesignList
  AntDesignListItem
  AntDesignListItemMeta
  AntDesignMapper
  AntDesignMentions
  AntDesignMentionsOption
  AntDesignMenu
  AntDesignMenuItem
  AntDesignMenuItemGroup
  AntDesignMenuSubMenu
  AntDesignModal
  AntDesignPageHeader
  AntDesignPageContainer
  AntDesignPagination
  AntDesignPopconfirm
  AntDesignPopover
  AntDesignProgress
  AntDesignProvider
  AntDesignRglContainer
  AntDesignRglItem
  AntDesignRglResponsiveContainer
  AntDesignRadio
  AntDesignRadioGroup
  AntDesignRate
  AntDesignRenderComponent
  AntDesignRenderContainer
  AntDesignResult
  AntDesignSelect
  AntDesignSelectOption
  AntDesignSkeleton
  AntDesignSlider
  AntDesignSpace
  AntDesignSpin
  AntDesignStatistic
  AntDesignSteps
  AntDesignStepsStep
  AntDesignSwitch
  AntDesignTable
  AntDesignTabs
  AntDesignTabsTabPane
  AntDesignTag
  AntDesignTimePicker
  AntDesignTimeline
  AntDesignTimelineItem
  AntDesignTooltip
  AntDesignTransfer
  AntDesignTree
  AntDesignTreeNode
  AntDesignTreeSelect
  AntDesignTypography
  AntDesignTypographyParagraph
  AntDesignTypographyText
  AntDesignTypographyTitle
  AntDesignUpload
  ReactFragment
  HtmlA
  HtmlP
  HtmlVideo
  HtmlUList
  HtmlTrack
  HtmlTitle
  HtmlTime
  HtmlTextarea
  HtmlTemplate
  HtmlTableRow
  HtmlTable
  HtmlTableCol
  HtmlTableCell
  HtmlTableCaption
  HtmlStyle
  HtmlSpan
  HtmlSource
  HtmlSelect
  HtmlQuote
  HtmlProgress
  HtmlPre
  HtmlPicture
  HtmlParam
  HtmlOutput
  HtmlOption
  HtmlOptgroup
  HtmlObject
  HtmlOList
  HtmlMeter
  HtmlMeta
  HtmlMap
  HtmlLink
  HtmlLegend
  HtmlLabel
  HtmlLi
  HtmlInput
  HtmlImage
  HtmlIframe
  HtmlH1
  HtmlH2
  HtmlH3
  HtmlH4
  HtmlH5
  HtmlH6
  HtmlHead
  HtmlHr
  HtmlFrameset
  HtmlFrame
  HtmlForm
  HtmlFont
  HtmlFieldset
  HtmlEmbed
  HtmlDiv
  HtmlDialog
  HtmlDetails
  HtmlDatalist
  HtmlData
  HtmlDList
  HtmlCanvas
  HtmlButton
  HtmlBase
  HtmlBr
  HtmlAudio
  HtmlArea
  HtmlFooter
  HtmlAside
  HtmlHeader
  HtmlMain
  HtmlNav
  HtmlSection
  HtmlCode
  HtmlEm
  HtmlI
  HtmlS
  HtmlSmall
  HtmlStrong
  HtmlSub
  HtmlSup
}

type App {
  id: ID!
  ownerId: String! @search(by: [hash])
  pages: [Page] @hasInverse(field: app)
  name: String!
}

type Page {
  id: ID!
  name: String! @search(by: [term, fulltext])
  app: App!
  rootElement: Element!
}

union ElementOwner = Page

type Element {
  id: ID!
  name: String! @search(by: [term, fulltext])
  children: [Element] @hasInverse(field: parent)
  parent: Element
  atom: Atom
  ownedBy: ElementOwner
  component: Component
  props: [Prop!]! @hasInverse(field: element)
  css: String
}

type Library {
  id: ID!
  ownerId: String!
  name: String!
  atoms: [Atom] @hasInverse(field: "library")
  components: [Component] @hasInverse(field: library)
}

type Component {
  id: ID!
  library: Library!
  atom: Atom!
  label: String!
  children: [Component]
  tags: [Tag]
}

type Atom {
  id: ID!
  type: AtomType!
  label: String!
  library: Library
  propTypes: Interface! @hasInverse(field: atom)
}

type Tag {
  label: String!
}

enum PrimitiveKind {
  String
  Integer
  Float
  Boolean
}

type PrimitiveType implements Type {
  id: ID!
  name: String!
  primitiveKind: PrimitiveKind!
}

type ArrayType implements Type {
  id: ID!
  name: String!
  type: Type!
}

type EnumTypeValue {
  id: ID!
  name: String
  value: String!
}

type EnumType implements Type {
  id: ID!
  name: String!
  allowedValues: [EnumTypeValue!]!
}

type Interface implements Type {
  id: ID!
  name: String!
  atom: Atom
  fields: [Field] @hasInverse(field: interface)
}

interface Type {
  id: ID!
  name: String!
}

union TypeUnion = Interface | EnumType | ArrayType | PrimitiveType

type Field {
  id: ID!
  type: Type!
  key: String! @search(by: [hash, fulltext])
  name: String!
  description: String
  interface: Interface!
}

type StringValue {
  id: ID!
  stringValue: String!
}

type IntValue {
  id: ID!
  intValue: Int!
}

type FloatValue {
  id: ID!
  floatValue: Float!
}

type BooleanValue {
  id: ID!
  booleanValue: Boolean!
}

type ArrayValue {
  id: ID!
  values: [PropValue!]!
}

type InterfaceValue {
  id: ID!
  props: [Prop!]!
}

union PropValue =
    StringValue
  | IntValue
  | FloatValue
  | BooleanValue
  | ArrayValue
  | InterfaceValue
  | EnumTypeValue

type Prop {
  id: ID!
  field: Field!
  value: PropValue
  element: Element
}
