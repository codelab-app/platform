{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "mcp__browser-tools__getConsoleLogs",
      "mcp__browser-tools__getConsoleErrors",
      "mcp__github__create_issue",
      "mcp__github__add_issue_comment",
      "mcp__neo4j-aura__get_neo4j_schema",
      "Bash(mkdir:*)",
      "mcp__github__get_issue",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "mcp__neo4j-aura__read_neo4j_cypher",
      "Bash(find:*)",
      "mcp__graphql__introspect-schema",
      "mcp__graphql__query-graphql",
      "Bash(grep:*)",
      "Bash(pnpm codegen:*)",
      "WebFetch(domain:github.com)",
      "mcp__github__update_issue",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:blog.logrocket.com)",
      "Bash(cat:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm nx run:*)",
      "Bash(nx --version)",
      "mcp__nx-mcp__nx_docs",
      "mcp__nx__nx_current_running_tasks_details",
      "mcp__nx__nx_workspace_path",
      "Bash(git restore:*)",
      "mcp__github__get_pull_request",
      "mcp__github__update_pull_request",
      "Bash(ls:*)",
      "Bash(pnpm nx test:*)",
      "mcp__github__get_issue_comments",
      "WebFetch(domain:mobx-keystone.js.org)",
      "mcp__nx__nx_generators",
      "mcp__nx__nx_generator_schema",
      "Bash(pnpm nx generate:*)",
      "Bash(git reset:*)",
      "Bash(pnpm eslint:*)",
      "Bash(pnpm cross-env eslint:*)",
      "Bash(ESLINT_USE_FLAT_CONFIG=false pnpm cli tasks lint --stage=test)",
      "Bash(gh pr view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh issue view:*)",
      "Bash(git worktree add:*)",
      "Bash(realpath:*)",
      "Bash(cursor:*)",
      "WebFetch(domain:the-guild.dev)",
      "Bash(rg:*)",
      "WebFetch(domain:jestjs.io)",
      "Bash(pnpm list:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(source .env)",
      "Bash(echo \"JEST_JUNIT_OUTPUT_DIR=$JEST_JUNIT_OUTPUT_DIR\")",
      "Bash(JEST_JUNIT_OUTPUT_DIR=./tmp/reports/test-unit pnpm nx run backend-application-admin:test demo.spec.ts)",
      "Bash(npx jest:*)",
      "Bash(JEST_JUNIT_OUTPUT_DIR=\"../../../../tmp/reports/test-unit\" npx jest demo.spec.ts --reporters=default --reporters=jest-junit)",
      "Bash(git stash push:*)",
      "Bash(git stash:*)",
      "Bash(true)",
      "Bash(libs/backend/application/atom/src/use-case/export-atoms.command.service.ts )",
      "Bash(libs/backend/application/atom/src/use-case/index.ts )",
      "Bash(libs/backend/application/component/src/service/component.application.service.ts )",
      "Bash(libs/backend/application/component/src/use-case/export-components.command.service.ts )",
      "Bash(libs/backend/application/component/src/use-case/index.ts )",
      "Bash(libs/backend/application/type/src/service/type.application.service.ts )",
      "Bash(libs/backend/application/store/src/store.application.service.ts)",
      "Bash(touch:*)",
      "Bash(pnpm nx build:*)",
      "Bash(pnpm nx show project:*)",
      "Bash(pnpm nx lint:*)",
      "Bash(cp:*)",
      "Bash(npx validate-branch-name:*)",
      "Bash(pnpm nx list:*)",
      "Bash(git -C ../platform-3736 cherry-pick 312c541ea1)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(pnpm nx reset:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__openmemory__search-memories",
      "Bash(chmod:*)",
      "Bash(gh issue create:*)",
      "Bash(terraform state:*)",
      "mcp__perplexity__perplexity_ask",
      "Bash(git mv:*)",
      "Bash(scripts/validate-git-tag.sh:*)",
      "Bash(git tag:*)",
      "Bash(sed:*)",
      "Bash(./scripts/validate-git-tag.sh:*)",
      "Bash(echo:*)",
      "Bash(node:*)",
      "Bash(npx nx show project:*)",
      "Bash(nx show project:*)",
      "mcp__browser-tools__takeScreenshot",
      "mcp__browser-tools__getNetworkErrors",
      "mcp__browser-tools__getNetworkLogs",
      "mcp__browser-tools__wipeLogs",
      "Bash(curl:*)",
      "mcp__github__search_repositories",
      "Bash(gh extension:*)",
      "Bash(gh api:*)",
      "mcp__nx__nx_workspace",
      "mcp__nx__nx_project_details",
      "mcp__github__search_issues",
      "mcp__github__search_pull_requests",
      "mcp__ide__getDiagnostics",
      "Bash(git rm:*)",
      "Bash(jq:*)",
      "Bash(pnpm cpack:*)",
      "Bash(pnpm lint-staged:*)",
      "mcp__nx__nx_docs",
      "WebFetch(domain:nx.dev)",
      "Bash(pnpm nx e2e-ui:*)",
      "Bash(pnpm nx e2e:*)",
      "Bash(npx lint-staged:*)",
      "Bash(nx e2e:*)",
      "Bash(pgrep:*)",
      "Bash(pnpm lint:*)",
      "mcp__nx__nx_cloud_fix_cipe_failure",
      "mcp__nx__nx_cloud_cipe_details",
      "Bash(nx lint:*)",
      "Bash(nx test:*)",
      "Bash(pnpm tsc:*)",
      "Bash(nx run backend-application-admin:test:test.integration:*)",
      "Bash(pnpm docker:up:*)",
      "Bash(claude-code --version)",
      "Bash(docker exec:*)",
      "Bash(docker logs:*)",
      "WebFetch(domain:eslint.org)",
      "Bash(pnpm view:*)",
      "WebFetch(domain:typescript-eslint.io)",
      "Bash(npx eslint:*)",
      "Bash(pnpm exec eslint:*)",
      "WebFetch(domain:perfectionist.dev)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:www.loft.sh)",
      "Bash(nvim:*)",
      "Bash(pnpm cli terraform init:*)",
      "Bash(pnpm cli terragrunt:*)",
      "Bash(pnpm build:cli:*)",
      "Bash(nx run cli:exec:terragrunt:*)",
      "mcp__openmemory__add-memory",
      "Bash(nx build:*)",
      "Bash(pnpm cli terraform:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm cli tasks:*)",
      "Bash(NODE_OPTIONS=\"--trace-warnings\" node dist/apps/cli/main.js tasks --help)",
      "Bash(pnpm cli:*)",
      "Bash(./scripts/terragrunt/init-all.sh:*)",
      "Bash(./scripts/terragrunt/init-working.sh:*)",
      "Bash(terraform login:*)",
      "Bash(terraform fmt:*)",
      "Bash(terramate generate:*)",
      "Bash(terramate list:*)",
      "Bash(terramate:*)",
      "Bash(for f in /Users/Webber/Sites/Codelab/platform/infra/terraform/modules/*/vars.tf)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(brew upgrade:*)",
      "Bash(brew:*)",
      "WebFetch(domain:terramate.io)",
      "Bash(export TF_WORKSPACE=ci)",
      "Bash(pnpm build:*)",
      "Bash(doctl compute firewall get:*)",
      "Bash(doctl compute domain records list:*)",
      "Bash(circleci config:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_click",
      "Bash(pnpm remove:*)",
      "Bash(doctl registry repository:*)",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "Bash(ssh:*)",
      "Bash(doctl compute droplet get:*)",
      "Bash(doctl compute image:*)",
      "Bash(ln:*)",
      "WebFetch(domain:www.brucellino.dev)",
      "Bash(bash:*)",
      "Bash(packer validate:*)",
      "Bash(doctl compute droplet:*)",
      "WebSearch",
      "Bash(doctl compute snapshot list:*)",
      "Bash(doctl compute size list:*)",
      "Bash(infra/packer/scripts/get-latest-snapshot.sh:*)",
      "Bash(../scripts/get-latest-snapshot.sh:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "perplexity"
  ]
}