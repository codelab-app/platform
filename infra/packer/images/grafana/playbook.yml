---
- name: Provision Grafana monitoring image
  hosts: default
  become: yes
  vars:
    digitalocean_api_token: '{{ digitalocean_api_token }}'
    region: "{{ region | default('sgp1') }}"

  tasks:
    # Create volume directories for Grafana/Loki first
    - name: Create monitoring volume directories
      file:
        path: '{{ item }}'
        state: directory
        mode: '0755'
      loop:
        - /mnt/loki_data
        - /mnt/grafana_data
        - /mnt/grafana_provisioning
        - /mnt/grafana_provisioning/datasources
        - /mnt/grafana_provisioning/dashboards

    # Grafana-specific Docker Compose template
    - name: Copy Grafana Docker Compose template
      copy:
        src: '../../modules/grafana/docker-compose.ctmpl'
        dest: /etc/consul-template/docker-compose.ctmpl

    # Copy Grafana provisioning files
    - name: Copy datasource provisioning
      copy:
        src: '../../modules/grafana/datasources.yml'
        dest: /mnt/grafana_provisioning/datasources/datasources.yml
        mode: '0644'

    # Note: Dashboard provisioning removed - dashboards are now managed via Terraform

    # Add consul-client.hcl for Grafana service
    - name: Configure Consul client
      copy:
        content: |
          # Consul Client Configuration
          # This file configures Consul to run as a client (not a server)

          # Bind to localhost only for client nodes (security best practice)
          # This prevents external access to the Consul API on client nodes
          client_addr = "127.0.0.1"

          # Automatically join the Consul cluster using DigitalOcean tags
          retry_join = ["provider=digitalocean region={{ region }} tag_name=consul-server api_token={{ digitalocean_api_token }}"]

          # Retry joining forever (useful for auto-scaling scenarios)
          retry_interval = "30s"
          retry_max = 0
        dest: /etc/consul.d/consul-client.hcl
        owner: consul
        group: consul
        mode: '0640'

    # Fix permissions for Consul configuration files
    - name: Set Consul configuration permissions
      file:
        path: /etc/consul.d
        owner: consul
        group: consul
        recurse: yes
        mode: '0640'

    # Service completion message
    - name: Display completion message
      debug:
        msg: 'Grafana service image built successfully'

    # Clean up temporary files
    - name: Clean temporary files
      file:
        path: '{{ item }}'
        state: absent
      loop:
        - /tmp/*
        - /var/tmp/*
      failed_when: false

    # Trim filesystem to minimize snapshot size
    - name: Trim filesystem
      command: fstrim -av
